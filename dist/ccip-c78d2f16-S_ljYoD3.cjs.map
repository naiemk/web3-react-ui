{"version":3,"file":"ccip-c78d2f16-S_ljYoD3.cjs","sources":["../node_modules/@web3-onboard/core/dist/ccip-c78d2f16.js"],"sourcesContent":["import { s as stringify, d as decodeErrorResult, c as call, e as encodeAbiParameters, H as HttpRequestError } from './index-021f6a62.js';\nimport { B as BaseError, W as getUrl, m as isAddress, n as InvalidAddressError, J as concat, i as isHex } from './transactionRequest-be6a8ea9.js';\n\nclass OffchainLookupError extends BaseError {\n    constructor({ callbackSelector, cause, data, extraData, sender, urls, }) {\n        super(cause.shortMessage ||\n            'An error occurred while fetching for an offchain result.', {\n            cause,\n            metaMessages: [\n                ...(cause.metaMessages || []),\n                cause.metaMessages?.length ? '' : [],\n                'Offchain Gateway Call:',\n                urls && [\n                    '  Gateway URL(s):',\n                    ...urls.map((url) => `    ${getUrl(url)}`),\n                ],\n                `  Sender: ${sender}`,\n                `  Data: ${data}`,\n                `  Callback selector: ${callbackSelector}`,\n                `  Extra data: ${extraData}`,\n            ].flat(),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupError'\n        });\n    }\n}\nclass OffchainLookupResponseMalformedError extends BaseError {\n    constructor({ result, url }) {\n        super('Offchain gateway response is malformed. Response data must be a hex value.', {\n            metaMessages: [\n                `Gateway URL: ${getUrl(url)}`,\n                `Response: ${stringify(result)}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupResponseMalformedError'\n        });\n    }\n}\nclass OffchainLookupSenderMismatchError extends BaseError {\n    constructor({ sender, to }) {\n        super('Reverted sender address does not match target contract address (`to`).', {\n            metaMessages: [\n                `Contract address: ${to}`,\n                `OffchainLookup sender address: ${sender}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupSenderMismatchError'\n        });\n    }\n}\n\nfunction isAddressEqual(a, b) {\n    if (!isAddress(a, { strict: false }))\n        throw new InvalidAddressError({ address: a });\n    if (!isAddress(b, { strict: false }))\n        throw new InvalidAddressError({ address: b });\n    return a.toLowerCase() === b.toLowerCase();\n}\n\nconst offchainLookupSignature = '0x556f1830';\nconst offchainLookupAbiItem = {\n    name: 'OffchainLookup',\n    type: 'error',\n    inputs: [\n        {\n            name: 'sender',\n            type: 'address',\n        },\n        {\n            name: 'urls',\n            type: 'string[]',\n        },\n        {\n            name: 'callData',\n            type: 'bytes',\n        },\n        {\n            name: 'callbackFunction',\n            type: 'bytes4',\n        },\n        {\n            name: 'extraData',\n            type: 'bytes',\n        },\n    ],\n};\nasync function offchainLookup(client, { blockNumber, blockTag, data, to, }) {\n    const { args } = decodeErrorResult({\n        data,\n        abi: [offchainLookupAbiItem],\n    });\n    const [sender, urls, callData, callbackSelector, extraData] = args;\n    const { ccipRead } = client;\n    const ccipRequest_ = ccipRead && typeof ccipRead?.request === 'function'\n        ? ccipRead.request\n        : ccipRequest;\n    try {\n        if (!isAddressEqual(to, sender))\n            throw new OffchainLookupSenderMismatchError({ sender, to });\n        const result = await ccipRequest_({ data: callData, sender, urls });\n        const { data: data_ } = await call(client, {\n            blockNumber,\n            blockTag,\n            data: concat([\n                callbackSelector,\n                encodeAbiParameters([{ type: 'bytes' }, { type: 'bytes' }], [result, extraData]),\n            ]),\n            to,\n        });\n        return data_;\n    }\n    catch (err) {\n        throw new OffchainLookupError({\n            callbackSelector,\n            cause: err,\n            data,\n            extraData,\n            sender,\n            urls,\n        });\n    }\n}\nasync function ccipRequest({ data, sender, urls, }) {\n    let error = new Error('An unknown error occurred.');\n    for (let i = 0; i < urls.length; i++) {\n        const url = urls[i];\n        const method = url.includes('{data}') ? 'GET' : 'POST';\n        const body = method === 'POST' ? { data, sender } : undefined;\n        try {\n            const response = await fetch(url.replace('{sender}', sender).replace('{data}', data), {\n                body: JSON.stringify(body),\n                method,\n            });\n            let result;\n            if (response.headers.get('Content-Type')?.startsWith('application/json')) {\n                result = (await response.json()).data;\n            }\n            else {\n                result = (await response.text());\n            }\n            if (!response.ok) {\n                error = new HttpRequestError({\n                    body,\n                    details: result?.error\n                        ? stringify(result.error)\n                        : response.statusText,\n                    headers: response.headers,\n                    status: response.status,\n                    url,\n                });\n                continue;\n            }\n            if (!isHex(result)) {\n                error = new OffchainLookupResponseMalformedError({\n                    result,\n                    url,\n                });\n                continue;\n            }\n            return result;\n        }\n        catch (err) {\n            error = new HttpRequestError({\n                body,\n                details: err.message,\n                url,\n            });\n        }\n    }\n    throw error;\n}\n\nexport { ccipRequest, offchainLookup, offchainLookupAbiItem, offchainLookupSignature };\n//# sourceMappingURL=ccip-c78d2f16.js.map\n"],"names":["OffchainLookupError","BaseError","callbackSelector","cause","data","extraData","sender","urls","_a","url","getUrl","OffchainLookupResponseMalformedError","result","stringify","OffchainLookupSenderMismatchError","to","isAddressEqual","b","isAddress","InvalidAddressError","offchainLookupSignature","offchainLookupAbiItem","offchainLookup","client","blockNumber","blockTag","args","decodeErrorResult","callData","ccipRead","ccipRequest_","ccipRequest","data_","call","concat","encodeAbiParameters","err","error","i","method","body","response","HttpRequestError","isHex"],"mappings":"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","x_google_ignoreList":[0]}