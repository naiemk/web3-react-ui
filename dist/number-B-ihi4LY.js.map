{"version":3,"file":"number-B-ihi4LY.js","sources":["../node_modules/viem/_esm/utils/hash/keccak256.js","../node_modules/viem/_esm/errors/address.js","../node_modules/viem/_esm/utils/lru.js","../node_modules/viem/_esm/utils/address/getAddress.js","../node_modules/viem/_esm/utils/address/isAddress.js","../node_modules/viem/_esm/utils/data/concat.js","../node_modules/viem/_esm/utils/data/slice.js","../node_modules/viem/_esm/errors/cursor.js","../node_modules/viem/_esm/utils/cursor.js","../node_modules/viem/_esm/utils/unit/formatGwei.js","../node_modules/viem/_esm/errors/transaction.js","../node_modules/viem/_esm/errors/node.js","../node_modules/viem/_esm/utils/formatters/formatter.js","../node_modules/viem/_esm/utils/formatters/transactionRequest.js","../node_modules/viem/_esm/utils/formatters/transaction.js","../node_modules/viem/_esm/utils/formatters/block.js","../node_modules/viem/_esm/utils/blob/blobsToCommitments.js","../node_modules/viem/_esm/utils/blob/blobsToProofs.js","../node_modules/viem/_esm/utils/hash/sha256.js","../node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","../node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","../node_modules/viem/_esm/constants/blob.js","../node_modules/viem/_esm/constants/kzg.js","../node_modules/viem/_esm/errors/blob.js","../node_modules/viem/_esm/utils/blob/toBlobs.js","../node_modules/viem/_esm/utils/blob/toBlobSidecars.js","../node_modules/viem/_esm/utils/transaction/getTransactionType.js","../node_modules/viem/_esm/utils/formatters/log.js","../node_modules/viem/_esm/errors/chain.js","../node_modules/viem/_esm/utils/chain/defineChain.js","../node_modules/viem/_esm/utils/encoding/toRlp.js","../node_modules/viem/_esm/utils/formatters/transactionReceipt.js","../node_modules/viem/_esm/utils/transaction/assertTransaction.js","../node_modules/viem/_esm/utils/transaction/serializeAccessList.js","../node_modules/viem/_esm/utils/transaction/serializeTransaction.js","../node_modules/viem/_esm/constants/number.js"],"sourcesContent":["import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize)\n            this.delete(this.keys().next().value);\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    if (isAddressCache.has(address))\n        return isAddressCache.get(address);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(address, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//# sourceMappingURL=transactionRequest.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//# sourceMappingURL=transaction.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = block.transactions?.map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nexport const blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** The number of bytes in a KZG commitment. */\nexport const bytesPerCommitment = 48;\n/** The number of bytes in a KZG proof. */\nexport const bytesPerProof = 48;\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BlobSizeTooLargeError'\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EmptyBlobError'\n        });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashSizeError'\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashVersionError'\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to, accessList, } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n    if (accessList)\n        throw new BaseError('`accessList` is not a valid Legacy Transaction attribute.');\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(v),\n            signature.r,\n            signature.s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature) {\n    const { r, s, v, yParity } = signature ?? transaction;\n    if (typeof r === 'undefined')\n        return [];\n    if (typeof s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? toHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return toHex(1);\n        return v === 27n ? '0x' : toHex(1);\n    })();\n    return [yParity_, trim(r), trim(s)];\n}\n//# sourceMappingURL=serializeTransaction.js.map","export const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map"],"names":["keccak256","value","to_","to","bytes","keccak_256","isHex","toBytes","toHex","InvalidAddressError","BaseError","address","LruMap","size","key","checksumAddressCache","checksumAddress","address_","chainId","hexAddress","hash","stringToBytes","i","result","addressRegex","isAddressCache","isAddress","options","strict","concat","values","concatHex","concatBytes","length","arr","offset","acc","x","slice","start","end","sliceHex","sliceBytes","assertStartOffset","SliceOffsetOutOfBoundsError","assertEndOffset","value_","NegativeOffsetError","PositionOutOfBoundsError","position","RecursiveReadLimitExceededError","count","limit","staticCursor","position_","byte","oldPosition","createCursor","recursiveReadLimit","cursor","formatGwei","wei","unit","formatUnits","gweiUnits","prettyPrint","args","entries","maxLength","FeeConflictError","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","TransactionNotFoundError","blockHash","blockNumber","blockTag","index","identifier","TransactionReceiptNotFoundError","WaitForTransactionReceiptTimeoutError","ExecutionRevertedError","cause","message","reason","_a","FeeCapTooHighError","maxFeePerGas","FeeCapTooLowError","NonceTooHighError","nonce","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","gas","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","maxPriorityFeePerGas","UnknownNodeError","defineFormatter","type","format","exclude","overrides","formatted","rpcTransactionType","formatTransactionRequest","request","rpcRequest","bytesToHex","numberToHex","defineTransactionRequest","transactionType","formatTransaction","transaction_","hexToNumber","defineTransaction","formatBlock","block","transactions","defineBlock","blobsToCommitments","parameters","kzg","blobs","hexToBytes","commitments","blob","blobsToProofs","proofs","commitment","sha256","noble_sha256","commitmentToVersionedHash","version","versionedHash","commitmentsToVersionedHashes","hashes","blobsPerTransaction","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","versionedHashVersionKzg","BlobSizeTooLargeError","maxSize","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobs","data","size_","active","toBlobSidecars","sidecars","getTransactionType","formatLog","log","eventName","ChainDoesNotSupportContract","chain","contract","ClientChainNotConfiguredError","InvalidChainIdError","defineChain","toRlp","encodable","getEncodable","getEncodableList","getEncodableBytes","list","bodyLength","sizeOfBodyLength","getSizeOfLength","encode","bytesOrHex","sizeOfBytesLength","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","defineTransactionReceipt","assertTransactionEIP4844","blobVersionedHashes","assertTransactionEIP1559","assertTransactionEIP2930","gasPrice","assertTransactionLegacy","accessList","serializeAccessList","serializedAccessList","storageKeys","j","serializeTransaction","signature","serializeTransactionEIP1559","serializeTransactionEIP2930","serializeTransactionEIP4844","serializeTransactionLegacy","maxFeePerBlobGas","serializedTransaction","toYParitySignatureArray","proof","r","yParity","trim","maxUint16"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}