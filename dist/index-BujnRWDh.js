var Xw = Object.defineProperty;
var ym = (t) => {
  throw TypeError(t);
};
var ev = (t, e, n) => e in t ? Xw(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n;
var j = (t, e, n) => ev(t, typeof e != "symbol" ? e + "" : e, n), Ch = (t, e, n) => e.has(t) || ym("Cannot " + n);
var O = (t, e, n) => (Ch(t, e, "read from private field"), n ? n.call(t) : e.get(t)), z = (t, e, n) => e.has(t) ? ym("Cannot add the same private member more than once") : e instanceof WeakSet ? e.add(t) : e.set(t, n), R = (t, e, n, r) => (Ch(t, e, "write to private field"), r ? r.call(t, n) : e.set(t, n), n), ne = (t, e, n) => (Ch(t, e, "access private method"), n);
var wc = (t, e, n, r) => ({
  set _(s) {
    R(t, e, s, n);
  },
  get _() {
    return O(t, e, r);
  }
});
import * as cp from "react";
import up, { useCallback as Ui, useState as ji, useEffect as lf } from "react";
var ud = function(t, e) {
  return ud = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, r) {
    n.__proto__ = r;
  } || function(n, r) {
    for (var s in r) Object.prototype.hasOwnProperty.call(r, s) && (n[s] = r[s]);
  }, ud(t, e);
};
function Mr(t, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
  ud(t, e);
  function n() {
    this.constructor = t;
  }
  t.prototype = e === null ? Object.create(e) : (n.prototype = e.prototype, new n());
}
var at = function() {
  return at = Object.assign || function(e) {
    for (var n, r = 1, s = arguments.length; r < s; r++) {
      n = arguments[r];
      for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
    }
    return e;
  }, at.apply(this, arguments);
};
function tv(t, e) {
  var n = {};
  for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, r = Object.getOwnPropertySymbols(t); s < r.length; s++)
      e.indexOf(r[s]) < 0 && Object.prototype.propertyIsEnumerable.call(t, r[s]) && (n[r[s]] = t[r[s]]);
  return n;
}
function nv(t, e, n, r) {
  function s(i) {
    return i instanceof n ? i : new n(function(o) {
      o(i);
    });
  }
  return new (n || (n = Promise))(function(i, o) {
    function a(f) {
      try {
        u(r.next(f));
      } catch (l) {
        o(l);
      }
    }
    function c(f) {
      try {
        u(r.throw(f));
      } catch (l) {
        o(l);
      }
    }
    function u(f) {
      f.done ? i(f.value) : s(f.value).then(a, c);
    }
    u((r = r.apply(t, e || [])).next());
  });
}
function o1(t, e) {
  var n = { label: 0, sent: function() {
    if (i[0] & 1) throw i[1];
    return i[1];
  }, trys: [], ops: [] }, r, s, i, o = Object.create((typeof Iterator == "function" ? Iterator : Object).prototype);
  return o.next = a(0), o.throw = a(1), o.return = a(2), typeof Symbol == "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function a(u) {
    return function(f) {
      return c([u, f]);
    };
  }
  function c(u) {
    if (r) throw new TypeError("Generator is already executing.");
    for (; o && (o = 0, u[0] && (n = 0)), n; ) try {
      if (r = 1, s && (i = u[0] & 2 ? s.return : u[0] ? s.throw || ((i = s.return) && i.call(s), 0) : s.next) && !(i = i.call(s, u[1])).done) return i;
      switch (s = 0, i && (u = [u[0] & 2, i.value]), u[0]) {
        case 0:
        case 1:
          i = u;
          break;
        case 4:
          return n.label++, { value: u[1], done: !1 };
        case 5:
          n.label++, s = u[1], u = [0];
          continue;
        case 7:
          u = n.ops.pop(), n.trys.pop();
          continue;
        default:
          if (i = n.trys, !(i = i.length > 0 && i[i.length - 1]) && (u[0] === 6 || u[0] === 2)) {
            n = 0;
            continue;
          }
          if (u[0] === 3 && (!i || u[1] > i[0] && u[1] < i[3])) {
            n.label = u[1];
            break;
          }
          if (u[0] === 6 && n.label < i[1]) {
            n.label = i[1], i = u;
            break;
          }
          if (i && n.label < i[2]) {
            n.label = i[2], n.ops.push(u);
            break;
          }
          i[2] && n.ops.pop(), n.trys.pop();
          continue;
      }
      u = e.call(t, n);
    } catch (f) {
      u = [6, f], s = 0;
    } finally {
      r = i = 0;
    }
    if (u[0] & 5) throw u[1];
    return { value: u[0] ? u[1] : void 0, done: !0 };
  }
}
function El(t) {
  var e = typeof Symbol == "function" && Symbol.iterator, n = e && t[e], r = 0;
  if (n) return n.call(t);
  if (t && typeof t.length == "number") return {
    next: function() {
      return t && r >= t.length && (t = void 0), { value: t && t[r++], done: !t };
    }
  };
  throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function Fi(t, e) {
  var n = typeof Symbol == "function" && t[Symbol.iterator];
  if (!n) return t;
  var r = n.call(t), s, i = [], o;
  try {
    for (; (e === void 0 || e-- > 0) && !(s = r.next()).done; ) i.push(s.value);
  } catch (a) {
    o = { error: a };
  } finally {
    try {
      s && !s.done && (n = r.return) && n.call(r);
    } finally {
      if (o) throw o.error;
    }
  }
  return i;
}
function ss(t, e, n) {
  if (n || arguments.length === 2) for (var r = 0, s = e.length, i; r < s; r++)
    (i || !(r in e)) && (i || (i = Array.prototype.slice.call(e, 0, r)), i[r] = e[r]);
  return t.concat(i || Array.prototype.slice.call(e));
}
function Ta(t) {
  return this instanceof Ta ? (this.v = t, this) : new Ta(t);
}
function rv(t, e, n) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var r = n.apply(t, e || []), s, i = [];
  return s = Object.create((typeof AsyncIterator == "function" ? AsyncIterator : Object).prototype), a("next"), a("throw"), a("return", o), s[Symbol.asyncIterator] = function() {
    return this;
  }, s;
  function o(p) {
    return function(d) {
      return Promise.resolve(d).then(p, l);
    };
  }
  function a(p, d) {
    r[p] && (s[p] = function(h) {
      return new Promise(function(b, g) {
        i.push([p, h, b, g]) > 1 || c(p, h);
      });
    }, d && (s[p] = d(s[p])));
  }
  function c(p, d) {
    try {
      u(r[p](d));
    } catch (h) {
      m(i[0][3], h);
    }
  }
  function u(p) {
    p.value instanceof Ta ? Promise.resolve(p.value.v).then(f, l) : m(i[0][2], p);
  }
  function f(p) {
    c("next", p);
  }
  function l(p) {
    c("throw", p);
  }
  function m(p, d) {
    p(d), i.shift(), i.length && c(i[0][0], i[0][1]);
  }
}
function sv(t) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var e = t[Symbol.asyncIterator], n;
  return e ? e.call(t) : (t = typeof El == "function" ? El(t) : t[Symbol.iterator](), n = {}, r("next"), r("throw"), r("return"), n[Symbol.asyncIterator] = function() {
    return this;
  }, n);
  function r(i) {
    n[i] = t[i] && function(o) {
      return new Promise(function(a, c) {
        o = t[i](o), s(a, c, o.done, o.value);
      });
    };
  }
  function s(i, o, a, c) {
    Promise.resolve(c).then(function(u) {
      i({ value: u, done: a });
    }, o);
  }
}
function mt(t) {
  return typeof t == "function";
}
function fp(t) {
  var e = function(r) {
    Error.call(r), r.stack = new Error().stack;
  }, n = t(e);
  return n.prototype = Object.create(Error.prototype), n.prototype.constructor = n, n;
}
var kh = fp(function(t) {
  return function(n) {
    t(this), this.message = n ? n.length + ` errors occurred during unsubscription:
` + n.map(function(r, s) {
      return s + 1 + ") " + r.toString();
    }).join(`
  `) : "", this.name = "UnsubscriptionError", this.errors = n;
  };
});
function fd(t, e) {
  if (t) {
    var n = t.indexOf(e);
    0 <= n && t.splice(n, 1);
  }
}
var qf = function() {
  function t(e) {
    this.initialTeardown = e, this.closed = !1, this._parentage = null, this._finalizers = null;
  }
  return t.prototype.unsubscribe = function() {
    var e, n, r, s, i;
    if (!this.closed) {
      this.closed = !0;
      var o = this._parentage;
      if (o)
        if (this._parentage = null, Array.isArray(o))
          try {
            for (var a = El(o), c = a.next(); !c.done; c = a.next()) {
              var u = c.value;
              u.remove(this);
            }
          } catch (h) {
            e = { error: h };
          } finally {
            try {
              c && !c.done && (n = a.return) && n.call(a);
            } finally {
              if (e) throw e.error;
            }
          }
        else
          o.remove(this);
      var f = this.initialTeardown;
      if (mt(f))
        try {
          f();
        } catch (h) {
          i = h instanceof kh ? h.errors : [h];
        }
      var l = this._finalizers;
      if (l) {
        this._finalizers = null;
        try {
          for (var m = El(l), p = m.next(); !p.done; p = m.next()) {
            var d = p.value;
            try {
              wm(d);
            } catch (h) {
              i = i ?? [], h instanceof kh ? i = ss(ss([], Fi(i)), Fi(h.errors)) : i.push(h);
            }
          }
        } catch (h) {
          r = { error: h };
        } finally {
          try {
            p && !p.done && (s = m.return) && s.call(m);
          } finally {
            if (r) throw r.error;
          }
        }
      }
      if (i)
        throw new kh(i);
    }
  }, t.prototype.add = function(e) {
    var n;
    if (e && e !== this)
      if (this.closed)
        wm(e);
      else {
        if (e instanceof t) {
          if (e.closed || e._hasParent(this))
            return;
          e._addParent(this);
        }
        (this._finalizers = (n = this._finalizers) !== null && n !== void 0 ? n : []).push(e);
      }
  }, t.prototype._hasParent = function(e) {
    var n = this._parentage;
    return n === e || Array.isArray(n) && n.includes(e);
  }, t.prototype._addParent = function(e) {
    var n = this._parentage;
    this._parentage = Array.isArray(n) ? (n.push(e), n) : n ? [n, e] : e;
  }, t.prototype._removeParent = function(e) {
    var n = this._parentage;
    n === e ? this._parentage = null : Array.isArray(n) && fd(n, e);
  }, t.prototype.remove = function(e) {
    var n = this._finalizers;
    n && fd(n, e), e instanceof t && e._removeParent(this);
  }, t.EMPTY = function() {
    var e = new t();
    return e.closed = !0, e;
  }(), t;
}(), a1 = qf.EMPTY;
function l1(t) {
  return t instanceof qf || t && "closed" in t && mt(t.remove) && mt(t.add) && mt(t.unsubscribe);
}
function wm(t) {
  mt(t) ? t() : t.unsubscribe();
}
var iv = {
  onUnhandledError: null,
  onStoppedNotification: null,
  Promise: void 0,
  useDeprecatedSynchronousErrorHandling: !1,
  useDeprecatedNextContext: !1
}, c1 = {
  setTimeout: function(t, e) {
    for (var n = [], r = 2; r < arguments.length; r++)
      n[r - 2] = arguments[r];
    return setTimeout.apply(void 0, ss([t, e], Fi(n)));
  },
  clearTimeout: function(t) {
    var e = c1.delegate;
    return ((e == null ? void 0 : e.clearTimeout) || clearTimeout)(t);
  },
  delegate: void 0
};
function u1(t) {
  c1.setTimeout(function() {
    throw t;
  });
}
function cf() {
}
function Gu(t) {
  t();
}
var hp = function(t) {
  Mr(e, t);
  function e(n) {
    var r = t.call(this) || this;
    return r.isStopped = !1, n ? (r.destination = n, l1(n) && n.add(r)) : r.destination = lv, r;
  }
  return e.create = function(n, r, s) {
    return new xl(n, r, s);
  }, e.prototype.next = function(n) {
    this.isStopped || this._next(n);
  }, e.prototype.error = function(n) {
    this.isStopped || (this.isStopped = !0, this._error(n));
  }, e.prototype.complete = function() {
    this.isStopped || (this.isStopped = !0, this._complete());
  }, e.prototype.unsubscribe = function() {
    this.closed || (this.isStopped = !0, t.prototype.unsubscribe.call(this), this.destination = null);
  }, e.prototype._next = function(n) {
    this.destination.next(n);
  }, e.prototype._error = function(n) {
    try {
      this.destination.error(n);
    } finally {
      this.unsubscribe();
    }
  }, e.prototype._complete = function() {
    try {
      this.destination.complete();
    } finally {
      this.unsubscribe();
    }
  }, e;
}(qf), ov = function() {
  function t(e) {
    this.partialObserver = e;
  }
  return t.prototype.next = function(e) {
    var n = this.partialObserver;
    if (n.next)
      try {
        n.next(e);
      } catch (r) {
        Iu(r);
      }
  }, t.prototype.error = function(e) {
    var n = this.partialObserver;
    if (n.error)
      try {
        n.error(e);
      } catch (r) {
        Iu(r);
      }
    else
      Iu(e);
  }, t.prototype.complete = function() {
    var e = this.partialObserver;
    if (e.complete)
      try {
        e.complete();
      } catch (n) {
        Iu(n);
      }
  }, t;
}(), xl = function(t) {
  Mr(e, t);
  function e(n, r, s) {
    var i = t.call(this) || this, o;
    return mt(n) || !n ? o = {
      next: n ?? void 0,
      error: r ?? void 0,
      complete: s ?? void 0
    } : o = n, i.destination = new ov(o), i;
  }
  return e;
}(hp);
function Iu(t) {
  u1(t);
}
function av(t) {
  throw t;
}
var lv = {
  closed: !0,
  next: cf,
  error: av,
  complete: cf
}, dp = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}();
function Qf(t) {
  return t;
}
function cv(t) {
  return t.length === 0 ? Qf : t.length === 1 ? t[0] : function(n) {
    return t.reduce(function(r, s) {
      return s(r);
    }, n);
  };
}
var Bn = function() {
  function t(e) {
    e && (this._subscribe = e);
  }
  return t.prototype.lift = function(e) {
    var n = new t();
    return n.source = this, n.operator = e, n;
  }, t.prototype.subscribe = function(e, n, r) {
    var s = this, i = fv(e) ? e : new xl(e, n, r);
    return Gu(function() {
      var o = s, a = o.operator, c = o.source;
      i.add(a ? a.call(i, c) : c ? s._subscribe(i) : s._trySubscribe(i));
    }), i;
  }, t.prototype._trySubscribe = function(e) {
    try {
      return this._subscribe(e);
    } catch (n) {
      e.error(n);
    }
  }, t.prototype.forEach = function(e, n) {
    var r = this;
    return n = vm(n), new n(function(s, i) {
      var o = new xl({
        next: function(a) {
          try {
            e(a);
          } catch (c) {
            i(c), o.unsubscribe();
          }
        },
        error: i,
        complete: s
      });
      r.subscribe(o);
    });
  }, t.prototype._subscribe = function(e) {
    var n;
    return (n = this.source) === null || n === void 0 ? void 0 : n.subscribe(e);
  }, t.prototype[dp] = function() {
    return this;
  }, t.prototype.pipe = function() {
    for (var e = [], n = 0; n < arguments.length; n++)
      e[n] = arguments[n];
    return cv(e)(this);
  }, t.prototype.toPromise = function(e) {
    var n = this;
    return e = vm(e), new e(function(r, s) {
      var i;
      n.subscribe(function(o) {
        return i = o;
      }, function(o) {
        return s(o);
      }, function() {
        return r(i);
      });
    });
  }, t.create = function(e) {
    return new t(e);
  }, t;
}();
function vm(t) {
  var e;
  return (e = t ?? iv.Promise) !== null && e !== void 0 ? e : Promise;
}
function uv(t) {
  return t && mt(t.next) && mt(t.error) && mt(t.complete);
}
function fv(t) {
  return t && t instanceof hp || uv(t) && l1(t);
}
function hv(t) {
  return mt(t == null ? void 0 : t.lift);
}
function br(t) {
  return function(e) {
    if (hv(e))
      return e.lift(function(n) {
        try {
          return t(n, this);
        } catch (r) {
          this.error(r);
        }
      });
    throw new TypeError("Unable to lift unknown Observable type");
  };
}
function gr(t, e, n, r, s) {
  return new dv(t, e, n, r, s);
}
var dv = function(t) {
  Mr(e, t);
  function e(n, r, s, i, o, a) {
    var c = t.call(this, n) || this;
    return c.onFinalize = o, c.shouldUnsubscribe = a, c._next = r ? function(u) {
      try {
        r(u);
      } catch (f) {
        n.error(f);
      }
    } : t.prototype._next, c._error = i ? function(u) {
      try {
        i(u);
      } catch (f) {
        n.error(f);
      } finally {
        this.unsubscribe();
      }
    } : t.prototype._error, c._complete = s ? function() {
      try {
        s();
      } catch (u) {
        n.error(u);
      } finally {
        this.unsubscribe();
      }
    } : t.prototype._complete, c;
  }
  return e.prototype.unsubscribe = function() {
    var n;
    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
      var r = this.closed;
      t.prototype.unsubscribe.call(this), !r && ((n = this.onFinalize) === null || n === void 0 || n.call(this));
    }
  }, e;
}(hp), pv = fp(function(t) {
  return function() {
    t(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed";
  };
}), qs = function(t) {
  Mr(e, t);
  function e() {
    var n = t.call(this) || this;
    return n.closed = !1, n.currentObservers = null, n.observers = [], n.isStopped = !1, n.hasError = !1, n.thrownError = null, n;
  }
  return e.prototype.lift = function(n) {
    var r = new _m(this, this);
    return r.operator = n, r;
  }, e.prototype._throwIfClosed = function() {
    if (this.closed)
      throw new pv();
  }, e.prototype.next = function(n) {
    var r = this;
    Gu(function() {
      var s, i;
      if (r._throwIfClosed(), !r.isStopped) {
        r.currentObservers || (r.currentObservers = Array.from(r.observers));
        try {
          for (var o = El(r.currentObservers), a = o.next(); !a.done; a = o.next()) {
            var c = a.value;
            c.next(n);
          }
        } catch (u) {
          s = { error: u };
        } finally {
          try {
            a && !a.done && (i = o.return) && i.call(o);
          } finally {
            if (s) throw s.error;
          }
        }
      }
    });
  }, e.prototype.error = function(n) {
    var r = this;
    Gu(function() {
      if (r._throwIfClosed(), !r.isStopped) {
        r.hasError = r.isStopped = !0, r.thrownError = n;
        for (var s = r.observers; s.length; )
          s.shift().error(n);
      }
    });
  }, e.prototype.complete = function() {
    var n = this;
    Gu(function() {
      if (n._throwIfClosed(), !n.isStopped) {
        n.isStopped = !0;
        for (var r = n.observers; r.length; )
          r.shift().complete();
      }
    });
  }, e.prototype.unsubscribe = function() {
    this.isStopped = this.closed = !0, this.observers = this.currentObservers = null;
  }, Object.defineProperty(e.prototype, "observed", {
    get: function() {
      var n;
      return ((n = this.observers) === null || n === void 0 ? void 0 : n.length) > 0;
    },
    enumerable: !1,
    configurable: !0
  }), e.prototype._trySubscribe = function(n) {
    return this._throwIfClosed(), t.prototype._trySubscribe.call(this, n);
  }, e.prototype._subscribe = function(n) {
    return this._throwIfClosed(), this._checkFinalizedStatuses(n), this._innerSubscribe(n);
  }, e.prototype._innerSubscribe = function(n) {
    var r = this, s = this, i = s.hasError, o = s.isStopped, a = s.observers;
    return i || o ? a1 : (this.currentObservers = null, a.push(n), new qf(function() {
      r.currentObservers = null, fd(a, n);
    }));
  }, e.prototype._checkFinalizedStatuses = function(n) {
    var r = this, s = r.hasError, i = r.thrownError, o = r.isStopped;
    s ? n.error(i) : o && n.complete();
  }, e.prototype.asObservable = function() {
    var n = new Bn();
    return n.source = this, n;
  }, e.create = function(n, r) {
    return new _m(n, r);
  }, e;
}(Bn), _m = function(t) {
  Mr(e, t);
  function e(n, r) {
    var s = t.call(this) || this;
    return s.destination = n, s.source = r, s;
  }
  return e.prototype.next = function(n) {
    var r, s;
    (s = (r = this.destination) === null || r === void 0 ? void 0 : r.next) === null || s === void 0 || s.call(r, n);
  }, e.prototype.error = function(n) {
    var r, s;
    (s = (r = this.destination) === null || r === void 0 ? void 0 : r.error) === null || s === void 0 || s.call(r, n);
  }, e.prototype.complete = function() {
    var n, r;
    (r = (n = this.destination) === null || n === void 0 ? void 0 : n.complete) === null || r === void 0 || r.call(n);
  }, e.prototype._subscribe = function(n) {
    var r, s;
    return (s = (r = this.source) === null || r === void 0 ? void 0 : r.subscribe(n)) !== null && s !== void 0 ? s : a1;
  }, e;
}(qs), wu = function(t) {
  Mr(e, t);
  function e(n) {
    var r = t.call(this) || this;
    return r._value = n, r;
  }
  return Object.defineProperty(e.prototype, "value", {
    get: function() {
      return this.getValue();
    },
    enumerable: !1,
    configurable: !0
  }), e.prototype._subscribe = function(n) {
    var r = t.prototype._subscribe.call(this, n);
    return !r.closed && n.next(this._value), r;
  }, e.prototype.getValue = function() {
    var n = this, r = n.hasError, s = n.thrownError, i = n._value;
    if (r)
      throw s;
    return this._throwIfClosed(), i;
  }, e.prototype.next = function(n) {
    t.prototype.next.call(this, this._value = n);
  }, e;
}(qs), f1 = {
  now: function() {
    return (f1.delegate || Date).now();
  },
  delegate: void 0
}, mv = function(t) {
  Mr(e, t);
  function e(n, r, s) {
    n === void 0 && (n = 1 / 0), r === void 0 && (r = 1 / 0), s === void 0 && (s = f1);
    var i = t.call(this) || this;
    return i._bufferSize = n, i._windowTime = r, i._timestampProvider = s, i._buffer = [], i._infiniteTimeWindow = !0, i._infiniteTimeWindow = r === 1 / 0, i._bufferSize = Math.max(1, n), i._windowTime = Math.max(1, r), i;
  }
  return e.prototype.next = function(n) {
    var r = this, s = r.isStopped, i = r._buffer, o = r._infiniteTimeWindow, a = r._timestampProvider, c = r._windowTime;
    s || (i.push(n), !o && i.push(a.now() + c)), this._trimBuffer(), t.prototype.next.call(this, n);
  }, e.prototype._subscribe = function(n) {
    this._throwIfClosed(), this._trimBuffer();
    for (var r = this._innerSubscribe(n), s = this, i = s._infiniteTimeWindow, o = s._buffer, a = o.slice(), c = 0; c < a.length && !n.closed; c += i ? 1 : 2)
      n.next(a[c]);
    return this._checkFinalizedStatuses(n), r;
  }, e.prototype._trimBuffer = function() {
    var n = this, r = n._bufferSize, s = n._timestampProvider, i = n._buffer, o = n._infiniteTimeWindow, a = (o ? 1 : 2) * r;
    if (r < 1 / 0 && a < i.length && i.splice(0, i.length - a), !o) {
      for (var c = s.now(), u = 0, f = 1; f < i.length && i[f] <= c; f += 2)
        u = f;
      u && i.splice(0, u + 1);
    }
  }, e;
}(qs), gv = new Bn(function(t) {
  return t.complete();
});
function bv(t) {
  return t && mt(t.schedule);
}
function pp(t) {
  return t[t.length - 1];
}
function yv(t) {
  return mt(pp(t)) ? t.pop() : void 0;
}
function h1(t) {
  return bv(pp(t)) ? t.pop() : void 0;
}
function _k(t, e) {
  return typeof pp(t) == "number" ? t.pop() : e;
}
var mp = function(t) {
  return t && typeof t.length == "number" && typeof t != "function";
};
function d1(t) {
  return mt(t == null ? void 0 : t.then);
}
function p1(t) {
  return mt(t[dp]);
}
function m1(t) {
  return Symbol.asyncIterator && mt(t == null ? void 0 : t[Symbol.asyncIterator]);
}
function g1(t) {
  return new TypeError("You provided " + (t !== null && typeof t == "object" ? "an invalid object" : "'" + t + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
function wv() {
  return typeof Symbol != "function" || !Symbol.iterator ? "@@iterator" : Symbol.iterator;
}
var b1 = wv();
function y1(t) {
  return mt(t == null ? void 0 : t[b1]);
}
function w1(t) {
  return rv(this, arguments, function() {
    var n, r, s, i;
    return o1(this, function(o) {
      switch (o.label) {
        case 0:
          n = t.getReader(), o.label = 1;
        case 1:
          o.trys.push([1, , 9, 10]), o.label = 2;
        case 2:
          return [4, Ta(n.read())];
        case 3:
          return r = o.sent(), s = r.value, i = r.done, i ? [4, Ta(void 0)] : [3, 5];
        case 4:
          return [2, o.sent()];
        case 5:
          return [4, Ta(s)];
        case 6:
          return [4, o.sent()];
        case 7:
          return o.sent(), [3, 2];
        case 8:
          return [3, 10];
        case 9:
          return n.releaseLock(), [7];
        case 10:
          return [2];
      }
    });
  });
}
function v1(t) {
  return mt(t == null ? void 0 : t.getReader);
}
function yr(t) {
  if (t instanceof Bn)
    return t;
  if (t != null) {
    if (p1(t))
      return vv(t);
    if (mp(t))
      return _v(t);
    if (d1(t))
      return Av(t);
    if (m1(t))
      return _1(t);
    if (y1(t))
      return Ev(t);
    if (v1(t))
      return xv(t);
  }
  throw g1(t);
}
function vv(t) {
  return new Bn(function(e) {
    var n = t[dp]();
    if (mt(n.subscribe))
      return n.subscribe(e);
    throw new TypeError("Provided object does not correctly implement Symbol.observable");
  });
}
function _v(t) {
  return new Bn(function(e) {
    for (var n = 0; n < t.length && !e.closed; n++)
      e.next(t[n]);
    e.complete();
  });
}
function Av(t) {
  return new Bn(function(e) {
    t.then(function(n) {
      e.closed || (e.next(n), e.complete());
    }, function(n) {
      return e.error(n);
    }).then(null, u1);
  });
}
function Ev(t) {
  return new Bn(function(e) {
    var n, r;
    try {
      for (var s = El(t), i = s.next(); !i.done; i = s.next()) {
        var o = i.value;
        if (e.next(o), e.closed)
          return;
      }
    } catch (a) {
      n = { error: a };
    } finally {
      try {
        i && !i.done && (r = s.return) && r.call(s);
      } finally {
        if (n) throw n.error;
      }
    }
    e.complete();
  });
}
function _1(t) {
  return new Bn(function(e) {
    Cv(t, e).catch(function(n) {
      return e.error(n);
    });
  });
}
function xv(t) {
  return _1(w1(t));
}
function Cv(t, e) {
  var n, r, s, i;
  return nv(this, void 0, void 0, function() {
    var o, a;
    return o1(this, function(c) {
      switch (c.label) {
        case 0:
          c.trys.push([0, 5, 6, 11]), n = sv(t), c.label = 1;
        case 1:
          return [4, n.next()];
        case 2:
          if (r = c.sent(), !!r.done) return [3, 4];
          if (o = r.value, e.next(o), e.closed)
            return [2];
          c.label = 3;
        case 3:
          return [3, 1];
        case 4:
          return [3, 11];
        case 5:
          return a = c.sent(), s = { error: a }, [3, 11];
        case 6:
          return c.trys.push([6, , 9, 10]), r && !r.done && (i = n.return) ? [4, i.call(n)] : [3, 8];
        case 7:
          c.sent(), c.label = 8;
        case 8:
          return [3, 10];
        case 9:
          if (s) throw s.error;
          return [7];
        case 10:
          return [7];
        case 11:
          return e.complete(), [2];
      }
    });
  });
}
function Uo(t, e, n, r, s) {
  r === void 0 && (r = 0), s === void 0 && (s = !1);
  var i = e.schedule(function() {
    n(), s ? t.add(this.schedule(null, r)) : this.unsubscribe();
  }, r);
  if (t.add(i), !s)
    return i;
}
function A1(t, e) {
  return e === void 0 && (e = 0), br(function(n, r) {
    n.subscribe(gr(r, function(s) {
      return Uo(r, t, function() {
        return r.next(s);
      }, e);
    }, function() {
      return Uo(r, t, function() {
        return r.complete();
      }, e);
    }, function(s) {
      return Uo(r, t, function() {
        return r.error(s);
      }, e);
    }));
  });
}
function E1(t, e) {
  return e === void 0 && (e = 0), br(function(n, r) {
    r.add(t.schedule(function() {
      return n.subscribe(r);
    }, e));
  });
}
function kv(t, e) {
  return yr(t).pipe(E1(e), A1(e));
}
function Sv(t, e) {
  return yr(t).pipe(E1(e), A1(e));
}
function Ov(t, e) {
  return new Bn(function(n) {
    var r = 0;
    return e.schedule(function() {
      r === t.length ? n.complete() : (n.next(t[r++]), n.closed || this.schedule());
    });
  });
}
function Tv(t, e) {
  return new Bn(function(n) {
    var r;
    return Uo(n, e, function() {
      r = t[b1](), Uo(n, e, function() {
        var s, i, o;
        try {
          s = r.next(), i = s.value, o = s.done;
        } catch (a) {
          n.error(a);
          return;
        }
        o ? n.complete() : n.next(i);
      }, 0, !0);
    }), function() {
      return mt(r == null ? void 0 : r.return) && r.return();
    };
  });
}
function x1(t, e) {
  if (!t)
    throw new Error("Iterable cannot be null");
  return new Bn(function(n) {
    Uo(n, e, function() {
      var r = t[Symbol.asyncIterator]();
      Uo(n, e, function() {
        r.next().then(function(s) {
          s.done ? n.complete() : n.next(s.value);
        });
      }, 0, !0);
    });
  });
}
function Iv(t, e) {
  return x1(w1(t), e);
}
function Nv(t, e) {
  if (t != null) {
    if (p1(t))
      return kv(t, e);
    if (mp(t))
      return Ov(t, e);
    if (d1(t))
      return Sv(t, e);
    if (m1(t))
      return x1(t, e);
    if (y1(t))
      return Tv(t, e);
    if (v1(t))
      return Iv(t, e);
  }
  throw g1(t);
}
function Pv(t, e) {
  return e ? Nv(t, e) : yr(t);
}
var Rv = fp(function(t) {
  return function() {
    t(this), this.name = "EmptyError", this.message = "no elements in sequence";
  };
});
function Wc(t, e) {
  return new Promise(function(n, r) {
    var s = new xl({
      next: function(i) {
        n(i), s.unsubscribe();
      },
      error: r,
      complete: function() {
        r(new Rv());
      }
    });
    t.subscribe(s);
  });
}
function vu(t, e) {
  return br(function(n, r) {
    var s = 0;
    n.subscribe(gr(r, function(i) {
      r.next(t.call(e, i, s++));
    }));
  });
}
var Bv = Array.isArray;
function Lv(t, e) {
  return Bv(e) ? t.apply(void 0, ss([], Fi(e))) : t(e);
}
function Mv(t) {
  return vu(function(e) {
    return Lv(t, e);
  });
}
function Dv(t, e, n, r, s, i, o, a) {
  var c = [], u = 0, f = 0, l = !1, m = function() {
    l && !c.length && !u && e.complete();
  }, p = function(h) {
    return u < r ? d(h) : c.push(h);
  }, d = function(h) {
    u++;
    var b = !1;
    yr(n(h, f++)).subscribe(gr(e, function(g) {
      e.next(g);
    }, function() {
      b = !0;
    }, void 0, function() {
      if (b)
        try {
          u--;
          for (var g = function() {
            var y = c.shift();
            o || d(y);
          }; c.length && u < r; )
            g();
          m();
        } catch (y) {
          e.error(y);
        }
    }));
  };
  return t.subscribe(gr(e, p, function() {
    l = !0, m();
  })), function() {
  };
}
function gp(t, e, n) {
  return n === void 0 && (n = 1 / 0), mt(e) ? gp(function(r, s) {
    return vu(function(i, o) {
      return e(r, i, s, o);
    })(yr(t(r, s)));
  }, n) : (typeof e == "number" && (n = e), br(function(r, s) {
    return Dv(r, s, t, n);
  }));
}
function $v(t) {
  return t === void 0 && (t = 1 / 0), gp(Qf, t);
}
function Uv() {
  return $v(1);
}
function Am() {
  for (var t = [], e = 0; e < arguments.length; e++)
    t[e] = arguments[e];
  return Uv()(Pv(t, h1(t)));
}
function jv(t) {
  return new Bn(function(e) {
    yr(t()).subscribe(e);
  });
}
var Fv = ["addListener", "removeListener"], Hv = ["addEventListener", "removeEventListener"], Wv = ["on", "off"];
function hd(t, e, n, r) {
  if (mt(n) && (r = n, n = void 0), r)
    return hd(t, e, n).pipe(Mv(r));
  var s = Fi(Vv(t) ? Hv.map(function(a) {
    return function(c) {
      return t[a](e, c, n);
    };
  }) : Gv(t) ? Fv.map(Em(t, e)) : zv(t) ? Wv.map(Em(t, e)) : [], 2), i = s[0], o = s[1];
  if (!i && mp(t))
    return gp(function(a) {
      return hd(a, e, n);
    })(yr(t));
  if (!i)
    throw new TypeError("Invalid event target");
  return new Bn(function(a) {
    var c = function() {
      for (var u = [], f = 0; f < arguments.length; f++)
        u[f] = arguments[f];
      return a.next(1 < u.length ? u : u[0]);
    };
    return i(c), function() {
      return o(c);
    };
  });
}
function Em(t, e) {
  return function(n) {
    return function(r) {
      return t[n](e, r);
    };
  };
}
function Gv(t) {
  return mt(t.addListener) && mt(t.removeListener);
}
function zv(t) {
  return mt(t.on) && mt(t.off);
}
function Vv(t) {
  return mt(t.addEventListener) && mt(t.removeEventListener);
}
function C1(t, e, n) {
  return new Bn(function(r) {
    var s = function() {
      for (var o = [], a = 0; a < arguments.length; a++)
        o[a] = arguments[a];
      return r.next(o.length === 1 ? o[0] : o);
    }, i = t(s);
    return mt(e) ? function() {
      return e(s, i);
    } : void 0;
  });
}
function Cl(t, e) {
  return br(function(n, r) {
    var s = 0;
    n.subscribe(gr(r, function(i) {
      return t.call(e, i, s++) && r.next(i);
    }));
  });
}
function bp(t) {
  return t <= 0 ? function() {
    return gv;
  } : br(function(e, n) {
    var r = 0;
    e.subscribe(gr(n, function(s) {
      ++r <= t && (n.next(s), t <= r && n.complete());
    }));
  });
}
function Sh(t) {
  return vu(function() {
    return t;
  });
}
function k1(t, e) {
  return e === void 0 && (e = Qf), t = t ?? qv, br(function(n, r) {
    var s, i = !0;
    n.subscribe(gr(r, function(o) {
      var a = e(o);
      (i || !t(s, a)) && (i = !1, s = a, r.next(o));
    }));
  });
}
function qv(t, e) {
  return t === e;
}
function Qv(t, e) {
  return k1(function(n, r) {
    return n[t] === r[t];
  });
}
function yp() {
  for (var t = [], e = 0; e < arguments.length; e++)
    t[e] = arguments[e];
  var n = t.length;
  if (n === 0)
    throw new Error("list of properties cannot be empty.");
  return vu(function(r) {
    for (var s = r, i = 0; i < n; i++) {
      var o = s == null ? void 0 : s[t[i]];
      if (typeof o < "u")
        s = o;
      else
        return;
    }
    return s;
  });
}
function dd(t) {
  t === void 0 && (t = {});
  var e = t.connector, n = e === void 0 ? function() {
    return new qs();
  } : e, r = t.resetOnError, s = r === void 0 ? !0 : r, i = t.resetOnComplete, o = i === void 0 ? !0 : i, a = t.resetOnRefCountZero, c = a === void 0 ? !0 : a;
  return function(u) {
    var f, l, m, p = 0, d = !1, h = !1, b = function() {
      l == null || l.unsubscribe(), l = void 0;
    }, g = function() {
      b(), f = m = void 0, d = h = !1;
    }, y = function() {
      var w = f;
      g(), w == null || w.unsubscribe();
    };
    return br(function(w, _) {
      p++, !h && !d && b();
      var E = m = m ?? n();
      _.add(function() {
        p--, p === 0 && !h && !d && (l = Oh(y, c));
      }), E.subscribe(_), !f && p > 0 && (f = new xl({
        next: function(k) {
          return E.next(k);
        },
        error: function(k) {
          h = !0, b(), l = Oh(g, s, k), E.error(k);
        },
        complete: function() {
          d = !0, b(), l = Oh(g, o), E.complete();
        }
      }), yr(w).subscribe(f));
    })(u);
  };
}
function Oh(t, e) {
  for (var n = [], r = 2; r < arguments.length; r++)
    n[r - 2] = arguments[r];
  if (e === !0) {
    t();
    return;
  }
  if (e !== !1) {
    var s = new xl({
      next: function() {
        s.unsubscribe(), t();
      }
    });
    return yr(e.apply(void 0, ss([], Fi(n)))).subscribe(s);
  }
}
function ls(t, e, n) {
  var r, s = !1;
  return r = t, dd({
    connector: function() {
      return new mv(r, e, n);
    },
    resetOnError: !0,
    resetOnComplete: !1,
    resetOnRefCountZero: s
  });
}
function is() {
  for (var t = [], e = 0; e < arguments.length; e++)
    t[e] = arguments[e];
  var n = h1(t);
  return br(function(r, s) {
    (n ? Am(t, r, n) : Am(t, r)).subscribe(s);
  });
}
function xm(t, e) {
  return br(function(n, r) {
    var s = null, i = 0, o = !1, a = function() {
      return o && !s && r.complete();
    };
    n.subscribe(gr(r, function(c) {
      s == null || s.unsubscribe();
      var u = 0, f = i++;
      yr(t(c, f)).subscribe(s = gr(r, function(l) {
        return r.next(e ? e(c, l, f, u++) : l);
      }, function() {
        s = null, a();
      }));
    }, function() {
      o = !0, a();
    }));
  });
}
function Gc(t) {
  return br(function(e, n) {
    yr(t).subscribe(gr(n, function() {
      return n.complete();
    }, cf)), !n.closed && e.subscribe(n);
  });
}
function S1() {
  for (var t = [], e = 0; e < arguments.length; e++)
    t[e] = arguments[e];
  var n = yv(t);
  return br(function(r, s) {
    for (var i = t.length, o = new Array(i), a = t.map(function() {
      return !1;
    }), c = !1, u = function(l) {
      yr(t[l]).subscribe(gr(s, function(m) {
        o[l] = m, !c && !a[l] && (a[l] = !0, (c = a.every(Qf)) && (a = null));
      }, cf));
    }, f = 0; f < i; f++)
      u(f);
    r.subscribe(gr(s, function(l) {
      if (c) {
        var m = ss([l], Fi(o));
        s.next(n ? n.apply(void 0, ss([], Fi(m))) : m);
      }
    }));
  });
}
const Zv = {
  "Amazon Silk": "amazon_silk",
  "Android Browser": "android",
  Bada: "bada",
  BlackBerry: "blackberry",
  Chrome: "chrome",
  Chromium: "chromium",
  Electron: "electron",
  Epiphany: "epiphany",
  Firefox: "firefox",
  Focus: "focus",
  Generic: "generic",
  "Google Search": "google_search",
  Googlebot: "googlebot",
  "Internet Explorer": "ie",
  "K-Meleon": "k_meleon",
  Maxthon: "maxthon",
  "Microsoft Edge": "edge",
  "MZ Browser": "mz",
  "NAVER Whale Browser": "naver",
  Opera: "opera",
  "Opera Coast": "opera_coast",
  PhantomJS: "phantomjs",
  Puffin: "puffin",
  QupZilla: "qupzilla",
  QQ: "qq",
  QQLite: "qqlite",
  Safari: "safari",
  Sailfish: "sailfish",
  "Samsung Internet for Android": "samsung_internet",
  SeaMonkey: "seamonkey",
  Sleipnir: "sleipnir",
  Swing: "swing",
  Tizen: "tizen",
  "UC Browser": "uc",
  Vivaldi: "vivaldi",
  "WebOS Browser": "webos",
  WeChat: "wechat",
  "Yandex Browser": "yandex",
  Roku: "roku"
}, O1 = {
  amazon_silk: "Amazon Silk",
  android: "Android Browser",
  bada: "Bada",
  blackberry: "BlackBerry",
  chrome: "Chrome",
  chromium: "Chromium",
  electron: "Electron",
  epiphany: "Epiphany",
  firefox: "Firefox",
  focus: "Focus",
  generic: "Generic",
  googlebot: "Googlebot",
  google_search: "Google Search",
  ie: "Internet Explorer",
  k_meleon: "K-Meleon",
  maxthon: "Maxthon",
  edge: "Microsoft Edge",
  mz: "MZ Browser",
  naver: "NAVER Whale Browser",
  opera: "Opera",
  opera_coast: "Opera Coast",
  phantomjs: "PhantomJS",
  puffin: "Puffin",
  qupzilla: "QupZilla",
  qq: "QQ Browser",
  qqlite: "QQ Browser Lite",
  safari: "Safari",
  sailfish: "Sailfish",
  samsung_internet: "Samsung Internet for Android",
  seamonkey: "SeaMonkey",
  sleipnir: "Sleipnir",
  swing: "Swing",
  tizen: "Tizen",
  uc: "UC Browser",
  vivaldi: "Vivaldi",
  webos: "WebOS Browser",
  wechat: "WeChat",
  yandex: "Yandex Browser"
}, Mt = {
  tablet: "tablet",
  mobile: "mobile",
  desktop: "desktop",
  tv: "tv"
}, En = {
  WindowsPhone: "Windows Phone",
  Windows: "Windows",
  MacOS: "macOS",
  iOS: "iOS",
  Android: "Android",
  WebOS: "WebOS",
  BlackBerry: "BlackBerry",
  Bada: "Bada",
  Tizen: "Tizen",
  Linux: "Linux",
  ChromeOS: "Chrome OS",
  PlayStation4: "PlayStation 4",
  Roku: "Roku"
}, pi = {
  EdgeHTML: "EdgeHTML",
  Blink: "Blink",
  Trident: "Trident",
  Presto: "Presto",
  Gecko: "Gecko",
  WebKit: "WebKit"
};
let Y = class ma {
  /**
   * Get first matched item for a string
   * @param {RegExp} regexp
   * @param {String} ua
   * @return {Array|{index: number, input: string}|*|boolean|string}
   */
  static getFirstMatch(e, n) {
    const r = n.match(e);
    return r && r.length > 0 && r[1] || "";
  }
  /**
   * Get second matched item for a string
   * @param regexp
   * @param {String} ua
   * @return {Array|{index: number, input: string}|*|boolean|string}
   */
  static getSecondMatch(e, n) {
    const r = n.match(e);
    return r && r.length > 1 && r[2] || "";
  }
  /**
   * Match a regexp and return a constant or undefined
   * @param {RegExp} regexp
   * @param {String} ua
   * @param {*} _const Any const that will be returned if regexp matches the string
   * @return {*}
   */
  static matchAndReturnConst(e, n, r) {
    if (e.test(n))
      return r;
  }
  static getWindowsVersionName(e) {
    switch (e) {
      case "NT":
        return "NT";
      case "XP":
        return "XP";
      case "NT 5.0":
        return "2000";
      case "NT 5.1":
        return "XP";
      case "NT 5.2":
        return "2003";
      case "NT 6.0":
        return "Vista";
      case "NT 6.1":
        return "7";
      case "NT 6.2":
        return "8";
      case "NT 6.3":
        return "8.1";
      case "NT 10.0":
        return "10";
      default:
        return;
    }
  }
  /**
   * Get macOS version name
   *    10.5 - Leopard
   *    10.6 - Snow Leopard
   *    10.7 - Lion
   *    10.8 - Mountain Lion
   *    10.9 - Mavericks
   *    10.10 - Yosemite
   *    10.11 - El Capitan
   *    10.12 - Sierra
   *    10.13 - High Sierra
   *    10.14 - Mojave
   *    10.15 - Catalina
   *
   * @example
   *   getMacOSVersionName("10.14") // 'Mojave'
   *
   * @param  {string} version
   * @return {string} versionName
   */
  static getMacOSVersionName(e) {
    const n = e.split(".").splice(0, 2).map((r) => parseInt(r, 10) || 0);
    if (n.push(0), n[0] === 10)
      switch (n[1]) {
        case 5:
          return "Leopard";
        case 6:
          return "Snow Leopard";
        case 7:
          return "Lion";
        case 8:
          return "Mountain Lion";
        case 9:
          return "Mavericks";
        case 10:
          return "Yosemite";
        case 11:
          return "El Capitan";
        case 12:
          return "Sierra";
        case 13:
          return "High Sierra";
        case 14:
          return "Mojave";
        case 15:
          return "Catalina";
        default:
          return;
      }
  }
  /**
   * Get Android version name
   *    1.5 - Cupcake
   *    1.6 - Donut
   *    2.0 - Eclair
   *    2.1 - Eclair
   *    2.2 - Froyo
   *    2.x - Gingerbread
   *    3.x - Honeycomb
   *    4.0 - Ice Cream Sandwich
   *    4.1 - Jelly Bean
   *    4.4 - KitKat
   *    5.x - Lollipop
   *    6.x - Marshmallow
   *    7.x - Nougat
   *    8.x - Oreo
   *    9.x - Pie
   *
   * @example
   *   getAndroidVersionName("7.0") // 'Nougat'
   *
   * @param  {string} version
   * @return {string} versionName
   */
  static getAndroidVersionName(e) {
    const n = e.split(".").splice(0, 2).map((r) => parseInt(r, 10) || 0);
    if (n.push(0), !(n[0] === 1 && n[1] < 5)) {
      if (n[0] === 1 && n[1] < 6) return "Cupcake";
      if (n[0] === 1 && n[1] >= 6) return "Donut";
      if (n[0] === 2 && n[1] < 2) return "Eclair";
      if (n[0] === 2 && n[1] === 2) return "Froyo";
      if (n[0] === 2 && n[1] > 2) return "Gingerbread";
      if (n[0] === 3) return "Honeycomb";
      if (n[0] === 4 && n[1] < 1) return "Ice Cream Sandwich";
      if (n[0] === 4 && n[1] < 4) return "Jelly Bean";
      if (n[0] === 4 && n[1] >= 4) return "KitKat";
      if (n[0] === 5) return "Lollipop";
      if (n[0] === 6) return "Marshmallow";
      if (n[0] === 7) return "Nougat";
      if (n[0] === 8) return "Oreo";
      if (n[0] === 9) return "Pie";
    }
  }
  /**
   * Get version precisions count
   *
   * @example
   *   getVersionPrecision("1.10.3") // 3
   *
   * @param  {string} version
   * @return {number}
   */
  static getVersionPrecision(e) {
    return e.split(".").length;
  }
  /**
   * Calculate browser version weight
   *
   * @example
   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1
   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1
   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0
   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1
   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0
   *
   * @param {String} versionA versions versions to compare
   * @param {String} versionB versions versions to compare
   * @param {boolean} [isLoose] enable loose comparison
   * @return {Number} comparison result: -1 when versionA is lower,
   * 1 when versionA is bigger, 0 when both equal
   */
  /* eslint consistent-return: 1 */
  static compareVersions(e, n, r = !1) {
    const s = ma.getVersionPrecision(e), i = ma.getVersionPrecision(n);
    let o = Math.max(s, i), a = 0;
    const c = ma.map([e, n], (u) => {
      const f = o - ma.getVersionPrecision(u), l = u + new Array(f + 1).join(".0");
      return ma.map(l.split("."), (m) => new Array(20 - m.length).join("0") + m).reverse();
    });
    for (r && (a = o - Math.min(s, i)), o -= 1; o >= a; ) {
      if (c[0][o] > c[1][o])
        return 1;
      if (c[0][o] === c[1][o]) {
        if (o === a)
          return 0;
        o -= 1;
      } else if (c[0][o] < c[1][o])
        return -1;
    }
  }
  /**
   * Array::map polyfill
   *
   * @param  {Array} arr
   * @param  {Function} iterator
   * @return {Array}
   */
  static map(e, n) {
    const r = [];
    let s;
    if (Array.prototype.map)
      return Array.prototype.map.call(e, n);
    for (s = 0; s < e.length; s += 1)
      r.push(n(e[s]));
    return r;
  }
  /**
   * Array::find polyfill
   *
   * @param  {Array} arr
   * @param  {Function} predicate
   * @return {Array}
   */
  static find(e, n) {
    let r, s;
    if (Array.prototype.find)
      return Array.prototype.find.call(e, n);
    for (r = 0, s = e.length; r < s; r += 1) {
      const i = e[r];
      if (n(i, r))
        return i;
    }
  }
  /**
   * Object::assign polyfill
   *
   * @param  {Object} obj
   * @param  {Object} ...objs
   * @return {Object}
   */
  static assign(e, ...n) {
    const r = e;
    let s, i;
    if (Object.assign)
      return Object.assign(e, ...n);
    for (s = 0, i = n.length; s < i; s += 1) {
      const o = n[s];
      typeof o == "object" && o !== null && Object.keys(o).forEach((c) => {
        r[c] = o[c];
      });
    }
    return e;
  }
  /**
   * Get short version/alias for a browser name
   *
   * @example
   *   getBrowserAlias('Microsoft Edge') // edge
   *
   * @param  {string} browserName
   * @return {string}
   */
  static getBrowserAlias(e) {
    return Zv[e];
  }
  /**
   * Get short version/alias for a browser name
   *
   * @example
   *   getBrowserAlias('edge') // Microsoft Edge
   *
   * @param  {string} browserAlias
   * @return {string}
   */
  static getBrowserTypeByAlias(e) {
    return O1[e] || "";
  }
};
const yt = /version\/(\d+(\.?_?\d+)+)/i, Jv = [
  /* Googlebot */
  {
    test: [/googlebot/i],
    describe(t) {
      const e = {
        name: "Googlebot"
      }, n = Y.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  /* Opera < 13.0 */
  {
    test: [/opera/i],
    describe(t) {
      const e = {
        name: "Opera"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  /* Opera > 13.0 */
  {
    test: [/opr\/|opios/i],
    describe(t) {
      const e = {
        name: "Opera"
      }, n = Y.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/SamsungBrowser/i],
    describe(t) {
      const e = {
        name: "Samsung Internet for Android"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/Whale/i],
    describe(t) {
      const e = {
        name: "NAVER Whale Browser"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/MZBrowser/i],
    describe(t) {
      const e = {
        name: "MZ Browser"
      }, n = Y.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/focus/i],
    describe(t) {
      const e = {
        name: "Focus"
      }, n = Y.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/swing/i],
    describe(t) {
      const e = {
        name: "Swing"
      }, n = Y.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/coast/i],
    describe(t) {
      const e = {
        name: "Opera Coast"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/opt\/\d+(?:.?_?\d+)+/i],
    describe(t) {
      const e = {
        name: "Opera Touch"
      }, n = Y.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/yabrowser/i],
    describe(t) {
      const e = {
        name: "Yandex Browser"
      }, n = Y.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/ucbrowser/i],
    describe(t) {
      const e = {
        name: "UC Browser"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/Maxthon|mxios/i],
    describe(t) {
      const e = {
        name: "Maxthon"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/epiphany/i],
    describe(t) {
      const e = {
        name: "Epiphany"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/puffin/i],
    describe(t) {
      const e = {
        name: "Puffin"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/sleipnir/i],
    describe(t) {
      const e = {
        name: "Sleipnir"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/k-meleon/i],
    describe(t) {
      const e = {
        name: "K-Meleon"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/micromessenger/i],
    describe(t) {
      const e = {
        name: "WeChat"
      }, n = Y.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/qqbrowser/i],
    describe(t) {
      const e = {
        name: /qqbrowserlite/i.test(t) ? "QQ Browser Lite" : "QQ Browser"
      }, n = Y.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/msie|trident/i],
    describe(t) {
      const e = {
        name: "Internet Explorer"
      }, n = Y.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/\sedg\//i],
    describe(t) {
      const e = {
        name: "Microsoft Edge"
      }, n = Y.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/edg([ea]|ios)/i],
    describe(t) {
      const e = {
        name: "Microsoft Edge"
      }, n = Y.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/vivaldi/i],
    describe(t) {
      const e = {
        name: "Vivaldi"
      }, n = Y.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/seamonkey/i],
    describe(t) {
      const e = {
        name: "SeaMonkey"
      }, n = Y.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/sailfish/i],
    describe(t) {
      const e = {
        name: "Sailfish"
      }, n = Y.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/silk/i],
    describe(t) {
      const e = {
        name: "Amazon Silk"
      }, n = Y.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/phantom/i],
    describe(t) {
      const e = {
        name: "PhantomJS"
      }, n = Y.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/slimerjs/i],
    describe(t) {
      const e = {
        name: "SlimerJS"
      }, n = Y.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
    describe(t) {
      const e = {
        name: "BlackBerry"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/(web|hpw)[o0]s/i],
    describe(t) {
      const e = {
        name: "WebOS Browser"
      }, n = Y.getFirstMatch(yt, t) || Y.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/bada/i],
    describe(t) {
      const e = {
        name: "Bada"
      }, n = Y.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/tizen/i],
    describe(t) {
      const e = {
        name: "Tizen"
      }, n = Y.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/qupzilla/i],
    describe(t) {
      const e = {
        name: "QupZilla"
      }, n = Y.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/firefox|iceweasel|fxios/i],
    describe(t) {
      const e = {
        name: "Firefox"
      }, n = Y.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/electron/i],
    describe(t) {
      const e = {
        name: "Electron"
      }, n = Y.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/MiuiBrowser/i],
    describe(t) {
      const e = {
        name: "Miui"
      }, n = Y.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/chromium/i],
    describe(t) {
      const e = {
        name: "Chromium"
      }, n = Y.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, t) || Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/chrome|crios|crmo/i],
    describe(t) {
      const e = {
        name: "Chrome"
      }, n = Y.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  {
    test: [/GSA/i],
    describe(t) {
      const e = {
        name: "Google Search"
      }, n = Y.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  /* Android Browser */
  {
    test(t) {
      const e = !t.test(/like android/i), n = t.test(/android/i);
      return e && n;
    },
    describe(t) {
      const e = {
        name: "Android Browser"
      }, n = Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  /* PlayStation 4 */
  {
    test: [/playstation 4/i],
    describe(t) {
      const e = {
        name: "PlayStation 4"
      }, n = Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  /* Safari */
  {
    test: [/safari|applewebkit/i],
    describe(t) {
      const e = {
        name: "Safari"
      }, n = Y.getFirstMatch(yt, t);
      return n && (e.version = n), e;
    }
  },
  /* Something else */
  {
    test: [/.*/i],
    describe(t) {
      const e = /^(.*)\/(.*) /, n = /^(.*)\/(.*)[ \t]\((.*)/, s = t.search("\\(") !== -1 ? n : e;
      return {
        name: Y.getFirstMatch(s, t),
        version: Y.getSecondMatch(s, t)
      };
    }
  }
], Kv = [
  /* Roku */
  {
    test: [/Roku\/DVP/],
    describe(t) {
      const e = Y.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, t);
      return {
        name: En.Roku,
        version: e
      };
    }
  },
  /* Windows Phone */
  {
    test: [/windows phone/i],
    describe(t) {
      const e = Y.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, t);
      return {
        name: En.WindowsPhone,
        version: e
      };
    }
  },
  /* Windows */
  {
    test: [/windows /i],
    describe(t) {
      const e = Y.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, t), n = Y.getWindowsVersionName(e);
      return {
        name: En.Windows,
        version: e,
        versionName: n
      };
    }
  },
  /* Firefox on iPad */
  {
    test: [/Macintosh(.*?) FxiOS(.*?)\//],
    describe(t) {
      const e = {
        name: En.iOS
      }, n = Y.getSecondMatch(/(Version\/)(\d[\d.]+)/, t);
      return n && (e.version = n), e;
    }
  },
  /* macOS */
  {
    test: [/macintosh/i],
    describe(t) {
      const e = Y.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, t).replace(/[_\s]/g, "."), n = Y.getMacOSVersionName(e), r = {
        name: En.MacOS,
        version: e
      };
      return n && (r.versionName = n), r;
    }
  },
  /* iOS */
  {
    test: [/(ipod|iphone|ipad)/i],
    describe(t) {
      const e = Y.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, t).replace(/[_\s]/g, ".");
      return {
        name: En.iOS,
        version: e
      };
    }
  },
  /* Android */
  {
    test(t) {
      const e = !t.test(/like android/i), n = t.test(/android/i);
      return e && n;
    },
    describe(t) {
      const e = Y.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, t), n = Y.getAndroidVersionName(e), r = {
        name: En.Android,
        version: e
      };
      return n && (r.versionName = n), r;
    }
  },
  /* WebOS */
  {
    test: [/(web|hpw)[o0]s/i],
    describe(t) {
      const e = Y.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, t), n = {
        name: En.WebOS
      };
      return e && e.length && (n.version = e), n;
    }
  },
  /* BlackBerry */
  {
    test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
    describe(t) {
      const e = Y.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, t) || Y.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, t) || Y.getFirstMatch(/\bbb(\d+)/i, t);
      return {
        name: En.BlackBerry,
        version: e
      };
    }
  },
  /* Bada */
  {
    test: [/bada/i],
    describe(t) {
      const e = Y.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, t);
      return {
        name: En.Bada,
        version: e
      };
    }
  },
  /* Tizen */
  {
    test: [/tizen/i],
    describe(t) {
      const e = Y.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, t);
      return {
        name: En.Tizen,
        version: e
      };
    }
  },
  /* Linux */
  {
    test: [/linux/i],
    describe() {
      return {
        name: En.Linux
      };
    }
  },
  /* Chrome OS */
  {
    test: [/CrOS/],
    describe() {
      return {
        name: En.ChromeOS
      };
    }
  },
  /* Playstation 4 */
  {
    test: [/PlayStation 4/],
    describe(t) {
      const e = Y.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, t);
      return {
        name: En.PlayStation4,
        version: e
      };
    }
  }
], Yv = [
  /* Googlebot */
  {
    test: [/googlebot/i],
    describe() {
      return {
        type: "bot",
        vendor: "Google"
      };
    }
  },
  /* Huawei */
  {
    test: [/huawei/i],
    describe(t) {
      const e = Y.getFirstMatch(/(can-l01)/i, t) && "Nova", n = {
        type: Mt.mobile,
        vendor: "Huawei"
      };
      return e && (n.model = e), n;
    }
  },
  /* Nexus Tablet */
  {
    test: [/nexus\s*(?:7|8|9|10).*/i],
    describe() {
      return {
        type: Mt.tablet,
        vendor: "Nexus"
      };
    }
  },
  /* iPad */
  {
    test: [/ipad/i],
    describe() {
      return {
        type: Mt.tablet,
        vendor: "Apple",
        model: "iPad"
      };
    }
  },
  /* Firefox on iPad */
  {
    test: [/Macintosh(.*?) FxiOS(.*?)\//],
    describe() {
      return {
        type: Mt.tablet,
        vendor: "Apple",
        model: "iPad"
      };
    }
  },
  /* Amazon Kindle Fire */
  {
    test: [/kftt build/i],
    describe() {
      return {
        type: Mt.tablet,
        vendor: "Amazon",
        model: "Kindle Fire HD 7"
      };
    }
  },
  /* Another Amazon Tablet with Silk */
  {
    test: [/silk/i],
    describe() {
      return {
        type: Mt.tablet,
        vendor: "Amazon"
      };
    }
  },
  /* Tablet */
  {
    test: [/tablet(?! pc)/i],
    describe() {
      return {
        type: Mt.tablet
      };
    }
  },
  /* iPod/iPhone */
  {
    test(t) {
      const e = t.test(/ipod|iphone/i), n = t.test(/like (ipod|iphone)/i);
      return e && !n;
    },
    describe(t) {
      const e = Y.getFirstMatch(/(ipod|iphone)/i, t);
      return {
        type: Mt.mobile,
        vendor: "Apple",
        model: e
      };
    }
  },
  /* Nexus Mobile */
  {
    test: [/nexus\s*[0-6].*/i, /galaxy nexus/i],
    describe() {
      return {
        type: Mt.mobile,
        vendor: "Nexus"
      };
    }
  },
  /* Mobile */
  {
    test: [/[^-]mobi/i],
    describe() {
      return {
        type: Mt.mobile
      };
    }
  },
  /* BlackBerry */
  {
    test(t) {
      return t.getBrowserName(!0) === "blackberry";
    },
    describe() {
      return {
        type: Mt.mobile,
        vendor: "BlackBerry"
      };
    }
  },
  /* Bada */
  {
    test(t) {
      return t.getBrowserName(!0) === "bada";
    },
    describe() {
      return {
        type: Mt.mobile
      };
    }
  },
  /* Windows Phone */
  {
    test(t) {
      return t.getBrowserName() === "windows phone";
    },
    describe() {
      return {
        type: Mt.mobile,
        vendor: "Microsoft"
      };
    }
  },
  /* Android Tablet */
  {
    test(t) {
      const e = Number(String(t.getOSVersion()).split(".")[0]);
      return t.getOSName(!0) === "android" && e >= 3;
    },
    describe() {
      return {
        type: Mt.tablet
      };
    }
  },
  /* Android Mobile */
  {
    test(t) {
      return t.getOSName(!0) === "android";
    },
    describe() {
      return {
        type: Mt.mobile
      };
    }
  },
  /* desktop */
  {
    test(t) {
      return t.getOSName(!0) === "macos";
    },
    describe() {
      return {
        type: Mt.desktop,
        vendor: "Apple"
      };
    }
  },
  /* Windows */
  {
    test(t) {
      return t.getOSName(!0) === "windows";
    },
    describe() {
      return {
        type: Mt.desktop
      };
    }
  },
  /* Linux */
  {
    test(t) {
      return t.getOSName(!0) === "linux";
    },
    describe() {
      return {
        type: Mt.desktop
      };
    }
  },
  /* PlayStation 4 */
  {
    test(t) {
      return t.getOSName(!0) === "playstation 4";
    },
    describe() {
      return {
        type: Mt.tv
      };
    }
  },
  /* Roku */
  {
    test(t) {
      return t.getOSName(!0) === "roku";
    },
    describe() {
      return {
        type: Mt.tv
      };
    }
  }
], Xv = [
  /* EdgeHTML */
  {
    test(t) {
      return t.getBrowserName(!0) === "microsoft edge";
    },
    describe(t) {
      if (/\sedg\//i.test(t))
        return {
          name: pi.Blink
        };
      const n = Y.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, t);
      return {
        name: pi.EdgeHTML,
        version: n
      };
    }
  },
  /* Trident */
  {
    test: [/trident/i],
    describe(t) {
      const e = {
        name: pi.Trident
      }, n = Y.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  /* Presto */
  {
    test(t) {
      return t.test(/presto/i);
    },
    describe(t) {
      const e = {
        name: pi.Presto
      }, n = Y.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  /* Gecko */
  {
    test(t) {
      const e = t.test(/gecko/i), n = t.test(/like gecko/i);
      return e && !n;
    },
    describe(t) {
      const e = {
        name: pi.Gecko
      }, n = Y.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  },
  /* Blink */
  {
    test: [/(apple)?webkit\/537\.36/i],
    describe() {
      return {
        name: pi.Blink
      };
    }
  },
  /* WebKit */
  {
    test: [/(apple)?webkit/i],
    describe(t) {
      const e = {
        name: pi.WebKit
      }, n = Y.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, t);
      return n && (e.version = n), e;
    }
  }
];
let Cm = class {
  /**
   * Create instance of Parser
   *
   * @param {String} UA User-Agent string
   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance
   * improvements if you need to make a more particular parsing
   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}
   *
   * @throw {Error} in case of empty UA String
   *
   * @constructor
   */
  constructor(e, n = !1) {
    if (e == null || e === "")
      throw new Error("UserAgent parameter can't be empty");
    this._ua = e, this.parsedResult = {}, n !== !0 && this.parse();
  }
  /**
   * Get UserAgent string of current Parser instance
   * @return {String} User-Agent String of the current <Parser> object
   *
   * @public
   */
  getUA() {
    return this._ua;
  }
  /**
   * Test a UA string for a regexp
   * @param {RegExp} regex
   * @return {Boolean}
   */
  test(e) {
    return e.test(this._ua);
  }
  /**
   * Get parsed browser object
   * @return {Object}
   */
  parseBrowser() {
    this.parsedResult.browser = {};
    const e = Y.find(Jv, (n) => {
      if (typeof n.test == "function")
        return n.test(this);
      if (n.test instanceof Array)
        return n.test.some((r) => this.test(r));
      throw new Error("Browser's test function is not valid");
    });
    return e && (this.parsedResult.browser = e.describe(this.getUA())), this.parsedResult.browser;
  }
  /**
   * Get parsed browser object
   * @return {Object}
   *
   * @public
   */
  getBrowser() {
    return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser();
  }
  /**
   * Get browser's name
   * @return {String} Browser's name or an empty string
   *
   * @public
   */
  getBrowserName(e) {
    return e ? String(this.getBrowser().name).toLowerCase() || "" : this.getBrowser().name || "";
  }
  /**
   * Get browser's version
   * @return {String} version of browser
   *
   * @public
   */
  getBrowserVersion() {
    return this.getBrowser().version;
  }
  /**
   * Get OS
   * @return {Object}
   *
   * @example
   * this.getOS();
   * {
   *   name: 'macOS',
   *   version: '10.11.12'
   * }
   */
  getOS() {
    return this.parsedResult.os ? this.parsedResult.os : this.parseOS();
  }
  /**
   * Parse OS and save it to this.parsedResult.os
   * @return {*|{}}
   */
  parseOS() {
    this.parsedResult.os = {};
    const e = Y.find(Kv, (n) => {
      if (typeof n.test == "function")
        return n.test(this);
      if (n.test instanceof Array)
        return n.test.some((r) => this.test(r));
      throw new Error("Browser's test function is not valid");
    });
    return e && (this.parsedResult.os = e.describe(this.getUA())), this.parsedResult.os;
  }
  /**
   * Get OS name
   * @param {Boolean} [toLowerCase] return lower-cased value
   * @return {String} name of the OS — macOS, Windows, Linux, etc.
   */
  getOSName(e) {
    const { name: n } = this.getOS();
    return e ? String(n).toLowerCase() || "" : n || "";
  }
  /**
   * Get OS version
   * @return {String} full version with dots ('10.11.12', '5.6', etc)
   */
  getOSVersion() {
    return this.getOS().version;
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  getPlatform() {
    return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform();
  }
  /**
   * Get platform name
   * @param {Boolean} [toLowerCase=false]
   * @return {*}
   */
  getPlatformType(e = !1) {
    const { type: n } = this.getPlatform();
    return e ? String(n).toLowerCase() || "" : n || "";
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  parsePlatform() {
    this.parsedResult.platform = {};
    const e = Y.find(Yv, (n) => {
      if (typeof n.test == "function")
        return n.test(this);
      if (n.test instanceof Array)
        return n.test.some((r) => this.test(r));
      throw new Error("Browser's test function is not valid");
    });
    return e && (this.parsedResult.platform = e.describe(this.getUA())), this.parsedResult.platform;
  }
  /**
   * Get parsed engine
   * @return {{}}
   */
  getEngine() {
    return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine();
  }
  /**
   * Get engines's name
   * @return {String} Engines's name or an empty string
   *
   * @public
   */
  getEngineName(e) {
    return e ? String(this.getEngine().name).toLowerCase() || "" : this.getEngine().name || "";
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  parseEngine() {
    this.parsedResult.engine = {};
    const e = Y.find(Xv, (n) => {
      if (typeof n.test == "function")
        return n.test(this);
      if (n.test instanceof Array)
        return n.test.some((r) => this.test(r));
      throw new Error("Browser's test function is not valid");
    });
    return e && (this.parsedResult.engine = e.describe(this.getUA())), this.parsedResult.engine;
  }
  /**
   * Parse full information about the browser
   * @returns {Parser}
   */
  parse() {
    return this.parseBrowser(), this.parseOS(), this.parsePlatform(), this.parseEngine(), this;
  }
  /**
   * Get parsed result
   * @return {ParsedResult}
   */
  getResult() {
    return Y.assign({}, this.parsedResult);
  }
  /**
   * Check if parsed browser matches certain conditions
   *
   * @param {Object} checkTree It's one or two layered object,
   * which can include a platform or an OS on the first layer
   * and should have browsers specs on the bottom-laying layer
   *
   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.
   * Returns `undefined` when the browser is no described in the checkTree object.
   *
   * @example
   * const browser = Bowser.getParser(window.navigator.userAgent);
   * if (browser.satisfies({chrome: '>118.01.1322' }))
   * // or with os
   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))
   * // or with platforms
   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))
   */
  satisfies(e) {
    const n = {};
    let r = 0;
    const s = {};
    let i = 0;
    if (Object.keys(e).forEach((a) => {
      const c = e[a];
      typeof c == "string" ? (s[a] = c, i += 1) : typeof c == "object" && (n[a] = c, r += 1);
    }), r > 0) {
      const a = Object.keys(n), c = Y.find(a, (f) => this.isOS(f));
      if (c) {
        const f = this.satisfies(n[c]);
        if (f !== void 0)
          return f;
      }
      const u = Y.find(
        a,
        (f) => this.isPlatform(f)
      );
      if (u) {
        const f = this.satisfies(n[u]);
        if (f !== void 0)
          return f;
      }
    }
    if (i > 0) {
      const a = Object.keys(s), c = Y.find(a, (u) => this.isBrowser(u, !0));
      if (c !== void 0)
        return this.compareVersion(s[c]);
    }
  }
  /**
   * Check if the browser name equals the passed string
   * @param browserName The string to compare with the browser name
   * @param [includingAlias=false] The flag showing whether alias will be included into comparison
   * @returns {boolean}
   */
  isBrowser(e, n = !1) {
    const r = this.getBrowserName().toLowerCase();
    let s = e.toLowerCase();
    const i = Y.getBrowserTypeByAlias(s);
    return n && i && (s = i.toLowerCase()), s === r;
  }
  compareVersion(e) {
    let n = [0], r = e, s = !1;
    const i = this.getBrowserVersion();
    if (typeof i == "string")
      return e[0] === ">" || e[0] === "<" ? (r = e.substr(1), e[1] === "=" ? (s = !0, r = e.substr(2)) : n = [], e[0] === ">" ? n.push(1) : n.push(-1)) : e[0] === "=" ? r = e.substr(1) : e[0] === "~" && (s = !0, r = e.substr(1)), n.indexOf(
        Y.compareVersions(i, r, s)
      ) > -1;
  }
  isOS(e) {
    return this.getOSName(!0) === String(e).toLowerCase();
  }
  isPlatform(e) {
    return this.getPlatformType(!0) === String(e).toLowerCase();
  }
  isEngine(e) {
    return this.getEngineName(!0) === String(e).toLowerCase();
  }
  /**
   * Is anything? Check if the browser is called "anything",
   * the OS called "anything" or the platform called "anything"
   * @param {String} anything
   * @param [includingAlias=false] The flag showing whether alias will be included into comparison
   * @returns {Boolean}
   */
  is(e, n = !1) {
    return this.isBrowser(e, n) || this.isOS(e) || this.isPlatform(e);
  }
  /**
   * Check if any of the given values satisfies this.is(anything)
   * @param {String[]} anythings
   * @returns {Boolean}
   */
  some(e = []) {
    return e.some((n) => this.is(n));
  }
};
/*!
 * Bowser - a browser detector
 * https://github.com/lancedikson/bowser
 * MIT License | (c) Dustin Diaz 2012-2015
 * MIT License | (c) Denis Demchenko 2015-2019
 */
class e2 {
  /**
   * Creates a {@link Parser} instance
   *
   * @param {String} UA UserAgent string
   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it
   * explicitly. Same as `skipParsing` for {@link Parser}.
   * @returns {Parser}
   * @throws {Error} when UA is not a String
   *
   * @example
   * const parser = Bowser.getParser(window.navigator.userAgent);
   * const result = parser.getResult();
   */
  static getParser(e, n = !1) {
    if (typeof e != "string")
      throw new Error("UserAgent should be a string");
    return new Cm(e, n);
  }
  /**
   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately
   *
   * @param UA
   * @return {ParsedResult}
   *
   * @example
   * const result = Bowser.parse(window.navigator.userAgent);
   */
  static parse(e) {
    return new Cm(e).getResult();
  }
  static get BROWSER_MAP() {
    return O1;
  }
  static get ENGINE_MAP() {
    return pi;
  }
  static get OS_MAP() {
    return En;
  }
  static get PLATFORMS_MAP() {
    return Mt;
  }
}
function Ia() {
}
function t2(t) {
  return t();
}
function n2(t) {
  t.forEach(t2);
}
function r2(t) {
  return typeof t == "function";
}
function s2(t, e) {
  return t != t ? e == e : t !== e || t && typeof t == "object" || typeof t == "function";
}
function i2(t, ...e) {
  if (t == null)
    return Ia;
  const n = t.subscribe(...e);
  return n.unsubscribe ? () => n.unsubscribe() : n;
}
const ca = [];
function o2(t, e) {
  return {
    subscribe: Zf(t, e).subscribe
  };
}
function Zf(t, e = Ia) {
  let n;
  const r = /* @__PURE__ */ new Set();
  function s(a) {
    if (s2(t, a) && (t = a, n)) {
      const c = !ca.length;
      for (const u of r)
        u[1](), ca.push(u, t);
      if (c) {
        for (let u = 0; u < ca.length; u += 2)
          ca[u][0](ca[u + 1]);
        ca.length = 0;
      }
    }
  }
  function i(a) {
    s(a(t));
  }
  function o(a, c = Ia) {
    const u = [a, c];
    return r.add(u), r.size === 1 && (n = e(s) || Ia), a(t), () => {
      r.delete(u), r.size === 0 && n && (n(), n = null);
    };
  }
  return { set: s, update: i, subscribe: o };
}
function jl(t, e, n) {
  const r = !Array.isArray(t), s = r ? [t] : t, i = e.length < 2;
  return o2(n, (o) => {
    let a = !1;
    const c = [];
    let u = 0, f = Ia;
    const l = () => {
      if (u)
        return;
      f();
      const p = e(r ? c[0] : c, o);
      i ? o(p) : f = r2(p) ? p : Ia;
    }, m = s.map((p, d) => i2(p, (h) => {
      c[d] = h, u &= ~(1 << d), a && l();
    }, () => {
      u |= 1 << d;
    }));
    return a = !0, l(), function() {
      n2(m), f(), a = !1;
    };
  });
}
var mr = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Fl(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
function Ek(t) {
  if (t.__esModule) return t;
  var e = t.default;
  if (typeof e == "function") {
    var n = function r() {
      return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    n.prototype = e.prototype;
  } else n = {};
  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(t).forEach(function(r) {
    var s = Object.getOwnPropertyDescriptor(t, r);
    Object.defineProperty(n, r, s.get ? s : {
      enumerable: !0,
      get: function() {
        return t[r];
      }
    });
  }), n;
}
var Th, km;
function a2() {
  if (km) return Th;
  km = 1;
  var t = function(y) {
    return e(y) && !n(y);
  };
  function e(g) {
    return !!g && typeof g == "object";
  }
  function n(g) {
    var y = Object.prototype.toString.call(g);
    return y === "[object RegExp]" || y === "[object Date]" || i(g);
  }
  var r = typeof Symbol == "function" && Symbol.for, s = r ? Symbol.for("react.element") : 60103;
  function i(g) {
    return g.$$typeof === s;
  }
  function o(g) {
    return Array.isArray(g) ? [] : {};
  }
  function a(g, y) {
    return y.clone !== !1 && y.isMergeableObject(g) ? h(o(g), g, y) : g;
  }
  function c(g, y, w) {
    return g.concat(y).map(function(_) {
      return a(_, w);
    });
  }
  function u(g, y) {
    if (!y.customMerge)
      return h;
    var w = y.customMerge(g);
    return typeof w == "function" ? w : h;
  }
  function f(g) {
    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(g).filter(function(y) {
      return Object.propertyIsEnumerable.call(g, y);
    }) : [];
  }
  function l(g) {
    return Object.keys(g).concat(f(g));
  }
  function m(g, y) {
    try {
      return y in g;
    } catch {
      return !1;
    }
  }
  function p(g, y) {
    return m(g, y) && !(Object.hasOwnProperty.call(g, y) && Object.propertyIsEnumerable.call(g, y));
  }
  function d(g, y, w) {
    var _ = {};
    return w.isMergeableObject(g) && l(g).forEach(function(E) {
      _[E] = a(g[E], w);
    }), l(y).forEach(function(E) {
      p(g, E) || (m(g, E) && w.isMergeableObject(y[E]) ? _[E] = u(E, w)(g[E], y[E], w) : _[E] = a(y[E], w));
    }), _;
  }
  function h(g, y, w) {
    w = w || {}, w.arrayMerge = w.arrayMerge || c, w.isMergeableObject = w.isMergeableObject || t, w.cloneUnlessOtherwiseSpecified = a;
    var _ = Array.isArray(y), E = Array.isArray(g), k = _ === E;
    return k ? _ ? w.arrayMerge(g, y, w) : d(g, y, w) : a(y, w);
  }
  h.all = function(y, w) {
    if (!Array.isArray(y))
      throw new Error("first argument should be an array");
    return y.reduce(function(_, E) {
      return h(_, E, w);
    }, {});
  };
  var b = h;
  return Th = b, Th;
}
var l2 = a2();
const c2 = /* @__PURE__ */ Fl(l2);
function Ih(t, e) {
  var n = e && e.cache ? e.cache : g2, r = e && e.serializer ? e.serializer : p2, s = e && e.strategy ? e.strategy : f2;
  return s(t, {
    cache: n,
    serializer: r
  });
}
function u2(t) {
  return t == null || typeof t == "number" || typeof t == "boolean";
}
function T1(t, e, n, r) {
  var s = u2(r) ? r : n(r), i = e.get(s);
  return typeof i > "u" && (i = t.call(this, r), e.set(s, i)), i;
}
function I1(t, e, n) {
  var r = Array.prototype.slice.call(arguments, 3), s = n(r), i = e.get(s);
  return typeof i > "u" && (i = t.apply(this, r), e.set(s, i)), i;
}
function wp(t, e, n, r, s) {
  return n.bind(e, t, r, s);
}
function f2(t, e) {
  var n = t.length === 1 ? T1 : I1;
  return wp(t, this, n, e.cache.create(), e.serializer);
}
function h2(t, e) {
  return wp(t, this, I1, e.cache.create(), e.serializer);
}
function d2(t, e) {
  return wp(t, this, T1, e.cache.create(), e.serializer);
}
var p2 = function() {
  return JSON.stringify(arguments);
}, m2 = (
  /** @class */
  function() {
    function t() {
      this.cache = /* @__PURE__ */ Object.create(null);
    }
    return t.prototype.get = function(e) {
      return this.cache[e];
    }, t.prototype.set = function(e, n) {
      this.cache[e] = n;
    }, t;
  }()
), g2 = {
  create: function() {
    return new m2();
  }
}, Nh = {
  variadic: h2,
  monadic: d2
}, et;
(function(t) {
  t[t.EXPECT_ARGUMENT_CLOSING_BRACE = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE", t[t.EMPTY_ARGUMENT = 2] = "EMPTY_ARGUMENT", t[t.MALFORMED_ARGUMENT = 3] = "MALFORMED_ARGUMENT", t[t.EXPECT_ARGUMENT_TYPE = 4] = "EXPECT_ARGUMENT_TYPE", t[t.INVALID_ARGUMENT_TYPE = 5] = "INVALID_ARGUMENT_TYPE", t[t.EXPECT_ARGUMENT_STYLE = 6] = "EXPECT_ARGUMENT_STYLE", t[t.INVALID_NUMBER_SKELETON = 7] = "INVALID_NUMBER_SKELETON", t[t.INVALID_DATE_TIME_SKELETON = 8] = "INVALID_DATE_TIME_SKELETON", t[t.EXPECT_NUMBER_SKELETON = 9] = "EXPECT_NUMBER_SKELETON", t[t.EXPECT_DATE_TIME_SKELETON = 10] = "EXPECT_DATE_TIME_SKELETON", t[t.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE", t[t.EXPECT_SELECT_ARGUMENT_OPTIONS = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS", t[t.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE", t[t.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE", t[t.EXPECT_SELECT_ARGUMENT_SELECTOR = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR", t[t.EXPECT_PLURAL_ARGUMENT_SELECTOR = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR", t[t.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT", t[t.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT", t[t.INVALID_PLURAL_ARGUMENT_SELECTOR = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR", t[t.DUPLICATE_PLURAL_ARGUMENT_SELECTOR = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR", t[t.DUPLICATE_SELECT_ARGUMENT_SELECTOR = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR", t[t.MISSING_OTHER_CLAUSE = 22] = "MISSING_OTHER_CLAUSE", t[t.INVALID_TAG = 23] = "INVALID_TAG", t[t.INVALID_TAG_NAME = 25] = "INVALID_TAG_NAME", t[t.UNMATCHED_CLOSING_TAG = 26] = "UNMATCHED_CLOSING_TAG", t[t.UNCLOSED_TAG = 27] = "UNCLOSED_TAG";
})(et || (et = {}));
var Ot;
(function(t) {
  t[t.literal = 0] = "literal", t[t.argument = 1] = "argument", t[t.number = 2] = "number", t[t.date = 3] = "date", t[t.time = 4] = "time", t[t.select = 5] = "select", t[t.plural = 6] = "plural", t[t.pound = 7] = "pound", t[t.tag = 8] = "tag";
})(Ot || (Ot = {}));
var kl;
(function(t) {
  t[t.number = 0] = "number", t[t.dateTime = 1] = "dateTime";
})(kl || (kl = {}));
function Sm(t) {
  return t.type === Ot.literal;
}
function b2(t) {
  return t.type === Ot.argument;
}
function N1(t) {
  return t.type === Ot.number;
}
function P1(t) {
  return t.type === Ot.date;
}
function R1(t) {
  return t.type === Ot.time;
}
function B1(t) {
  return t.type === Ot.select;
}
function L1(t) {
  return t.type === Ot.plural;
}
function y2(t) {
  return t.type === Ot.pound;
}
function M1(t) {
  return t.type === Ot.tag;
}
function D1(t) {
  return !!(t && typeof t == "object" && t.type === kl.number);
}
function pd(t) {
  return !!(t && typeof t == "object" && t.type === kl.dateTime);
}
var $1 = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/, w2 = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function v2(t) {
  var e = {};
  return t.replace(w2, function(n) {
    var r = n.length;
    switch (n[0]) {
      // Era
      case "G":
        e.era = r === 4 ? "long" : r === 5 ? "narrow" : "short";
        break;
      // Year
      case "y":
        e.year = r === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      // Quarter
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      // Month
      case "M":
      case "L":
        e.month = ["numeric", "2-digit", "short", "long", "narrow"][r - 1];
        break;
      // Week
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        e.day = ["numeric", "2-digit"][r - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      // Weekday
      case "E":
        e.weekday = r === 4 ? "long" : r === 5 ? "narrow" : "short";
        break;
      case "e":
        if (r < 4)
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        e.weekday = ["short", "long", "narrow", "short"][r - 4];
        break;
      case "c":
        if (r < 4)
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        e.weekday = ["short", "long", "narrow", "short"][r - 4];
        break;
      // Period
      case "a":
        e.hour12 = !0;
        break;
      case "b":
      // am, pm, noon, midnight
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      // Hour
      case "h":
        e.hourCycle = "h12", e.hour = ["numeric", "2-digit"][r - 1];
        break;
      case "H":
        e.hourCycle = "h23", e.hour = ["numeric", "2-digit"][r - 1];
        break;
      case "K":
        e.hourCycle = "h11", e.hour = ["numeric", "2-digit"][r - 1];
        break;
      case "k":
        e.hourCycle = "h24", e.hour = ["numeric", "2-digit"][r - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      // Minute
      case "m":
        e.minute = ["numeric", "2-digit"][r - 1];
        break;
      // Second
      case "s":
        e.second = ["numeric", "2-digit"][r - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      // Zone
      case "z":
        e.timeZoneName = r < 4 ? "short" : "long";
        break;
      case "Z":
      // 1..3, 4, 5: The ISO8601 varios formats
      case "O":
      // 1, 4: milliseconds in day short, long
      case "v":
      // 1, 4: generic non-location format
      case "V":
      // 1, 2, 3, 4: time zone ID or city
      case "X":
      // 1, 2, 3, 4: The ISO8601 varios formats
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  }), e;
}
var _2 = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;
function A2(t) {
  if (t.length === 0)
    throw new Error("Number skeleton cannot be empty");
  for (var e = t.split(_2).filter(function(m) {
    return m.length > 0;
  }), n = [], r = 0, s = e; r < s.length; r++) {
    var i = s[r], o = i.split("/");
    if (o.length === 0)
      throw new Error("Invalid number skeleton");
    for (var a = o[0], c = o.slice(1), u = 0, f = c; u < f.length; u++) {
      var l = f[u];
      if (l.length === 0)
        throw new Error("Invalid number skeleton");
    }
    n.push({ stem: a, options: c });
  }
  return n;
}
function E2(t) {
  return t.replace(/^(.*?)-/, "");
}
var Om = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g, U1 = /^(@+)?(\+|#+)?[rs]?$/g, x2 = /(\*)(0+)|(#+)(0+)|(0+)/g, j1 = /^(0+)$/;
function Tm(t) {
  var e = {};
  return t[t.length - 1] === "r" ? e.roundingPriority = "morePrecision" : t[t.length - 1] === "s" && (e.roundingPriority = "lessPrecision"), t.replace(U1, function(n, r, s) {
    return typeof s != "string" ? (e.minimumSignificantDigits = r.length, e.maximumSignificantDigits = r.length) : s === "+" ? e.minimumSignificantDigits = r.length : r[0] === "#" ? e.maximumSignificantDigits = r.length : (e.minimumSignificantDigits = r.length, e.maximumSignificantDigits = r.length + (typeof s == "string" ? s.length : 0)), "";
  }), e;
}
function F1(t) {
  switch (t) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function C2(t) {
  var e;
  if (t[0] === "E" && t[1] === "E" ? (e = {
    notation: "engineering"
  }, t = t.slice(2)) : t[0] === "E" && (e = {
    notation: "scientific"
  }, t = t.slice(1)), e) {
    var n = t.slice(0, 2);
    if (n === "+!" ? (e.signDisplay = "always", t = t.slice(2)) : n === "+?" && (e.signDisplay = "exceptZero", t = t.slice(2)), !j1.test(t))
      throw new Error("Malformed concise eng/scientific notation");
    e.minimumIntegerDigits = t.length;
  }
  return e;
}
function Im(t) {
  var e = {}, n = F1(t);
  return n || e;
}
function k2(t) {
  for (var e = {}, n = 0, r = t; n < r.length; n++) {
    var s = r[n];
    switch (s.stem) {
      case "percent":
      case "%":
        e.style = "percent";
        continue;
      case "%x100":
        e.style = "percent", e.scale = 100;
        continue;
      case "currency":
        e.style = "currency", e.currency = s.options[0];
        continue;
      case "group-off":
      case ",_":
        e.useGrouping = !1;
        continue;
      case "precision-integer":
      case ".":
        e.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        e.style = "unit", e.unit = E2(s.options[0]);
        continue;
      case "compact-short":
      case "K":
        e.notation = "compact", e.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        e.notation = "compact", e.compactDisplay = "long";
        continue;
      case "scientific":
        e = at(at(at({}, e), { notation: "scientific" }), s.options.reduce(function(c, u) {
          return at(at({}, c), Im(u));
        }, {}));
        continue;
      case "engineering":
        e = at(at(at({}, e), { notation: "engineering" }), s.options.reduce(function(c, u) {
          return at(at({}, c), Im(u));
        }, {}));
        continue;
      case "notation-simple":
        e.notation = "standard";
        continue;
      // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h
      case "unit-width-narrow":
        e.currencyDisplay = "narrowSymbol", e.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        e.currencyDisplay = "code", e.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        e.currencyDisplay = "name", e.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        e.currencyDisplay = "symbol";
        continue;
      case "scale":
        e.scale = parseFloat(s.options[0]);
        continue;
      case "rounding-mode-floor":
        e.roundingMode = "floor";
        continue;
      case "rounding-mode-ceiling":
        e.roundingMode = "ceil";
        continue;
      case "rounding-mode-down":
        e.roundingMode = "trunc";
        continue;
      case "rounding-mode-up":
        e.roundingMode = "expand";
        continue;
      case "rounding-mode-half-even":
        e.roundingMode = "halfEven";
        continue;
      case "rounding-mode-half-down":
        e.roundingMode = "halfTrunc";
        continue;
      case "rounding-mode-half-up":
        e.roundingMode = "halfExpand";
        continue;
      // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
      case "integer-width":
        if (s.options.length > 1)
          throw new RangeError("integer-width stems only accept a single optional option");
        s.options[0].replace(x2, function(c, u, f, l, m, p) {
          if (u)
            e.minimumIntegerDigits = f.length;
          else {
            if (l && m)
              throw new Error("We currently do not support maximum integer digits");
            if (p)
              throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (j1.test(s.stem)) {
      e.minimumIntegerDigits = s.stem.length;
      continue;
    }
    if (Om.test(s.stem)) {
      if (s.options.length > 1)
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      s.stem.replace(Om, function(c, u, f, l, m, p) {
        return f === "*" ? e.minimumFractionDigits = u.length : l && l[0] === "#" ? e.maximumFractionDigits = l.length : m && p ? (e.minimumFractionDigits = m.length, e.maximumFractionDigits = m.length + p.length) : (e.minimumFractionDigits = u.length, e.maximumFractionDigits = u.length), "";
      });
      var i = s.options[0];
      i === "w" ? e = at(at({}, e), { trailingZeroDisplay: "stripIfInteger" }) : i && (e = at(at({}, e), Tm(i)));
      continue;
    }
    if (U1.test(s.stem)) {
      e = at(at({}, e), Tm(s.stem));
      continue;
    }
    var o = F1(s.stem);
    o && (e = at(at({}, e), o));
    var a = C2(s.stem);
    a && (e = at(at({}, e), a));
  }
  return e;
}
var Nu = {
  "001": [
    "H",
    "h"
  ],
  419: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  AC: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  AD: [
    "H",
    "hB"
  ],
  AE: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  AF: [
    "H",
    "hb",
    "hB",
    "h"
  ],
  AG: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  AI: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  AL: [
    "h",
    "H",
    "hB"
  ],
  AM: [
    "H",
    "hB"
  ],
  AO: [
    "H",
    "hB"
  ],
  AR: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  AS: [
    "h",
    "H"
  ],
  AT: [
    "H",
    "hB"
  ],
  AU: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  AW: [
    "H",
    "hB"
  ],
  AX: [
    "H"
  ],
  AZ: [
    "H",
    "hB",
    "h"
  ],
  BA: [
    "H",
    "hB",
    "h"
  ],
  BB: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  BD: [
    "h",
    "hB",
    "H"
  ],
  BE: [
    "H",
    "hB"
  ],
  BF: [
    "H",
    "hB"
  ],
  BG: [
    "H",
    "hB",
    "h"
  ],
  BH: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  BI: [
    "H",
    "h"
  ],
  BJ: [
    "H",
    "hB"
  ],
  BL: [
    "H",
    "hB"
  ],
  BM: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  BN: [
    "hb",
    "hB",
    "h",
    "H"
  ],
  BO: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  BQ: [
    "H"
  ],
  BR: [
    "H",
    "hB"
  ],
  BS: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  BT: [
    "h",
    "H"
  ],
  BW: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  BY: [
    "H",
    "h"
  ],
  BZ: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  CA: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  CC: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  CD: [
    "hB",
    "H"
  ],
  CF: [
    "H",
    "h",
    "hB"
  ],
  CG: [
    "H",
    "hB"
  ],
  CH: [
    "H",
    "hB",
    "h"
  ],
  CI: [
    "H",
    "hB"
  ],
  CK: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  CL: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  CM: [
    "H",
    "h",
    "hB"
  ],
  CN: [
    "H",
    "hB",
    "hb",
    "h"
  ],
  CO: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  CP: [
    "H"
  ],
  CR: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  CU: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  CV: [
    "H",
    "hB"
  ],
  CW: [
    "H",
    "hB"
  ],
  CX: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  CY: [
    "h",
    "H",
    "hb",
    "hB"
  ],
  CZ: [
    "H"
  ],
  DE: [
    "H",
    "hB"
  ],
  DG: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  DJ: [
    "h",
    "H"
  ],
  DK: [
    "H"
  ],
  DM: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  DO: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  DZ: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  EA: [
    "H",
    "h",
    "hB",
    "hb"
  ],
  EC: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  EE: [
    "H",
    "hB"
  ],
  EG: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  EH: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  ER: [
    "h",
    "H"
  ],
  ES: [
    "H",
    "hB",
    "h",
    "hb"
  ],
  ET: [
    "hB",
    "hb",
    "h",
    "H"
  ],
  FI: [
    "H"
  ],
  FJ: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  FK: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  FM: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  FO: [
    "H",
    "h"
  ],
  FR: [
    "H",
    "hB"
  ],
  GA: [
    "H",
    "hB"
  ],
  GB: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  GD: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  GE: [
    "H",
    "hB",
    "h"
  ],
  GF: [
    "H",
    "hB"
  ],
  GG: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  GH: [
    "h",
    "H"
  ],
  GI: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  GL: [
    "H",
    "h"
  ],
  GM: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  GN: [
    "H",
    "hB"
  ],
  GP: [
    "H",
    "hB"
  ],
  GQ: [
    "H",
    "hB",
    "h",
    "hb"
  ],
  GR: [
    "h",
    "H",
    "hb",
    "hB"
  ],
  GT: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  GU: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  GW: [
    "H",
    "hB"
  ],
  GY: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  HK: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  HN: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  HR: [
    "H",
    "hB"
  ],
  HU: [
    "H",
    "h"
  ],
  IC: [
    "H",
    "h",
    "hB",
    "hb"
  ],
  ID: [
    "H"
  ],
  IE: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  IL: [
    "H",
    "hB"
  ],
  IM: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  IN: [
    "h",
    "H"
  ],
  IO: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  IQ: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  IR: [
    "hB",
    "H"
  ],
  IS: [
    "H"
  ],
  IT: [
    "H",
    "hB"
  ],
  JE: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  JM: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  JO: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  JP: [
    "H",
    "K",
    "h"
  ],
  KE: [
    "hB",
    "hb",
    "H",
    "h"
  ],
  KG: [
    "H",
    "h",
    "hB",
    "hb"
  ],
  KH: [
    "hB",
    "h",
    "H",
    "hb"
  ],
  KI: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  KM: [
    "H",
    "h",
    "hB",
    "hb"
  ],
  KN: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  KP: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  KR: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  KW: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  KY: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  KZ: [
    "H",
    "hB"
  ],
  LA: [
    "H",
    "hb",
    "hB",
    "h"
  ],
  LB: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  LC: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  LI: [
    "H",
    "hB",
    "h"
  ],
  LK: [
    "H",
    "h",
    "hB",
    "hb"
  ],
  LR: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  LS: [
    "h",
    "H"
  ],
  LT: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  LU: [
    "H",
    "h",
    "hB"
  ],
  LV: [
    "H",
    "hB",
    "hb",
    "h"
  ],
  LY: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  MA: [
    "H",
    "h",
    "hB",
    "hb"
  ],
  MC: [
    "H",
    "hB"
  ],
  MD: [
    "H",
    "hB"
  ],
  ME: [
    "H",
    "hB",
    "h"
  ],
  MF: [
    "H",
    "hB"
  ],
  MG: [
    "H",
    "h"
  ],
  MH: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  MK: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  ML: [
    "H"
  ],
  MM: [
    "hB",
    "hb",
    "H",
    "h"
  ],
  MN: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  MO: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  MP: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  MQ: [
    "H",
    "hB"
  ],
  MR: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  MS: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  MT: [
    "H",
    "h"
  ],
  MU: [
    "H",
    "h"
  ],
  MV: [
    "H",
    "h"
  ],
  MW: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  MX: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  MY: [
    "hb",
    "hB",
    "h",
    "H"
  ],
  MZ: [
    "H",
    "hB"
  ],
  NA: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  NC: [
    "H",
    "hB"
  ],
  NE: [
    "H"
  ],
  NF: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  NG: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  NI: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  NL: [
    "H",
    "hB"
  ],
  NO: [
    "H",
    "h"
  ],
  NP: [
    "H",
    "h",
    "hB"
  ],
  NR: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  NU: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  NZ: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  OM: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  PA: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  PE: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  PF: [
    "H",
    "h",
    "hB"
  ],
  PG: [
    "h",
    "H"
  ],
  PH: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  PK: [
    "h",
    "hB",
    "H"
  ],
  PL: [
    "H",
    "h"
  ],
  PM: [
    "H",
    "hB"
  ],
  PN: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  PR: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  PS: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  PT: [
    "H",
    "hB"
  ],
  PW: [
    "h",
    "H"
  ],
  PY: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  QA: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  RE: [
    "H",
    "hB"
  ],
  RO: [
    "H",
    "hB"
  ],
  RS: [
    "H",
    "hB",
    "h"
  ],
  RU: [
    "H"
  ],
  RW: [
    "H",
    "h"
  ],
  SA: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  SB: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  SC: [
    "H",
    "h",
    "hB"
  ],
  SD: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  SE: [
    "H"
  ],
  SG: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  SH: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  SI: [
    "H",
    "hB"
  ],
  SJ: [
    "H"
  ],
  SK: [
    "H"
  ],
  SL: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  SM: [
    "H",
    "h",
    "hB"
  ],
  SN: [
    "H",
    "h",
    "hB"
  ],
  SO: [
    "h",
    "H"
  ],
  SR: [
    "H",
    "hB"
  ],
  SS: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  ST: [
    "H",
    "hB"
  ],
  SV: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  SX: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  SY: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  SZ: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  TA: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  TC: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  TD: [
    "h",
    "H",
    "hB"
  ],
  TF: [
    "H",
    "h",
    "hB"
  ],
  TG: [
    "H",
    "hB"
  ],
  TH: [
    "H",
    "h"
  ],
  TJ: [
    "H",
    "h"
  ],
  TL: [
    "H",
    "hB",
    "hb",
    "h"
  ],
  TM: [
    "H",
    "h"
  ],
  TN: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  TO: [
    "h",
    "H"
  ],
  TR: [
    "H",
    "hB"
  ],
  TT: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  TW: [
    "hB",
    "hb",
    "h",
    "H"
  ],
  TZ: [
    "hB",
    "hb",
    "H",
    "h"
  ],
  UA: [
    "H",
    "hB",
    "h"
  ],
  UG: [
    "hB",
    "hb",
    "H",
    "h"
  ],
  UM: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  US: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  UY: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  UZ: [
    "H",
    "hB",
    "h"
  ],
  VA: [
    "H",
    "h",
    "hB"
  ],
  VC: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  VE: [
    "h",
    "H",
    "hB",
    "hb"
  ],
  VG: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  VI: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  VN: [
    "H",
    "h"
  ],
  VU: [
    "h",
    "H"
  ],
  WF: [
    "H",
    "hB"
  ],
  WS: [
    "h",
    "H"
  ],
  XK: [
    "H",
    "hB",
    "h"
  ],
  YE: [
    "h",
    "hB",
    "hb",
    "H"
  ],
  YT: [
    "H",
    "hB"
  ],
  ZA: [
    "H",
    "h",
    "hb",
    "hB"
  ],
  ZM: [
    "h",
    "hb",
    "H",
    "hB"
  ],
  ZW: [
    "H",
    "h"
  ],
  "af-ZA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ar-001": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ca-ES": [
    "H",
    "h",
    "hB"
  ],
  "en-001": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-HK": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-IL": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "en-MY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "es-BR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-ES": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-GQ": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "fr-CA": [
    "H",
    "h",
    "hB"
  ],
  "gl-ES": [
    "H",
    "h",
    "hB"
  ],
  "gu-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "hi-IN": [
    "hB",
    "h",
    "H"
  ],
  "it-CH": [
    "H",
    "h",
    "hB"
  ],
  "it-IT": [
    "H",
    "h",
    "hB"
  ],
  "kn-IN": [
    "hB",
    "h",
    "H"
  ],
  "ml-IN": [
    "hB",
    "h",
    "H"
  ],
  "mr-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "pa-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "ta-IN": [
    "hB",
    "h",
    "hb",
    "H"
  ],
  "te-IN": [
    "hB",
    "h",
    "H"
  ],
  "zu-ZA": [
    "H",
    "hB",
    "hb",
    "h"
  ]
};
function S2(t, e) {
  for (var n = "", r = 0; r < t.length; r++) {
    var s = t.charAt(r);
    if (s === "j") {
      for (var i = 0; r + 1 < t.length && t.charAt(r + 1) === s; )
        i++, r++;
      var o = 1 + (i & 1), a = i < 2 ? 1 : 3 + (i >> 1), c = "a", u = O2(e);
      for ((u == "H" || u == "k") && (a = 0); a-- > 0; )
        n += c;
      for (; o-- > 0; )
        n = u + n;
    } else s === "J" ? n += "H" : n += s;
  }
  return n;
}
function O2(t) {
  var e = t.hourCycle;
  if (e === void 0 && // @ts-ignore hourCycle(s) is not identified yet
  t.hourCycles && // @ts-ignore
  t.hourCycles.length && (e = t.hourCycles[0]), e)
    switch (e) {
      case "h24":
        return "k";
      case "h23":
        return "H";
      case "h12":
        return "h";
      case "h11":
        return "K";
      default:
        throw new Error("Invalid hourCycle");
    }
  var n = t.language, r;
  n !== "root" && (r = t.maximize().region);
  var s = Nu[r || ""] || Nu[n || ""] || Nu["".concat(n, "-001")] || Nu["001"];
  return s[0];
}
var Ph, T2 = new RegExp("^".concat($1.source, "*")), I2 = new RegExp("".concat($1.source, "*$"));
function nt(t, e) {
  return { start: t, end: e };
}
var N2 = !!String.prototype.startsWith && "_a".startsWith("a", 1), P2 = !!String.fromCodePoint, R2 = !!Object.fromEntries, B2 = !!String.prototype.codePointAt, L2 = !!String.prototype.trimStart, M2 = !!String.prototype.trimEnd, D2 = !!Number.isSafeInteger, $2 = D2 ? Number.isSafeInteger : function(t) {
  return typeof t == "number" && isFinite(t) && Math.floor(t) === t && Math.abs(t) <= 9007199254740991;
}, md = !0;
try {
  var U2 = W1("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  md = ((Ph = U2.exec("a")) === null || Ph === void 0 ? void 0 : Ph[0]) === "a";
} catch {
  md = !1;
}
var Nm = N2 ? (
  // Native
  function(e, n, r) {
    return e.startsWith(n, r);
  }
) : (
  // For IE11
  function(e, n, r) {
    return e.slice(r, r + n.length) === n;
  }
), gd = P2 ? String.fromCodePoint : (
  // IE11
  function() {
    for (var e = [], n = 0; n < arguments.length; n++)
      e[n] = arguments[n];
    for (var r = "", s = e.length, i = 0, o; s > i; ) {
      if (o = e[i++], o > 1114111)
        throw RangeError(o + " is not a valid code point");
      r += o < 65536 ? String.fromCharCode(o) : String.fromCharCode(((o -= 65536) >> 10) + 55296, o % 1024 + 56320);
    }
    return r;
  }
), Pm = (
  // native
  R2 ? Object.fromEntries : (
    // Ponyfill
    function(e) {
      for (var n = {}, r = 0, s = e; r < s.length; r++) {
        var i = s[r], o = i[0], a = i[1];
        n[o] = a;
      }
      return n;
    }
  )
), H1 = B2 ? (
  // Native
  function(e, n) {
    return e.codePointAt(n);
  }
) : (
  // IE 11
  function(e, n) {
    var r = e.length;
    if (!(n < 0 || n >= r)) {
      var s = e.charCodeAt(n), i;
      return s < 55296 || s > 56319 || n + 1 === r || (i = e.charCodeAt(n + 1)) < 56320 || i > 57343 ? s : (s - 55296 << 10) + (i - 56320) + 65536;
    }
  }
), j2 = L2 ? (
  // Native
  function(e) {
    return e.trimStart();
  }
) : (
  // Ponyfill
  function(e) {
    return e.replace(T2, "");
  }
), F2 = M2 ? (
  // Native
  function(e) {
    return e.trimEnd();
  }
) : (
  // Ponyfill
  function(e) {
    return e.replace(I2, "");
  }
);
function W1(t, e) {
  return new RegExp(t, e);
}
var bd;
if (md) {
  var Rm = W1("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  bd = function(e, n) {
    var r;
    Rm.lastIndex = n;
    var s = Rm.exec(e);
    return (r = s[1]) !== null && r !== void 0 ? r : "";
  };
} else
  bd = function(e, n) {
    for (var r = []; ; ) {
      var s = H1(e, n);
      if (s === void 0 || G1(s) || z2(s))
        break;
      r.push(s), n += s >= 65536 ? 2 : 1;
    }
    return gd.apply(void 0, r);
  };
var H2 = (
  /** @class */
  function() {
    function t(e, n) {
      n === void 0 && (n = {}), this.message = e, this.position = { offset: 0, line: 1, column: 1 }, this.ignoreTag = !!n.ignoreTag, this.locale = n.locale, this.requiresOtherClause = !!n.requiresOtherClause, this.shouldParseSkeletons = !!n.shouldParseSkeletons;
    }
    return t.prototype.parse = function() {
      if (this.offset() !== 0)
        throw Error("parser can only be used once");
      return this.parseMessage(0, "", !1);
    }, t.prototype.parseMessage = function(e, n, r) {
      for (var s = []; !this.isEOF(); ) {
        var i = this.char();
        if (i === 123) {
          var o = this.parseArgument(e, r);
          if (o.err)
            return o;
          s.push(o.val);
        } else {
          if (i === 125 && e > 0)
            break;
          if (i === 35 && (n === "plural" || n === "selectordinal")) {
            var a = this.clonePosition();
            this.bump(), s.push({
              type: Ot.pound,
              location: nt(a, this.clonePosition())
            });
          } else if (i === 60 && !this.ignoreTag && this.peek() === 47) {
            if (r)
              break;
            return this.error(et.UNMATCHED_CLOSING_TAG, nt(this.clonePosition(), this.clonePosition()));
          } else if (i === 60 && !this.ignoreTag && yd(this.peek() || 0)) {
            var o = this.parseTag(e, n);
            if (o.err)
              return o;
            s.push(o.val);
          } else {
            var o = this.parseLiteral(e, n);
            if (o.err)
              return o;
            s.push(o.val);
          }
        }
      }
      return { val: s, err: null };
    }, t.prototype.parseTag = function(e, n) {
      var r = this.clonePosition();
      this.bump();
      var s = this.parseTagName();
      if (this.bumpSpace(), this.bumpIf("/>"))
        return {
          val: {
            type: Ot.literal,
            value: "<".concat(s, "/>"),
            location: nt(r, this.clonePosition())
          },
          err: null
        };
      if (this.bumpIf(">")) {
        var i = this.parseMessage(e + 1, n, !0);
        if (i.err)
          return i;
        var o = i.val, a = this.clonePosition();
        if (this.bumpIf("</")) {
          if (this.isEOF() || !yd(this.char()))
            return this.error(et.INVALID_TAG, nt(a, this.clonePosition()));
          var c = this.clonePosition(), u = this.parseTagName();
          return s !== u ? this.error(et.UNMATCHED_CLOSING_TAG, nt(c, this.clonePosition())) : (this.bumpSpace(), this.bumpIf(">") ? {
            val: {
              type: Ot.tag,
              value: s,
              children: o,
              location: nt(r, this.clonePosition())
            },
            err: null
          } : this.error(et.INVALID_TAG, nt(a, this.clonePosition())));
        } else
          return this.error(et.UNCLOSED_TAG, nt(r, this.clonePosition()));
      } else
        return this.error(et.INVALID_TAG, nt(r, this.clonePosition()));
    }, t.prototype.parseTagName = function() {
      var e = this.offset();
      for (this.bump(); !this.isEOF() && G2(this.char()); )
        this.bump();
      return this.message.slice(e, this.offset());
    }, t.prototype.parseLiteral = function(e, n) {
      for (var r = this.clonePosition(), s = ""; ; ) {
        var i = this.tryParseQuote(n);
        if (i) {
          s += i;
          continue;
        }
        var o = this.tryParseUnquoted(e, n);
        if (o) {
          s += o;
          continue;
        }
        var a = this.tryParseLeftAngleBracket();
        if (a) {
          s += a;
          continue;
        }
        break;
      }
      var c = nt(r, this.clonePosition());
      return {
        val: { type: Ot.literal, value: s, location: c },
        err: null
      };
    }, t.prototype.tryParseLeftAngleBracket = function() {
      return !this.isEOF() && this.char() === 60 && (this.ignoreTag || // If at the opening tag or closing tag position, bail.
      !W2(this.peek() || 0)) ? (this.bump(), "<") : null;
    }, t.prototype.tryParseQuote = function(e) {
      if (this.isEOF() || this.char() !== 39)
        return null;
      switch (this.peek()) {
        case 39:
          return this.bump(), this.bump(), "'";
        // '{', '<', '>', '}'
        case 123:
        case 60:
        case 62:
        case 125:
          break;
        case 35:
          if (e === "plural" || e === "selectordinal")
            break;
          return null;
        default:
          return null;
      }
      this.bump();
      var n = [this.char()];
      for (this.bump(); !this.isEOF(); ) {
        var r = this.char();
        if (r === 39)
          if (this.peek() === 39)
            n.push(39), this.bump();
          else {
            this.bump();
            break;
          }
        else
          n.push(r);
        this.bump();
      }
      return gd.apply(void 0, n);
    }, t.prototype.tryParseUnquoted = function(e, n) {
      if (this.isEOF())
        return null;
      var r = this.char();
      return r === 60 || r === 123 || r === 35 && (n === "plural" || n === "selectordinal") || r === 125 && e > 0 ? null : (this.bump(), gd(r));
    }, t.prototype.parseArgument = function(e, n) {
      var r = this.clonePosition();
      if (this.bump(), this.bumpSpace(), this.isEOF())
        return this.error(et.EXPECT_ARGUMENT_CLOSING_BRACE, nt(r, this.clonePosition()));
      if (this.char() === 125)
        return this.bump(), this.error(et.EMPTY_ARGUMENT, nt(r, this.clonePosition()));
      var s = this.parseIdentifierIfPossible().value;
      if (!s)
        return this.error(et.MALFORMED_ARGUMENT, nt(r, this.clonePosition()));
      if (this.bumpSpace(), this.isEOF())
        return this.error(et.EXPECT_ARGUMENT_CLOSING_BRACE, nt(r, this.clonePosition()));
      switch (this.char()) {
        // Simple argument: `{name}`
        case 125:
          return this.bump(), {
            val: {
              type: Ot.argument,
              // value does not include the opening and closing braces.
              value: s,
              location: nt(r, this.clonePosition())
            },
            err: null
          };
        // Argument with options: `{name, format, ...}`
        case 44:
          return this.bump(), this.bumpSpace(), this.isEOF() ? this.error(et.EXPECT_ARGUMENT_CLOSING_BRACE, nt(r, this.clonePosition())) : this.parseArgumentOptions(e, n, s, r);
        default:
          return this.error(et.MALFORMED_ARGUMENT, nt(r, this.clonePosition()));
      }
    }, t.prototype.parseIdentifierIfPossible = function() {
      var e = this.clonePosition(), n = this.offset(), r = bd(this.message, n), s = n + r.length;
      this.bumpTo(s);
      var i = this.clonePosition(), o = nt(e, i);
      return { value: r, location: o };
    }, t.prototype.parseArgumentOptions = function(e, n, r, s) {
      var i, o = this.clonePosition(), a = this.parseIdentifierIfPossible().value, c = this.clonePosition();
      switch (a) {
        case "":
          return this.error(et.EXPECT_ARGUMENT_TYPE, nt(o, c));
        case "number":
        case "date":
        case "time": {
          this.bumpSpace();
          var u = null;
          if (this.bumpIf(",")) {
            this.bumpSpace();
            var f = this.clonePosition(), l = this.parseSimpleArgStyleIfPossible();
            if (l.err)
              return l;
            var m = F2(l.val);
            if (m.length === 0)
              return this.error(et.EXPECT_ARGUMENT_STYLE, nt(this.clonePosition(), this.clonePosition()));
            var p = nt(f, this.clonePosition());
            u = { style: m, styleLocation: p };
          }
          var d = this.tryParseArgumentClose(s);
          if (d.err)
            return d;
          var h = nt(s, this.clonePosition());
          if (u && Nm(u == null ? void 0 : u.style, "::", 0)) {
            var b = j2(u.style.slice(2));
            if (a === "number") {
              var l = this.parseNumberSkeletonFromString(b, u.styleLocation);
              return l.err ? l : {
                val: { type: Ot.number, value: r, location: h, style: l.val },
                err: null
              };
            } else {
              if (b.length === 0)
                return this.error(et.EXPECT_DATE_TIME_SKELETON, h);
              var g = b;
              this.locale && (g = S2(b, this.locale));
              var m = {
                type: kl.dateTime,
                pattern: g,
                location: u.styleLocation,
                parsedOptions: this.shouldParseSkeletons ? v2(g) : {}
              }, y = a === "date" ? Ot.date : Ot.time;
              return {
                val: { type: y, value: r, location: h, style: m },
                err: null
              };
            }
          }
          return {
            val: {
              type: a === "number" ? Ot.number : a === "date" ? Ot.date : Ot.time,
              value: r,
              location: h,
              style: (i = u == null ? void 0 : u.style) !== null && i !== void 0 ? i : null
            },
            err: null
          };
        }
        case "plural":
        case "selectordinal":
        case "select": {
          var w = this.clonePosition();
          if (this.bumpSpace(), !this.bumpIf(","))
            return this.error(et.EXPECT_SELECT_ARGUMENT_OPTIONS, nt(w, at({}, w)));
          this.bumpSpace();
          var _ = this.parseIdentifierIfPossible(), E = 0;
          if (a !== "select" && _.value === "offset") {
            if (!this.bumpIf(":"))
              return this.error(et.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, nt(this.clonePosition(), this.clonePosition()));
            this.bumpSpace();
            var l = this.tryParseDecimalInteger(et.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, et.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
            if (l.err)
              return l;
            this.bumpSpace(), _ = this.parseIdentifierIfPossible(), E = l.val;
          }
          var k = this.tryParsePluralOrSelectOptions(e, a, n, _);
          if (k.err)
            return k;
          var d = this.tryParseArgumentClose(s);
          if (d.err)
            return d;
          var S = nt(s, this.clonePosition());
          return a === "select" ? {
            val: {
              type: Ot.select,
              value: r,
              options: Pm(k.val),
              location: S
            },
            err: null
          } : {
            val: {
              type: Ot.plural,
              value: r,
              options: Pm(k.val),
              offset: E,
              pluralType: a === "plural" ? "cardinal" : "ordinal",
              location: S
            },
            err: null
          };
        }
        default:
          return this.error(et.INVALID_ARGUMENT_TYPE, nt(o, c));
      }
    }, t.prototype.tryParseArgumentClose = function(e) {
      return this.isEOF() || this.char() !== 125 ? this.error(et.EXPECT_ARGUMENT_CLOSING_BRACE, nt(e, this.clonePosition())) : (this.bump(), { val: !0, err: null });
    }, t.prototype.parseSimpleArgStyleIfPossible = function() {
      for (var e = 0, n = this.clonePosition(); !this.isEOF(); ) {
        var r = this.char();
        switch (r) {
          case 39: {
            this.bump();
            var s = this.clonePosition();
            if (!this.bumpUntil("'"))
              return this.error(et.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, nt(s, this.clonePosition()));
            this.bump();
            break;
          }
          case 123: {
            e += 1, this.bump();
            break;
          }
          case 125: {
            if (e > 0)
              e -= 1;
            else
              return {
                val: this.message.slice(n.offset, this.offset()),
                err: null
              };
            break;
          }
          default:
            this.bump();
            break;
        }
      }
      return {
        val: this.message.slice(n.offset, this.offset()),
        err: null
      };
    }, t.prototype.parseNumberSkeletonFromString = function(e, n) {
      var r = [];
      try {
        r = A2(e);
      } catch {
        return this.error(et.INVALID_NUMBER_SKELETON, n);
      }
      return {
        val: {
          type: kl.number,
          tokens: r,
          location: n,
          parsedOptions: this.shouldParseSkeletons ? k2(r) : {}
        },
        err: null
      };
    }, t.prototype.tryParsePluralOrSelectOptions = function(e, n, r, s) {
      for (var i, o = !1, a = [], c = /* @__PURE__ */ new Set(), u = s.value, f = s.location; ; ) {
        if (u.length === 0) {
          var l = this.clonePosition();
          if (n !== "select" && this.bumpIf("=")) {
            var m = this.tryParseDecimalInteger(et.EXPECT_PLURAL_ARGUMENT_SELECTOR, et.INVALID_PLURAL_ARGUMENT_SELECTOR);
            if (m.err)
              return m;
            f = nt(l, this.clonePosition()), u = this.message.slice(l.offset, this.offset());
          } else
            break;
        }
        if (c.has(u))
          return this.error(n === "select" ? et.DUPLICATE_SELECT_ARGUMENT_SELECTOR : et.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, f);
        u === "other" && (o = !0), this.bumpSpace();
        var p = this.clonePosition();
        if (!this.bumpIf("{"))
          return this.error(n === "select" ? et.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : et.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, nt(this.clonePosition(), this.clonePosition()));
        var d = this.parseMessage(e + 1, n, r);
        if (d.err)
          return d;
        var h = this.tryParseArgumentClose(p);
        if (h.err)
          return h;
        a.push([
          u,
          {
            value: d.val,
            location: nt(p, this.clonePosition())
          }
        ]), c.add(u), this.bumpSpace(), i = this.parseIdentifierIfPossible(), u = i.value, f = i.location;
      }
      return a.length === 0 ? this.error(n === "select" ? et.EXPECT_SELECT_ARGUMENT_SELECTOR : et.EXPECT_PLURAL_ARGUMENT_SELECTOR, nt(this.clonePosition(), this.clonePosition())) : this.requiresOtherClause && !o ? this.error(et.MISSING_OTHER_CLAUSE, nt(this.clonePosition(), this.clonePosition())) : { val: a, err: null };
    }, t.prototype.tryParseDecimalInteger = function(e, n) {
      var r = 1, s = this.clonePosition();
      this.bumpIf("+") || this.bumpIf("-") && (r = -1);
      for (var i = !1, o = 0; !this.isEOF(); ) {
        var a = this.char();
        if (a >= 48 && a <= 57)
          i = !0, o = o * 10 + (a - 48), this.bump();
        else
          break;
      }
      var c = nt(s, this.clonePosition());
      return i ? (o *= r, $2(o) ? { val: o, err: null } : this.error(n, c)) : this.error(e, c);
    }, t.prototype.offset = function() {
      return this.position.offset;
    }, t.prototype.isEOF = function() {
      return this.offset() === this.message.length;
    }, t.prototype.clonePosition = function() {
      return {
        offset: this.position.offset,
        line: this.position.line,
        column: this.position.column
      };
    }, t.prototype.char = function() {
      var e = this.position.offset;
      if (e >= this.message.length)
        throw Error("out of bound");
      var n = H1(this.message, e);
      if (n === void 0)
        throw Error("Offset ".concat(e, " is at invalid UTF-16 code unit boundary"));
      return n;
    }, t.prototype.error = function(e, n) {
      return {
        val: null,
        err: {
          kind: e,
          message: this.message,
          location: n
        }
      };
    }, t.prototype.bump = function() {
      if (!this.isEOF()) {
        var e = this.char();
        e === 10 ? (this.position.line += 1, this.position.column = 1, this.position.offset += 1) : (this.position.column += 1, this.position.offset += e < 65536 ? 1 : 2);
      }
    }, t.prototype.bumpIf = function(e) {
      if (Nm(this.message, e, this.offset())) {
        for (var n = 0; n < e.length; n++)
          this.bump();
        return !0;
      }
      return !1;
    }, t.prototype.bumpUntil = function(e) {
      var n = this.offset(), r = this.message.indexOf(e, n);
      return r >= 0 ? (this.bumpTo(r), !0) : (this.bumpTo(this.message.length), !1);
    }, t.prototype.bumpTo = function(e) {
      if (this.offset() > e)
        throw Error("targetOffset ".concat(e, " must be greater than or equal to the current offset ").concat(this.offset()));
      for (e = Math.min(e, this.message.length); ; ) {
        var n = this.offset();
        if (n === e)
          break;
        if (n > e)
          throw Error("targetOffset ".concat(e, " is at invalid UTF-16 code unit boundary"));
        if (this.bump(), this.isEOF())
          break;
      }
    }, t.prototype.bumpSpace = function() {
      for (; !this.isEOF() && G1(this.char()); )
        this.bump();
    }, t.prototype.peek = function() {
      if (this.isEOF())
        return null;
      var e = this.char(), n = this.offset(), r = this.message.charCodeAt(n + (e >= 65536 ? 2 : 1));
      return r ?? null;
    }, t;
  }()
);
function yd(t) {
  return t >= 97 && t <= 122 || t >= 65 && t <= 90;
}
function W2(t) {
  return yd(t) || t === 47;
}
function G2(t) {
  return t === 45 || t === 46 || t >= 48 && t <= 57 || t === 95 || t >= 97 && t <= 122 || t >= 65 && t <= 90 || t == 183 || t >= 192 && t <= 214 || t >= 216 && t <= 246 || t >= 248 && t <= 893 || t >= 895 && t <= 8191 || t >= 8204 && t <= 8205 || t >= 8255 && t <= 8256 || t >= 8304 && t <= 8591 || t >= 11264 && t <= 12271 || t >= 12289 && t <= 55295 || t >= 63744 && t <= 64975 || t >= 65008 && t <= 65533 || t >= 65536 && t <= 983039;
}
function G1(t) {
  return t >= 9 && t <= 13 || t === 32 || t === 133 || t >= 8206 && t <= 8207 || t === 8232 || t === 8233;
}
function z2(t) {
  return t >= 33 && t <= 35 || t === 36 || t >= 37 && t <= 39 || t === 40 || t === 41 || t === 42 || t === 43 || t === 44 || t === 45 || t >= 46 && t <= 47 || t >= 58 && t <= 59 || t >= 60 && t <= 62 || t >= 63 && t <= 64 || t === 91 || t === 92 || t === 93 || t === 94 || t === 96 || t === 123 || t === 124 || t === 125 || t === 126 || t === 161 || t >= 162 && t <= 165 || t === 166 || t === 167 || t === 169 || t === 171 || t === 172 || t === 174 || t === 176 || t === 177 || t === 182 || t === 187 || t === 191 || t === 215 || t === 247 || t >= 8208 && t <= 8213 || t >= 8214 && t <= 8215 || t === 8216 || t === 8217 || t === 8218 || t >= 8219 && t <= 8220 || t === 8221 || t === 8222 || t === 8223 || t >= 8224 && t <= 8231 || t >= 8240 && t <= 8248 || t === 8249 || t === 8250 || t >= 8251 && t <= 8254 || t >= 8257 && t <= 8259 || t === 8260 || t === 8261 || t === 8262 || t >= 8263 && t <= 8273 || t === 8274 || t === 8275 || t >= 8277 && t <= 8286 || t >= 8592 && t <= 8596 || t >= 8597 && t <= 8601 || t >= 8602 && t <= 8603 || t >= 8604 && t <= 8607 || t === 8608 || t >= 8609 && t <= 8610 || t === 8611 || t >= 8612 && t <= 8613 || t === 8614 || t >= 8615 && t <= 8621 || t === 8622 || t >= 8623 && t <= 8653 || t >= 8654 && t <= 8655 || t >= 8656 && t <= 8657 || t === 8658 || t === 8659 || t === 8660 || t >= 8661 && t <= 8691 || t >= 8692 && t <= 8959 || t >= 8960 && t <= 8967 || t === 8968 || t === 8969 || t === 8970 || t === 8971 || t >= 8972 && t <= 8991 || t >= 8992 && t <= 8993 || t >= 8994 && t <= 9e3 || t === 9001 || t === 9002 || t >= 9003 && t <= 9083 || t === 9084 || t >= 9085 && t <= 9114 || t >= 9115 && t <= 9139 || t >= 9140 && t <= 9179 || t >= 9180 && t <= 9185 || t >= 9186 && t <= 9254 || t >= 9255 && t <= 9279 || t >= 9280 && t <= 9290 || t >= 9291 && t <= 9311 || t >= 9472 && t <= 9654 || t === 9655 || t >= 9656 && t <= 9664 || t === 9665 || t >= 9666 && t <= 9719 || t >= 9720 && t <= 9727 || t >= 9728 && t <= 9838 || t === 9839 || t >= 9840 && t <= 10087 || t === 10088 || t === 10089 || t === 10090 || t === 10091 || t === 10092 || t === 10093 || t === 10094 || t === 10095 || t === 10096 || t === 10097 || t === 10098 || t === 10099 || t === 10100 || t === 10101 || t >= 10132 && t <= 10175 || t >= 10176 && t <= 10180 || t === 10181 || t === 10182 || t >= 10183 && t <= 10213 || t === 10214 || t === 10215 || t === 10216 || t === 10217 || t === 10218 || t === 10219 || t === 10220 || t === 10221 || t === 10222 || t === 10223 || t >= 10224 && t <= 10239 || t >= 10240 && t <= 10495 || t >= 10496 && t <= 10626 || t === 10627 || t === 10628 || t === 10629 || t === 10630 || t === 10631 || t === 10632 || t === 10633 || t === 10634 || t === 10635 || t === 10636 || t === 10637 || t === 10638 || t === 10639 || t === 10640 || t === 10641 || t === 10642 || t === 10643 || t === 10644 || t === 10645 || t === 10646 || t === 10647 || t === 10648 || t >= 10649 && t <= 10711 || t === 10712 || t === 10713 || t === 10714 || t === 10715 || t >= 10716 && t <= 10747 || t === 10748 || t === 10749 || t >= 10750 && t <= 11007 || t >= 11008 && t <= 11055 || t >= 11056 && t <= 11076 || t >= 11077 && t <= 11078 || t >= 11079 && t <= 11084 || t >= 11085 && t <= 11123 || t >= 11124 && t <= 11125 || t >= 11126 && t <= 11157 || t === 11158 || t >= 11159 && t <= 11263 || t >= 11776 && t <= 11777 || t === 11778 || t === 11779 || t === 11780 || t === 11781 || t >= 11782 && t <= 11784 || t === 11785 || t === 11786 || t === 11787 || t === 11788 || t === 11789 || t >= 11790 && t <= 11798 || t === 11799 || t >= 11800 && t <= 11801 || t === 11802 || t === 11803 || t === 11804 || t === 11805 || t >= 11806 && t <= 11807 || t === 11808 || t === 11809 || t === 11810 || t === 11811 || t === 11812 || t === 11813 || t === 11814 || t === 11815 || t === 11816 || t === 11817 || t >= 11818 && t <= 11822 || t === 11823 || t >= 11824 && t <= 11833 || t >= 11834 && t <= 11835 || t >= 11836 && t <= 11839 || t === 11840 || t === 11841 || t === 11842 || t >= 11843 && t <= 11855 || t >= 11856 && t <= 11857 || t === 11858 || t >= 11859 && t <= 11903 || t >= 12289 && t <= 12291 || t === 12296 || t === 12297 || t === 12298 || t === 12299 || t === 12300 || t === 12301 || t === 12302 || t === 12303 || t === 12304 || t === 12305 || t >= 12306 && t <= 12307 || t === 12308 || t === 12309 || t === 12310 || t === 12311 || t === 12312 || t === 12313 || t === 12314 || t === 12315 || t === 12316 || t === 12317 || t >= 12318 && t <= 12319 || t === 12320 || t === 12336 || t === 64830 || t === 64831 || t >= 65093 && t <= 65094;
}
function wd(t) {
  t.forEach(function(e) {
    if (delete e.location, B1(e) || L1(e))
      for (var n in e.options)
        delete e.options[n].location, wd(e.options[n].value);
    else N1(e) && D1(e.style) || (P1(e) || R1(e)) && pd(e.style) ? delete e.style.location : M1(e) && wd(e.children);
  });
}
function V2(t, e) {
  e === void 0 && (e = {}), e = at({ shouldParseSkeletons: !0, requiresOtherClause: !0 }, e);
  var n = new H2(t, e).parse();
  if (n.err) {
    var r = SyntaxError(et[n.err.kind]);
    throw r.location = n.err.location, r.originalMessage = n.err.message, r;
  }
  return e != null && e.captureLocation || wd(n.val), n.val;
}
var Sl;
(function(t) {
  t.MISSING_VALUE = "MISSING_VALUE", t.INVALID_VALUE = "INVALID_VALUE", t.MISSING_INTL_API = "MISSING_INTL_API";
})(Sl || (Sl = {}));
var Jf = (
  /** @class */
  function(t) {
    Mr(e, t);
    function e(n, r, s) {
      var i = t.call(this, n) || this;
      return i.code = r, i.originalMessage = s, i;
    }
    return e.prototype.toString = function() {
      return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    }, e;
  }(Error)
), Bm = (
  /** @class */
  function(t) {
    Mr(e, t);
    function e(n, r, s, i) {
      return t.call(this, 'Invalid values for "'.concat(n, '": "').concat(r, '". Options are "').concat(Object.keys(s).join('", "'), '"'), Sl.INVALID_VALUE, i) || this;
    }
    return e;
  }(Jf)
), q2 = (
  /** @class */
  function(t) {
    Mr(e, t);
    function e(n, r, s) {
      return t.call(this, 'Value for "'.concat(n, '" must be of type ').concat(r), Sl.INVALID_VALUE, s) || this;
    }
    return e;
  }(Jf)
), Q2 = (
  /** @class */
  function(t) {
    Mr(e, t);
    function e(n, r) {
      return t.call(this, 'The intl string context variable "'.concat(n, '" was not provided to the string "').concat(r, '"'), Sl.MISSING_VALUE, r) || this;
    }
    return e;
  }(Jf)
), kn;
(function(t) {
  t[t.literal = 0] = "literal", t[t.object = 1] = "object";
})(kn || (kn = {}));
function Z2(t) {
  return t.length < 2 ? t : t.reduce(function(e, n) {
    var r = e[e.length - 1];
    return !r || r.type !== kn.literal || n.type !== kn.literal ? e.push(n) : r.value += n.value, e;
  }, []);
}
function J2(t) {
  return typeof t == "function";
}
function zu(t, e, n, r, s, i, o) {
  if (t.length === 1 && Sm(t[0]))
    return [
      {
        type: kn.literal,
        value: t[0].value
      }
    ];
  for (var a = [], c = 0, u = t; c < u.length; c++) {
    var f = u[c];
    if (Sm(f)) {
      a.push({
        type: kn.literal,
        value: f.value
      });
      continue;
    }
    if (y2(f)) {
      typeof i == "number" && a.push({
        type: kn.literal,
        value: n.getNumberFormat(e).format(i)
      });
      continue;
    }
    var l = f.value;
    if (!(s && l in s))
      throw new Q2(l, o);
    var m = s[l];
    if (b2(f)) {
      (!m || typeof m == "string" || typeof m == "number") && (m = typeof m == "string" || typeof m == "number" ? String(m) : ""), a.push({
        type: typeof m == "string" ? kn.literal : kn.object,
        value: m
      });
      continue;
    }
    if (P1(f)) {
      var p = typeof f.style == "string" ? r.date[f.style] : pd(f.style) ? f.style.parsedOptions : void 0;
      a.push({
        type: kn.literal,
        value: n.getDateTimeFormat(e, p).format(m)
      });
      continue;
    }
    if (R1(f)) {
      var p = typeof f.style == "string" ? r.time[f.style] : pd(f.style) ? f.style.parsedOptions : r.time.medium;
      a.push({
        type: kn.literal,
        value: n.getDateTimeFormat(e, p).format(m)
      });
      continue;
    }
    if (N1(f)) {
      var p = typeof f.style == "string" ? r.number[f.style] : D1(f.style) ? f.style.parsedOptions : void 0;
      p && p.scale && (m = m * (p.scale || 1)), a.push({
        type: kn.literal,
        value: n.getNumberFormat(e, p).format(m)
      });
      continue;
    }
    if (M1(f)) {
      var d = f.children, h = f.value, b = s[h];
      if (!J2(b))
        throw new q2(h, "function", o);
      var g = zu(d, e, n, r, s, i), y = b(g.map(function(E) {
        return E.value;
      }));
      Array.isArray(y) || (y = [y]), a.push.apply(a, y.map(function(E) {
        return {
          type: typeof E == "string" ? kn.literal : kn.object,
          value: E
        };
      }));
    }
    if (B1(f)) {
      var w = f.options[m] || f.options.other;
      if (!w)
        throw new Bm(f.value, m, Object.keys(f.options), o);
      a.push.apply(a, zu(w.value, e, n, r, s));
      continue;
    }
    if (L1(f)) {
      var w = f.options["=".concat(m)];
      if (!w) {
        if (!Intl.PluralRules)
          throw new Jf(`Intl.PluralRules is not available in this environment.
Try polyfilling it using "@formatjs/intl-pluralrules"
`, Sl.MISSING_INTL_API, o);
        var _ = n.getPluralRules(e, { type: f.pluralType }).select(m - (f.offset || 0));
        w = f.options[_] || f.options.other;
      }
      if (!w)
        throw new Bm(f.value, m, Object.keys(f.options), o);
      a.push.apply(a, zu(w.value, e, n, r, s, m - (f.offset || 0)));
      continue;
    }
  }
  return Z2(a);
}
function K2(t, e) {
  return e ? at(at(at({}, t || {}), e || {}), Object.keys(t).reduce(function(n, r) {
    return n[r] = at(at({}, t[r]), e[r] || {}), n;
  }, {})) : t;
}
function Y2(t, e) {
  return e ? Object.keys(t).reduce(function(n, r) {
    return n[r] = K2(t[r], e[r]), n;
  }, at({}, t)) : t;
}
function Rh(t) {
  return {
    create: function() {
      return {
        get: function(e) {
          return t[e];
        },
        set: function(e, n) {
          t[e] = n;
        }
      };
    }
  };
}
function X2(t) {
  return t === void 0 && (t = {
    number: {},
    dateTime: {},
    pluralRules: {}
  }), {
    getNumberFormat: Ih(function() {
      for (var e, n = [], r = 0; r < arguments.length; r++)
        n[r] = arguments[r];
      return new ((e = Intl.NumberFormat).bind.apply(e, ss([void 0], n, !1)))();
    }, {
      cache: Rh(t.number),
      strategy: Nh.variadic
    }),
    getDateTimeFormat: Ih(function() {
      for (var e, n = [], r = 0; r < arguments.length; r++)
        n[r] = arguments[r];
      return new ((e = Intl.DateTimeFormat).bind.apply(e, ss([void 0], n, !1)))();
    }, {
      cache: Rh(t.dateTime),
      strategy: Nh.variadic
    }),
    getPluralRules: Ih(function() {
      for (var e, n = [], r = 0; r < arguments.length; r++)
        n[r] = arguments[r];
      return new ((e = Intl.PluralRules).bind.apply(e, ss([void 0], n, !1)))();
    }, {
      cache: Rh(t.pluralRules),
      strategy: Nh.variadic
    })
  };
}
var z1 = (
  /** @class */
  function() {
    function t(e, n, r, s) {
      n === void 0 && (n = t.defaultLocale);
      var i = this;
      if (this.formatterCache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      }, this.format = function(c) {
        var u = i.formatToParts(c);
        if (u.length === 1)
          return u[0].value;
        var f = u.reduce(function(l, m) {
          return !l.length || m.type !== kn.literal || typeof l[l.length - 1] != "string" ? l.push(m.value) : l[l.length - 1] += m.value, l;
        }, []);
        return f.length <= 1 ? f[0] || "" : f;
      }, this.formatToParts = function(c) {
        return zu(i.ast, i.locales, i.formatters, i.formats, c, void 0, i.message);
      }, this.resolvedOptions = function() {
        var c;
        return {
          locale: ((c = i.resolvedLocale) === null || c === void 0 ? void 0 : c.toString()) || Intl.NumberFormat.supportedLocalesOf(i.locales)[0]
        };
      }, this.getAst = function() {
        return i.ast;
      }, this.locales = n, this.resolvedLocale = t.resolveLocale(n), typeof e == "string") {
        if (this.message = e, !t.__parse)
          throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
        var o = s || {};
        o.formatters;
        var a = tv(o, ["formatters"]);
        this.ast = t.__parse(e, at(at({}, a), { locale: this.resolvedLocale }));
      } else
        this.ast = e;
      if (!Array.isArray(this.ast))
        throw new TypeError("A message must be provided as a String or AST.");
      this.formats = Y2(t.formats, r), this.formatters = s && s.formatters || X2(this.formatterCache);
    }
    return Object.defineProperty(t, "defaultLocale", {
      get: function() {
        return t.memoizedDefaultLocale || (t.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale), t.memoizedDefaultLocale;
      },
      enumerable: !1,
      configurable: !0
    }), t.memoizedDefaultLocale = null, t.resolveLocale = function(e) {
      if (!(typeof Intl.Locale > "u")) {
        var n = Intl.NumberFormat.supportedLocalesOf(e);
        return n.length > 0 ? new Intl.Locale(n[0]) : new Intl.Locale(typeof e == "string" ? e : e[0]);
      }
    }, t.__parse = V2, t.formats = {
      number: {
        integer: {
          maximumFractionDigits: 0
        },
        currency: {
          style: "currency"
        },
        percent: {
          style: "percent"
        }
      },
      date: {
        short: {
          month: "numeric",
          day: "numeric",
          year: "2-digit"
        },
        medium: {
          month: "short",
          day: "numeric",
          year: "numeric"
        },
        long: {
          month: "long",
          day: "numeric",
          year: "numeric"
        },
        full: {
          weekday: "long",
          month: "long",
          day: "numeric",
          year: "numeric"
        }
      },
      time: {
        short: {
          hour: "numeric",
          minute: "numeric"
        },
        medium: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric"
        },
        long: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        },
        full: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        }
      }
    }, t;
  }()
);
function e3(t, e) {
  if (e == null)
    return;
  if (e in t)
    return t[e];
  const n = e.split(".");
  let r = t;
  for (let s = 0; s < n.length; s++)
    if (typeof r == "object") {
      if (s > 0) {
        const i = n.slice(s, n.length).join(".");
        if (i in r) {
          r = r[i];
          break;
        }
      }
      r = r[n[s]];
    } else
      r = void 0;
  return r;
}
const Li = {}, t3 = (t, e, n) => n && (e in Li || (Li[e] = {}), t in Li[e] || (Li[e][t] = n), n), V1 = (t, e) => {
  if (e == null)
    return;
  if (e in Li && t in Li[e])
    return Li[e][t];
  const n = Au(e);
  for (let r = 0; r < n.length; r++) {
    const s = n[r], i = r3(s, t);
    if (i)
      return t3(t, e, i);
  }
};
let vp;
const _u = Zf({});
function n3(t) {
  return vp[t] || null;
}
function q1(t) {
  return t in vp;
}
function r3(t, e) {
  if (!q1(t))
    return null;
  const n = n3(t);
  return e3(n, e);
}
function s3(t) {
  if (t == null)
    return;
  const e = Au(t);
  for (let n = 0; n < e.length; n++) {
    const r = e[n];
    if (q1(r))
      return r;
  }
}
function Vu(t, ...e) {
  delete Li[t], _u.update((n) => (n[t] = c2.all([n[t] || {}, ...e]), n));
}
jl(
  [_u],
  ([t]) => Object.keys(t)
);
_u.subscribe((t) => vp = t);
const qu = {};
function i3(t, e) {
  qu[t].delete(e), qu[t].size === 0 && delete qu[t];
}
function Q1(t) {
  return qu[t];
}
function o3(t) {
  return Au(t).map((e) => {
    const n = Q1(e);
    return [e, n ? [...n] : []];
  }).filter(([, e]) => e.length > 0);
}
function uf(t) {
  return t == null ? !1 : Au(t).some(
    (e) => {
      var n;
      return (n = Q1(e)) == null ? void 0 : n.size;
    }
  );
}
function a3(t, e) {
  return Promise.all(
    e.map((r) => (i3(t, r), r().then((s) => s.default || s)))
  ).then((r) => Vu(t, ...r));
}
const vc = {};
function Z1(t) {
  if (!uf(t))
    return t in vc ? vc[t] : Promise.resolve();
  const e = o3(t);
  return vc[t] = Promise.all(
    e.map(
      ([n, r]) => a3(n, r)
    )
  ).then(() => {
    if (uf(t))
      return Z1(t);
    delete vc[t];
  }), vc[t];
}
var Lm = Object.getOwnPropertySymbols, l3 = Object.prototype.hasOwnProperty, c3 = Object.prototype.propertyIsEnumerable, u3 = (t, e) => {
  var n = {};
  for (var r in t)
    l3.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
  if (t != null && Lm)
    for (var r of Lm(t))
      e.indexOf(r) < 0 && c3.call(t, r) && (n[r] = t[r]);
  return n;
};
const f3 = {
  number: {
    scientific: { notation: "scientific" },
    engineering: { notation: "engineering" },
    compactLong: { notation: "compact", compactDisplay: "long" },
    compactShort: { notation: "compact", compactDisplay: "short" }
  },
  date: {
    short: { month: "numeric", day: "numeric", year: "2-digit" },
    medium: { month: "short", day: "numeric", year: "numeric" },
    long: { month: "long", day: "numeric", year: "numeric" },
    full: { weekday: "long", month: "long", day: "numeric", year: "numeric" }
  },
  time: {
    short: { hour: "numeric", minute: "numeric" },
    medium: { hour: "numeric", minute: "numeric", second: "numeric" },
    long: {
      hour: "numeric",
      minute: "numeric",
      second: "numeric",
      timeZoneName: "short"
    },
    full: {
      hour: "numeric",
      minute: "numeric",
      second: "numeric",
      timeZoneName: "short"
    }
  }
};
function h3({ locale: t, id: e }) {
  console.warn(
    `[svelte-i18n] The message "${e}" was not found in "${Au(
      t
    ).join('", "')}".${uf(Gi()) ? `

Note: there are at least one loader still registered to this locale that wasn't executed.` : ""}`
  );
}
const d3 = {
  fallbackLocale: null,
  loadingDelay: 200,
  formats: f3,
  warnOnMissingMessages: !0,
  handleMissingMessage: void 0,
  ignoreTag: !0
}, Sc = d3;
function Ol() {
  return Sc;
}
function p3(t) {
  const e = t, { formats: n } = e, r = u3(e, ["formats"]);
  let s = t.fallbackLocale;
  if (t.initialLocale)
    try {
      z1.resolveLocale(t.initialLocale) && (s = t.initialLocale);
    } catch {
      console.warn(
        `[svelte-i18n] The initial locale "${t.initialLocale}" is not a valid locale.`
      );
    }
  return r.warnOnMissingMessages && (delete r.warnOnMissingMessages, r.handleMissingMessage == null ? r.handleMissingMessage = h3 : console.warn(
    '[svelte-i18n] The "warnOnMissingMessages" option is deprecated. Please use the "handleMissingMessage" option instead.'
  )), Object.assign(Sc, r, { initialLocale: s }), n && ("number" in n && Object.assign(Sc.formats.number, n.number), "date" in n && Object.assign(Sc.formats.date, n.date), "time" in n && Object.assign(Sc.formats.time, n.time)), Ko.set(s);
}
const Bh = Zf(!1);
var m3 = Object.defineProperty, g3 = Object.defineProperties, b3 = Object.getOwnPropertyDescriptors, Mm = Object.getOwnPropertySymbols, y3 = Object.prototype.hasOwnProperty, w3 = Object.prototype.propertyIsEnumerable, Dm = (t, e, n) => e in t ? m3(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, v3 = (t, e) => {
  for (var n in e)
    y3.call(e, n) && Dm(t, n, e[n]);
  if (Mm)
    for (var n of Mm(e))
      w3.call(e, n) && Dm(t, n, e[n]);
  return t;
}, _3 = (t, e) => g3(t, b3(e));
let vd;
const ff = Zf(null);
function $m(t) {
  return t.split("-").map((e, n, r) => r.slice(0, n + 1).join("-")).reverse();
}
function Au(t, e = Ol().fallbackLocale) {
  const n = $m(t);
  return e ? [.../* @__PURE__ */ new Set([...n, ...$m(e)])] : n;
}
function Gi() {
  return vd ?? void 0;
}
ff.subscribe((t) => {
  vd = t ?? void 0, typeof window < "u" && t != null && document.documentElement.setAttribute("lang", t);
});
const A3 = (t) => {
  if (t && s3(t) && uf(t)) {
    const { loadingDelay: e } = Ol();
    let n;
    return typeof window < "u" && Gi() != null && e ? n = window.setTimeout(
      () => Bh.set(!0),
      e
    ) : Bh.set(!0), Z1(t).then(() => {
      ff.set(t);
    }).finally(() => {
      clearTimeout(n), Bh.set(!1);
    });
  }
  return ff.set(t);
}, Ko = _3(v3({}, ff), {
  set: A3
}), E3 = () => typeof window > "u" ? null : window.navigator.language || window.navigator.languages[0], Kf = (t) => {
  const e = /* @__PURE__ */ Object.create(null);
  return (r) => {
    const s = JSON.stringify(r);
    return s in e ? e[s] : e[s] = t(r);
  };
};
var x3 = Object.defineProperty, hf = Object.getOwnPropertySymbols, J1 = Object.prototype.hasOwnProperty, K1 = Object.prototype.propertyIsEnumerable, Um = (t, e, n) => e in t ? x3(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, _p = (t, e) => {
  for (var n in e || (e = {}))
    J1.call(e, n) && Um(t, n, e[n]);
  if (hf)
    for (var n of hf(e))
      K1.call(e, n) && Um(t, n, e[n]);
  return t;
}, Hl = (t, e) => {
  var n = {};
  for (var r in t)
    J1.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
  if (t != null && hf)
    for (var r of hf(t))
      e.indexOf(r) < 0 && K1.call(t, r) && (n[r] = t[r]);
  return n;
};
const zc = (t, e) => {
  const { formats: n } = Ol();
  if (t in n && e in n[t])
    return n[t][e];
  throw new Error(`[svelte-i18n] Unknown "${e}" ${t} format.`);
}, C3 = Kf(
  (t) => {
    var e = t, { locale: n, format: r } = e, s = Hl(e, ["locale", "format"]);
    if (n == null)
      throw new Error('[svelte-i18n] A "locale" must be set to format numbers');
    return r && (s = zc("number", r)), new Intl.NumberFormat(n, s);
  }
), k3 = Kf(
  (t) => {
    var e = t, { locale: n, format: r } = e, s = Hl(e, ["locale", "format"]);
    if (n == null)
      throw new Error('[svelte-i18n] A "locale" must be set to format dates');
    return r ? s = zc("date", r) : Object.keys(s).length === 0 && (s = zc("date", "short")), new Intl.DateTimeFormat(n, s);
  }
), S3 = Kf(
  (t) => {
    var e = t, { locale: n, format: r } = e, s = Hl(e, ["locale", "format"]);
    if (n == null)
      throw new Error(
        '[svelte-i18n] A "locale" must be set to format time values'
      );
    return r ? s = zc("time", r) : Object.keys(s).length === 0 && (s = zc("time", "short")), new Intl.DateTimeFormat(n, s);
  }
), O3 = (t = {}) => {
  var e = t, {
    locale: n = Gi()
  } = e, r = Hl(e, [
    "locale"
  ]);
  return C3(_p({ locale: n }, r));
}, T3 = (t = {}) => {
  var e = t, {
    locale: n = Gi()
  } = e, r = Hl(e, [
    "locale"
  ]);
  return k3(_p({ locale: n }, r));
}, I3 = (t = {}) => {
  var e = t, {
    locale: n = Gi()
  } = e, r = Hl(e, [
    "locale"
  ]);
  return S3(_p({ locale: n }, r));
}, N3 = Kf(
  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
  (t, e = Gi()) => new z1(t, e, Ol().formats, {
    ignoreTag: Ol().ignoreTag
  })
), P3 = (t, e = {}) => {
  var n, r, s, i;
  let o = e;
  typeof t == "object" && (o = t, t = o.id);
  const {
    values: a,
    locale: c = Gi(),
    default: u
  } = o;
  if (c == null)
    throw new Error(
      "[svelte-i18n] Cannot format a message without first setting the initial locale."
    );
  let f = V1(t, c);
  if (!f)
    f = (i = (s = (r = (n = Ol()).handleMissingMessage) == null ? void 0 : r.call(n, { locale: c, id: t, defaultValue: u })) != null ? s : u) != null ? i : t;
  else if (typeof f != "string")
    return console.warn(
      `[svelte-i18n] Message with id "${t}" must be of type "string", found: "${typeof f}". Gettin its value through the "$format" method is deprecated; use the "json" method instead.`
    ), f;
  if (!a)
    return f;
  let l = f;
  try {
    l = N3(f, c).format(a);
  } catch (m) {
    m instanceof Error && console.warn(
      `[svelte-i18n] Message "${t}" has syntax error:`,
      m.message
    );
  }
  return l;
}, R3 = (t, e) => I3(e).format(t), B3 = (t, e) => T3(e).format(t), L3 = (t, e) => O3(e).format(t), M3 = (t, e = Gi()) => V1(t, e), Qs = jl([Ko, _u], () => P3);
jl([Ko], () => R3);
jl([Ko], () => B3);
jl([Ko], () => L3);
jl([Ko, _u], () => M3);
let D3 = (t = 21) => crypto.getRandomValues(new Uint8Array(t)).reduce((e, n) => (n &= 63, n < 36 ? e += n.toString(36) : n < 62 ? e += (n - 26).toString(36).toUpperCase() : n > 62 ? e += "-" : e += "_", e), "");
var Lh = { exports: {} }, jm;
function $3() {
  return jm || (jm = 1, function(t, e) {
    (function(n, r) {
      t.exports = r();
    })(self, () => {
      return n = { 7629: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(9474), f = o(1687), l = o(8652), m = o(8160), p = o(3292), d = o(6354), h = o(8901), b = o(9708), g = o(6914), y = o(2294), w = o(6133), _ = o(1152), E = o(8863), k = o(2036), S = { Base: class {
          constructor(A) {
            this.type = A, this.$_root = null, this._definition = {}, this._reset();
          }
          _reset() {
            this._ids = new y.Ids(), this._preferences = null, this._refs = new w.Manager(), this._cache = null, this._valids = null, this._invalids = null, this._flags = {}, this._rules = [], this._singleRules = /* @__PURE__ */ new Map(), this.$_terms = {}, this.$_temp = { ruleset: null, whens: {} };
          }
          describe() {
            return a(typeof b.describe == "function", "Manifest functionality disabled"), b.describe(this);
          }
          allow() {
            for (var A = arguments.length, x = new Array(A), T = 0; T < A; T++) x[T] = arguments[T];
            return m.verifyFlat(x, "allow"), this._values(x, "_valids");
          }
          alter(A) {
            a(A && typeof A == "object" && !Array.isArray(A), "Invalid targets argument"), a(!this._inRuleset(), "Cannot set alterations inside a ruleset");
            const x = this.clone();
            x.$_terms.alterations = x.$_terms.alterations || [];
            for (const T in A) {
              const N = A[T];
              a(typeof N == "function", "Alteration adjuster for", T, "must be a function"), x.$_terms.alterations.push({ target: T, adjuster: N });
            }
            return x.$_temp.ruleset = !1, x;
          }
          artifact(A) {
            return a(A !== void 0, "Artifact cannot be undefined"), a(!this._cache, "Cannot set an artifact with a rule cache"), this.$_setFlag("artifact", A);
          }
          cast(A) {
            return a(A === !1 || typeof A == "string", "Invalid to value"), a(A === !1 || this._definition.cast[A], "Type", this.type, "does not support casting to", A), this.$_setFlag("cast", A === !1 ? void 0 : A);
          }
          default(A, x) {
            return this._default("default", A, x);
          }
          description(A) {
            return a(A && typeof A == "string", "Description must be a non-empty string"), this.$_setFlag("description", A);
          }
          empty(A) {
            const x = this.clone();
            return A !== void 0 && (A = x.$_compile(A, { override: !1 })), x.$_setFlag("empty", A, { clone: !1 });
          }
          error(A) {
            return a(A, "Missing error"), a(A instanceof Error || typeof A == "function", "Must provide a valid Error object or a function"), this.$_setFlag("error", A);
          }
          example(A) {
            let x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            return a(A !== void 0, "Missing example"), m.assertOptions(x, ["override"]), this._inner("examples", A, { single: !0, override: x.override });
          }
          external(A, x) {
            return typeof A == "object" && (a(!x, "Cannot combine options with description"), x = A.description, A = A.method), a(typeof A == "function", "Method must be a function"), a(x === void 0 || x && typeof x == "string", "Description must be a non-empty string"), this._inner("externals", { method: A, description: x }, { single: !0 });
          }
          failover(A, x) {
            return this._default("failover", A, x);
          }
          forbidden() {
            return this.presence("forbidden");
          }
          id(A) {
            return A ? (a(typeof A == "string", "id must be a non-empty string"), a(/^[^\.]+$/.test(A), "id cannot contain period character"), this.$_setFlag("id", A)) : this.$_setFlag("id", void 0);
          }
          invalid() {
            for (var A = arguments.length, x = new Array(A), T = 0; T < A; T++) x[T] = arguments[T];
            return this._values(x, "_invalids");
          }
          label(A) {
            return a(A && typeof A == "string", "Label name must be a non-empty string"), this.$_setFlag("label", A);
          }
          meta(A) {
            return a(A !== void 0, "Meta cannot be undefined"), this._inner("metas", A, { single: !0 });
          }
          note() {
            for (var A = arguments.length, x = new Array(A), T = 0; T < A; T++) x[T] = arguments[T];
            a(x.length, "Missing notes");
            for (const N of x) a(N && typeof N == "string", "Notes must be non-empty strings");
            return this._inner("notes", x);
          }
          only() {
            let A = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
            return a(typeof A == "boolean", "Invalid mode:", A), this.$_setFlag("only", A);
          }
          optional() {
            return this.presence("optional");
          }
          prefs(A) {
            a(A, "Missing preferences"), a(A.context === void 0, "Cannot override context"), a(A.externals === void 0, "Cannot override externals"), a(A.warnings === void 0, "Cannot override warnings"), a(A.debug === void 0, "Cannot override debug"), m.checkPreferences(A);
            const x = this.clone();
            return x._preferences = m.preferences(x._preferences, A), x;
          }
          presence(A) {
            return a(["optional", "required", "forbidden"].includes(A), "Unknown presence mode", A), this.$_setFlag("presence", A);
          }
          raw() {
            let A = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
            return this.$_setFlag("result", A ? "raw" : void 0);
          }
          result(A) {
            return a(["raw", "strip"].includes(A), "Unknown result mode", A), this.$_setFlag("result", A);
          }
          required() {
            return this.presence("required");
          }
          strict(A) {
            const x = this.clone(), T = A !== void 0 && !A;
            return x._preferences = m.preferences(x._preferences, { convert: T }), x;
          }
          strip() {
            let A = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
            return this.$_setFlag("result", A ? "strip" : void 0);
          }
          tag() {
            for (var A = arguments.length, x = new Array(A), T = 0; T < A; T++) x[T] = arguments[T];
            a(x.length, "Missing tags");
            for (const N of x) a(N && typeof N == "string", "Tags must be non-empty strings");
            return this._inner("tags", x);
          }
          unit(A) {
            return a(A && typeof A == "string", "Unit name must be a non-empty string"), this.$_setFlag("unit", A);
          }
          valid() {
            for (var A = arguments.length, x = new Array(A), T = 0; T < A; T++) x[T] = arguments[T];
            m.verifyFlat(x, "valid");
            const N = this.allow(...x);
            return N.$_setFlag("only", !!N._valids, { clone: !1 }), N;
          }
          when(A, x) {
            const T = this.clone();
            T.$_terms.whens || (T.$_terms.whens = []);
            const N = p.when(T, A, x);
            if (!["any", "link"].includes(T.type)) {
              const F = N.is ? [N] : N.switch;
              for (const V of F) a(!V.then || V.then.type === "any" || V.then.type === T.type, "Cannot combine", T.type, "with", V.then && V.then.type), a(!V.otherwise || V.otherwise.type === "any" || V.otherwise.type === T.type, "Cannot combine", T.type, "with", V.otherwise && V.otherwise.type);
            }
            return T.$_terms.whens.push(N), T.$_mutateRebuild();
          }
          cache(A) {
            a(!this._inRuleset(), "Cannot set caching inside a ruleset"), a(!this._cache, "Cannot override schema cache"), a(this._flags.artifact === void 0, "Cannot cache a rule with an artifact");
            const x = this.clone();
            return x._cache = A || l.provider.provision(), x.$_temp.ruleset = !1, x;
          }
          clone() {
            const A = Object.create(Object.getPrototypeOf(this));
            return this._assign(A);
          }
          concat(A) {
            a(m.isSchema(A), "Invalid schema object"), a(this.type === "any" || A.type === "any" || A.type === this.type, "Cannot merge type", this.type, "with another type:", A.type), a(!this._inRuleset(), "Cannot concatenate onto a schema with open ruleset"), a(!A._inRuleset(), "Cannot concatenate a schema with open ruleset");
            let x = this.clone();
            if (this.type === "any" && A.type !== "any") {
              const T = A.clone();
              for (const N of Object.keys(x)) N !== "type" && (T[N] = x[N]);
              x = T;
            }
            x._ids.concat(A._ids), x._refs.register(A, w.toSibling), x._preferences = x._preferences ? m.preferences(x._preferences, A._preferences) : A._preferences, x._valids = k.merge(x._valids, A._valids, A._invalids), x._invalids = k.merge(x._invalids, A._invalids, A._valids);
            for (const T of A._singleRules.keys()) x._singleRules.has(T) && (x._rules = x._rules.filter((N) => N.keep || N.name !== T), x._singleRules.delete(T));
            for (const T of A._rules) A._definition.rules[T.method].multi || x._singleRules.set(T.name, T), x._rules.push(T);
            if (x._flags.empty && A._flags.empty) {
              x._flags.empty = x._flags.empty.concat(A._flags.empty);
              const T = Object.assign({}, A._flags);
              delete T.empty, f(x._flags, T);
            } else if (A._flags.empty) {
              x._flags.empty = A._flags.empty;
              const T = Object.assign({}, A._flags);
              delete T.empty, f(x._flags, T);
            } else f(x._flags, A._flags);
            for (const T in A.$_terms) {
              const N = A.$_terms[T];
              N ? x.$_terms[T] ? x.$_terms[T] = x.$_terms[T].concat(N) : x.$_terms[T] = N.slice() : x.$_terms[T] || (x.$_terms[T] = N);
            }
            return this.$_root._tracer && this.$_root._tracer._combine(x, [this, A]), x.$_mutateRebuild();
          }
          extend(A) {
            return a(!A.base, "Cannot extend type with another base"), h.type(this, A);
          }
          extract(A) {
            return A = Array.isArray(A) ? A : A.split("."), this._ids.reach(A);
          }
          fork(A, x) {
            a(!this._inRuleset(), "Cannot fork inside a ruleset");
            let T = this;
            for (let N of [].concat(A)) N = Array.isArray(N) ? N : N.split("."), T = T._ids.fork(N, x, T);
            return T.$_temp.ruleset = !1, T;
          }
          rule(A) {
            const x = this._definition;
            m.assertOptions(A, Object.keys(x.modifiers)), a(this.$_temp.ruleset !== !1, "Cannot apply rules to empty ruleset or the last rule added does not support rule properties");
            const T = this.$_temp.ruleset === null ? this._rules.length - 1 : this.$_temp.ruleset;
            a(T >= 0 && T < this._rules.length, "Cannot apply rules to empty ruleset");
            const N = this.clone();
            for (let F = T; F < N._rules.length; ++F) {
              const V = N._rules[F], oe = c(V);
              for (const H in A) x.modifiers[H](oe, A[H]), a(oe.name === V.name, "Cannot change rule name");
              N._rules[F] = oe, N._singleRules.get(oe.name) === V && N._singleRules.set(oe.name, oe);
            }
            return N.$_temp.ruleset = !1, N.$_mutateRebuild();
          }
          get ruleset() {
            a(!this._inRuleset(), "Cannot start a new ruleset without closing the previous one");
            const A = this.clone();
            return A.$_temp.ruleset = A._rules.length, A;
          }
          get $() {
            return this.ruleset;
          }
          tailor(A) {
            A = [].concat(A), a(!this._inRuleset(), "Cannot tailor inside a ruleset");
            let x = this;
            if (this.$_terms.alterations) for (const { target: T, adjuster: N } of this.$_terms.alterations) A.includes(T) && (x = N(x), a(m.isSchema(x), "Alteration adjuster for", T, "failed to return a schema object"));
            return x = x.$_modify({ each: (T) => T.tailor(A), ref: !1 }), x.$_temp.ruleset = !1, x.$_mutateRebuild();
          }
          tracer() {
            return _.location ? _.location(this) : this;
          }
          validate(A, x) {
            return E.entry(A, this, x);
          }
          validateAsync(A, x) {
            return E.entryAsync(A, this, x);
          }
          $_addRule(A) {
            typeof A == "string" && (A = { name: A }), a(A && typeof A == "object", "Invalid options"), a(A.name && typeof A.name == "string", "Invalid rule name");
            for (const V in A) a(V[0] !== "_", "Cannot set private rule properties");
            const x = Object.assign({}, A);
            x._resolve = [], x.method = x.method || x.name;
            const T = this._definition.rules[x.method], N = x.args;
            a(T, "Unknown rule", x.method);
            const F = this.clone();
            if (N) {
              a(Object.keys(N).length === 1 || Object.keys(N).length === this._definition.rules[x.name].args.length, "Invalid rule definition for", this.type, x.name);
              for (const V in N) {
                let oe = N[V];
                if (T.argsByName) {
                  const H = T.argsByName.get(V);
                  if (H.ref && m.isResolvable(oe)) x._resolve.push(V), F.$_mutateRegister(oe);
                  else if (H.normalize && (oe = H.normalize(oe), N[V] = oe), H.assert) {
                    const Q = m.validateArg(oe, V, H);
                    a(!Q, Q, "or reference");
                  }
                }
                oe !== void 0 ? N[V] = oe : delete N[V];
              }
            }
            return T.multi || (F._ruleRemove(x.name, { clone: !1 }), F._singleRules.set(x.name, x)), F.$_temp.ruleset === !1 && (F.$_temp.ruleset = null), T.priority ? F._rules.unshift(x) : F._rules.push(x), F;
          }
          $_compile(A, x) {
            return p.schema(this.$_root, A, x);
          }
          $_createError(A, x, T, N, F) {
            let V = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
            const oe = V.flags !== !1 ? this._flags : {}, H = V.messages ? g.merge(this._definition.messages, V.messages) : this._definition.messages;
            return new d.Report(A, x, T, oe, H, N, F);
          }
          $_getFlag(A) {
            return this._flags[A];
          }
          $_getRule(A) {
            return this._singleRules.get(A);
          }
          $_mapLabels(A) {
            return A = Array.isArray(A) ? A : A.split("."), this._ids.labels(A);
          }
          $_match(A, x, T, N) {
            (T = Object.assign({}, T)).abortEarly = !0, T._externals = !1, x.snapshot();
            const F = !E.validate(A, this, x, T, N).errors;
            return x.restore(), F;
          }
          $_modify(A) {
            return m.assertOptions(A, ["each", "once", "ref", "schema"]), y.schema(this, A) || this;
          }
          $_mutateRebuild() {
            return a(!this._inRuleset(), "Cannot add this rule inside a ruleset"), this._refs.reset(), this._ids.reset(), this.$_modify({ each: (A, x) => {
              let { source: T, name: N, path: F, key: V } = x;
              const oe = this._definition[T][N] && this._definition[T][N].register;
              oe !== !1 && this.$_mutateRegister(A, { family: oe, key: V });
            } }), this._definition.rebuild && this._definition.rebuild(this), this.$_temp.ruleset = !1, this;
          }
          $_mutateRegister(A) {
            let { family: x, key: T } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            this._refs.register(A, x), this._ids.register(A, { key: T });
          }
          $_property(A) {
            return this._definition.properties[A];
          }
          $_reach(A) {
            return this._ids.reach(A);
          }
          $_rootReferences() {
            return this._refs.roots();
          }
          $_setFlag(A, x) {
            let T = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
            a(A[0] === "_" || !this._inRuleset(), "Cannot set flag inside a ruleset");
            const N = this._definition.flags[A] || {};
            if (u(x, N.default) && (x = void 0), u(x, this._flags[A])) return this;
            const F = T.clone !== !1 ? this.clone() : this;
            return x !== void 0 ? (F._flags[A] = x, F.$_mutateRegister(x)) : delete F._flags[A], A[0] !== "_" && (F.$_temp.ruleset = !1), F;
          }
          $_parent(A) {
            for (var x = arguments.length, T = new Array(x > 1 ? x - 1 : 0), N = 1; N < x; N++) T[N - 1] = arguments[N];
            return this[A][m.symbols.parent].call(this, ...T);
          }
          $_validate(A, x, T) {
            return E.validate(A, this, x, T);
          }
          _assign(A) {
            A.type = this.type, A.$_root = this.$_root, A.$_temp = Object.assign({}, this.$_temp), A.$_temp.whens = {}, A._ids = this._ids.clone(), A._preferences = this._preferences, A._valids = this._valids && this._valids.clone(), A._invalids = this._invalids && this._invalids.clone(), A._rules = this._rules.slice(), A._singleRules = c(this._singleRules, { shallow: !0 }), A._refs = this._refs.clone(), A._flags = Object.assign({}, this._flags), A._cache = null, A.$_terms = {};
            for (const x in this.$_terms) A.$_terms[x] = this.$_terms[x] ? this.$_terms[x].slice() : null;
            A.$_super = {};
            for (const x in this.$_super) A.$_super[x] = this._super[x].bind(A);
            return A;
          }
          _bare() {
            const A = this.clone();
            A._reset();
            const x = A._definition.terms;
            for (const T in x) {
              const N = x[T];
              A.$_terms[T] = N.init;
            }
            return A.$_mutateRebuild();
          }
          _default(A, x) {
            let T = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
            return m.assertOptions(T, "literal"), a(x !== void 0, "Missing", A, "value"), a(typeof x == "function" || !T.literal, "Only function value supports literal option"), typeof x == "function" && T.literal && (x = { [m.symbols.literal]: !0, literal: x }), this.$_setFlag(A, x);
          }
          _generate(A, x, T) {
            if (!this.$_terms.whens) return { schema: this };
            const N = [], F = [];
            for (let H = 0; H < this.$_terms.whens.length; ++H) {
              const Q = this.$_terms.whens[H];
              if (Q.concat) {
                N.push(Q.concat), F.push(`${H}.concat`);
                continue;
              }
              const ae = Q.ref ? Q.ref.resolve(A, x, T) : A, Ee = Q.is ? [Q] : Q.switch, pe = F.length;
              for (let Re = 0; Re < Ee.length; ++Re) {
                const { is: ve, then: Se, otherwise: ee } = Ee[Re], xe = `${H}${Q.switch ? "." + Re : ""}`;
                if (ve.$_match(ae, x.nest(ve, `${xe}.is`), T)) {
                  if (Se) {
                    const Ve = x.localize([...x.path, `${xe}.then`], x.ancestors, x.schemas), { schema: Pe, id: Ne } = Se._generate(A, Ve, T);
                    N.push(Pe), F.push(`${xe}.then${Ne ? `(${Ne})` : ""}`);
                    break;
                  }
                } else if (ee) {
                  const Ve = x.localize([...x.path, `${xe}.otherwise`], x.ancestors, x.schemas), { schema: Pe, id: Ne } = ee._generate(A, Ve, T);
                  N.push(Pe), F.push(`${xe}.otherwise${Ne ? `(${Ne})` : ""}`);
                  break;
                }
              }
              if (Q.break && F.length > pe) break;
            }
            const V = F.join(", ");
            if (x.mainstay.tracer.debug(x, "rule", "when", V), !V) return { schema: this };
            if (!x.mainstay.tracer.active && this.$_temp.whens[V]) return { schema: this.$_temp.whens[V], id: V };
            let oe = this;
            this._definition.generate && (oe = this._definition.generate(this, A, x, T));
            for (const H of N) oe = oe.concat(H);
            return this.$_root._tracer && this.$_root._tracer._combine(oe, [this, ...N]), this.$_temp.whens[V] = oe, { schema: oe, id: V };
          }
          _inner(A, x) {
            let T = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
            a(!this._inRuleset(), `Cannot set ${A} inside a ruleset`);
            const N = this.clone();
            return N.$_terms[A] && !T.override || (N.$_terms[A] = []), T.single ? N.$_terms[A].push(x) : N.$_terms[A].push(...x), N.$_temp.ruleset = !1, N;
          }
          _inRuleset() {
            return this.$_temp.ruleset !== null && this.$_temp.ruleset !== !1;
          }
          _ruleRemove(A) {
            let x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (!this._singleRules.has(A)) return this;
            const T = x.clone !== !1 ? this.clone() : this;
            T._singleRules.delete(A);
            const N = [];
            for (let F = 0; F < T._rules.length; ++F) {
              const V = T._rules[F];
              V.name !== A || V.keep ? N.push(V) : T._inRuleset() && F < T.$_temp.ruleset && --T.$_temp.ruleset;
            }
            return T._rules = N, T;
          }
          _values(A, x) {
            m.verifyFlat(A, x.slice(1, -1));
            const T = this.clone(), N = A[0] === m.symbols.override;
            if (N && (A = A.slice(1)), !T[x] && A.length ? T[x] = new k() : N && (T[x] = A.length ? new k() : null, T.$_mutateRebuild()), !T[x]) return T;
            N && T[x].override();
            for (const F of A) {
              a(F !== void 0, "Cannot call allow/valid/invalid with undefined"), a(F !== m.symbols.override, "Override must be the first value");
              const V = x === "_invalids" ? "_valids" : "_invalids";
              T[V] && (T[V].remove(F), T[V].length || (a(x === "_valids" || !T._flags.only, "Setting invalid value", F, "leaves schema rejecting all values due to previous valid rule"), T[V] = null)), T[x].add(F, T._refs);
            }
            return T;
          }
        } };
        S.Base.prototype[m.symbols.any] = { version: m.version, compile: p.compile, root: "$_root" }, S.Base.prototype.isImmutable = !0, S.Base.prototype.deny = S.Base.prototype.invalid, S.Base.prototype.disallow = S.Base.prototype.invalid, S.Base.prototype.equal = S.Base.prototype.valid, S.Base.prototype.exist = S.Base.prototype.required, S.Base.prototype.not = S.Base.prototype.invalid, S.Base.prototype.options = S.Base.prototype.prefs, S.Base.prototype.preferences = S.Base.prototype.prefs, s.exports = new S.Base();
      }, 8652: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(8160), f = { max: 1e3, supported: /* @__PURE__ */ new Set(["undefined", "boolean", "number", "string"]) };
        i.provider = { provision: (l) => new f.Cache(l) }, f.Cache = class {
          constructor() {
            let l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            u.assertOptions(l, ["max"]), a(l.max === void 0 || l.max && l.max > 0 && isFinite(l.max), "Invalid max cache size"), this._max = l.max || f.max, this._map = /* @__PURE__ */ new Map(), this._list = new f.List();
          }
          get length() {
            return this._map.size;
          }
          set(l, m) {
            if (l !== null && !f.supported.has(typeof l)) return;
            let p = this._map.get(l);
            if (p) return p.value = m, void this._list.first(p);
            p = this._list.unshift({ key: l, value: m }), this._map.set(l, p), this._compact();
          }
          get(l) {
            const m = this._map.get(l);
            if (m) return this._list.first(m), c(m.value);
          }
          _compact() {
            if (this._map.size > this._max) {
              const l = this._list.pop();
              this._map.delete(l.key);
            }
          }
        }, f.List = class {
          constructor() {
            this.tail = null, this.head = null;
          }
          unshift(l) {
            return l.next = null, l.prev = this.head, this.head && (this.head.next = l), this.head = l, this.tail || (this.tail = l), l;
          }
          first(l) {
            l !== this.head && (this._remove(l), this.unshift(l));
          }
          pop() {
            return this._remove(this.tail);
          }
          _remove(l) {
            const { next: m, prev: p } = l;
            return m.prev = p, p && (p.next = m), l === this.tail && (this.tail = m), l.prev = null, l.next = null, l;
          }
        };
      }, 8160: (s, i, o) => {
        const a = o(375), c = o(7916), u = o(5934);
        let f, l;
        const m = { isoDate: /^(?:[-+]\d{2})?(?:\d{4}(?!\d{2}\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\1(?:[12]\d|0[1-9]|3[01]))?|W(?:[0-4]\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\d|[12]\d{2}|3(?:[0-5]\d|6[1-6])))(?![T]$|[T][\d]+Z$)(?:[T\s](?:(?:(?:[01]\d|2[0-3])(?:(:?)[0-5]\d)?|24\:?00)(?:[.,]\d+(?!:))?)(?:\2[0-5]\d(?:[.,]\d+)?)?(?:[Z]|(?:[+-])(?:[01]\d|2[0-3])(?::?[0-5]\d)?)?)?)?$/ };
        i.version = u.version, i.defaults = { abortEarly: !0, allowUnknown: !1, artifacts: !1, cache: !0, context: null, convert: !0, dateFormat: "iso", errors: { escapeHtml: !1, label: "path", language: null, render: !0, stack: !1, wrap: { label: '"', array: "[]" } }, externals: !0, messages: {}, nonEnumerables: !1, noDefaults: !1, presence: "optional", skipFunctions: !1, stripUnknown: !1, warnings: !1 }, i.symbols = { any: Symbol.for("@hapi/joi/schema"), arraySingle: Symbol("arraySingle"), deepDefault: Symbol("deepDefault"), errors: Symbol("errors"), literal: Symbol("literal"), override: Symbol("override"), parent: Symbol("parent"), prefs: Symbol("prefs"), ref: Symbol("ref"), template: Symbol("template"), values: Symbol("values") }, i.assertOptions = function(p, d) {
          let h = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "Options";
          a(p && typeof p == "object" && !Array.isArray(p), "Options must be of type object");
          const b = Object.keys(p).filter((g) => !d.includes(g));
          a(b.length === 0, `${h} contain unknown keys: ${b}`);
        }, i.checkPreferences = function(p) {
          l = l || o(3378);
          const d = l.preferences.validate(p);
          if (d.error) throw new c([d.error.details[0].message]);
        }, i.compare = function(p, d, h) {
          switch (h) {
            case "=":
              return p === d;
            case ">":
              return p > d;
            case "<":
              return p < d;
            case ">=":
              return p >= d;
            case "<=":
              return p <= d;
          }
        }, i.default = function(p, d) {
          return p === void 0 ? d : p;
        }, i.isIsoDate = function(p) {
          return m.isoDate.test(p);
        }, i.isNumber = function(p) {
          return typeof p == "number" && !isNaN(p);
        }, i.isResolvable = function(p) {
          return !!p && (p[i.symbols.ref] || p[i.symbols.template]);
        }, i.isSchema = function(p) {
          let d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          const h = p && p[i.symbols.any];
          return !!h && (a(d.legacy || h.version === i.version, "Cannot mix different versions of joi schemas"), !0);
        }, i.isValues = function(p) {
          return p[i.symbols.values];
        }, i.limit = function(p) {
          return Number.isSafeInteger(p) && p >= 0;
        }, i.preferences = function(p, d) {
          f = f || o(6914), p = p || {}, d = d || {};
          const h = Object.assign({}, p, d);
          return d.errors && p.errors && (h.errors = Object.assign({}, p.errors, d.errors), h.errors.wrap = Object.assign({}, p.errors.wrap, d.errors.wrap)), d.messages && (h.messages = f.compile(d.messages, p.messages)), delete h[i.symbols.prefs], h;
        }, i.tryWithPath = function(p, d) {
          let h = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          try {
            return p();
          } catch (b) {
            throw b.path !== void 0 ? b.path = d + "." + b.path : b.path = d, h.append && (b.message = `${b.message} (${b.path})`), b;
          }
        }, i.validateArg = function(p, d, h) {
          let { assert: b, message: g } = h;
          if (i.isSchema(b)) {
            const y = b.validate(p);
            return y.error ? y.error.message : void 0;
          }
          if (!b(p)) return d ? `${d} ${g}` : g;
        }, i.verifyFlat = function(p, d) {
          for (const h of p) a(!Array.isArray(h), "Method no longer accepts array arguments:", d);
        };
      }, 3292: (s, i, o) => {
        const a = o(375), c = o(8160), u = o(6133), f = {};
        i.schema = function(l, m) {
          let p = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          c.assertOptions(p, ["appendPath", "override"]);
          try {
            return f.schema(l, m, p);
          } catch (d) {
            throw p.appendPath && d.path !== void 0 && (d.message = `${d.message} (${d.path})`), d;
          }
        }, f.schema = function(l, m, p) {
          a(m !== void 0, "Invalid undefined schema"), Array.isArray(m) && (a(m.length, "Invalid empty array schema"), m.length === 1 && (m = m[0]));
          const d = function(h) {
            for (var b = arguments.length, g = new Array(b > 1 ? b - 1 : 0), y = 1; y < b; y++) g[y - 1] = arguments[y];
            return p.override !== !1 ? h.valid(l.override, ...g) : h.valid(...g);
          };
          if (f.simple(m)) return d(l, m);
          if (typeof m == "function") return l.custom(m);
          if (a(typeof m == "object", "Invalid schema content:", typeof m), c.isResolvable(m)) return d(l, m);
          if (c.isSchema(m)) return m;
          if (Array.isArray(m)) {
            for (const h of m) if (!f.simple(h)) return l.alternatives().try(...m);
            return d(l, ...m);
          }
          return m instanceof RegExp ? l.string().regex(m) : m instanceof Date ? d(l.date(), m) : (a(Object.getPrototypeOf(m) === Object.getPrototypeOf({}), "Schema can only contain plain objects"), l.object().keys(m));
        }, i.ref = function(l, m) {
          return u.isRef(l) ? l : u.create(l, m);
        }, i.compile = function(l, m) {
          let p = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          c.assertOptions(p, ["legacy"]);
          const d = m && m[c.symbols.any];
          if (d) return a(p.legacy || d.version === c.version, "Cannot mix different versions of joi schemas:", d.version, c.version), m;
          if (typeof m != "object" || !p.legacy) return i.schema(l, m, { appendPath: !0 });
          const h = f.walk(m);
          return h ? h.compile(h.root, m) : i.schema(l, m, { appendPath: !0 });
        }, f.walk = function(l) {
          if (typeof l != "object") return null;
          if (Array.isArray(l)) {
            for (const p of l) {
              const d = f.walk(p);
              if (d) return d;
            }
            return null;
          }
          const m = l[c.symbols.any];
          if (m) return { root: l[m.root], compile: m.compile };
          a(Object.getPrototypeOf(l) === Object.getPrototypeOf({}), "Schema can only contain plain objects");
          for (const p in l) {
            const d = f.walk(l[p]);
            if (d) return d;
          }
          return null;
        }, f.simple = function(l) {
          return l === null || ["boolean", "string", "number"].includes(typeof l);
        }, i.when = function(l, m, p) {
          if (p === void 0 && (a(m && typeof m == "object", "Missing options"), p = m, m = u.create(".")), Array.isArray(p) && (p = { switch: p }), c.assertOptions(p, ["is", "not", "then", "otherwise", "switch", "break"]), c.isSchema(m)) return a(p.is === void 0, '"is" can not be used with a schema condition'), a(p.not === void 0, '"not" can not be used with a schema condition'), a(p.switch === void 0, '"switch" can not be used with a schema condition'), f.condition(l, { is: m, then: p.then, otherwise: p.otherwise, break: p.break });
          if (a(u.isRef(m) || typeof m == "string", "Invalid condition:", m), a(p.not === void 0 || p.is === void 0, 'Cannot combine "is" with "not"'), p.switch === void 0) {
            let h = p;
            p.not !== void 0 && (h = { is: p.not, then: p.otherwise, otherwise: p.then, break: p.break });
            let b = h.is !== void 0 ? l.$_compile(h.is) : l.$_root.invalid(null, !1, 0, "").required();
            return a(h.then !== void 0 || h.otherwise !== void 0, 'options must have at least one of "then", "otherwise", or "switch"'), a(h.break === void 0 || h.then === void 0 || h.otherwise === void 0, "Cannot specify then, otherwise, and break all together"), p.is === void 0 || u.isRef(p.is) || c.isSchema(p.is) || (b = b.required()), f.condition(l, { ref: i.ref(m), is: b, then: h.then, otherwise: h.otherwise, break: h.break });
          }
          a(Array.isArray(p.switch), '"switch" must be an array'), a(p.is === void 0, 'Cannot combine "switch" with "is"'), a(p.not === void 0, 'Cannot combine "switch" with "not"'), a(p.then === void 0, 'Cannot combine "switch" with "then"');
          const d = { ref: i.ref(m), switch: [], break: p.break };
          for (let h = 0; h < p.switch.length; ++h) {
            const b = p.switch[h], g = h === p.switch.length - 1;
            c.assertOptions(b, g ? ["is", "then", "otherwise"] : ["is", "then"]), a(b.is !== void 0, 'Switch statement missing "is"'), a(b.then !== void 0, 'Switch statement missing "then"');
            const y = { is: l.$_compile(b.is), then: l.$_compile(b.then) };
            if (u.isRef(b.is) || c.isSchema(b.is) || (y.is = y.is.required()), g) {
              a(p.otherwise === void 0 || b.otherwise === void 0, 'Cannot specify "otherwise" inside and outside a "switch"');
              const w = p.otherwise !== void 0 ? p.otherwise : b.otherwise;
              w !== void 0 && (a(d.break === void 0, "Cannot specify both otherwise and break"), y.otherwise = l.$_compile(w));
            }
            d.switch.push(y);
          }
          return d;
        }, f.condition = function(l, m) {
          for (const p of ["then", "otherwise"]) m[p] === void 0 ? delete m[p] : m[p] = l.$_compile(m[p]);
          return m;
        };
      }, 6354: (s, i, o) => {
        const a = o(5688), c = o(8160), u = o(3328);
        i.Report = class {
          constructor(f, l, m, p, d, h, b) {
            if (this.code = f, this.flags = p, this.messages = d, this.path = h.path, this.prefs = b, this.state = h, this.value = l, this.message = null, this.template = null, this.local = m || {}, this.local.label = i.label(this.flags, this.state, this.prefs, this.messages), this.value === void 0 || this.local.hasOwnProperty("value") || (this.local.value = this.value), this.path.length) {
              const g = this.path[this.path.length - 1];
              typeof g != "object" && (this.local.key = g);
            }
          }
          _setTemplate(f) {
            if (this.template = f, !this.flags.label && this.path.length === 0) {
              const l = this._template(this.template, "root");
              l && (this.local.label = l);
            }
          }
          toString() {
            if (this.message) return this.message;
            const f = this.code;
            if (!this.prefs.errors.render) return this.code;
            const l = this._template(this.template) || this._template(this.prefs.messages) || this._template(this.messages);
            return l === void 0 ? `Error code "${f}" is not defined, your custom type is missing the correct messages definition` : (this.message = l.render(this.value, this.state, this.prefs, this.local, { errors: this.prefs.errors, messages: [this.prefs.messages, this.messages] }), this.prefs.errors.label || (this.message = this.message.replace(/^"" /, "").trim()), this.message);
          }
          _template(f, l) {
            return i.template(this.value, f, l || this.code, this.state, this.prefs);
          }
        }, i.path = function(f) {
          let l = "";
          for (const m of f) typeof m != "object" && (typeof m == "string" ? (l && (l += "."), l += m) : l += `[${m}]`);
          return l;
        }, i.template = function(f, l, m, p, d) {
          if (!l) return;
          if (u.isTemplate(l)) return m !== "root" ? l : null;
          let h = d.errors.language;
          if (c.isResolvable(h) && (h = h.resolve(f, p, d)), h && l[h]) {
            if (l[h][m] !== void 0) return l[h][m];
            if (l[h]["*"] !== void 0) return l[h]["*"];
          }
          return l[m] ? l[m] : l["*"];
        }, i.label = function(f, l, m, p) {
          if (f.label) return f.label;
          if (!m.errors.label) return "";
          let d = l.path;
          return m.errors.label === "key" && l.path.length > 1 && (d = l.path.slice(-1)), i.path(d) || i.template(null, m.messages, "root", l, m) || p && i.template(null, p, "root", l, m) || "value";
        }, i.process = function(f, l, m) {
          if (!f) return null;
          const { override: p, message: d, details: h } = i.details(f);
          if (p) return p;
          if (m.errors.stack) return new i.ValidationError(d, h, l);
          const b = Error.stackTraceLimit;
          Error.stackTraceLimit = 0;
          const g = new i.ValidationError(d, h, l);
          return Error.stackTraceLimit = b, g;
        }, i.details = function(f) {
          let l = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, m = [];
          const p = [];
          for (const d of f) {
            if (d instanceof Error) {
              if (l.override !== !1) return { override: d };
              const b = d.toString();
              m.push(b), p.push({ message: b, type: "override", context: { error: d } });
              continue;
            }
            const h = d.toString();
            m.push(h), p.push({ message: h, path: d.path.filter((b) => typeof b != "object"), type: d.code, context: d.local });
          }
          return m.length > 1 && (m = [...new Set(m)]), { message: m.join(". "), details: p };
        }, i.ValidationError = class extends Error {
          constructor(f, l, m) {
            super(f), this._original = m, this.details = l;
          }
          static isError(f) {
            return f instanceof i.ValidationError;
          }
        }, i.ValidationError.prototype.isJoi = !0, i.ValidationError.prototype.name = "ValidationError", i.ValidationError.prototype.annotate = a.error;
      }, 8901: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(8160), f = o(6914), l = {};
        i.type = function(m, p) {
          const d = Object.getPrototypeOf(m), h = c(d), b = m._assign(Object.create(h)), g = Object.assign({}, p);
          delete g.base, h._definition = g;
          const y = d._definition || {};
          g.messages = f.merge(y.messages, g.messages), g.properties = Object.assign({}, y.properties, g.properties), b.type = g.type, g.flags = Object.assign({}, y.flags, g.flags);
          const w = Object.assign({}, y.terms);
          if (g.terms) for (const S in g.terms) {
            const A = g.terms[S];
            a(b.$_terms[S] === void 0, "Invalid term override for", g.type, S), b.$_terms[S] = A.init, w[S] = A;
          }
          g.terms = w, g.args || (g.args = y.args), g.prepare = l.prepare(g.prepare, y.prepare), g.coerce && (typeof g.coerce == "function" && (g.coerce = { method: g.coerce }), g.coerce.from && !Array.isArray(g.coerce.from) && (g.coerce = { method: g.coerce.method, from: [].concat(g.coerce.from) })), g.coerce = l.coerce(g.coerce, y.coerce), g.validate = l.validate(g.validate, y.validate);
          const _ = Object.assign({}, y.rules);
          if (g.rules) for (const S in g.rules) {
            const A = g.rules[S];
            a(typeof A == "object", "Invalid rule definition for", g.type, S);
            let x = A.method;
            if (x === void 0 && (x = function() {
              return this.$_addRule(S);
            }), x && (a(!h[S], "Rule conflict in", g.type, S), h[S] = x), a(!_[S], "Rule conflict in", g.type, S), _[S] = A, A.alias) {
              const T = [].concat(A.alias);
              for (const N of T) h[N] = A.method;
            }
            A.args && (A.argsByName = /* @__PURE__ */ new Map(), A.args = A.args.map((T) => (typeof T == "string" && (T = { name: T }), a(!A.argsByName.has(T.name), "Duplicated argument name", T.name), u.isSchema(T.assert) && (T.assert = T.assert.strict().label(T.name)), A.argsByName.set(T.name, T), T)));
          }
          g.rules = _;
          const E = Object.assign({}, y.modifiers);
          if (g.modifiers) for (const S in g.modifiers) {
            a(!h[S], "Rule conflict in", g.type, S);
            const A = g.modifiers[S];
            a(typeof A == "function", "Invalid modifier definition for", g.type, S);
            const x = function(T) {
              return this.rule({ [S]: T });
            };
            h[S] = x, E[S] = A;
          }
          if (g.modifiers = E, g.overrides) {
            h._super = d, b.$_super = {};
            for (const S in g.overrides) a(d[S], "Cannot override missing", S), g.overrides[S][u.symbols.parent] = d[S], b.$_super[S] = d[S].bind(b);
            Object.assign(h, g.overrides);
          }
          g.cast = Object.assign({}, y.cast, g.cast);
          const k = Object.assign({}, y.manifest, g.manifest);
          return k.build = l.build(g.manifest && g.manifest.build, y.manifest && y.manifest.build), g.manifest = k, g.rebuild = l.rebuild(g.rebuild, y.rebuild), b;
        }, l.build = function(m, p) {
          return m && p ? function(d, h) {
            return p(m(d, h), h);
          } : m || p;
        }, l.coerce = function(m, p) {
          return m && p ? { from: m.from && p.from ? [.../* @__PURE__ */ new Set([...m.from, ...p.from])] : null, method(d, h) {
            let b;
            if ((!p.from || p.from.includes(typeof d)) && (b = p.method(d, h), b)) {
              if (b.errors || b.value === void 0) return b;
              d = b.value;
            }
            if (!m.from || m.from.includes(typeof d)) {
              const g = m.method(d, h);
              if (g) return g;
            }
            return b;
          } } : m || p;
        }, l.prepare = function(m, p) {
          return m && p ? function(d, h) {
            const b = m(d, h);
            if (b) {
              if (b.errors || b.value === void 0) return b;
              d = b.value;
            }
            return p(d, h) || b;
          } : m || p;
        }, l.rebuild = function(m, p) {
          return m && p ? function(d) {
            p(d), m(d);
          } : m || p;
        }, l.validate = function(m, p) {
          return m && p ? function(d, h) {
            const b = p(d, h);
            if (b) {
              if (b.errors && (!Array.isArray(b.errors) || b.errors.length)) return b;
              d = b.value;
            }
            return m(d, h) || b;
          } : m || p;
        };
      }, 5107: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(8652), f = o(8160), l = o(3292), m = o(6354), p = o(8901), d = o(9708), h = o(6133), b = o(3328), g = o(1152);
        let y;
        const w = { types: { alternatives: o(4946), any: o(8068), array: o(546), boolean: o(4937), date: o(7500), function: o(390), link: o(8785), number: o(3832), object: o(8966), string: o(7417), symbol: o(8826) }, aliases: { alt: "alternatives", bool: "boolean", func: "function" }, root: function() {
          const _ = { _types: new Set(Object.keys(w.types)) };
          for (const E of _._types) _[E] = function() {
            for (var k = arguments.length, S = new Array(k), A = 0; A < k; A++) S[A] = arguments[A];
            return a(!S.length || ["alternatives", "link", "object"].includes(E), "The", E, "type does not allow arguments"), w.generate(this, w.types[E], S);
          };
          for (const E of ["allow", "custom", "disallow", "equal", "exist", "forbidden", "invalid", "not", "only", "optional", "options", "prefs", "preferences", "required", "strip", "valid", "when"]) _[E] = function() {
            return this.any()[E](...arguments);
          };
          Object.assign(_, w.methods);
          for (const E in w.aliases) {
            const k = w.aliases[E];
            _[E] = _[k];
          }
          return _.x = _.expression, g.setup && g.setup(_), _;
        } };
        w.methods = { ValidationError: m.ValidationError, version: f.version, cache: u.provider, assert(_, E) {
          for (var k = arguments.length, S = new Array(k > 2 ? k - 2 : 0), A = 2; A < k; A++) S[A - 2] = arguments[A];
          w.assert(_, E, !0, S);
        }, attempt(_, E) {
          for (var k = arguments.length, S = new Array(k > 2 ? k - 2 : 0), A = 2; A < k; A++) S[A - 2] = arguments[A];
          return w.assert(_, E, !1, S);
        }, build(_) {
          return a(typeof d.build == "function", "Manifest functionality disabled"), d.build(this, _);
        }, checkPreferences(_) {
          f.checkPreferences(_);
        }, compile(_, E) {
          return l.compile(this, _, E);
        }, defaults(_) {
          a(typeof _ == "function", "modifier must be a function");
          const E = Object.assign({}, this);
          for (const k of E._types) {
            const S = _(E[k]());
            a(f.isSchema(S), "modifier must return a valid schema object"), E[k] = function() {
              for (var A = arguments.length, x = new Array(A), T = 0; T < A; T++) x[T] = arguments[T];
              return w.generate(this, S, x);
            };
          }
          return E;
        }, expression() {
          for (var _ = arguments.length, E = new Array(_), k = 0; k < _; k++) E[k] = arguments[k];
          return new b(...E);
        }, extend() {
          for (var _ = arguments.length, E = new Array(_), k = 0; k < _; k++) E[k] = arguments[k];
          f.verifyFlat(E, "extend"), y = y || o(3378), a(E.length, "You need to provide at least one extension"), this.assert(E, y.extensions);
          const S = Object.assign({}, this);
          S._types = new Set(S._types);
          for (let A of E) {
            typeof A == "function" && (A = A(S)), this.assert(A, y.extension);
            const x = w.expandExtension(A, S);
            for (const T of x) {
              a(S[T.type] === void 0 || S._types.has(T.type), "Cannot override name", T.type);
              const N = T.base || this.any(), F = p.type(N, T);
              S._types.add(T.type), S[T.type] = function() {
                for (var V = arguments.length, oe = new Array(V), H = 0; H < V; H++) oe[H] = arguments[H];
                return w.generate(this, F, oe);
              };
            }
          }
          return S;
        }, isError: m.ValidationError.isError, isExpression: b.isTemplate, isRef: h.isRef, isSchema: f.isSchema, in() {
          return h.in(...arguments);
        }, override: f.symbols.override, ref() {
          return h.create(...arguments);
        }, types() {
          const _ = {};
          for (const E of this._types) _[E] = this[E]();
          for (const E in w.aliases) _[E] = this[E]();
          return _;
        } }, w.assert = function(_, E, k, S) {
          const A = S[0] instanceof Error || typeof S[0] == "string" ? S[0] : null, x = A !== null ? S[1] : S[0], T = E.validate(_, f.preferences({ errors: { stack: !0 } }, x || {}));
          let N = T.error;
          if (!N) return T.value;
          if (A instanceof Error) throw A;
          const F = k && typeof N.annotate == "function" ? N.annotate() : N.message;
          throw N instanceof m.ValidationError == 0 && (N = c(N)), N.message = A ? `${A} ${F}` : F, N;
        }, w.generate = function(_, E, k) {
          return a(_, "Must be invoked on a Joi instance."), E.$_root = _, E._definition.args && k.length ? E._definition.args(E, ...k) : E;
        }, w.expandExtension = function(_, E) {
          if (typeof _.type == "string") return [_];
          const k = [];
          for (const S of E._types) if (_.type.test(S)) {
            const A = Object.assign({}, _);
            A.type = S, A.base = E[S](), k.push(A);
          }
          return k;
        }, s.exports = w.root();
      }, 6914: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(3328);
        i.compile = function(f, l) {
          if (typeof f == "string") return a(!l, "Cannot set single message string"), new u(f);
          if (u.isTemplate(f)) return a(!l, "Cannot set single message template"), f;
          a(typeof f == "object" && !Array.isArray(f), "Invalid message options"), l = l ? c(l) : {};
          for (let m in f) {
            const p = f[m];
            if (m === "root" || u.isTemplate(p)) {
              l[m] = p;
              continue;
            }
            if (typeof p == "string") {
              l[m] = new u(p);
              continue;
            }
            a(typeof p == "object" && !Array.isArray(p), "Invalid message for", m);
            const d = m;
            for (m in l[d] = l[d] || {}, p) {
              const h = p[m];
              m === "root" || u.isTemplate(h) ? l[d][m] = h : (a(typeof h == "string", "Invalid message for", m, "in", d), l[d][m] = new u(h));
            }
          }
          return l;
        }, i.decompile = function(f) {
          const l = {};
          for (let m in f) {
            const p = f[m];
            if (m === "root") {
              l.root = p;
              continue;
            }
            if (u.isTemplate(p)) {
              l[m] = p.describe({ compact: !0 });
              continue;
            }
            const d = m;
            for (m in l[d] = {}, p) {
              const h = p[m];
              m !== "root" ? l[d][m] = h.describe({ compact: !0 }) : l[d].root = h;
            }
          }
          return l;
        }, i.merge = function(f, l) {
          if (!f) return i.compile(l);
          if (!l) return f;
          if (typeof l == "string") return new u(l);
          if (u.isTemplate(l)) return l;
          const m = c(f);
          for (let p in l) {
            const d = l[p];
            if (p === "root" || u.isTemplate(d)) {
              m[p] = d;
              continue;
            }
            if (typeof d == "string") {
              m[p] = new u(d);
              continue;
            }
            a(typeof d == "object" && !Array.isArray(d), "Invalid message for", p);
            const h = p;
            for (p in m[h] = m[h] || {}, d) {
              const b = d[p];
              p === "root" || u.isTemplate(b) ? m[h][p] = b : (a(typeof b == "string", "Invalid message for", p, "in", h), m[h][p] = new u(b));
            }
          }
          return m;
        };
      }, 2294: (s, i, o) => {
        const a = o(375), c = o(8160), u = o(6133), f = {};
        i.Ids = f.Ids = class {
          constructor() {
            this._byId = /* @__PURE__ */ new Map(), this._byKey = /* @__PURE__ */ new Map(), this._schemaChain = !1;
          }
          clone() {
            const l = new f.Ids();
            return l._byId = new Map(this._byId), l._byKey = new Map(this._byKey), l._schemaChain = this._schemaChain, l;
          }
          concat(l) {
            l._schemaChain && (this._schemaChain = !0);
            for (const [m, p] of l._byId.entries()) a(!this._byKey.has(m), "Schema id conflicts with existing key:", m), this._byId.set(m, p);
            for (const [m, p] of l._byKey.entries()) a(!this._byId.has(m), "Schema key conflicts with existing id:", m), this._byKey.set(m, p);
          }
          fork(l, m, p) {
            const d = this._collect(l);
            d.push({ schema: p });
            const h = d.shift();
            let b = { id: h.id, schema: m(h.schema) };
            a(c.isSchema(b.schema), "adjuster function failed to return a joi schema type");
            for (const g of d) b = { id: g.id, schema: f.fork(g.schema, b.id, b.schema) };
            return b.schema;
          }
          labels(l) {
            let m = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
            const p = l[0], d = this._get(p);
            if (!d) return [...m, ...l].join(".");
            const h = l.slice(1);
            return m = [...m, d.schema._flags.label || p], h.length ? d.schema._ids.labels(h, m) : m.join(".");
          }
          reach(l) {
            let m = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
            const p = l[0], d = this._get(p);
            a(d, "Schema does not contain path", [...m, ...l].join("."));
            const h = l.slice(1);
            return h.length ? d.schema._ids.reach(h, [...m, p]) : d.schema;
          }
          register(l) {
            let { key: m } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (!l || !c.isSchema(l)) return;
            (l.$_property("schemaChain") || l._ids._schemaChain) && (this._schemaChain = !0);
            const p = l._flags.id;
            if (p) {
              const d = this._byId.get(p);
              a(!d || d.schema === l, "Cannot add different schemas with the same id:", p), a(!this._byKey.has(p), "Schema id conflicts with existing key:", p), this._byId.set(p, { schema: l, id: p });
            }
            m && (a(!this._byKey.has(m), "Schema already contains key:", m), a(!this._byId.has(m), "Schema key conflicts with existing id:", m), this._byKey.set(m, { schema: l, id: m }));
          }
          reset() {
            this._byId = /* @__PURE__ */ new Map(), this._byKey = /* @__PURE__ */ new Map(), this._schemaChain = !1;
          }
          _collect(l) {
            let m = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], p = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
            const d = l[0], h = this._get(d);
            a(h, "Schema does not contain path", [...m, ...l].join(".")), p = [h, ...p];
            const b = l.slice(1);
            return b.length ? h.schema._ids._collect(b, [...m, d], p) : p;
          }
          _get(l) {
            return this._byId.get(l) || this._byKey.get(l);
          }
        }, f.fork = function(l, m, p) {
          const d = i.schema(l, { each: (h, b) => {
            let { key: g } = b;
            if (m === (h._flags.id || g)) return p;
          }, ref: !1 });
          return d ? d.$_mutateRebuild() : l;
        }, i.schema = function(l, m) {
          let p;
          for (const d in l._flags) {
            if (d[0] === "_") continue;
            const h = f.scan(l._flags[d], { source: "flags", name: d }, m);
            h !== void 0 && (p = p || l.clone(), p._flags[d] = h);
          }
          for (let d = 0; d < l._rules.length; ++d) {
            const h = l._rules[d], b = f.scan(h.args, { source: "rules", name: h.name }, m);
            if (b !== void 0) {
              p = p || l.clone();
              const g = Object.assign({}, h);
              g.args = b, p._rules[d] = g, p._singleRules.get(h.name) === h && p._singleRules.set(h.name, g);
            }
          }
          for (const d in l.$_terms) {
            if (d[0] === "_") continue;
            const h = f.scan(l.$_terms[d], { source: "terms", name: d }, m);
            h !== void 0 && (p = p || l.clone(), p.$_terms[d] = h);
          }
          return p;
        }, f.scan = function(l, m, p, d, h) {
          const b = d || [];
          if (l === null || typeof l != "object") return;
          let g;
          if (Array.isArray(l)) {
            for (let y = 0; y < l.length; ++y) {
              const w = m.source === "terms" && m.name === "keys" && l[y].key, _ = f.scan(l[y], m, p, [y, ...b], w);
              _ !== void 0 && (g = g || l.slice(), g[y] = _);
            }
            return g;
          }
          if (p.schema !== !1 && c.isSchema(l) || p.ref !== !1 && u.isRef(l)) {
            const y = p.each(l, { ...m, path: b, key: h });
            return y === l ? void 0 : y;
          }
          for (const y in l) {
            if (y[0] === "_") continue;
            const w = f.scan(l[y], m, p, [y, ...b], h);
            w !== void 0 && (g = g || Object.assign({}, l), g[y] = w);
          }
          return g;
        };
      }, 6133: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(9621), f = o(8160);
        let l;
        const m = { symbol: Symbol("ref"), defaults: { adjust: null, in: !1, iterables: null, map: null, separator: ".", type: "value" } };
        i.create = function(p) {
          let d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          a(typeof p == "string", "Invalid reference key:", p), f.assertOptions(d, ["adjust", "ancestor", "in", "iterables", "map", "prefix", "render", "separator"]), a(!d.prefix || typeof d.prefix == "object", "options.prefix must be of type object");
          const h = Object.assign({}, m.defaults, d);
          delete h.prefix;
          const b = h.separator, g = m.context(p, b, d.prefix);
          if (h.type = g.type, p = g.key, h.type === "value") if (g.root && (a(!b || p[0] !== b, "Cannot specify relative path with root prefix"), h.ancestor = "root", p || (p = null)), b && b === p) p = null, h.ancestor = 0;
          else if (h.ancestor !== void 0) a(!b || !p || p[0] !== b, "Cannot combine prefix with ancestor option");
          else {
            const [y, w] = m.ancestor(p, b);
            w && (p = p.slice(w)) === "" && (p = null), h.ancestor = y;
          }
          return h.path = b ? p === null ? [] : p.split(b) : [p], new m.Ref(h);
        }, i.in = function(p) {
          let d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          return i.create(p, { ...d, in: !0 });
        }, i.isRef = function(p) {
          return !!p && !!p[f.symbols.ref];
        }, m.Ref = class {
          constructor(p) {
            a(typeof p == "object", "Invalid reference construction"), f.assertOptions(p, ["adjust", "ancestor", "in", "iterables", "map", "path", "render", "separator", "type", "depth", "key", "root", "display"]), a([!1, void 0].includes(p.separator) || typeof p.separator == "string" && p.separator.length === 1, "Invalid separator"), a(!p.adjust || typeof p.adjust == "function", "options.adjust must be a function"), a(!p.map || Array.isArray(p.map), "options.map must be an array"), a(!p.map || !p.adjust, "Cannot set both map and adjust options"), Object.assign(this, m.defaults, p), a(this.type === "value" || this.ancestor === void 0, "Non-value references cannot reference ancestors"), Array.isArray(this.map) && (this.map = new Map(this.map)), this.depth = this.path.length, this.key = this.path.length ? this.path.join(this.separator) : null, this.root = this.path[0], this.updateDisplay();
          }
          resolve(p, d, h, b) {
            let g = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
            return a(!this.in || g.in, "Invalid in() reference usage"), this.type === "global" ? this._resolve(h.context, d, g) : this.type === "local" ? this._resolve(b, d, g) : this.ancestor ? this.ancestor === "root" ? this._resolve(d.ancestors[d.ancestors.length - 1], d, g) : (a(this.ancestor <= d.ancestors.length, "Invalid reference exceeds the schema root:", this.display), this._resolve(d.ancestors[this.ancestor - 1], d, g)) : this._resolve(p, d, g);
          }
          _resolve(p, d, h) {
            let b;
            if (this.type === "value" && d.mainstay.shadow && h.shadow !== !1 && (b = d.mainstay.shadow.get(this.absolute(d))), b === void 0 && (b = u(p, this.path, { iterables: this.iterables, functions: !0 })), this.adjust && (b = this.adjust(b)), this.map) {
              const g = this.map.get(b);
              g !== void 0 && (b = g);
            }
            return d.mainstay && d.mainstay.tracer.resolve(d, this, b), b;
          }
          toString() {
            return this.display;
          }
          absolute(p) {
            return [...p.path.slice(0, -this.ancestor), ...this.path];
          }
          clone() {
            return new m.Ref(this);
          }
          describe() {
            const p = { path: this.path };
            this.type !== "value" && (p.type = this.type), this.separator !== "." && (p.separator = this.separator), this.type === "value" && this.ancestor !== 1 && (p.ancestor = this.ancestor), this.map && (p.map = [...this.map]);
            for (const d of ["adjust", "iterables", "render"]) this[d] !== null && this[d] !== void 0 && (p[d] = this[d]);
            return this.in !== !1 && (p.in = !0), { ref: p };
          }
          updateDisplay() {
            const p = this.key !== null ? this.key : "";
            if (this.type !== "value") return void (this.display = `ref:${this.type}:${p}`);
            if (!this.separator) return void (this.display = `ref:${p}`);
            if (!this.ancestor) return void (this.display = `ref:${this.separator}${p}`);
            if (this.ancestor === "root") return void (this.display = `ref:root:${p}`);
            if (this.ancestor === 1) return void (this.display = `ref:${p || ".."}`);
            const d = new Array(this.ancestor + 1).fill(this.separator).join("");
            this.display = `ref:${d}${p || ""}`;
          }
        }, m.Ref.prototype[f.symbols.ref] = !0, i.build = function(p) {
          return (p = Object.assign({}, m.defaults, p)).type === "value" && p.ancestor === void 0 && (p.ancestor = 1), new m.Ref(p);
        }, m.context = function(p, d) {
          let h = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          if (p = p.trim(), h) {
            const b = h.global === void 0 ? "$" : h.global;
            if (b !== d && p.startsWith(b)) return { key: p.slice(b.length), type: "global" };
            const g = h.local === void 0 ? "#" : h.local;
            if (g !== d && p.startsWith(g)) return { key: p.slice(g.length), type: "local" };
            const y = h.root === void 0 ? "/" : h.root;
            if (y !== d && p.startsWith(y)) return { key: p.slice(y.length), type: "value", root: !0 };
          }
          return { key: p, type: "value" };
        }, m.ancestor = function(p, d) {
          if (!d) return [1, 0];
          if (p[0] !== d) return [1, 0];
          if (p[1] !== d) return [0, 1];
          let h = 2;
          for (; p[h] === d; ) ++h;
          return [h - 1, h];
        }, i.toSibling = 0, i.toParent = 1, i.Manager = class {
          constructor() {
            this.refs = [];
          }
          register(p, d) {
            if (p) if (d = d === void 0 ? i.toParent : d, Array.isArray(p)) for (const h of p) this.register(h, d);
            else if (f.isSchema(p)) for (const h of p._refs.refs) h.ancestor - d >= 0 && this.refs.push({ ancestor: h.ancestor - d, root: h.root });
            else i.isRef(p) && p.type === "value" && p.ancestor - d >= 0 && this.refs.push({ ancestor: p.ancestor - d, root: p.root }), l = l || o(3328), l.isTemplate(p) && this.register(p.refs(), d);
          }
          get length() {
            return this.refs.length;
          }
          clone() {
            const p = new i.Manager();
            return p.refs = c(this.refs), p;
          }
          reset() {
            this.refs = [];
          }
          roots() {
            return this.refs.filter((p) => !p.ancestor).map((p) => p.root);
          }
        };
      }, 3378: (s, i, o) => {
        const a = o(5107), c = {};
        c.wrap = a.string().min(1).max(2).allow(!1), i.preferences = a.object({ allowUnknown: a.boolean(), abortEarly: a.boolean(), artifacts: a.boolean(), cache: a.boolean(), context: a.object(), convert: a.boolean(), dateFormat: a.valid("date", "iso", "string", "time", "utc"), debug: a.boolean(), errors: { escapeHtml: a.boolean(), label: a.valid("path", "key", !1), language: [a.string(), a.object().ref()], render: a.boolean(), stack: a.boolean(), wrap: { label: c.wrap, array: c.wrap, string: c.wrap } }, externals: a.boolean(), messages: a.object(), noDefaults: a.boolean(), nonEnumerables: a.boolean(), presence: a.valid("required", "optional", "forbidden"), skipFunctions: a.boolean(), stripUnknown: a.object({ arrays: a.boolean(), objects: a.boolean() }).or("arrays", "objects").allow(!0, !1), warnings: a.boolean() }).strict(), c.nameRx = /^[a-zA-Z0-9]\w*$/, c.rule = a.object({ alias: a.array().items(a.string().pattern(c.nameRx)).single(), args: a.array().items(a.string(), a.object({ name: a.string().pattern(c.nameRx).required(), ref: a.boolean(), assert: a.alternatives([a.function(), a.object().schema()]).conditional("ref", { is: !0, then: a.required() }), normalize: a.function(), message: a.string().when("assert", { is: a.function(), then: a.required() }) })), convert: a.boolean(), manifest: a.boolean(), method: a.function().allow(!1), multi: a.boolean(), validate: a.function() }), i.extension = a.object({ type: a.alternatives([a.string(), a.object().regex()]).required(), args: a.function(), cast: a.object().pattern(c.nameRx, a.object({ from: a.function().maxArity(1).required(), to: a.function().minArity(1).maxArity(2).required() })), base: a.object().schema().when("type", { is: a.object().regex(), then: a.forbidden() }), coerce: [a.function().maxArity(3), a.object({ method: a.function().maxArity(3).required(), from: a.array().items(a.string()).single() })], flags: a.object().pattern(c.nameRx, a.object({ setter: a.string(), default: a.any() })), manifest: { build: a.function().arity(2) }, messages: [a.object(), a.string()], modifiers: a.object().pattern(c.nameRx, a.function().minArity(1).maxArity(2)), overrides: a.object().pattern(c.nameRx, a.function()), prepare: a.function().maxArity(3), rebuild: a.function().arity(1), rules: a.object().pattern(c.nameRx, c.rule), terms: a.object().pattern(c.nameRx, a.object({ init: a.array().allow(null).required(), manifest: a.object().pattern(/.+/, [a.valid("schema", "single"), a.object({ mapped: a.object({ from: a.string().required(), to: a.string().required() }).required() })]) })), validate: a.function().maxArity(3) }).strict(), i.extensions = a.array().items(a.object(), a.function().arity(1)).strict(), c.desc = { buffer: a.object({ buffer: a.string() }), func: a.object({ function: a.function().required(), options: { literal: !0 } }), override: a.object({ override: !0 }), ref: a.object({ ref: a.object({ type: a.valid("value", "global", "local"), path: a.array().required(), separator: a.string().length(1).allow(!1), ancestor: a.number().min(0).integer().allow("root"), map: a.array().items(a.array().length(2)).min(1), adjust: a.function(), iterables: a.boolean(), in: a.boolean(), render: a.boolean() }).required() }), regex: a.object({ regex: a.string().min(3) }), special: a.object({ special: a.valid("deep").required() }), template: a.object({ template: a.string().required(), options: a.object() }), value: a.object({ value: a.alternatives([a.object(), a.array()]).required() }) }, c.desc.entity = a.alternatives([a.array().items(a.link("...")), a.boolean(), a.function(), a.number(), a.string(), c.desc.buffer, c.desc.func, c.desc.ref, c.desc.regex, c.desc.special, c.desc.template, c.desc.value, a.link("/")]), c.desc.values = a.array().items(null, a.boolean(), a.function(), a.number().allow(1 / 0, -1 / 0), a.string().allow(""), a.symbol(), c.desc.buffer, c.desc.func, c.desc.override, c.desc.ref, c.desc.regex, c.desc.template, c.desc.value), c.desc.messages = a.object().pattern(/.+/, [a.string(), c.desc.template, a.object().pattern(/.+/, [a.string(), c.desc.template])]), i.description = a.object({ type: a.string().required(), flags: a.object({ cast: a.string(), default: a.any(), description: a.string(), empty: a.link("/"), failover: c.desc.entity, id: a.string(), label: a.string(), only: !0, presence: ["optional", "required", "forbidden"], result: ["raw", "strip"], strip: a.boolean(), unit: a.string() }).unknown(), preferences: { allowUnknown: a.boolean(), abortEarly: a.boolean(), artifacts: a.boolean(), cache: a.boolean(), convert: a.boolean(), dateFormat: ["date", "iso", "string", "time", "utc"], errors: { escapeHtml: a.boolean(), label: ["path", "key"], language: [a.string(), c.desc.ref], wrap: { label: c.wrap, array: c.wrap } }, externals: a.boolean(), messages: c.desc.messages, noDefaults: a.boolean(), nonEnumerables: a.boolean(), presence: ["required", "optional", "forbidden"], skipFunctions: a.boolean(), stripUnknown: a.object({ arrays: a.boolean(), objects: a.boolean() }).or("arrays", "objects").allow(!0, !1), warnings: a.boolean() }, allow: c.desc.values, invalid: c.desc.values, rules: a.array().min(1).items({ name: a.string().required(), args: a.object().min(1), keep: a.boolean(), message: [a.string(), c.desc.messages], warn: a.boolean() }), keys: a.object().pattern(/.*/, a.link("/")), link: c.desc.ref }).pattern(/^[a-z]\w*$/, a.any());
      }, 493: (s, i, o) => {
        const a = o(8571), c = o(9621), u = o(8160), f = { value: Symbol("value") };
        s.exports = f.State = class {
          constructor(l, m, p) {
            this.path = l, this.ancestors = m, this.mainstay = p.mainstay, this.schemas = p.schemas, this.debug = null;
          }
          localize(l) {
            let m = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, p = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            const d = new f.State(l, m, this);
            return p && d.schemas && (d.schemas = [f.schemas(p), ...d.schemas]), d;
          }
          nest(l, m) {
            const p = new f.State(this.path, this.ancestors, this);
            return p.schemas = p.schemas && [f.schemas(l), ...p.schemas], p.debug = m, p;
          }
          shadow(l, m) {
            this.mainstay.shadow = this.mainstay.shadow || new f.Shadow(), this.mainstay.shadow.set(this.path, l, m);
          }
          snapshot() {
            this.mainstay.shadow && (this._snapshot = a(this.mainstay.shadow.node(this.path))), this.mainstay.snapshot();
          }
          restore() {
            this.mainstay.shadow && (this.mainstay.shadow.override(this.path, this._snapshot), this._snapshot = void 0), this.mainstay.restore();
          }
        }, f.schemas = function(l) {
          return u.isSchema(l) ? { schema: l } : l;
        }, f.Shadow = class {
          constructor() {
            this._values = null;
          }
          set(l, m, p) {
            if (!l.length || p === "strip" && typeof l[l.length - 1] == "number") return;
            this._values = this._values || /* @__PURE__ */ new Map();
            let d = this._values;
            for (let h = 0; h < l.length; ++h) {
              const b = l[h];
              let g = d.get(b);
              g || (g = /* @__PURE__ */ new Map(), d.set(b, g)), d = g;
            }
            d[f.value] = m;
          }
          get(l) {
            const m = this.node(l);
            if (m) return m[f.value];
          }
          node(l) {
            if (this._values) return c(this._values, l, { iterables: !0 });
          }
          override(l, m) {
            if (!this._values) return;
            const p = l.slice(0, -1), d = l[l.length - 1], h = c(this._values, p, { iterables: !0 });
            m ? h.set(d, m) : h && h.delete(d);
          }
        };
      }, 3328: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(5277), f = o(1447), l = o(8160), m = o(6354), p = o(6133), d = { symbol: Symbol("template"), opens: new Array(1e3).join("\0"), closes: new Array(1e3).join(""), dateFormat: { date: Date.prototype.toDateString, iso: Date.prototype.toISOString, string: Date.prototype.toString, time: Date.prototype.toTimeString, utc: Date.prototype.toUTCString } };
        s.exports = d.Template = class {
          constructor(h, b) {
            a(typeof h == "string", "Template source must be a string"), a(!h.includes("\0") && !h.includes(""), "Template source cannot contain reserved control characters"), this.source = h, this.rendered = h, this._template = null, this._settings = c(b), this._parse();
          }
          _parse() {
            if (!this.source.includes("{")) return;
            const h = d.encode(this.source), b = d.split(h);
            let g = !1;
            const y = [], w = b.shift();
            w && y.push(w);
            for (const _ of b) {
              const E = _[0] !== "{", k = E ? "}" : "}}", S = _.indexOf(k);
              if (S === -1 || _[1] === "{") {
                y.push(`{${d.decode(_)}`);
                continue;
              }
              let A = _.slice(E ? 0 : 1, S);
              const x = A[0] === ":";
              x && (A = A.slice(1));
              const T = this._ref(d.decode(A), { raw: E, wrapped: x });
              y.push(T), typeof T != "string" && (g = !0);
              const N = _.slice(S + k.length);
              N && y.push(d.decode(N));
            }
            g ? this._template = y : this.rendered = y.join("");
          }
          static date(h, b) {
            return d.dateFormat[b.dateFormat].call(h);
          }
          describe() {
            let h = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            if (!this._settings && h.compact) return this.source;
            const b = { template: this.source };
            return this._settings && (b.options = this._settings), b;
          }
          static build(h) {
            return new d.Template(h.template, h.options);
          }
          isDynamic() {
            return !!this._template;
          }
          static isTemplate(h) {
            return !!h && !!h[l.symbols.template];
          }
          refs() {
            if (!this._template) return;
            const h = [];
            for (const b of this._template) typeof b != "string" && h.push(...b.refs);
            return h;
          }
          resolve(h, b, g, y) {
            return this._template && this._template.length === 1 ? this._part(this._template[0], h, b, g, y, {}) : this.render(h, b, g, y);
          }
          _part(h) {
            for (var b = arguments.length, g = new Array(b > 1 ? b - 1 : 0), y = 1; y < b; y++) g[y - 1] = arguments[y];
            return h.ref ? h.ref.resolve(...g) : h.formula.evaluate(g);
          }
          render(h, b, g, y) {
            let w = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
            if (!this.isDynamic()) return this.rendered;
            const _ = [];
            for (const E of this._template) if (typeof E == "string") _.push(E);
            else {
              const k = this._part(E, h, b, g, y, w), S = d.stringify(k, h, b, g, y, w);
              if (S !== void 0) {
                const A = E.raw || (w.errors && w.errors.escapeHtml) === !1 ? S : u(S);
                _.push(d.wrap(A, E.wrapped && g.errors.wrap.label));
              }
            }
            return _.join("");
          }
          _ref(h, b) {
            let { raw: g, wrapped: y } = b;
            const w = [], _ = (k) => {
              const S = p.create(k, this._settings);
              return w.push(S), (A) => S.resolve(...A);
            };
            try {
              var E = new f.Parser(h, { reference: _, functions: d.functions, constants: d.constants });
            } catch (k) {
              throw k.message = `Invalid template variable "${h}" fails due to: ${k.message}`, k;
            }
            if (E.single) {
              if (E.single.type === "reference") {
                const k = w[0];
                return { ref: k, raw: g, refs: w, wrapped: y || k.type === "local" && k.key === "label" };
              }
              return d.stringify(E.single.value);
            }
            return { formula: E, raw: g, refs: w };
          }
          toString() {
            return this.source;
          }
        }, d.Template.prototype[l.symbols.template] = !0, d.Template.prototype.isImmutable = !0, d.encode = function(h) {
          return h.replace(/\\(\{+)/g, (b, g) => d.opens.slice(0, g.length)).replace(/\\(\}+)/g, (b, g) => d.closes.slice(0, g.length));
        }, d.decode = function(h) {
          return h.replace(/\u0000/g, "{").replace(/\u0001/g, "}");
        }, d.split = function(h) {
          const b = [];
          let g = "";
          for (let y = 0; y < h.length; ++y) {
            const w = h[y];
            if (w === "{") {
              let _ = "";
              for (; y + 1 < h.length && h[y + 1] === "{"; ) _ += "{", ++y;
              b.push(g), g = _;
            } else g += w;
          }
          return b.push(g), b;
        }, d.wrap = function(h, b) {
          return b ? b.length === 1 ? `${b}${h}${b}` : `${b[0]}${h}${b[1]}` : h;
        }, d.stringify = function(h, b, g, y, w) {
          let _ = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
          const E = typeof h, k = y && y.errors && y.errors.wrap || {};
          let S = !1;
          if (p.isRef(h) && h.render && (S = h.in, h = h.resolve(b, g, y, w, { in: h.in, ..._ })), h === null) return "null";
          if (E === "string") return d.wrap(h, _.arrayItems && k.string);
          if (E === "number" || E === "function" || E === "symbol") return h.toString();
          if (E !== "object") return JSON.stringify(h);
          if (h instanceof Date) return d.Template.date(h, y);
          if (h instanceof Map) {
            const x = [];
            for (const [T, N] of h.entries()) x.push(`${T.toString()} -> ${N.toString()}`);
            h = x;
          }
          if (!Array.isArray(h)) return h.toString();
          const A = [];
          for (const x of h) A.push(d.stringify(x, b, g, y, w, { arrayItems: !0, ..._ }));
          return d.wrap(A.join(", "), !S && k.array);
        }, d.constants = { true: !0, false: !1, null: null, second: 1e3, minute: 6e4, hour: 36e5, day: 864e5 }, d.functions = { if: (h, b, g) => h ? b : g, length: (h) => typeof h == "string" ? h.length : h && typeof h == "object" ? Array.isArray(h) ? h.length : Object.keys(h).length : null, msg(h) {
          const [b, g, y, w, _] = this, E = _.messages;
          if (!E) return "";
          const k = m.template(b, E[0], h, g, y) || m.template(b, E[1], h, g, y);
          return k ? k.render(b, g, y, w, _) : "";
        }, number: (h) => typeof h == "number" ? h : typeof h == "string" ? parseFloat(h) : typeof h == "boolean" ? h ? 1 : 0 : h instanceof Date ? h.getTime() : null };
      }, 4946: (s, i, o) => {
        const a = o(375), c = o(1687), u = o(8068), f = o(8160), l = o(3292), m = o(6354), p = o(6133), d = {};
        s.exports = u.extend({ type: "alternatives", flags: { match: { default: "any" } }, terms: { matches: { init: [], register: p.toSibling } }, args(h) {
          for (var b = arguments.length, g = new Array(b > 1 ? b - 1 : 0), y = 1; y < b; y++) g[y - 1] = arguments[y];
          return g.length === 1 && Array.isArray(g[0]) ? h.try(...g[0]) : h.try(...g);
        }, validate(h, b) {
          const { schema: g, error: y, state: w, prefs: _ } = b;
          if (g._flags.match) {
            const k = [], S = [];
            for (let x = 0; x < g.$_terms.matches.length; ++x) {
              const T = g.$_terms.matches[x], N = w.nest(T.schema, `match.${x}`);
              N.snapshot();
              const F = T.schema.$_validate(h, N, _);
              F.errors ? (S.push(F.errors), N.restore()) : k.push(F.value);
            }
            if (k.length === 0) return { errors: y("alternatives.any", { details: S.map((x) => m.details(x, { override: !1 })) }) };
            if (g._flags.match === "one") return k.length === 1 ? { value: k[0] } : { errors: y("alternatives.one") };
            if (k.length !== g.$_terms.matches.length) return { errors: y("alternatives.all", { details: S.map((x) => m.details(x, { override: !1 })) }) };
            const A = (x) => x.$_terms.matches.some((T) => T.schema.type === "object" || T.schema.type === "alternatives" && A(T.schema));
            return A(g) ? { value: k.reduce((x, T) => c(x, T, { mergeArrays: !1 })) } : { value: k[k.length - 1] };
          }
          const E = [];
          for (let k = 0; k < g.$_terms.matches.length; ++k) {
            const S = g.$_terms.matches[k];
            if (S.schema) {
              const T = w.nest(S.schema, `match.${k}`);
              T.snapshot();
              const N = S.schema.$_validate(h, T, _);
              if (!N.errors) return N;
              T.restore(), E.push({ schema: S.schema, reports: N.errors });
              continue;
            }
            const A = S.ref ? S.ref.resolve(h, w, _) : h, x = S.is ? [S] : S.switch;
            for (let T = 0; T < x.length; ++T) {
              const N = x[T], { is: F, then: V, otherwise: oe } = N, H = `match.${k}${S.switch ? "." + T : ""}`;
              if (F.$_match(A, w.nest(F, `${H}.is`), _)) {
                if (V) return V.$_validate(h, w.nest(V, `${H}.then`), _);
              } else if (oe) return oe.$_validate(h, w.nest(oe, `${H}.otherwise`), _);
            }
          }
          return d.errors(E, b);
        }, rules: { conditional: { method(h, b) {
          a(!this._flags._endedSwitch, "Unreachable condition"), a(!this._flags.match, "Cannot combine match mode", this._flags.match, "with conditional rule"), a(b.break === void 0, "Cannot use break option with alternatives conditional");
          const g = this.clone(), y = l.when(g, h, b), w = y.is ? [y] : y.switch;
          for (const _ of w) if (_.then && _.otherwise) {
            g.$_setFlag("_endedSwitch", !0, { clone: !1 });
            break;
          }
          return g.$_terms.matches.push(y), g.$_mutateRebuild();
        } }, match: { method(h) {
          if (a(["any", "one", "all"].includes(h), "Invalid alternatives match mode", h), h !== "any") for (const b of this.$_terms.matches) a(b.schema, "Cannot combine match mode", h, "with conditional rules");
          return this.$_setFlag("match", h);
        } }, try: { method() {
          for (var h = arguments.length, b = new Array(h), g = 0; g < h; g++) b[g] = arguments[g];
          a(b.length, "Missing alternative schemas"), f.verifyFlat(b, "try"), a(!this._flags._endedSwitch, "Unreachable condition");
          const y = this.clone();
          for (const w of b) y.$_terms.matches.push({ schema: y.$_compile(w) });
          return y.$_mutateRebuild();
        } } }, overrides: { label(h) {
          return this.$_parent("label", h).$_modify({ each: (b, g) => g.path[0] !== "is" ? b.label(h) : void 0, ref: !1 });
        } }, rebuild(h) {
          h.$_modify({ each: (b) => {
            f.isSchema(b) && b.type === "array" && h.$_setFlag("_arrayItems", !0, { clone: !1 });
          } });
        }, manifest: { build(h, b) {
          if (b.matches) for (const g of b.matches) {
            const { schema: y, ref: w, is: _, not: E, then: k, otherwise: S } = g;
            h = y ? h.try(y) : w ? h.conditional(w, { is: _, then: k, not: E, otherwise: S, switch: g.switch }) : h.conditional(_, { then: k, otherwise: S });
          }
          return h;
        } }, messages: { "alternatives.all": "{{#label}} does not match all of the required types", "alternatives.any": "{{#label}} does not match any of the allowed types", "alternatives.match": "{{#label}} does not match any of the allowed types", "alternatives.one": "{{#label}} matches more than one allowed type", "alternatives.types": "{{#label}} must be one of {{#types}}" } }), d.errors = function(h, b) {
          let { error: g, state: y } = b;
          if (!h.length) return { errors: g("alternatives.any") };
          if (h.length === 1) return { errors: h[0].reports };
          const w = /* @__PURE__ */ new Set(), _ = [];
          for (const { reports: E, schema: k } of h) {
            if (E.length > 1) return d.unmatched(h, g);
            const S = E[0];
            if (S instanceof m.Report == 0) return d.unmatched(h, g);
            if (S.state.path.length !== y.path.length) {
              _.push({ type: k.type, report: S });
              continue;
            }
            if (S.code === "any.only") {
              for (const T of S.local.valids) w.add(T);
              continue;
            }
            const [A, x] = S.code.split(".");
            x === "base" ? w.add(A) : _.push({ type: k.type, report: S });
          }
          return _.length ? _.length === 1 ? { errors: _[0].report } : d.unmatched(h, g) : { errors: g("alternatives.types", { types: [...w] }) };
        }, d.unmatched = function(h, b) {
          const g = [];
          for (const y of h) g.push(...y.reports);
          return { errors: b("alternatives.match", m.details(g, { override: !1 })) };
        };
      }, 8068: (s, i, o) => {
        const a = o(375), c = o(7629), u = o(8160), f = o(6914);
        s.exports = c.extend({ type: "any", flags: { only: { default: !1 } }, terms: { alterations: { init: null }, examples: { init: null }, externals: { init: null }, metas: { init: [] }, notes: { init: [] }, shared: { init: null }, tags: { init: [] }, whens: { init: null } }, rules: { custom: { method(l, m) {
          return a(typeof l == "function", "Method must be a function"), a(m === void 0 || m && typeof m == "string", "Description must be a non-empty string"), this.$_addRule({ name: "custom", args: { method: l, description: m } });
        }, validate(l, m, p) {
          let { method: d } = p;
          try {
            return d(l, m);
          } catch (h) {
            return m.error("any.custom", { error: h });
          }
        }, args: ["method", "description"], multi: !0 }, messages: { method(l) {
          return this.prefs({ messages: l });
        } }, shared: { method(l) {
          a(u.isSchema(l) && l._flags.id, "Schema must be a schema with an id");
          const m = this.clone();
          return m.$_terms.shared = m.$_terms.shared || [], m.$_terms.shared.push(l), m.$_mutateRegister(l), m;
        } }, warning: { method(l, m) {
          return a(l && typeof l == "string", "Invalid warning code"), this.$_addRule({ name: "warning", args: { code: l, local: m }, warn: !0 });
        }, validate(l, m, p) {
          let { code: d, local: h } = p;
          return m.error(d, h);
        }, args: ["code", "local"], multi: !0 } }, modifiers: { keep(l) {
          let m = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
          l.keep = m;
        }, message(l, m) {
          l.message = f.compile(m);
        }, warn(l) {
          let m = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
          l.warn = m;
        } }, manifest: { build(l, m) {
          for (const p in m) {
            const d = m[p];
            if (["examples", "externals", "metas", "notes", "tags"].includes(p)) for (const h of d) l = l[p.slice(0, -1)](h);
            else if (p !== "alterations") if (p !== "whens") {
              if (p === "shared") for (const h of d) l = l.shared(h);
            } else for (const h of d) {
              const { ref: b, is: g, not: y, then: w, otherwise: _, concat: E } = h;
              l = E ? l.concat(E) : b ? l.when(b, { is: g, not: y, then: w, otherwise: _, switch: h.switch, break: h.break }) : l.when(g, { then: w, otherwise: _, break: h.break });
            }
            else {
              const h = {};
              for (const { target: b, adjuster: g } of d) h[b] = g;
              l = l.alter(h);
            }
          }
          return l;
        } }, messages: { "any.custom": "{{#label}} failed custom validation because {{#error.message}}", "any.default": "{{#label}} threw an error when running default method", "any.failover": "{{#label}} threw an error when running failover method", "any.invalid": "{{#label}} contains an invalid value", "any.only": '{{#label}} must be {if(#valids.length == 1, "", "one of ")}{{#valids}}', "any.ref": "{{#label}} {{#arg}} references {{:#ref}} which {{#reason}}", "any.required": "{{#label}} is required", "any.unknown": "{{#label}} is not allowed" } });
      }, 546: (s, i, o) => {
        const a = o(375), c = o(9474), u = o(9621), f = o(8068), l = o(8160), m = o(3292), p = {};
        s.exports = f.extend({ type: "array", flags: { single: { default: !1 }, sparse: { default: !1 } }, terms: { items: { init: [], manifest: "schema" }, ordered: { init: [], manifest: "schema" }, _exclusions: { init: [] }, _inclusions: { init: [] }, _requireds: { init: [] } }, coerce: { from: "object", method(d, h) {
          let { schema: b, state: g, prefs: y } = h;
          if (!Array.isArray(d)) return;
          const w = b.$_getRule("sort");
          return w ? p.sort(b, d, w.args.options, g, y) : void 0;
        } }, validate(d, h) {
          let { schema: b, error: g } = h;
          if (!Array.isArray(d)) {
            if (b._flags.single) {
              const y = [d];
              return y[l.symbols.arraySingle] = !0, { value: y };
            }
            return { errors: g("array.base") };
          }
          if (b.$_getRule("items") || b.$_terms.externals) return { value: d.slice() };
        }, rules: { has: { method(d) {
          d = this.$_compile(d, { appendPath: !0 });
          const h = this.$_addRule({ name: "has", args: { schema: d } });
          return h.$_mutateRegister(d), h;
        }, validate(d, h, b) {
          let { state: g, prefs: y, error: w } = h, { schema: _ } = b;
          const E = [d, ...g.ancestors];
          for (let S = 0; S < d.length; ++S) {
            const A = g.localize([...g.path, S], E, _);
            if (_.$_match(d[S], A, y)) return d;
          }
          const k = _._flags.label;
          return k ? w("array.hasKnown", { patternLabel: k }) : w("array.hasUnknown", null);
        }, multi: !0 }, items: { method() {
          for (var d = arguments.length, h = new Array(d), b = 0; b < d; b++) h[b] = arguments[b];
          l.verifyFlat(h, "items");
          const g = this.$_addRule("items");
          for (let y = 0; y < h.length; ++y) {
            const w = l.tryWithPath(() => this.$_compile(h[y]), y, { append: !0 });
            g.$_terms.items.push(w);
          }
          return g.$_mutateRebuild();
        }, validate(d, h) {
          let { schema: b, error: g, state: y, prefs: w, errorsArray: _ } = h;
          const E = b.$_terms._requireds.slice(), k = b.$_terms.ordered.slice(), S = [...b.$_terms._inclusions, ...E], A = !d[l.symbols.arraySingle];
          delete d[l.symbols.arraySingle];
          const x = _();
          let T = d.length;
          for (let N = 0; N < T; ++N) {
            const F = d[N];
            let V = !1, oe = !1;
            const H = A ? N : new Number(N), Q = [...y.path, H];
            if (!b._flags.sparse && F === void 0) {
              if (x.push(g("array.sparse", { key: H, path: Q, pos: N, value: void 0 }, y.localize(Q))), w.abortEarly) return x;
              k.shift();
              continue;
            }
            const ae = [d, ...y.ancestors];
            for (const ve of b.$_terms._exclusions) if (ve.$_match(F, y.localize(Q, ae, ve), w, { presence: "ignore" })) {
              if (x.push(g("array.excludes", { pos: N, value: F }, y.localize(Q))), w.abortEarly) return x;
              V = !0, k.shift();
              break;
            }
            if (V) continue;
            if (b.$_terms.ordered.length) {
              if (k.length) {
                const ve = k.shift(), Se = ve.$_validate(F, y.localize(Q, ae, ve), w);
                if (Se.errors) {
                  if (x.push(...Se.errors), w.abortEarly) return x;
                } else if (ve._flags.result === "strip") p.fastSplice(d, N), --N, --T;
                else {
                  if (!b._flags.sparse && Se.value === void 0) {
                    if (x.push(g("array.sparse", { key: H, path: Q, pos: N, value: void 0 }, y.localize(Q))), w.abortEarly) return x;
                    continue;
                  }
                  d[N] = Se.value;
                }
                continue;
              }
              if (!b.$_terms.items.length) {
                if (x.push(g("array.orderedLength", { pos: N, limit: b.$_terms.ordered.length })), w.abortEarly) return x;
                break;
              }
            }
            const Ee = [];
            let pe = E.length;
            for (let ve = 0; ve < pe; ++ve) {
              const Se = y.localize(Q, ae, E[ve]);
              Se.snapshot();
              const ee = E[ve].$_validate(F, Se, w);
              if (Ee[ve] = ee, !ee.errors) {
                if (d[N] = ee.value, oe = !0, p.fastSplice(E, ve), --ve, --pe, !b._flags.sparse && ee.value === void 0 && (x.push(g("array.sparse", { key: H, path: Q, pos: N, value: void 0 }, y.localize(Q))), w.abortEarly)) return x;
                break;
              }
              Se.restore();
            }
            if (oe) continue;
            const Re = w.stripUnknown && !!w.stripUnknown.arrays || !1;
            pe = S.length;
            for (const ve of S) {
              let Se;
              const ee = E.indexOf(ve);
              if (ee !== -1) Se = Ee[ee];
              else {
                const xe = y.localize(Q, ae, ve);
                if (xe.snapshot(), Se = ve.$_validate(F, xe, w), !Se.errors) {
                  ve._flags.result === "strip" ? (p.fastSplice(d, N), --N, --T) : b._flags.sparse || Se.value !== void 0 ? d[N] = Se.value : (x.push(g("array.sparse", { key: H, path: Q, pos: N, value: void 0 }, y.localize(Q))), V = !0), oe = !0;
                  break;
                }
                xe.restore();
              }
              if (pe === 1) {
                if (Re) {
                  p.fastSplice(d, N), --N, --T, oe = !0;
                  break;
                }
                if (x.push(...Se.errors), w.abortEarly) return x;
                V = !0;
                break;
              }
            }
            if (!V && (b.$_terms._inclusions.length || b.$_terms._requireds.length) && !oe) {
              if (Re) {
                p.fastSplice(d, N), --N, --T;
                continue;
              }
              if (x.push(g("array.includes", { pos: N, value: F }, y.localize(Q))), w.abortEarly) return x;
            }
          }
          return E.length && p.fillMissedErrors(b, x, E, d, y, w), k.length && (p.fillOrderedErrors(b, x, k, d, y, w), x.length || p.fillDefault(k, d, y, w)), x.length ? x : d;
        }, priority: !0, manifest: !1 }, length: { method(d) {
          return this.$_addRule({ name: "length", args: { limit: d }, operator: "=" });
        }, validate(d, h, b, g) {
          let { limit: y } = b, { name: w, operator: _, args: E } = g;
          return l.compare(d.length, y, _) ? d : h.error("array." + w, { limit: E.limit, value: d });
        }, args: [{ name: "limit", ref: !0, assert: l.limit, message: "must be a positive integer" }] }, max: { method(d) {
          return this.$_addRule({ name: "max", method: "length", args: { limit: d }, operator: "<=" });
        } }, min: { method(d) {
          return this.$_addRule({ name: "min", method: "length", args: { limit: d }, operator: ">=" });
        } }, ordered: { method() {
          for (var d = arguments.length, h = new Array(d), b = 0; b < d; b++) h[b] = arguments[b];
          l.verifyFlat(h, "ordered");
          const g = this.$_addRule("items");
          for (let y = 0; y < h.length; ++y) {
            const w = l.tryWithPath(() => this.$_compile(h[y]), y, { append: !0 });
            p.validateSingle(w, g), g.$_mutateRegister(w), g.$_terms.ordered.push(w);
          }
          return g.$_mutateRebuild();
        } }, single: { method(d) {
          const h = d === void 0 || !!d;
          return a(!h || !this._flags._arrayItems, "Cannot specify single rule when array has array items"), this.$_setFlag("single", h);
        } }, sort: { method() {
          let d = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          l.assertOptions(d, ["by", "order"]);
          const h = { order: d.order || "ascending" };
          return d.by && (h.by = m.ref(d.by, { ancestor: 0 }), a(!h.by.ancestor, "Cannot sort by ancestor")), this.$_addRule({ name: "sort", args: { options: h } });
        }, validate(d, h, b) {
          let { error: g, state: y, prefs: w, schema: _ } = h, { options: E } = b;
          const { value: k, errors: S } = p.sort(_, d, E, y, w);
          if (S) return S;
          for (let A = 0; A < d.length; ++A) if (d[A] !== k[A]) return g("array.sort", { order: E.order, by: E.by ? E.by.key : "value" });
          return d;
        }, convert: !0 }, sparse: { method(d) {
          const h = d === void 0 || !!d;
          return this._flags.sparse === h ? this : (h ? this.clone() : this.$_addRule("items")).$_setFlag("sparse", h, { clone: !1 });
        } }, unique: { method(d) {
          let h = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          a(!d || typeof d == "function" || typeof d == "string", "comparator must be a function or a string"), l.assertOptions(h, ["ignoreUndefined", "separator"]);
          const b = { name: "unique", args: { options: h, comparator: d } };
          if (d) if (typeof d == "string") {
            const g = l.default(h.separator, ".");
            b.path = g ? d.split(g) : [d];
          } else b.comparator = d;
          return this.$_addRule(b);
        }, validate(d, h, b, g) {
          let { state: y, error: w, schema: _ } = h, { comparator: E, options: k } = b, { comparator: S, path: A } = g;
          const x = { string: /* @__PURE__ */ Object.create(null), number: /* @__PURE__ */ Object.create(null), undefined: /* @__PURE__ */ Object.create(null), boolean: /* @__PURE__ */ Object.create(null), object: /* @__PURE__ */ new Map(), function: /* @__PURE__ */ new Map(), custom: /* @__PURE__ */ new Map() }, T = S || c, N = k.ignoreUndefined;
          for (let F = 0; F < d.length; ++F) {
            const V = A ? u(d[F], A) : d[F], oe = S ? x.custom : x[typeof V];
            if (a(oe, "Failed to find unique map container for type", typeof V), oe instanceof Map) {
              const H = oe.entries();
              let Q;
              for (; !(Q = H.next()).done; ) if (T(Q.value[0], V)) {
                const ae = y.localize([...y.path, F], [d, ...y.ancestors]), Ee = { pos: F, value: d[F], dupePos: Q.value[1], dupeValue: d[Q.value[1]] };
                return A && (Ee.path = E), w("array.unique", Ee, ae);
              }
              oe.set(V, F);
            } else {
              if ((!N || V !== void 0) && oe[V] !== void 0) {
                const H = { pos: F, value: d[F], dupePos: oe[V], dupeValue: d[oe[V]] };
                return A && (H.path = E), w("array.unique", H, y.localize([...y.path, F], [d, ...y.ancestors]));
              }
              oe[V] = F;
            }
          }
          return d;
        }, args: ["comparator", "options"], multi: !0 } }, cast: { set: { from: Array.isArray, to: (d, h) => new Set(d) } }, rebuild(d) {
          d.$_terms._inclusions = [], d.$_terms._exclusions = [], d.$_terms._requireds = [];
          for (const h of d.$_terms.items) p.validateSingle(h, d), h._flags.presence === "required" ? d.$_terms._requireds.push(h) : h._flags.presence === "forbidden" ? d.$_terms._exclusions.push(h) : d.$_terms._inclusions.push(h);
          for (const h of d.$_terms.ordered) p.validateSingle(h, d);
        }, manifest: { build: (d, h) => (h.items && (d = d.items(...h.items)), h.ordered && (d = d.ordered(...h.ordered)), d) }, messages: { "array.base": "{{#label}} must be an array", "array.excludes": "{{#label}} contains an excluded value", "array.hasKnown": "{{#label}} does not contain at least one required match for type {:#patternLabel}", "array.hasUnknown": "{{#label}} does not contain at least one required match", "array.includes": "{{#label}} does not match any of the allowed types", "array.includesRequiredBoth": "{{#label}} does not contain {{#knownMisses}} and {{#unknownMisses}} other required value(s)", "array.includesRequiredKnowns": "{{#label}} does not contain {{#knownMisses}}", "array.includesRequiredUnknowns": "{{#label}} does not contain {{#unknownMisses}} required value(s)", "array.length": "{{#label}} must contain {{#limit}} items", "array.max": "{{#label}} must contain less than or equal to {{#limit}} items", "array.min": "{{#label}} must contain at least {{#limit}} items", "array.orderedLength": "{{#label}} must contain at most {{#limit}} items", "array.sort": "{{#label}} must be sorted in {#order} order by {{#by}}", "array.sort.mismatching": "{{#label}} cannot be sorted due to mismatching types", "array.sort.unsupported": "{{#label}} cannot be sorted due to unsupported type {#type}", "array.sparse": "{{#label}} must not be a sparse array item", "array.unique": "{{#label}} contains a duplicate value" } }), p.fillMissedErrors = function(d, h, b, g, y, w) {
          const _ = [];
          let E = 0;
          for (const k of b) {
            const S = k._flags.label;
            S ? _.push(S) : ++E;
          }
          _.length ? E ? h.push(d.$_createError("array.includesRequiredBoth", g, { knownMisses: _, unknownMisses: E }, y, w)) : h.push(d.$_createError("array.includesRequiredKnowns", g, { knownMisses: _ }, y, w)) : h.push(d.$_createError("array.includesRequiredUnknowns", g, { unknownMisses: E }, y, w));
        }, p.fillOrderedErrors = function(d, h, b, g, y, w) {
          const _ = [];
          for (const E of b) E._flags.presence === "required" && _.push(E);
          _.length && p.fillMissedErrors(d, h, _, g, y, w);
        }, p.fillDefault = function(d, h, b, g) {
          const y = [];
          let w = !0;
          for (let _ = d.length - 1; _ >= 0; --_) {
            const E = d[_], k = [h, ...b.ancestors], S = E.$_validate(void 0, b.localize(b.path, k, E), g).value;
            if (w) {
              if (S === void 0) continue;
              w = !1;
            }
            y.unshift(S);
          }
          y.length && h.push(...y);
        }, p.fastSplice = function(d, h) {
          let b = h;
          for (; b < d.length; ) d[b++] = d[b];
          --d.length;
        }, p.validateSingle = function(d, h) {
          (d.type === "array" || d._flags._arrayItems) && (a(!h._flags.single, "Cannot specify array item with single rule enabled"), h.$_setFlag("_arrayItems", !0, { clone: !1 }));
        }, p.sort = function(d, h, b, g, y) {
          const w = b.order === "ascending" ? 1 : -1, _ = -1 * w, E = w, k = (S, A) => {
            let x = p.compare(S, A, _, E);
            if (x !== null || (b.by && (S = b.by.resolve(S, g, y), A = b.by.resolve(A, g, y)), x = p.compare(S, A, _, E), x !== null)) return x;
            const T = typeof S;
            if (T !== typeof A) throw d.$_createError("array.sort.mismatching", h, null, g, y);
            if (T !== "number" && T !== "string") throw d.$_createError("array.sort.unsupported", h, { type: T }, g, y);
            return T === "number" ? (S - A) * w : S < A ? _ : E;
          };
          try {
            return { value: h.slice().sort(k) };
          } catch (S) {
            return { errors: S };
          }
        }, p.compare = function(d, h, b, g) {
          return d === h ? 0 : d === void 0 ? 1 : h === void 0 ? -1 : d === null ? g : h === null ? b : null;
        };
      }, 4937: (s, i, o) => {
        const a = o(375), c = o(8068), u = o(8160), f = o(2036), l = { isBool: function(m) {
          return typeof m == "boolean";
        } };
        s.exports = c.extend({ type: "boolean", flags: { sensitive: { default: !1 } }, terms: { falsy: { init: null, manifest: "values" }, truthy: { init: null, manifest: "values" } }, coerce(m, p) {
          let { schema: d } = p;
          if (typeof m != "boolean") {
            if (typeof m == "string") {
              const h = d._flags.sensitive ? m : m.toLowerCase();
              m = h === "true" || h !== "false" && m;
            }
            return typeof m != "boolean" && (m = d.$_terms.truthy && d.$_terms.truthy.has(m, null, null, !d._flags.sensitive) || (!d.$_terms.falsy || !d.$_terms.falsy.has(m, null, null, !d._flags.sensitive)) && m), { value: m };
          }
        }, validate(m, p) {
          let { error: d } = p;
          if (typeof m != "boolean") return { value: m, errors: d("boolean.base") };
        }, rules: { truthy: { method() {
          for (var m = arguments.length, p = new Array(m), d = 0; d < m; d++) p[d] = arguments[d];
          u.verifyFlat(p, "truthy");
          const h = this.clone();
          h.$_terms.truthy = h.$_terms.truthy || new f();
          for (let b = 0; b < p.length; ++b) {
            const g = p[b];
            a(g !== void 0, "Cannot call truthy with undefined"), h.$_terms.truthy.add(g);
          }
          return h;
        } }, falsy: { method() {
          for (var m = arguments.length, p = new Array(m), d = 0; d < m; d++) p[d] = arguments[d];
          u.verifyFlat(p, "falsy");
          const h = this.clone();
          h.$_terms.falsy = h.$_terms.falsy || new f();
          for (let b = 0; b < p.length; ++b) {
            const g = p[b];
            a(g !== void 0, "Cannot call falsy with undefined"), h.$_terms.falsy.add(g);
          }
          return h;
        } }, sensitive: { method() {
          let m = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
          return this.$_setFlag("sensitive", m);
        } } }, cast: { number: { from: l.isBool, to: (m, p) => m ? 1 : 0 }, string: { from: l.isBool, to: (m, p) => m ? "true" : "false" } }, manifest: { build: (m, p) => (p.truthy && (m = m.truthy(...p.truthy)), p.falsy && (m = m.falsy(...p.falsy)), m) }, messages: { "boolean.base": "{{#label}} must be a boolean" } });
      }, 7500: (s, i, o) => {
        const a = o(375), c = o(8068), u = o(8160), f = o(3328), l = { isDate: function(m) {
          return m instanceof Date;
        } };
        s.exports = c.extend({ type: "date", coerce: { from: ["number", "string"], method(m, p) {
          let { schema: d } = p;
          return { value: l.parse(m, d._flags.format) || m };
        } }, validate(m, p) {
          let { schema: d, error: h, prefs: b } = p;
          if (m instanceof Date && !isNaN(m.getTime())) return;
          const g = d._flags.format;
          return b.convert && g && typeof m == "string" ? { value: m, errors: h("date.format", { format: g }) } : { value: m, errors: h("date.base") };
        }, rules: { compare: { method: !1, validate(m, p, d, h) {
          let { date: b } = d, { name: g, operator: y, args: w } = h;
          const _ = b === "now" ? Date.now() : b.getTime();
          return u.compare(m.getTime(), _, y) ? m : p.error("date." + g, { limit: w.date, value: m });
        }, args: [{ name: "date", ref: !0, normalize: (m) => m === "now" ? m : l.parse(m), assert: (m) => m !== null, message: "must have a valid date format" }] }, format: { method(m) {
          return a(["iso", "javascript", "unix"].includes(m), "Unknown date format", m), this.$_setFlag("format", m);
        } }, greater: { method(m) {
          return this.$_addRule({ name: "greater", method: "compare", args: { date: m }, operator: ">" });
        } }, iso: { method() {
          return this.format("iso");
        } }, less: { method(m) {
          return this.$_addRule({ name: "less", method: "compare", args: { date: m }, operator: "<" });
        } }, max: { method(m) {
          return this.$_addRule({ name: "max", method: "compare", args: { date: m }, operator: "<=" });
        } }, min: { method(m) {
          return this.$_addRule({ name: "min", method: "compare", args: { date: m }, operator: ">=" });
        } }, timestamp: { method() {
          let m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "javascript";
          return a(["javascript", "unix"].includes(m), '"type" must be one of "javascript, unix"'), this.format(m);
        } } }, cast: { number: { from: l.isDate, to: (m, p) => m.getTime() }, string: { from: l.isDate, to(m, p) {
          let { prefs: d } = p;
          return f.date(m, d);
        } } }, messages: { "date.base": "{{#label}} must be a valid date", "date.format": '{{#label}} must be in {msg("date.format." + #format) || #format} format', "date.greater": "{{#label}} must be greater than {{:#limit}}", "date.less": "{{#label}} must be less than {{:#limit}}", "date.max": "{{#label}} must be less than or equal to {{:#limit}}", "date.min": "{{#label}} must be greater than or equal to {{:#limit}}", "date.format.iso": "ISO 8601 date", "date.format.javascript": "timestamp or number of milliseconds", "date.format.unix": "timestamp or number of seconds" } }), l.parse = function(m, p) {
          if (m instanceof Date) return m;
          if (typeof m != "string" && (isNaN(m) || !isFinite(m)) || /^\s*$/.test(m)) return null;
          if (p === "iso") return u.isIsoDate(m) ? l.date(m.toString()) : null;
          const d = m;
          if (typeof m == "string" && /^[+-]?\d+(\.\d+)?$/.test(m) && (m = parseFloat(m)), p) {
            if (p === "javascript") return l.date(1 * m);
            if (p === "unix") return l.date(1e3 * m);
            if (typeof d == "string") return null;
          }
          return l.date(m);
        }, l.date = function(m) {
          const p = new Date(m);
          return isNaN(p.getTime()) ? null : p;
        };
      }, 390: (s, i, o) => {
        const a = o(375), c = o(7824);
        s.exports = c.extend({ type: "function", properties: { typeof: "function" }, rules: { arity: { method(u) {
          return a(Number.isSafeInteger(u) && u >= 0, "n must be a positive integer"), this.$_addRule({ name: "arity", args: { n: u } });
        }, validate(u, f, l) {
          let { n: m } = l;
          return u.length === m ? u : f.error("function.arity", { n: m });
        } }, class: { method() {
          return this.$_addRule("class");
        }, validate: (u, f) => /^\s*class\s/.test(u.toString()) ? u : f.error("function.class", { value: u }) }, minArity: { method(u) {
          return a(Number.isSafeInteger(u) && u > 0, "n must be a strict positive integer"), this.$_addRule({ name: "minArity", args: { n: u } });
        }, validate(u, f, l) {
          let { n: m } = l;
          return u.length >= m ? u : f.error("function.minArity", { n: m });
        } }, maxArity: { method(u) {
          return a(Number.isSafeInteger(u) && u >= 0, "n must be a positive integer"), this.$_addRule({ name: "maxArity", args: { n: u } });
        }, validate(u, f, l) {
          let { n: m } = l;
          return u.length <= m ? u : f.error("function.maxArity", { n: m });
        } } }, messages: { "function.arity": "{{#label}} must have an arity of {{#n}}", "function.class": "{{#label}} must be a class", "function.maxArity": "{{#label}} must have an arity lesser or equal to {{#n}}", "function.minArity": "{{#label}} must have an arity greater or equal to {{#n}}" } });
      }, 7824: (s, i, o) => {
        const a = o(978), c = o(375), u = o(8571), f = o(3652), l = o(8068), m = o(8160), p = o(3292), d = o(6354), h = o(6133), b = o(3328), g = { renameDefaults: { alias: !1, multiple: !1, override: !1 } };
        s.exports = l.extend({ type: "_keys", properties: { typeof: "object" }, flags: { unknown: { default: !1 } }, terms: { dependencies: { init: null }, keys: { init: null, manifest: { mapped: { from: "schema", to: "key" } } }, patterns: { init: null }, renames: { init: null } }, args: (y, w) => y.keys(w), validate(y, w) {
          let { schema: _, error: E, state: k, prefs: S } = w;
          if (!y || typeof y !== _.$_property("typeof") || Array.isArray(y)) return { value: y, errors: E("object.base", { type: _.$_property("typeof") }) };
          if (!(_.$_terms.renames || _.$_terms.dependencies || _.$_terms.keys || _.$_terms.patterns || _.$_terms.externals)) return;
          y = g.clone(y, S);
          const A = [];
          if (_.$_terms.renames && !g.rename(_, y, k, S, A)) return { value: y, errors: A };
          if (!_.$_terms.keys && !_.$_terms.patterns && !_.$_terms.dependencies) return { value: y, errors: A };
          const x = new Set(Object.keys(y));
          if (_.$_terms.keys) {
            const T = [y, ...k.ancestors];
            for (const N of _.$_terms.keys) {
              const F = N.key, V = y[F];
              x.delete(F);
              const oe = k.localize([...k.path, F], T, N), H = N.schema.$_validate(V, oe, S);
              if (H.errors) {
                if (S.abortEarly) return { value: y, errors: H.errors };
                H.value !== void 0 && (y[F] = H.value), A.push(...H.errors);
              } else N.schema._flags.result === "strip" || H.value === void 0 && V !== void 0 ? delete y[F] : H.value !== void 0 && (y[F] = H.value);
            }
          }
          if (x.size || _._flags._hasPatternMatch) {
            const T = g.unknown(_, y, x, A, k, S);
            if (T) return T;
          }
          if (_.$_terms.dependencies) for (const T of _.$_terms.dependencies) {
            if (T.key !== null && g.isPresent(T.options)(T.key.resolve(y, k, S, null, { shadow: !1 })) === !1) continue;
            const N = g.dependencies[T.rel](_, T, y, k, S);
            if (N) {
              const F = _.$_createError(N.code, y, N.context, k, S);
              if (S.abortEarly) return { value: y, errors: F };
              A.push(F);
            }
          }
          return { value: y, errors: A };
        }, rules: { and: { method() {
          for (var y = arguments.length, w = new Array(y), _ = 0; _ < y; _++) w[_] = arguments[_];
          return m.verifyFlat(w, "and"), g.dependency(this, "and", null, w);
        } }, append: { method(y) {
          return y == null || Object.keys(y).length === 0 ? this : this.keys(y);
        } }, assert: { method(y, w, _) {
          b.isTemplate(y) || (y = p.ref(y)), c(_ === void 0 || typeof _ == "string", "Message must be a string"), w = this.$_compile(w, { appendPath: !0 });
          const E = this.$_addRule({ name: "assert", args: { subject: y, schema: w, message: _ } });
          return E.$_mutateRegister(y), E.$_mutateRegister(w), E;
        }, validate(y, w, _) {
          let { error: E, prefs: k, state: S } = w, { subject: A, schema: x, message: T } = _;
          const N = A.resolve(y, S, k), F = h.isRef(A) ? A.absolute(S) : [];
          return x.$_match(N, S.localize(F, [y, ...S.ancestors], x), k) ? y : E("object.assert", { subject: A, message: T });
        }, args: ["subject", "schema", "message"], multi: !0 }, instance: { method(y, w) {
          return c(typeof y == "function", "constructor must be a function"), w = w || y.name, this.$_addRule({ name: "instance", args: { constructor: y, name: w } });
        }, validate(y, w, _) {
          let { constructor: E, name: k } = _;
          return y instanceof E ? y : w.error("object.instance", { type: k, value: y });
        }, args: ["constructor", "name"] }, keys: { method(y) {
          c(y === void 0 || typeof y == "object", "Object schema must be a valid object"), c(!m.isSchema(y), "Object schema cannot be a joi schema");
          const w = this.clone();
          if (y) if (Object.keys(y).length) {
            w.$_terms.keys = w.$_terms.keys ? w.$_terms.keys.filter((_) => !y.hasOwnProperty(_.key)) : new g.Keys();
            for (const _ in y) m.tryWithPath(() => w.$_terms.keys.push({ key: _, schema: this.$_compile(y[_]) }), _);
          } else w.$_terms.keys = new g.Keys();
          else w.$_terms.keys = null;
          return w.$_mutateRebuild();
        } }, length: { method(y) {
          return this.$_addRule({ name: "length", args: { limit: y }, operator: "=" });
        }, validate(y, w, _, E) {
          let { limit: k } = _, { name: S, operator: A, args: x } = E;
          return m.compare(Object.keys(y).length, k, A) ? y : w.error("object." + S, { limit: x.limit, value: y });
        }, args: [{ name: "limit", ref: !0, assert: m.limit, message: "must be a positive integer" }] }, max: { method(y) {
          return this.$_addRule({ name: "max", method: "length", args: { limit: y }, operator: "<=" });
        } }, min: { method(y) {
          return this.$_addRule({ name: "min", method: "length", args: { limit: y }, operator: ">=" });
        } }, nand: { method() {
          for (var y = arguments.length, w = new Array(y), _ = 0; _ < y; _++) w[_] = arguments[_];
          return m.verifyFlat(w, "nand"), g.dependency(this, "nand", null, w);
        } }, or: { method() {
          for (var y = arguments.length, w = new Array(y), _ = 0; _ < y; _++) w[_] = arguments[_];
          return m.verifyFlat(w, "or"), g.dependency(this, "or", null, w);
        } }, oxor: { method() {
          for (var y = arguments.length, w = new Array(y), _ = 0; _ < y; _++) w[_] = arguments[_];
          return g.dependency(this, "oxor", null, w);
        } }, pattern: { method(y, w) {
          let _ = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          const E = y instanceof RegExp;
          E || (y = this.$_compile(y, { appendPath: !0 })), c(w !== void 0, "Invalid rule"), m.assertOptions(_, ["fallthrough", "matches"]), E && c(!y.flags.includes("g") && !y.flags.includes("y"), "pattern should not use global or sticky mode"), w = this.$_compile(w, { appendPath: !0 });
          const k = this.clone();
          k.$_terms.patterns = k.$_terms.patterns || [];
          const S = { [E ? "regex" : "schema"]: y, rule: w };
          return _.matches && (S.matches = this.$_compile(_.matches), S.matches.type !== "array" && (S.matches = S.matches.$_root.array().items(S.matches)), k.$_mutateRegister(S.matches), k.$_setFlag("_hasPatternMatch", !0, { clone: !1 })), _.fallthrough && (S.fallthrough = !0), k.$_terms.patterns.push(S), k.$_mutateRegister(w), k;
        } }, ref: { method() {
          return this.$_addRule("ref");
        }, validate: (y, w) => h.isRef(y) ? y : w.error("object.refType", { value: y }) }, regex: { method() {
          return this.$_addRule("regex");
        }, validate: (y, w) => y instanceof RegExp ? y : w.error("object.regex", { value: y }) }, rename: { method(y, w) {
          let _ = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          c(typeof y == "string" || y instanceof RegExp, "Rename missing the from argument"), c(typeof w == "string" || w instanceof b, "Invalid rename to argument"), c(w !== y, "Cannot rename key to same name:", y), m.assertOptions(_, ["alias", "ignoreUndefined", "override", "multiple"]);
          const E = this.clone();
          E.$_terms.renames = E.$_terms.renames || [];
          for (const k of E.$_terms.renames) c(k.from !== y, "Cannot rename the same key multiple times");
          return w instanceof b && E.$_mutateRegister(w), E.$_terms.renames.push({ from: y, to: w, options: a(g.renameDefaults, _) }), E;
        } }, schema: { method() {
          let y = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "any";
          return this.$_addRule({ name: "schema", args: { type: y } });
        }, validate(y, w, _) {
          let { type: E } = _;
          return !m.isSchema(y) || E !== "any" && y.type !== E ? w.error("object.schema", { type: E }) : y;
        } }, unknown: { method(y) {
          return this.$_setFlag("unknown", y !== !1);
        } }, with: { method(y, w) {
          let _ = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          return g.dependency(this, "with", y, w, _);
        } }, without: { method(y, w) {
          let _ = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          return g.dependency(this, "without", y, w, _);
        } }, xor: { method() {
          for (var y = arguments.length, w = new Array(y), _ = 0; _ < y; _++) w[_] = arguments[_];
          return m.verifyFlat(w, "xor"), g.dependency(this, "xor", null, w);
        } } }, overrides: { default(y, w) {
          return y === void 0 && (y = m.symbols.deepDefault), this.$_parent("default", y, w);
        } }, rebuild(y) {
          if (y.$_terms.keys) {
            const w = new f.Sorter();
            for (const _ of y.$_terms.keys) m.tryWithPath(() => w.add(_, { after: _.schema.$_rootReferences(), group: _.key }), _.key);
            y.$_terms.keys = new g.Keys(...w.nodes);
          }
        }, manifest: { build(y, w) {
          if (w.keys && (y = y.keys(w.keys)), w.dependencies) for (const { rel: _, key: E = null, peers: k, options: S } of w.dependencies) y = g.dependency(y, _, E, k, S);
          if (w.patterns) for (const { regex: _, schema: E, rule: k, fallthrough: S, matches: A } of w.patterns) y = y.pattern(_ || E, k, { fallthrough: S, matches: A });
          if (w.renames) for (const { from: _, to: E, options: k } of w.renames) y = y.rename(_, E, k);
          return y;
        } }, messages: { "object.and": "{{#label}} contains {{#presentWithLabels}} without its required peers {{#missingWithLabels}}", "object.assert": '{{#label}} is invalid because {if(#subject.key, `"` + #subject.key + `" failed to ` + (#message || "pass the assertion test"), #message || "the assertion failed")}', "object.base": "{{#label}} must be of type {{#type}}", "object.instance": "{{#label}} must be an instance of {{:#type}}", "object.length": '{{#label}} must have {{#limit}} key{if(#limit == 1, "", "s")}', "object.max": '{{#label}} must have less than or equal to {{#limit}} key{if(#limit == 1, "", "s")}', "object.min": '{{#label}} must have at least {{#limit}} key{if(#limit == 1, "", "s")}', "object.missing": "{{#label}} must contain at least one of {{#peersWithLabels}}", "object.nand": "{{:#mainWithLabel}} must not exist simultaneously with {{#peersWithLabels}}", "object.oxor": "{{#label}} contains a conflict between optional exclusive peers {{#peersWithLabels}}", "object.pattern.match": "{{#label}} keys failed to match pattern requirements", "object.refType": "{{#label}} must be a Joi reference", "object.regex": "{{#label}} must be a RegExp object", "object.rename.multiple": "{{#label}} cannot rename {{:#from}} because multiple renames are disabled and another key was already renamed to {{:#to}}", "object.rename.override": "{{#label}} cannot rename {{:#from}} because override is disabled and target {{:#to}} exists", "object.schema": "{{#label}} must be a Joi schema of {{#type}} type", "object.unknown": "{{#label}} is not allowed", "object.with": "{{:#mainWithLabel}} missing required peer {{:#peerWithLabel}}", "object.without": "{{:#mainWithLabel}} conflict with forbidden peer {{:#peerWithLabel}}", "object.xor": "{{#label}} contains a conflict between exclusive peers {{#peersWithLabels}}" } }), g.clone = function(y, w) {
          if (typeof y == "object") {
            if (w.nonEnumerables) return u(y, { shallow: !0 });
            const E = Object.create(Object.getPrototypeOf(y));
            return Object.assign(E, y), E;
          }
          const _ = function() {
            for (var E = arguments.length, k = new Array(E), S = 0; S < E; S++) k[S] = arguments[S];
            return y.apply(this, k);
          };
          return _.prototype = u(y.prototype), Object.defineProperty(_, "name", { value: y.name, writable: !1 }), Object.defineProperty(_, "length", { value: y.length, writable: !1 }), Object.assign(_, y), _;
        }, g.dependency = function(y, w, _, E, k) {
          c(_ === null || typeof _ == "string", w, "key must be a strings"), k || (k = E.length > 1 && typeof E[E.length - 1] == "object" ? E.pop() : {}), m.assertOptions(k, ["separator", "isPresent"]), E = [].concat(E);
          const S = m.default(k.separator, "."), A = [];
          for (const T of E) c(typeof T == "string", w, "peers must be strings"), A.push(p.ref(T, { separator: S, ancestor: 0, prefix: !1 }));
          _ !== null && (_ = p.ref(_, { separator: S, ancestor: 0, prefix: !1 }));
          const x = y.clone();
          return x.$_terms.dependencies = x.$_terms.dependencies || [], x.$_terms.dependencies.push(new g.Dependency(w, _, A, E, k)), x;
        }, g.dependencies = { and(y, w, _, E, k) {
          const S = [], A = [], x = w.peers.length, T = g.isPresent(w.options);
          for (const N of w.peers) T(N.resolve(_, E, k, null, { shadow: !1 })) === !1 ? S.push(N.key) : A.push(N.key);
          if (S.length !== x && A.length !== x) return { code: "object.and", context: { present: A, presentWithLabels: g.keysToLabels(y, A), missing: S, missingWithLabels: g.keysToLabels(y, S) } };
        }, nand(y, w, _, E, k) {
          const S = [], A = g.isPresent(w.options);
          for (const N of w.peers) A(N.resolve(_, E, k, null, { shadow: !1 })) && S.push(N.key);
          if (S.length !== w.peers.length) return;
          const x = w.paths[0], T = w.paths.slice(1);
          return { code: "object.nand", context: { main: x, mainWithLabel: g.keysToLabels(y, x), peers: T, peersWithLabels: g.keysToLabels(y, T) } };
        }, or(y, w, _, E, k) {
          const S = g.isPresent(w.options);
          for (const A of w.peers) if (S(A.resolve(_, E, k, null, { shadow: !1 }))) return;
          return { code: "object.missing", context: { peers: w.paths, peersWithLabels: g.keysToLabels(y, w.paths) } };
        }, oxor(y, w, _, E, k) {
          const S = [], A = g.isPresent(w.options);
          for (const T of w.peers) A(T.resolve(_, E, k, null, { shadow: !1 })) && S.push(T.key);
          if (!S.length || S.length === 1) return;
          const x = { peers: w.paths, peersWithLabels: g.keysToLabels(y, w.paths) };
          return x.present = S, x.presentWithLabels = g.keysToLabels(y, S), { code: "object.oxor", context: x };
        }, with(y, w, _, E, k) {
          const S = g.isPresent(w.options);
          for (const A of w.peers) if (S(A.resolve(_, E, k, null, { shadow: !1 })) === !1) return { code: "object.with", context: { main: w.key.key, mainWithLabel: g.keysToLabels(y, w.key.key), peer: A.key, peerWithLabel: g.keysToLabels(y, A.key) } };
        }, without(y, w, _, E, k) {
          const S = g.isPresent(w.options);
          for (const A of w.peers) if (S(A.resolve(_, E, k, null, { shadow: !1 }))) return { code: "object.without", context: { main: w.key.key, mainWithLabel: g.keysToLabels(y, w.key.key), peer: A.key, peerWithLabel: g.keysToLabels(y, A.key) } };
        }, xor(y, w, _, E, k) {
          const S = [], A = g.isPresent(w.options);
          for (const T of w.peers) A(T.resolve(_, E, k, null, { shadow: !1 })) && S.push(T.key);
          if (S.length === 1) return;
          const x = { peers: w.paths, peersWithLabels: g.keysToLabels(y, w.paths) };
          return S.length === 0 ? { code: "object.missing", context: x } : (x.present = S, x.presentWithLabels = g.keysToLabels(y, S), { code: "object.xor", context: x });
        } }, g.keysToLabels = function(y, w) {
          return Array.isArray(w) ? w.map((_) => y.$_mapLabels(_)) : y.$_mapLabels(w);
        }, g.isPresent = function(y) {
          return typeof y.isPresent == "function" ? y.isPresent : (w) => w !== void 0;
        }, g.rename = function(y, w, _, E, k) {
          const S = {};
          for (const A of y.$_terms.renames) {
            const x = [], T = typeof A.from != "string";
            if (T) for (const N in w) {
              if (w[N] === void 0 && A.options.ignoreUndefined || N === A.to) continue;
              const F = A.from.exec(N);
              F && x.push({ from: N, to: A.to, match: F });
            }
            else !Object.prototype.hasOwnProperty.call(w, A.from) || w[A.from] === void 0 && A.options.ignoreUndefined || x.push(A);
            for (const N of x) {
              const F = N.from;
              let V = N.to;
              if (V instanceof b && (V = V.render(w, _, E, N.match)), F !== V) {
                if (!A.options.multiple && S[V] && (k.push(y.$_createError("object.rename.multiple", w, { from: F, to: V, pattern: T }, _, E)), E.abortEarly) || Object.prototype.hasOwnProperty.call(w, V) && !A.options.override && !S[V] && (k.push(y.$_createError("object.rename.override", w, { from: F, to: V, pattern: T }, _, E)), E.abortEarly)) return !1;
                w[F] === void 0 ? delete w[V] : w[V] = w[F], S[V] = !0, A.options.alias || delete w[F];
              }
            }
          }
          return !0;
        }, g.unknown = function(y, w, _, E, k, S) {
          if (y.$_terms.patterns) {
            let A = !1;
            const x = y.$_terms.patterns.map((N) => {
              if (N.matches) return A = !0, [];
            }), T = [w, ...k.ancestors];
            for (const N of _) {
              const F = w[N], V = [...k.path, N];
              for (let oe = 0; oe < y.$_terms.patterns.length; ++oe) {
                const H = y.$_terms.patterns[oe];
                if (H.regex) {
                  const Ee = H.regex.test(N);
                  if (k.mainstay.tracer.debug(k, "rule", `pattern.${oe}`, Ee ? "pass" : "error"), !Ee) continue;
                } else if (!H.schema.$_match(N, k.nest(H.schema, `pattern.${oe}`), S)) continue;
                _.delete(N);
                const Q = k.localize(V, T, { schema: H.rule, key: N }), ae = H.rule.$_validate(F, Q, S);
                if (ae.errors) {
                  if (S.abortEarly) return { value: w, errors: ae.errors };
                  E.push(...ae.errors);
                }
                if (H.matches && x[oe].push(N), w[N] = ae.value, !H.fallthrough) break;
              }
            }
            if (A) for (let N = 0; N < x.length; ++N) {
              const F = x[N];
              if (!F) continue;
              const V = y.$_terms.patterns[N].matches, oe = k.localize(k.path, T, V), H = V.$_validate(F, oe, S);
              if (H.errors) {
                const Q = d.details(H.errors, { override: !1 });
                Q.matches = F;
                const ae = y.$_createError("object.pattern.match", w, Q, k, S);
                if (S.abortEarly) return { value: w, errors: ae };
                E.push(ae);
              }
            }
          }
          if (_.size && (y.$_terms.keys || y.$_terms.patterns)) {
            if (S.stripUnknown && !y._flags.unknown || S.skipFunctions) {
              const A = !(!S.stripUnknown || S.stripUnknown !== !0 && !S.stripUnknown.objects);
              for (const x of _) A ? (delete w[x], _.delete(x)) : typeof w[x] == "function" && _.delete(x);
            }
            if (!m.default(y._flags.unknown, S.allowUnknown)) for (const A of _) {
              const x = k.localize([...k.path, A], []), T = y.$_createError("object.unknown", w[A], { child: A }, x, S, { flags: !1 });
              if (S.abortEarly) return { value: w, errors: T };
              E.push(T);
            }
          }
        }, g.Dependency = class {
          constructor(y, w, _, E, k) {
            this.rel = y, this.key = w, this.peers = _, this.paths = E, this.options = k;
          }
          describe() {
            const y = { rel: this.rel, peers: this.paths };
            return this.key !== null && (y.key = this.key.key), this.peers[0].separator !== "." && (y.options = { ...y.options, separator: this.peers[0].separator }), this.options.isPresent && (y.options = { ...y.options, isPresent: this.options.isPresent }), y;
          }
        }, g.Keys = class extends Array {
          concat(y) {
            const w = this.slice(), _ = /* @__PURE__ */ new Map();
            for (let E = 0; E < w.length; ++E) _.set(w[E].key, E);
            for (const E of y) {
              const k = E.key, S = _.get(k);
              S !== void 0 ? w[S] = { key: k, schema: w[S].schema.concat(E.schema) } : w.push(E);
            }
            return w;
          }
        };
      }, 8785: (s, i, o) => {
        const a = o(375), c = o(8068), u = o(8160), f = o(3292), l = o(6354), m = {};
        s.exports = c.extend({ type: "link", properties: { schemaChain: !0 }, terms: { link: { init: null, manifest: "single", register: !1 } }, args: (p, d) => p.ref(d), validate(p, d) {
          let { schema: h, state: b, prefs: g } = d;
          a(h.$_terms.link, "Uninitialized link schema");
          const y = m.generate(h, p, b, g), w = h.$_terms.link[0].ref;
          return y.$_validate(p, b.nest(y, `link:${w.display}:${y.type}`), g);
        }, generate: (p, d, h, b) => m.generate(p, d, h, b), rules: { ref: { method(p) {
          a(!this.$_terms.link, "Cannot reinitialize schema"), p = f.ref(p), a(p.type === "value" || p.type === "local", "Invalid reference type:", p.type), a(p.type === "local" || p.ancestor === "root" || p.ancestor > 0, "Link cannot reference itself");
          const d = this.clone();
          return d.$_terms.link = [{ ref: p }], d;
        } }, relative: { method() {
          let p = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
          return this.$_setFlag("relative", p);
        } } }, overrides: { concat(p) {
          a(this.$_terms.link, "Uninitialized link schema"), a(u.isSchema(p), "Invalid schema object"), a(p.type !== "link", "Cannot merge type link with another link");
          const d = this.clone();
          return d.$_terms.whens || (d.$_terms.whens = []), d.$_terms.whens.push({ concat: p }), d.$_mutateRebuild();
        } }, manifest: { build: (p, d) => (a(d.link, "Invalid link description missing link"), p.ref(d.link)) } }), m.generate = function(p, d, h, b) {
          let g = h.mainstay.links.get(p);
          if (g) return g._generate(d, h, b).schema;
          const y = p.$_terms.link[0].ref, { perspective: w, path: _ } = m.perspective(y, h);
          m.assert(w, "which is outside of schema boundaries", y, p, h, b);
          try {
            g = _.length ? w.$_reach(_) : w;
          } catch {
            m.assert(!1, "to non-existing schema", y, p, h, b);
          }
          return m.assert(g.type !== "link", "which is another link", y, p, h, b), p._flags.relative || h.mainstay.links.set(p, g), g._generate(d, h, b).schema;
        }, m.perspective = function(p, d) {
          if (p.type === "local") {
            for (const { schema: h, key: b } of d.schemas) {
              if ((h._flags.id || b) === p.path[0]) return { perspective: h, path: p.path.slice(1) };
              if (h.$_terms.shared) {
                for (const g of h.$_terms.shared) if (g._flags.id === p.path[0]) return { perspective: g, path: p.path.slice(1) };
              }
            }
            return { perspective: null, path: null };
          }
          return p.ancestor === "root" ? { perspective: d.schemas[d.schemas.length - 1].schema, path: p.path } : { perspective: d.schemas[p.ancestor] && d.schemas[p.ancestor].schema, path: p.path };
        }, m.assert = function(p, d, h, b, g, y) {
          p || a(!1, `"${l.label(b._flags, g, y)}" contains link reference "${h.display}" ${d}`);
        };
      }, 3832: (s, i, o) => {
        const a = o(375), c = o(8068), u = o(8160), f = { numberRx: /^\s*[+-]?(?:(?:\d+(?:\.\d*)?)|(?:\.\d+))(?:e([+-]?\d+))?\s*$/i, precisionRx: /(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/, exponentialPartRegex: /[eE][+-]?\d+$/, leadingSignAndZerosRegex: /^[+-]?(0*)?/, dotRegex: /\./, trailingZerosRegex: /0+$/ };
        s.exports = c.extend({ type: "number", flags: { unsafe: { default: !1 } }, coerce: { from: "string", method(l, m) {
          let { schema: p, error: d } = m;
          if (!l.match(f.numberRx)) return;
          l = l.trim();
          const h = { value: parseFloat(l) };
          if (h.value === 0 && (h.value = 0), !p._flags.unsafe) if (l.match(/e/i)) {
            if (f.extractSignificantDigits(l) !== f.extractSignificantDigits(String(h.value))) return h.errors = d("number.unsafe"), h;
          } else {
            const b = h.value.toString();
            if (b.match(/e/i)) return h;
            if (b !== f.normalizeDecimal(l)) return h.errors = d("number.unsafe"), h;
          }
          return h;
        } }, validate(l, m) {
          let { schema: p, error: d, prefs: h } = m;
          if (l === 1 / 0 || l === -1 / 0) return { value: l, errors: d("number.infinity") };
          if (!u.isNumber(l)) return { value: l, errors: d("number.base") };
          const b = { value: l };
          if (h.convert) {
            const g = p.$_getRule("precision");
            if (g) {
              const y = Math.pow(10, g.args.limit);
              b.value = Math.round(b.value * y) / y;
            }
          }
          return b.value === 0 && (b.value = 0), !p._flags.unsafe && (l > Number.MAX_SAFE_INTEGER || l < Number.MIN_SAFE_INTEGER) && (b.errors = d("number.unsafe")), b;
        }, rules: { compare: { method: !1, validate(l, m, p, d) {
          let { limit: h } = p, { name: b, operator: g, args: y } = d;
          return u.compare(l, h, g) ? l : m.error("number." + b, { limit: y.limit, value: l });
        }, args: [{ name: "limit", ref: !0, assert: u.isNumber, message: "must be a number" }] }, greater: { method(l) {
          return this.$_addRule({ name: "greater", method: "compare", args: { limit: l }, operator: ">" });
        } }, integer: { method() {
          return this.$_addRule("integer");
        }, validate: (l, m) => Math.trunc(l) - l == 0 ? l : m.error("number.integer") }, less: { method(l) {
          return this.$_addRule({ name: "less", method: "compare", args: { limit: l }, operator: "<" });
        } }, max: { method(l) {
          return this.$_addRule({ name: "max", method: "compare", args: { limit: l }, operator: "<=" });
        } }, min: { method(l) {
          return this.$_addRule({ name: "min", method: "compare", args: { limit: l }, operator: ">=" });
        } }, multiple: { method(l) {
          return this.$_addRule({ name: "multiple", args: { base: l } });
        }, validate(l, m, p, d) {
          let { base: h } = p;
          return l * (1 / h) % 1 == 0 ? l : m.error("number.multiple", { multiple: d.args.base, value: l });
        }, args: [{ name: "base", ref: !0, assert: (l) => typeof l == "number" && isFinite(l) && l > 0, message: "must be a positive number" }], multi: !0 }, negative: { method() {
          return this.sign("negative");
        } }, port: { method() {
          return this.$_addRule("port");
        }, validate: (l, m) => Number.isSafeInteger(l) && l >= 0 && l <= 65535 ? l : m.error("number.port") }, positive: { method() {
          return this.sign("positive");
        } }, precision: { method(l) {
          return a(Number.isSafeInteger(l), "limit must be an integer"), this.$_addRule({ name: "precision", args: { limit: l } });
        }, validate(l, m, p) {
          let { limit: d } = p;
          const h = l.toString().match(f.precisionRx);
          return Math.max((h[1] ? h[1].length : 0) - (h[2] ? parseInt(h[2], 10) : 0), 0) <= d ? l : m.error("number.precision", { limit: d, value: l });
        }, convert: !0 }, sign: { method(l) {
          return a(["negative", "positive"].includes(l), "Invalid sign", l), this.$_addRule({ name: "sign", args: { sign: l } });
        }, validate(l, m, p) {
          let { sign: d } = p;
          return d === "negative" && l < 0 || d === "positive" && l > 0 ? l : m.error(`number.${d}`);
        } }, unsafe: { method() {
          let l = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
          return a(typeof l == "boolean", "enabled must be a boolean"), this.$_setFlag("unsafe", l);
        } } }, cast: { string: { from: (l) => typeof l == "number", to: (l, m) => l.toString() } }, messages: { "number.base": "{{#label}} must be a number", "number.greater": "{{#label}} must be greater than {{#limit}}", "number.infinity": "{{#label}} cannot be infinity", "number.integer": "{{#label}} must be an integer", "number.less": "{{#label}} must be less than {{#limit}}", "number.max": "{{#label}} must be less than or equal to {{#limit}}", "number.min": "{{#label}} must be greater than or equal to {{#limit}}", "number.multiple": "{{#label}} must be a multiple of {{#multiple}}", "number.negative": "{{#label}} must be a negative number", "number.port": "{{#label}} must be a valid port", "number.positive": "{{#label}} must be a positive number", "number.precision": "{{#label}} must have no more than {{#limit}} decimal places", "number.unsafe": "{{#label}} must be a safe number" } }), f.extractSignificantDigits = function(l) {
          return l.replace(f.exponentialPartRegex, "").replace(f.dotRegex, "").replace(f.trailingZerosRegex, "").replace(f.leadingSignAndZerosRegex, "");
        }, f.normalizeDecimal = function(l) {
          return (l = l.replace(/^\+/, "").replace(/\.0*$/, "").replace(/^(-?)\.([^\.]*)$/, "$10.$2").replace(/^(-?)0+([0-9])/, "$1$2")).includes(".") && l.endsWith("0") && (l = l.replace(/0+$/, "")), l === "-0" ? "0" : l;
        };
      }, 8966: (s, i, o) => {
        const a = o(7824);
        s.exports = a.extend({ type: "object", cast: { map: { from: (c) => c && typeof c == "object", to: (c, u) => new Map(Object.entries(c)) } } });
      }, 7417: (s, i, o) => {
        const a = o(375), c = o(5380), u = o(1745), f = o(9959), l = o(6064), m = o(9926), p = o(5752), d = o(8068), h = o(8160), b = { tlds: m instanceof Set && { tlds: { allow: m, deny: null } }, base64Regex: { true: { true: /^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}==|[\w\-]{3}=)?$/, false: /^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/ }, false: { true: /^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}(==)?|[\w\-]{3}=?)?$/, false: /^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}(==)?|[A-Za-z0-9+\/]{3}=?)?$/ } }, dataUriRegex: /^data:[\w+.-]+\/[\w+.-]+;((charset=[\w-]+|base64),)?(.*)$/, hexRegex: /^[a-f0-9]+$/i, ipRegex: f.regex({ cidr: "forbidden" }).regex, isoDurationRegex: /^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$/, guidBrackets: { "{": "}", "[": "]", "(": ")", "": "" }, guidVersions: { uuidv1: "1", uuidv2: "2", uuidv3: "3", uuidv4: "4", uuidv5: "5" }, guidSeparators: /* @__PURE__ */ new Set([void 0, !0, !1, "-", ":"]), normalizationForms: ["NFC", "NFD", "NFKC", "NFKD"] };
        s.exports = d.extend({ type: "string", flags: { insensitive: { default: !1 }, truncate: { default: !1 } }, terms: { replacements: { init: null } }, coerce: { from: "string", method(g, y) {
          let { schema: w, state: _, prefs: E } = y;
          const k = w.$_getRule("normalize");
          k && (g = g.normalize(k.args.form));
          const S = w.$_getRule("case");
          S && (g = S.args.direction === "upper" ? g.toLocaleUpperCase() : g.toLocaleLowerCase());
          const A = w.$_getRule("trim");
          if (A && A.args.enabled && (g = g.trim()), w.$_terms.replacements) for (const T of w.$_terms.replacements) g = g.replace(T.pattern, T.replacement);
          const x = w.$_getRule("hex");
          if (x && x.args.options.byteAligned && g.length % 2 != 0 && (g = `0${g}`), w.$_getRule("isoDate")) {
            const T = b.isoDate(g);
            T && (g = T);
          }
          if (w._flags.truncate) {
            const T = w.$_getRule("max");
            if (T) {
              let N = T.args.limit;
              if (h.isResolvable(N) && (N = N.resolve(g, _, E), !h.limit(N))) return { value: g, errors: w.$_createError("any.ref", N, { ref: T.args.limit, arg: "limit", reason: "must be a positive integer" }, _, E) };
              g = g.slice(0, N);
            }
          }
          return { value: g };
        } }, validate(g, y) {
          let { schema: w, error: _ } = y;
          if (typeof g != "string") return { value: g, errors: _("string.base") };
          if (g === "") {
            const E = w.$_getRule("min");
            return E && E.args.limit === 0 ? void 0 : { value: g, errors: _("string.empty") };
          }
        }, rules: { alphanum: { method() {
          return this.$_addRule("alphanum");
        }, validate: (g, y) => /^[a-zA-Z0-9]+$/.test(g) ? g : y.error("string.alphanum") }, base64: { method() {
          let g = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return h.assertOptions(g, ["paddingRequired", "urlSafe"]), g = { urlSafe: !1, paddingRequired: !0, ...g }, a(typeof g.paddingRequired == "boolean", "paddingRequired must be boolean"), a(typeof g.urlSafe == "boolean", "urlSafe must be boolean"), this.$_addRule({ name: "base64", args: { options: g } });
        }, validate(g, y, w) {
          let { options: _ } = w;
          return b.base64Regex[_.paddingRequired][_.urlSafe].test(g) ? g : y.error("string.base64");
        } }, case: { method(g) {
          return a(["lower", "upper"].includes(g), "Invalid case:", g), this.$_addRule({ name: "case", args: { direction: g } });
        }, validate(g, y, w) {
          let { direction: _ } = w;
          return _ === "lower" && g === g.toLocaleLowerCase() || _ === "upper" && g === g.toLocaleUpperCase() ? g : y.error(`string.${_}case`);
        }, convert: !0 }, creditCard: { method() {
          return this.$_addRule("creditCard");
        }, validate(g, y) {
          let w = g.length, _ = 0, E = 1;
          for (; w--; ) {
            const k = g.charAt(w) * E;
            _ += k - 9 * (k > 9), E ^= 3;
          }
          return _ > 0 && _ % 10 == 0 ? g : y.error("string.creditCard");
        } }, dataUri: { method() {
          let g = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return h.assertOptions(g, ["paddingRequired"]), g = { paddingRequired: !0, ...g }, a(typeof g.paddingRequired == "boolean", "paddingRequired must be boolean"), this.$_addRule({ name: "dataUri", args: { options: g } });
        }, validate(g, y, w) {
          let { options: _ } = w;
          const E = g.match(b.dataUriRegex);
          return E && (!E[2] || E[2] !== "base64" || b.base64Regex[_.paddingRequired].false.test(E[3])) ? g : y.error("string.dataUri");
        } }, domain: { method(g) {
          g && h.assertOptions(g, ["allowFullyQualified", "allowUnicode", "maxDomainSegments", "minDomainSegments", "tlds"]);
          const y = b.addressOptions(g);
          return this.$_addRule({ name: "domain", args: { options: g }, address: y });
        }, validate(g, y, w, _) {
          let { address: E } = _;
          return c.isValid(g, E) ? g : y.error("string.domain");
        } }, email: { method() {
          let g = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          h.assertOptions(g, ["allowFullyQualified", "allowUnicode", "ignoreLength", "maxDomainSegments", "minDomainSegments", "multiple", "separator", "tlds"]), a(g.multiple === void 0 || typeof g.multiple == "boolean", "multiple option must be an boolean");
          const y = b.addressOptions(g), w = new RegExp(`\\s*[${g.separator ? l(g.separator) : ","}]\\s*`);
          return this.$_addRule({ name: "email", args: { options: g }, regex: w, address: y });
        }, validate(g, y, w, _) {
          let { options: E } = w, { regex: k, address: S } = _;
          const A = E.multiple ? g.split(k) : [g], x = [];
          for (const T of A) u.isValid(T, S) || x.push(T);
          return x.length ? y.error("string.email", { value: g, invalids: x }) : g;
        } }, guid: { alias: "uuid", method() {
          let g = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          h.assertOptions(g, ["version", "separator"]);
          let y = "";
          if (g.version) {
            const E = [].concat(g.version);
            a(E.length >= 1, "version must have at least 1 valid version specified");
            const k = /* @__PURE__ */ new Set();
            for (let S = 0; S < E.length; ++S) {
              const A = E[S];
              a(typeof A == "string", "version at position " + S + " must be a string");
              const x = b.guidVersions[A.toLowerCase()];
              a(x, "version at position " + S + " must be one of " + Object.keys(b.guidVersions).join(", ")), a(!k.has(x), "version at position " + S + " must not be a duplicate"), y += x, k.add(x);
            }
          }
          a(b.guidSeparators.has(g.separator), 'separator must be one of true, false, "-", or ":"');
          const w = g.separator === void 0 ? "[:-]?" : g.separator === !0 ? "[:-]" : g.separator === !1 ? "[]?" : `\\${g.separator}`, _ = new RegExp(`^([\\[{\\(]?)[0-9A-F]{8}(${w})[0-9A-F]{4}\\2?[${y || "0-9A-F"}][0-9A-F]{3}\\2?[${y ? "89AB" : "0-9A-F"}][0-9A-F]{3}\\2?[0-9A-F]{12}([\\]}\\)]?)$`, "i");
          return this.$_addRule({ name: "guid", args: { options: g }, regex: _ });
        }, validate(g, y, w, _) {
          let { regex: E } = _;
          const k = E.exec(g);
          return k ? b.guidBrackets[k[1]] !== k[k.length - 1] ? y.error("string.guid") : g : y.error("string.guid");
        } }, hex: { method() {
          let g = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return h.assertOptions(g, ["byteAligned"]), g = { byteAligned: !1, ...g }, a(typeof g.byteAligned == "boolean", "byteAligned must be boolean"), this.$_addRule({ name: "hex", args: { options: g } });
        }, validate(g, y, w) {
          let { options: _ } = w;
          return b.hexRegex.test(g) ? _.byteAligned && g.length % 2 != 0 ? y.error("string.hexAlign") : g : y.error("string.hex");
        } }, hostname: { method() {
          return this.$_addRule("hostname");
        }, validate: (g, y) => c.isValid(g, { minDomainSegments: 1 }) || b.ipRegex.test(g) ? g : y.error("string.hostname") }, insensitive: { method() {
          return this.$_setFlag("insensitive", !0);
        } }, ip: { method() {
          let g = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          h.assertOptions(g, ["cidr", "version"]);
          const { cidr: y, versions: w, regex: _ } = f.regex(g), E = g.version ? w : void 0;
          return this.$_addRule({ name: "ip", args: { options: { cidr: y, version: E } }, regex: _ });
        }, validate(g, y, w, _) {
          let { options: E } = w, { regex: k } = _;
          return k.test(g) ? g : E.version ? y.error("string.ipVersion", { value: g, cidr: E.cidr, version: E.version }) : y.error("string.ip", { value: g, cidr: E.cidr });
        } }, isoDate: { method() {
          return this.$_addRule("isoDate");
        }, validate(g, y) {
          let { error: w } = y;
          return b.isoDate(g) ? g : w("string.isoDate");
        } }, isoDuration: { method() {
          return this.$_addRule("isoDuration");
        }, validate: (g, y) => b.isoDurationRegex.test(g) ? g : y.error("string.isoDuration") }, length: { method(g, y) {
          return b.length(this, "length", g, "=", y);
        }, validate(g, y, w, _) {
          let { limit: E, encoding: k } = w, { name: S, operator: A, args: x } = _;
          const T = !k && g.length;
          return h.compare(T, E, A) ? g : y.error("string." + S, { limit: x.limit, value: g, encoding: k });
        }, args: [{ name: "limit", ref: !0, assert: h.limit, message: "must be a positive integer" }, "encoding"] }, lowercase: { method() {
          return this.case("lower");
        } }, max: { method(g, y) {
          return b.length(this, "max", g, "<=", y);
        }, args: ["limit", "encoding"] }, min: { method(g, y) {
          return b.length(this, "min", g, ">=", y);
        }, args: ["limit", "encoding"] }, normalize: { method() {
          let g = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "NFC";
          return a(b.normalizationForms.includes(g), "normalization form must be one of " + b.normalizationForms.join(", ")), this.$_addRule({ name: "normalize", args: { form: g } });
        }, validate(g, y, w) {
          let { error: _ } = y, { form: E } = w;
          return g === g.normalize(E) ? g : _("string.normalize", { value: g, form: E });
        }, convert: !0 }, pattern: { alias: "regex", method(g) {
          let y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          a(g instanceof RegExp, "regex must be a RegExp"), a(!g.flags.includes("g") && !g.flags.includes("y"), "regex should not use global or sticky mode"), typeof y == "string" && (y = { name: y }), h.assertOptions(y, ["invert", "name"]);
          const w = ["string.pattern", y.invert ? ".invert" : "", y.name ? ".name" : ".base"].join("");
          return this.$_addRule({ name: "pattern", args: { regex: g, options: y }, errorCode: w });
        }, validate(g, y, w, _) {
          let { regex: E, options: k } = w, { errorCode: S } = _;
          return E.test(g) ^ k.invert ? g : y.error(S, { name: k.name, regex: E, value: g });
        }, args: ["regex", "options"], multi: !0 }, replace: { method(g, y) {
          typeof g == "string" && (g = new RegExp(l(g), "g")), a(g instanceof RegExp, "pattern must be a RegExp"), a(typeof y == "string", "replacement must be a String");
          const w = this.clone();
          return w.$_terms.replacements || (w.$_terms.replacements = []), w.$_terms.replacements.push({ pattern: g, replacement: y }), w;
        } }, token: { method() {
          return this.$_addRule("token");
        }, validate: (g, y) => /^\w+$/.test(g) ? g : y.error("string.token") }, trim: { method() {
          let g = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
          return a(typeof g == "boolean", "enabled must be a boolean"), this.$_addRule({ name: "trim", args: { enabled: g } });
        }, validate(g, y, w) {
          let { enabled: _ } = w;
          return _ && g !== g.trim() ? y.error("string.trim") : g;
        }, convert: !0 }, truncate: { method() {
          let g = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
          return a(typeof g == "boolean", "enabled must be a boolean"), this.$_setFlag("truncate", g);
        } }, uppercase: { method() {
          return this.case("upper");
        } }, uri: { method() {
          let g = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          h.assertOptions(g, ["allowRelative", "allowQuerySquareBrackets", "domain", "relativeOnly", "scheme"]), g.domain && h.assertOptions(g.domain, ["allowFullyQualified", "allowUnicode", "maxDomainSegments", "minDomainSegments", "tlds"]);
          const { regex: y, scheme: w } = p.regex(g), _ = g.domain ? b.addressOptions(g.domain) : null;
          return this.$_addRule({ name: "uri", args: { options: g }, regex: y, domain: _, scheme: w });
        }, validate(g, y, w, _) {
          let { options: E } = w, { regex: k, domain: S, scheme: A } = _;
          if (["http:/", "https:/"].includes(g)) return y.error("string.uri");
          const x = k.exec(g);
          if (x) {
            const T = x[1] || x[2];
            return !S || E.allowRelative && !T || c.isValid(T, S) ? g : y.error("string.domain", { value: T });
          }
          return E.relativeOnly ? y.error("string.uriRelativeOnly") : E.scheme ? y.error("string.uriCustomScheme", { scheme: A, value: g }) : y.error("string.uri");
        } } }, manifest: { build(g, y) {
          if (y.replacements) for (const { pattern: w, replacement: _ } of y.replacements) g = g.replace(w, _);
          return g;
        } }, messages: { "string.alphanum": "{{#label}} must only contain alpha-numeric characters", "string.base": "{{#label}} must be a string", "string.base64": "{{#label}} must be a valid base64 string", "string.creditCard": "{{#label}} must be a credit card", "string.dataUri": "{{#label}} must be a valid dataUri string", "string.domain": "{{#label}} must contain a valid domain name", "string.email": "{{#label}} must be a valid email", "string.empty": "{{#label}} is not allowed to be empty", "string.guid": "{{#label}} must be a valid GUID", "string.hex": "{{#label}} must only contain hexadecimal characters", "string.hexAlign": "{{#label}} hex decoded representation must be byte aligned", "string.hostname": "{{#label}} must be a valid hostname", "string.ip": "{{#label}} must be a valid ip address with a {{#cidr}} CIDR", "string.ipVersion": "{{#label}} must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR", "string.isoDate": "{{#label}} must be in iso format", "string.isoDuration": "{{#label}} must be a valid ISO 8601 duration", "string.length": "{{#label}} length must be {{#limit}} characters long", "string.lowercase": "{{#label}} must only contain lowercase characters", "string.max": "{{#label}} length must be less than or equal to {{#limit}} characters long", "string.min": "{{#label}} length must be at least {{#limit}} characters long", "string.normalize": "{{#label}} must be unicode normalized in the {{#form}} form", "string.token": "{{#label}} must only contain alpha-numeric and underscore characters", "string.pattern.base": "{{#label}} with value {:[.]} fails to match the required pattern: {{#regex}}", "string.pattern.name": "{{#label}} with value {:[.]} fails to match the {{#name}} pattern", "string.pattern.invert.base": "{{#label}} with value {:[.]} matches the inverted pattern: {{#regex}}", "string.pattern.invert.name": "{{#label}} with value {:[.]} matches the inverted {{#name}} pattern", "string.trim": "{{#label}} must not have leading or trailing whitespace", "string.uri": "{{#label}} must be a valid uri", "string.uriCustomScheme": "{{#label}} must be a valid uri with a scheme matching the {{#scheme}} pattern", "string.uriRelativeOnly": "{{#label}} must be a valid relative uri", "string.uppercase": "{{#label}} must only contain uppercase characters" } }), b.addressOptions = function(g) {
          if (!g || (a(g.minDomainSegments === void 0 || Number.isSafeInteger(g.minDomainSegments) && g.minDomainSegments > 0, "minDomainSegments must be a positive integer"), a(g.maxDomainSegments === void 0 || Number.isSafeInteger(g.maxDomainSegments) && g.maxDomainSegments > 0, "maxDomainSegments must be a positive integer"), g.tlds === !1)) return g;
          if (g.tlds === !0 || g.tlds === void 0) return a(b.tlds, "Built-in TLD list disabled"), Object.assign({}, g, b.tlds);
          a(typeof g.tlds == "object", "tlds must be true, false, or an object");
          const y = g.tlds.deny;
          if (y) return Array.isArray(y) && (g = Object.assign({}, g, { tlds: { deny: new Set(y) } })), a(g.tlds.deny instanceof Set, "tlds.deny must be an array, Set, or boolean"), a(!g.tlds.allow, "Cannot specify both tlds.allow and tlds.deny lists"), b.validateTlds(g.tlds.deny, "tlds.deny"), g;
          const w = g.tlds.allow;
          return w ? w === !0 ? (a(b.tlds, "Built-in TLD list disabled"), Object.assign({}, g, b.tlds)) : (Array.isArray(w) && (g = Object.assign({}, g, { tlds: { allow: new Set(w) } })), a(g.tlds.allow instanceof Set, "tlds.allow must be an array, Set, or boolean"), b.validateTlds(g.tlds.allow, "tlds.allow"), g) : g;
        }, b.validateTlds = function(g, y) {
          for (const w of g) a(c.isValid(w, { minDomainSegments: 1, maxDomainSegments: 1 }), `${y} must contain valid top level domain names`);
        }, b.isoDate = function(g) {
          if (!h.isIsoDate(g)) return null;
          /.*T.*[+-]\d\d$/.test(g) && (g += "00");
          const y = new Date(g);
          return isNaN(y.getTime()) ? null : y.toISOString();
        }, b.length = function(g, y, w, _, E) {
          return a(!E || !1, "Invalid encoding:", E), g.$_addRule({ name: y, method: "length", args: { limit: w, encoding: E }, operator: _ });
        };
      }, 8826: (s, i, o) => {
        const a = o(375), c = o(8068), u = {};
        u.Map = class extends Map {
          slice() {
            return new u.Map(this);
          }
        }, s.exports = c.extend({ type: "symbol", terms: { map: { init: new u.Map() } }, coerce: { method(f, l) {
          let { schema: m, error: p } = l;
          const d = m.$_terms.map.get(f);
          return d && (f = d), m._flags.only && typeof f != "symbol" ? { value: f, errors: p("symbol.map", { map: m.$_terms.map }) } : { value: f };
        } }, validate(f, l) {
          let { error: m } = l;
          if (typeof f != "symbol") return { value: f, errors: m("symbol.base") };
        }, rules: { map: { method(f) {
          f && !f[Symbol.iterator] && typeof f == "object" && (f = Object.entries(f)), a(f && f[Symbol.iterator], "Iterable must be an iterable or object");
          const l = this.clone(), m = [];
          for (const p of f) {
            a(p && p[Symbol.iterator], "Entry must be an iterable");
            const [d, h] = p;
            a(typeof d != "object" && typeof d != "function" && typeof d != "symbol", "Key must not be of type object, function, or Symbol"), a(typeof h == "symbol", "Value must be a Symbol"), l.$_terms.map.set(d, h), m.push(h);
          }
          return l.valid(...m);
        } } }, manifest: { build: (f, l) => (l.map && (f = f.map(l.map)), f) }, messages: { "symbol.base": "{{#label}} must be a symbol", "symbol.map": "{{#label}} must be one of {{#map}}" } });
      }, 8863: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(738), f = o(9621), l = o(8160), m = o(6354), p = o(493), d = { result: Symbol("result") };
        i.entry = function(h, b, g) {
          let y = l.defaults;
          g && (a(g.warnings === void 0, "Cannot override warnings preference in synchronous validation"), a(g.artifacts === void 0, "Cannot override artifacts preference in synchronous validation"), y = l.preferences(l.defaults, g));
          const w = d.entry(h, b, y);
          a(!w.mainstay.externals.length, "Schema with external rules must use validateAsync()");
          const _ = { value: w.value };
          return w.error && (_.error = w.error), w.mainstay.warnings.length && (_.warning = m.details(w.mainstay.warnings)), w.mainstay.debug && (_.debug = w.mainstay.debug), w.mainstay.artifacts && (_.artifacts = w.mainstay.artifacts), _;
        }, i.entryAsync = async function(h, b, g) {
          let y = l.defaults;
          g && (y = l.preferences(l.defaults, g));
          const w = d.entry(h, b, y), _ = w.mainstay;
          if (w.error) throw _.debug && (w.error.debug = _.debug), w.error;
          if (_.externals.length) {
            let k = w.value;
            const S = [];
            for (const A of _.externals) {
              const x = A.state.path, T = A.schema.type === "link" ? _.links.get(A.schema) : null;
              let N, F, V = k;
              const oe = x.length ? [k] : [], H = x.length ? f(h, x) : h;
              if (x.length) {
                N = x[x.length - 1];
                let Q = k;
                for (const ae of x.slice(0, -1)) Q = Q[ae], oe.unshift(Q);
                F = oe[0], V = F[N];
              }
              try {
                const Q = (Ee, pe) => (T || A.schema).$_createError(Ee, V, pe, A.state, y), ae = await A.method(V, { schema: A.schema, linked: T, state: A.state, prefs: g, original: H, error: Q, errorsArray: d.errorsArray, warn: (Ee, pe) => _.warnings.push((T || A.schema).$_createError(Ee, V, pe, A.state, y)), message: (Ee, pe) => (T || A.schema).$_createError("external", V, pe, A.state, y, { messages: Ee }) });
                if (ae === void 0 || ae === V) continue;
                if (ae instanceof m.Report) {
                  if (_.tracer.log(A.schema, A.state, "rule", "external", "error"), S.push(ae), y.abortEarly) break;
                  continue;
                }
                if (Array.isArray(ae) && ae[l.symbols.errors]) {
                  if (_.tracer.log(A.schema, A.state, "rule", "external", "error"), S.push(...ae), y.abortEarly) break;
                  continue;
                }
                F ? (_.tracer.value(A.state, "rule", V, ae, "external"), F[N] = ae) : (_.tracer.value(A.state, "rule", k, ae, "external"), k = ae);
              } catch (Q) {
                throw y.errors.label && (Q.message += ` (${A.label})`), Q;
              }
            }
            if (w.value = k, S.length) throw w.error = m.process(S, h, y), _.debug && (w.error.debug = _.debug), w.error;
          }
          if (!y.warnings && !y.debug && !y.artifacts) return w.value;
          const E = { value: w.value };
          return _.warnings.length && (E.warning = m.details(_.warnings)), _.debug && (E.debug = _.debug), _.artifacts && (E.artifacts = _.artifacts), E;
        }, d.Mainstay = class {
          constructor(h, b, g) {
            this.externals = [], this.warnings = [], this.tracer = h, this.debug = b, this.links = g, this.shadow = null, this.artifacts = null, this._snapshots = [];
          }
          snapshot() {
            this._snapshots.push({ externals: this.externals.slice(), warnings: this.warnings.slice() });
          }
          restore() {
            const h = this._snapshots.pop();
            this.externals = h.externals, this.warnings = h.warnings;
          }
        }, d.entry = function(h, b, g) {
          const { tracer: y, cleanup: w } = d.tracer(b, g), _ = g.debug ? [] : null, E = b._ids._schemaChain ? /* @__PURE__ */ new Map() : null, k = new d.Mainstay(y, _, E), S = b._ids._schemaChain ? [{ schema: b }] : null, A = new p([], [], { mainstay: k, schemas: S }), x = i.validate(h, b, A, g);
          w && b.$_root.untrace();
          const T = m.process(x.errors, h, g);
          return { value: x.value, error: T, mainstay: k };
        }, d.tracer = function(h, b) {
          return h.$_root._tracer ? { tracer: h.$_root._tracer._register(h) } : b.debug ? (a(h.$_root.trace, "Debug mode not supported"), { tracer: h.$_root.trace()._register(h), cleanup: !0 }) : { tracer: d.ignore };
        }, i.validate = function(h, b, g, y) {
          let w = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
          if (b.$_terms.whens && (b = b._generate(h, g, y).schema), b._preferences && (y = d.prefs(b, y)), b._cache && y.cache) {
            const T = b._cache.get(h);
            if (g.mainstay.tracer.debug(g, "validate", "cached", !!T), T) return T;
          }
          const _ = (T, N, F) => b.$_createError(T, h, N, F || g, y), E = { original: h, prefs: y, schema: b, state: g, error: _, errorsArray: d.errorsArray, warn: (T, N, F) => g.mainstay.warnings.push(_(T, N, F)), message: (T, N) => b.$_createError("custom", h, N, g, y, { messages: T }) };
          g.mainstay.tracer.entry(b, g);
          const k = b._definition;
          if (k.prepare && h !== void 0 && y.convert) {
            const T = k.prepare(h, E);
            if (T) {
              if (g.mainstay.tracer.value(g, "prepare", h, T.value), T.errors) return d.finalize(T.value, [].concat(T.errors), E);
              h = T.value;
            }
          }
          if (k.coerce && h !== void 0 && y.convert && (!k.coerce.from || k.coerce.from.includes(typeof h))) {
            const T = k.coerce.method(h, E);
            if (T) {
              if (g.mainstay.tracer.value(g, "coerced", h, T.value), T.errors) return d.finalize(T.value, [].concat(T.errors), E);
              h = T.value;
            }
          }
          const S = b._flags.empty;
          S && S.$_match(d.trim(h, b), g.nest(S), l.defaults) && (g.mainstay.tracer.value(g, "empty", h, void 0), h = void 0);
          const A = w.presence || b._flags.presence || (b._flags._endedSwitch ? null : y.presence);
          if (h === void 0) {
            if (A === "forbidden") return d.finalize(h, null, E);
            if (A === "required") return d.finalize(h, [b.$_createError("any.required", h, null, g, y)], E);
            if (A === "optional") {
              if (b._flags.default !== l.symbols.deepDefault) return d.finalize(h, null, E);
              g.mainstay.tracer.value(g, "default", h, {}), h = {};
            }
          } else if (A === "forbidden") return d.finalize(h, [b.$_createError("any.unknown", h, null, g, y)], E);
          const x = [];
          if (b._valids) {
            const T = b._valids.get(h, g, y, b._flags.insensitive);
            if (T) return y.convert && (g.mainstay.tracer.value(g, "valids", h, T.value), h = T.value), g.mainstay.tracer.filter(b, g, "valid", T), d.finalize(h, null, E);
            if (b._flags.only) {
              const N = b.$_createError("any.only", h, { valids: b._valids.values({ display: !0 }) }, g, y);
              if (y.abortEarly) return d.finalize(h, [N], E);
              x.push(N);
            }
          }
          if (b._invalids) {
            const T = b._invalids.get(h, g, y, b._flags.insensitive);
            if (T) {
              g.mainstay.tracer.filter(b, g, "invalid", T);
              const N = b.$_createError("any.invalid", h, { invalids: b._invalids.values({ display: !0 }) }, g, y);
              if (y.abortEarly) return d.finalize(h, [N], E);
              x.push(N);
            }
          }
          if (k.validate) {
            const T = k.validate(h, E);
            if (T && (g.mainstay.tracer.value(g, "base", h, T.value), h = T.value, T.errors)) {
              if (!Array.isArray(T.errors)) return x.push(T.errors), d.finalize(h, x, E);
              if (T.errors.length) return x.push(...T.errors), d.finalize(h, x, E);
            }
          }
          return b._rules.length ? d.rules(h, x, E) : d.finalize(h, x, E);
        }, d.rules = function(h, b, g) {
          const { schema: y, state: w, prefs: _ } = g;
          for (const E of y._rules) {
            const k = y._definition.rules[E.method];
            if (k.convert && _.convert) {
              w.mainstay.tracer.log(y, w, "rule", E.name, "full");
              continue;
            }
            let S, A = E.args;
            if (E._resolve.length) {
              A = Object.assign({}, A);
              for (const T of E._resolve) {
                const N = k.argsByName.get(T), F = A[T].resolve(h, w, _), V = N.normalize ? N.normalize(F) : F, oe = l.validateArg(V, null, N);
                if (oe) {
                  S = y.$_createError("any.ref", F, { arg: T, ref: A[T], reason: oe }, w, _);
                  break;
                }
                A[T] = V;
              }
            }
            S = S || k.validate(h, g, A, E);
            const x = d.rule(S, E);
            if (x.errors) {
              if (w.mainstay.tracer.log(y, w, "rule", E.name, "error"), E.warn) {
                w.mainstay.warnings.push(...x.errors);
                continue;
              }
              if (_.abortEarly) return d.finalize(h, x.errors, g);
              b.push(...x.errors);
            } else w.mainstay.tracer.log(y, w, "rule", E.name, "pass"), w.mainstay.tracer.value(w, "rule", h, x.value, E.name), h = x.value;
          }
          return d.finalize(h, b, g);
        }, d.rule = function(h, b) {
          return h instanceof m.Report ? (d.error(h, b), { errors: [h], value: null }) : Array.isArray(h) && h[l.symbols.errors] ? (h.forEach((g) => d.error(g, b)), { errors: h, value: null }) : { errors: null, value: h };
        }, d.error = function(h, b) {
          return b.message && h._setTemplate(b.message), h;
        }, d.finalize = function(h, b, g) {
          b = b || [];
          const { schema: y, state: w, prefs: _ } = g;
          if (b.length) {
            const k = d.default("failover", void 0, b, g);
            k !== void 0 && (w.mainstay.tracer.value(w, "failover", h, k), h = k, b = []);
          }
          if (b.length && y._flags.error) if (typeof y._flags.error == "function") {
            b = y._flags.error(b), Array.isArray(b) || (b = [b]);
            for (const k of b) a(k instanceof Error || k instanceof m.Report, "error() must return an Error object");
          } else b = [y._flags.error];
          if (h === void 0) {
            const k = d.default("default", h, b, g);
            w.mainstay.tracer.value(w, "default", h, k), h = k;
          }
          if (y._flags.cast && h !== void 0) {
            const k = y._definition.cast[y._flags.cast];
            if (k.from(h)) {
              const S = k.to(h, g);
              w.mainstay.tracer.value(w, "cast", h, S, y._flags.cast), h = S;
            }
          }
          if (y.$_terms.externals && _.externals && _._externals !== !1) for (const { method: k } of y.$_terms.externals) w.mainstay.externals.push({ method: k, schema: y, state: w, label: m.label(y._flags, w, _) });
          const E = { value: h, errors: b.length ? b : null };
          return y._flags.result && (E.value = y._flags.result === "strip" ? void 0 : g.original, w.mainstay.tracer.value(w, y._flags.result, h, E.value), w.shadow(h, y._flags.result)), y._cache && _.cache !== !1 && !y._refs.length && y._cache.set(g.original, E), h === void 0 || E.errors || y._flags.artifact === void 0 || (w.mainstay.artifacts = w.mainstay.artifacts || /* @__PURE__ */ new Map(), w.mainstay.artifacts.has(y._flags.artifact) || w.mainstay.artifacts.set(y._flags.artifact, []), w.mainstay.artifacts.get(y._flags.artifact).push(w.path)), E;
        }, d.prefs = function(h, b) {
          const g = b === l.defaults;
          return g && h._preferences[l.symbols.prefs] ? h._preferences[l.symbols.prefs] : (b = l.preferences(b, h._preferences), g && (h._preferences[l.symbols.prefs] = b), b);
        }, d.default = function(h, b, g, y) {
          const { schema: w, state: _, prefs: E } = y, k = w._flags[h];
          if (E.noDefaults || k === void 0) return b;
          if (_.mainstay.tracer.log(w, _, "rule", h, "full"), !k) return k;
          if (typeof k == "function") {
            const S = k.length ? [c(_.ancestors[0]), y] : [];
            try {
              return k(...S);
            } catch (A) {
              return void g.push(w.$_createError(`any.${h}`, null, { error: A }, _, E));
            }
          }
          return typeof k != "object" ? k : k[l.symbols.literal] ? k.literal : l.isResolvable(k) ? k.resolve(b, _, E) : c(k);
        }, d.trim = function(h, b) {
          if (typeof h != "string") return h;
          const g = b.$_getRule("trim");
          return g && g.args.enabled ? h.trim() : h;
        }, d.ignore = { active: !1, debug: u, entry: u, filter: u, log: u, resolve: u, value: u }, d.errorsArray = function() {
          const h = [];
          return h[l.symbols.errors] = !0, h;
        };
      }, 2036: (s, i, o) => {
        const a = o(375), c = o(9474), u = o(8160), f = {};
        s.exports = f.Values = class {
          constructor(l, m) {
            this._values = new Set(l), this._refs = new Set(m), this._lowercase = f.lowercases(l), this._override = !1;
          }
          get length() {
            return this._values.size + this._refs.size;
          }
          add(l, m) {
            u.isResolvable(l) ? this._refs.has(l) || (this._refs.add(l), m && m.register(l)) : this.has(l, null, null, !1) || (this._values.add(l), typeof l == "string" && this._lowercase.set(l.toLowerCase(), l));
          }
          static merge(l, m, p) {
            if (l = l || new f.Values(), m) {
              if (m._override) return m.clone();
              for (const d of [...m._values, ...m._refs]) l.add(d);
            }
            if (p) for (const d of [...p._values, ...p._refs]) l.remove(d);
            return l.length ? l : null;
          }
          remove(l) {
            u.isResolvable(l) ? this._refs.delete(l) : (this._values.delete(l), typeof l == "string" && this._lowercase.delete(l.toLowerCase()));
          }
          has(l, m, p, d) {
            return !!this.get(l, m, p, d);
          }
          get(l, m, p, d) {
            if (!this.length) return !1;
            if (this._values.has(l)) return { value: l };
            if (typeof l == "string" && l && d) {
              const h = this._lowercase.get(l.toLowerCase());
              if (h) return { value: h };
            }
            if (!this._refs.size && typeof l != "object") return !1;
            if (typeof l == "object") {
              for (const h of this._values) if (c(h, l)) return { value: h };
            }
            if (m) for (const h of this._refs) {
              const b = h.resolve(l, m, p, null, { in: !0 });
              if (b === void 0) continue;
              const g = h.in && typeof b == "object" ? Array.isArray(b) ? b : Object.keys(b) : [b];
              for (const y of g) if (typeof y == typeof l) {
                if (d && l && typeof l == "string") {
                  if (y.toLowerCase() === l.toLowerCase()) return { value: y, ref: h };
                } else if (c(y, l)) return { value: y, ref: h };
              }
            }
            return !1;
          }
          override() {
            this._override = !0;
          }
          values(l) {
            if (l && l.display) {
              const m = [];
              for (const p of [...this._values, ...this._refs]) p !== void 0 && m.push(p);
              return m;
            }
            return Array.from([...this._values, ...this._refs]);
          }
          clone() {
            const l = new f.Values(this._values, this._refs);
            return l._override = this._override, l;
          }
          concat(l) {
            a(!l._override, "Cannot concat override set of values");
            const m = new f.Values([...this._values, ...l._values], [...this._refs, ...l._refs]);
            return m._override = this._override, m;
          }
          describe() {
            const l = [];
            this._override && l.push({ override: !0 });
            for (const m of this._values.values()) l.push(m && typeof m == "object" ? { value: m } : m);
            for (const m of this._refs.values()) l.push(m.describe());
            return l;
          }
        }, f.Values.prototype[u.symbols.values] = !0, f.Values.prototype.slice = f.Values.prototype.clone, f.lowercases = function(l) {
          const m = /* @__PURE__ */ new Map();
          if (l) for (const p of l) typeof p == "string" && m.set(p.toLowerCase(), p);
          return m;
        };
      }, 978: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(1687), f = o(9621), l = {};
        s.exports = function(m, p) {
          let d = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          if (a(m && typeof m == "object", "Invalid defaults value: must be an object"), a(!p || p === !0 || typeof p == "object", "Invalid source value: must be true, falsy or an object"), a(typeof d == "object", "Invalid options: must be an object"), !p) return null;
          if (d.shallow) return l.applyToDefaultsWithShallow(m, p, d);
          const h = c(m);
          if (p === !0) return h;
          const b = d.nullOverride !== void 0 && d.nullOverride;
          return u(h, p, { nullOverride: b, mergeArrays: !1 });
        }, l.applyToDefaultsWithShallow = function(m, p, d) {
          const h = d.shallow;
          a(Array.isArray(h), "Invalid keys");
          const b = /* @__PURE__ */ new Map(), g = p === !0 ? null : /* @__PURE__ */ new Set();
          for (let _ of h) {
            _ = Array.isArray(_) ? _ : _.split(".");
            const E = f(m, _);
            E && typeof E == "object" ? b.set(E, g && f(p, _) || E) : g && g.add(_);
          }
          const y = c(m, {}, b);
          if (!g) return y;
          for (const _ of g) l.reachCopy(y, p, _);
          const w = d.nullOverride !== void 0 && d.nullOverride;
          return u(y, p, { nullOverride: w, mergeArrays: !1 });
        }, l.reachCopy = function(m, p, d) {
          for (const g of d) {
            if (!(g in p)) return;
            const y = p[g];
            if (typeof y != "object" || y === null) return;
            p = y;
          }
          const h = p;
          let b = m;
          for (let g = 0; g < d.length - 1; ++g) {
            const y = d[g];
            typeof b[y] != "object" && (b[y] = {}), b = b[y];
          }
          b[d[d.length - 1]] = h;
        };
      }, 375: (s, i, o) => {
        const a = o(7916);
        s.exports = function(c) {
          if (!c) {
            for (var u = arguments.length, f = new Array(u > 1 ? u - 1 : 0), l = 1; l < u; l++) f[l - 1] = arguments[l];
            throw f.length === 1 && f[0] instanceof Error ? f[0] : new a(f);
          }
        };
      }, 8571: (s, i, o) => {
        const a = o(9621), c = o(4277), u = o(7043), f = { needsProtoHack: /* @__PURE__ */ new Set([c.set, c.map, c.weakSet, c.weakMap]) };
        s.exports = f.clone = function(l) {
          let m = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, p = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          if (typeof l != "object" || l === null) return l;
          let d = f.clone, h = p;
          if (m.shallow) {
            if (m.shallow !== !0) return f.cloneWithShallow(l, m);
            d = (w) => w;
          } else if (h) {
            const w = h.get(l);
            if (w) return w;
          } else h = /* @__PURE__ */ new Map();
          const b = c.getInternalProto(l);
          if (b === c.buffer) return !1;
          if (b === c.date) return new Date(l.getTime());
          if (b === c.regex) return new RegExp(l);
          const g = f.base(l, b, m);
          if (g === l) return l;
          if (h && h.set(l, g), b === c.set) for (const w of l) g.add(d(w, m, h));
          else if (b === c.map) for (const [w, _] of l) g.set(w, d(_, m, h));
          const y = u.keys(l, m);
          for (const w of y) {
            if (w === "__proto__") continue;
            if (b === c.array && w === "length") {
              g.length = l.length;
              continue;
            }
            const _ = Object.getOwnPropertyDescriptor(l, w);
            _ ? _.get || _.set ? Object.defineProperty(g, w, _) : _.enumerable ? g[w] = d(l[w], m, h) : Object.defineProperty(g, w, { enumerable: !1, writable: !0, configurable: !0, value: d(l[w], m, h) }) : Object.defineProperty(g, w, { enumerable: !0, writable: !0, configurable: !0, value: d(l[w], m, h) });
          }
          return g;
        }, f.cloneWithShallow = function(l, m) {
          const p = m.shallow;
          (m = Object.assign({}, m)).shallow = !1;
          const d = /* @__PURE__ */ new Map();
          for (const h of p) {
            const b = a(l, h);
            typeof b != "object" && typeof b != "function" || d.set(b, b);
          }
          return f.clone(l, m, d);
        }, f.base = function(l, m, p) {
          if (p.prototype === !1) return f.needsProtoHack.has(m) ? new m.constructor() : m === c.array ? [] : {};
          const d = Object.getPrototypeOf(l);
          if (d && d.isImmutable) return l;
          if (m === c.array) {
            const h = [];
            return d !== m && Object.setPrototypeOf(h, d), h;
          }
          if (f.needsProtoHack.has(m)) {
            const h = new d.constructor();
            return d !== m && Object.setPrototypeOf(h, d), h;
          }
          return Object.create(d);
        };
      }, 9474: (s, i, o) => {
        const a = o(4277), c = { mismatched: null };
        s.exports = function(u, f, l) {
          return l = Object.assign({ prototype: !0 }, l), !!c.isDeepEqual(u, f, l, []);
        }, c.isDeepEqual = function(u, f, l, m) {
          if (u === f) return u !== 0 || 1 / u == 1 / f;
          const p = typeof u;
          if (p !== typeof f || u === null || f === null) return !1;
          if (p === "function") {
            if (!l.deepFunction || u.toString() !== f.toString()) return !1;
          } else if (p !== "object") return u != u && f != f;
          const d = c.getSharedType(u, f, !!l.prototype);
          switch (d) {
            case a.buffer:
              return !1;
            case a.promise:
              return u === f;
            case a.regex:
              return u.toString() === f.toString();
            case c.mismatched:
              return !1;
          }
          for (let h = m.length - 1; h >= 0; --h) if (m[h].isSame(u, f)) return !0;
          m.push(new c.SeenEntry(u, f));
          try {
            return !!c.isDeepEqualObj(d, u, f, l, m);
          } finally {
            m.pop();
          }
        }, c.getSharedType = function(u, f, l) {
          if (l) return Object.getPrototypeOf(u) !== Object.getPrototypeOf(f) ? c.mismatched : a.getInternalProto(u);
          const m = a.getInternalProto(u);
          return m !== a.getInternalProto(f) ? c.mismatched : m;
        }, c.valueOf = function(u) {
          const f = u.valueOf;
          if (f === void 0) return u;
          try {
            return f.call(u);
          } catch (l) {
            return l;
          }
        }, c.hasOwnEnumerableProperty = function(u, f) {
          return Object.prototype.propertyIsEnumerable.call(u, f);
        }, c.isSetSimpleEqual = function(u, f) {
          for (const l of Set.prototype.values.call(u)) if (!Set.prototype.has.call(f, l)) return !1;
          return !0;
        }, c.isDeepEqualObj = function(u, f, l, m, p) {
          const { isDeepEqual: d, valueOf: h, hasOwnEnumerableProperty: b } = c, { keys: g, getOwnPropertySymbols: y } = Object;
          if (u === a.array) {
            if (!m.part) {
              if (f.length !== l.length) return !1;
              for (let S = 0; S < f.length; ++S) if (!d(f[S], l[S], m, p)) return !1;
              return !0;
            }
            for (const S of f) for (const A of l) if (d(S, A, m, p)) return !0;
          } else if (u === a.set) {
            if (f.size !== l.size) return !1;
            if (!c.isSetSimpleEqual(f, l)) {
              const S = new Set(Set.prototype.values.call(l));
              for (const A of Set.prototype.values.call(f)) {
                if (S.delete(A)) continue;
                let x = !1;
                for (const T of S) if (d(A, T, m, p)) {
                  S.delete(T), x = !0;
                  break;
                }
                if (!x) return !1;
              }
            }
          } else if (u === a.map) {
            if (f.size !== l.size) return !1;
            for (const [S, A] of Map.prototype.entries.call(f))
              if (A === void 0 && !Map.prototype.has.call(l, S) || !d(A, Map.prototype.get.call(l, S), m, p)) return !1;
          } else if (u === a.error && (f.name !== l.name || f.message !== l.message)) return !1;
          const w = h(f), _ = h(l);
          if ((f !== w || l !== _) && !d(w, _, m, p)) return !1;
          const E = g(f);
          if (!m.part && E.length !== g(l).length && !m.skip) return !1;
          let k = 0;
          for (const S of E) if (m.skip && m.skip.includes(S)) l[S] === void 0 && ++k;
          else if (!b(l, S) || !d(f[S], l[S], m, p)) return !1;
          if (!m.part && E.length - k !== g(l).length) return !1;
          if (m.symbols !== !1) {
            const S = y(f), A = new Set(y(l));
            for (const x of S) {
              if (!m.skip || !m.skip.includes(x)) {
                if (b(f, x)) {
                  if (!b(l, x) || !d(f[x], l[x], m, p)) return !1;
                } else if (b(l, x)) return !1;
              }
              A.delete(x);
            }
            for (const x of A) if (b(l, x)) return !1;
          }
          return !0;
        }, c.SeenEntry = class {
          constructor(u, f) {
            this.obj = u, this.ref = f;
          }
          isSame(u, f) {
            return this.obj === u && this.ref === f;
          }
        };
      }, 7916: (s, i, o) => {
        const a = o(8761);
        s.exports = class extends Error {
          constructor(c) {
            super(c.filter((u) => u !== "").map((u) => typeof u == "string" ? u : u instanceof Error ? u.message : a(u)).join(" ") || "Unknown error"), typeof Error.captureStackTrace == "function" && Error.captureStackTrace(this, i.assert);
          }
        };
      }, 5277: (s) => {
        const i = {};
        s.exports = function(o) {
          if (!o) return "";
          let a = "";
          for (let c = 0; c < o.length; ++c) {
            const u = o.charCodeAt(c);
            i.isSafe(u) ? a += o[c] : a += i.escapeHtmlChar(u);
          }
          return a;
        }, i.escapeHtmlChar = function(o) {
          return i.namedHtml.get(o) || (o >= 256 ? "&#" + o + ";" : `&#x${o.toString(16).padStart(2, "0")};`);
        }, i.isSafe = function(o) {
          return i.safeCharCodes.has(o);
        }, i.namedHtml = /* @__PURE__ */ new Map([[38, "&amp;"], [60, "&lt;"], [62, "&gt;"], [34, "&quot;"], [160, "&nbsp;"], [162, "&cent;"], [163, "&pound;"], [164, "&curren;"], [169, "&copy;"], [174, "&reg;"]]), i.safeCharCodes = function() {
          const o = /* @__PURE__ */ new Set();
          for (let a = 32; a < 123; ++a) (a >= 97 || a >= 65 && a <= 90 || a >= 48 && a <= 57 || a === 32 || a === 46 || a === 44 || a === 45 || a === 58 || a === 95) && o.add(a);
          return o;
        }();
      }, 6064: (s) => {
        s.exports = function(i) {
          return i.replace(/[\^\$\.\*\+\-\?\=\!\:\|\\\/\(\)\[\]\{\}\,]/g, "\\$&");
        };
      }, 738: (s) => {
        s.exports = function() {
        };
      }, 1687: (s, i, o) => {
        const a = o(375), c = o(8571), u = o(7043), f = {};
        s.exports = f.merge = function(l, m, p) {
          if (a(l && typeof l == "object", "Invalid target value: must be an object"), a(m == null || typeof m == "object", "Invalid source value: must be null, undefined, or an object"), !m) return l;
          if (p = Object.assign({ nullOverride: !0, mergeArrays: !0 }, p), Array.isArray(m)) {
            a(Array.isArray(l), "Cannot merge array onto an object"), p.mergeArrays || (l.length = 0);
            for (let h = 0; h < m.length; ++h) l.push(c(m[h], { symbols: p.symbols }));
            return l;
          }
          const d = u.keys(m, p);
          for (let h = 0; h < d.length; ++h) {
            const b = d[h];
            if (b === "__proto__" || !Object.prototype.propertyIsEnumerable.call(m, b)) continue;
            const g = m[b];
            if (g && typeof g == "object") {
              if (l[b] === g) continue;
              !l[b] || typeof l[b] != "object" || Array.isArray(l[b]) !== Array.isArray(g) || g instanceof Date || g instanceof RegExp ? l[b] = c(g, { symbols: p.symbols }) : f.merge(l[b], g, p);
            } else (g != null || p.nullOverride) && (l[b] = g);
          }
          return l;
        };
      }, 9621: (s, i, o) => {
        const a = o(375), c = {};
        s.exports = function(u, f, l) {
          if (f === !1 || f == null) return u;
          typeof (l = l || {}) == "string" && (l = { separator: l });
          const m = Array.isArray(f);
          a(!m || !l.separator, "Separator option is not valid for array-based chain");
          const p = m ? f : f.split(l.separator || ".");
          let d = u;
          for (let h = 0; h < p.length; ++h) {
            let b = p[h];
            const g = l.iterables && c.iterables(d);
            if (Array.isArray(d) || g === "set") {
              const y = Number(b);
              Number.isInteger(y) && (b = y < 0 ? d.length + y : y);
            }
            if (!d || typeof d == "function" && l.functions === !1 || !g && d[b] === void 0) {
              a(!l.strict || h + 1 === p.length, "Missing segment", b, "in reach path ", f), a(typeof d == "object" || l.functions === !0 || typeof d != "function", "Invalid segment", b, "in reach path ", f), d = l.default;
              break;
            }
            d = g ? g === "set" ? [...d][b] : d.get(b) : d[b];
          }
          return d;
        }, c.iterables = function(u) {
          return u instanceof Set ? "set" : u instanceof Map ? "map" : void 0;
        };
      }, 8761: (s) => {
        s.exports = function() {
          try {
            return JSON.stringify(...arguments);
          } catch (i) {
            return "[Cannot display object: " + i.message + "]";
          }
        };
      }, 4277: (s, i) => {
        const o = {};
        i = s.exports = { array: Array.prototype, buffer: !1, date: Date.prototype, error: Error.prototype, generic: Object.prototype, map: Map.prototype, promise: Promise.prototype, regex: RegExp.prototype, set: Set.prototype, weakMap: WeakMap.prototype, weakSet: WeakSet.prototype }, o.typeMap = /* @__PURE__ */ new Map([["[object Error]", i.error], ["[object Map]", i.map], ["[object Promise]", i.promise], ["[object Set]", i.set], ["[object WeakMap]", i.weakMap], ["[object WeakSet]", i.weakSet]]), i.getInternalProto = function(a) {
          if (Array.isArray(a)) return i.array;
          if (a instanceof Date) return i.date;
          if (a instanceof RegExp) return i.regex;
          if (a instanceof Error) return i.error;
          const c = Object.prototype.toString.call(a);
          return o.typeMap.get(c) || i.generic;
        };
      }, 7043: (s, i) => {
        i.keys = function(o) {
          return (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}).symbols !== !1 ? Reflect.ownKeys(o) : Object.getOwnPropertyNames(o);
        };
      }, 3652: (s, i, o) => {
        const a = o(375), c = {};
        i.Sorter = class {
          constructor() {
            this._items = [], this.nodes = [];
          }
          add(u, f) {
            const l = [].concat((f = f || {}).before || []), m = [].concat(f.after || []), p = f.group || "?", d = f.sort || 0;
            a(!l.includes(p), `Item cannot come before itself: ${p}`), a(!l.includes("?"), "Item cannot come before unassociated items"), a(!m.includes(p), `Item cannot come after itself: ${p}`), a(!m.includes("?"), "Item cannot come after unassociated items"), Array.isArray(u) || (u = [u]);
            for (const h of u) {
              const b = { seq: this._items.length, sort: d, before: l, after: m, group: p, node: h };
              this._items.push(b);
            }
            if (!f.manual) {
              const h = this._sort();
              a(h, "item", p !== "?" ? `added into group ${p}` : "", "created a dependencies error");
            }
            return this.nodes;
          }
          merge(u) {
            Array.isArray(u) || (u = [u]);
            for (const l of u) if (l) for (const m of l._items) this._items.push(Object.assign({}, m));
            this._items.sort(c.mergeSort);
            for (let l = 0; l < this._items.length; ++l) this._items[l].seq = l;
            const f = this._sort();
            return a(f, "merge created a dependencies error"), this.nodes;
          }
          sort() {
            const u = this._sort();
            return a(u, "sort created a dependencies error"), this.nodes;
          }
          _sort() {
            const u = {}, f = /* @__PURE__ */ Object.create(null), l = /* @__PURE__ */ Object.create(null);
            for (const b of this._items) {
              const g = b.seq, y = b.group;
              l[y] = l[y] || [], l[y].push(g), u[g] = b.before;
              for (const w of b.after) f[w] = f[w] || [], f[w].push(g);
            }
            for (const b in u) {
              const g = [];
              for (const y in u[b]) {
                const w = u[b][y];
                l[w] = l[w] || [], g.push(...l[w]);
              }
              u[b] = g;
            }
            for (const b in f) if (l[b]) for (const g of l[b]) u[g].push(...f[b]);
            const m = {};
            for (const b in u) {
              const g = u[b];
              for (const y of g) m[y] = m[y] || [], m[y].push(b);
            }
            const p = {}, d = [];
            for (let b = 0; b < this._items.length; ++b) {
              let g = b;
              if (m[b]) {
                g = null;
                for (let y = 0; y < this._items.length; ++y) {
                  if (p[y] === !0) continue;
                  m[y] || (m[y] = []);
                  const w = m[y].length;
                  let _ = 0;
                  for (let E = 0; E < w; ++E) p[m[y][E]] && ++_;
                  if (_ === w) {
                    g = y;
                    break;
                  }
                }
              }
              g !== null && (p[g] = !0, d.push(g));
            }
            if (d.length !== this._items.length) return !1;
            const h = {};
            for (const b of this._items) h[b.seq] = b;
            this._items = [], this.nodes = [];
            for (const b of d) {
              const g = h[b];
              this.nodes.push(g.node), this._items.push(g);
            }
            return !0;
          }
        }, c.mergeSort = (u, f) => u.sort === f.sort ? 0 : u.sort < f.sort ? -1 : 1;
      }, 5380: (s, i, o) => {
        const a = o(443), c = o(2178), u = { minDomainSegments: 2, nonAsciiRx: /[^\x00-\x7f]/, domainControlRx: /[\x00-\x20@\:\/\\#!\$&\'\(\)\*\+,;=\?]/, tldSegmentRx: /^[a-zA-Z](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/, domainSegmentRx: /^[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/, URL: a.URL || URL };
        i.analyze = function(f) {
          let l = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (!f) return c.code("DOMAIN_NON_EMPTY_STRING");
          if (typeof f != "string") throw new Error("Invalid input: domain must be a string");
          if (f.length > 256) return c.code("DOMAIN_TOO_LONG");
          if (u.nonAsciiRx.test(f)) {
            if (l.allowUnicode === !1) return c.code("DOMAIN_INVALID_UNICODE_CHARS");
            f = f.normalize("NFC");
          }
          if (u.domainControlRx.test(f)) return c.code("DOMAIN_INVALID_CHARS");
          f = u.punycode(f), l.allowFullyQualified && f[f.length - 1] === "." && (f = f.slice(0, -1));
          const m = l.minDomainSegments || u.minDomainSegments, p = f.split(".");
          if (p.length < m) return c.code("DOMAIN_SEGMENTS_COUNT");
          if (l.maxDomainSegments && p.length > l.maxDomainSegments) return c.code("DOMAIN_SEGMENTS_COUNT_MAX");
          const d = l.tlds;
          if (d) {
            const h = p[p.length - 1].toLowerCase();
            if (d.deny && d.deny.has(h) || d.allow && !d.allow.has(h)) return c.code("DOMAIN_FORBIDDEN_TLDS");
          }
          for (let h = 0; h < p.length; ++h) {
            const b = p[h];
            if (!b.length) return c.code("DOMAIN_EMPTY_SEGMENT");
            if (b.length > 63) return c.code("DOMAIN_LONG_SEGMENT");
            if (h < p.length - 1) {
              if (!u.domainSegmentRx.test(b)) return c.code("DOMAIN_INVALID_CHARS");
            } else if (!u.tldSegmentRx.test(b)) return c.code("DOMAIN_INVALID_TLDS_CHARS");
          }
          return null;
        }, i.isValid = function(f, l) {
          return !i.analyze(f, l);
        }, u.punycode = function(f) {
          f.includes("%") && (f = f.replace(/%/g, "%25"));
          try {
            return new u.URL(`http://${f}`).host;
          } catch {
            return f;
          }
        };
      }, 1745: (s, i, o) => {
        const a = o(9848), c = o(5380), u = o(2178), f = { nonAsciiRx: /[^\x00-\x7f]/, encoder: new (a.TextEncoder || TextEncoder)() };
        i.analyze = function(l, m) {
          return f.email(l, m);
        }, i.isValid = function(l, m) {
          return !f.email(l, m);
        }, f.email = function(l) {
          let m = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (typeof l != "string") throw new Error("Invalid input: email must be a string");
          if (!l) return u.code("EMPTY_STRING");
          const p = !f.nonAsciiRx.test(l);
          if (!p) {
            if (m.allowUnicode === !1) return u.code("FORBIDDEN_UNICODE");
            l = l.normalize("NFC");
          }
          const d = l.split("@");
          if (d.length !== 2) return d.length > 2 ? u.code("MULTIPLE_AT_CHAR") : u.code("MISSING_AT_CHAR");
          const [h, b] = d;
          if (!h) return u.code("EMPTY_LOCAL");
          if (!m.ignoreLength) {
            if (l.length > 254) return u.code("ADDRESS_TOO_LONG");
            if (f.encoder.encode(h).length > 64) return u.code("LOCAL_TOO_LONG");
          }
          return f.local(h, p) || c.analyze(b, m);
        }, f.local = function(l, m) {
          const p = l.split(".");
          for (const d of p) {
            if (!d.length) return u.code("EMPTY_LOCAL_SEGMENT");
            if (m) {
              if (!f.atextRx.test(d)) return u.code("INVALID_LOCAL_CHARS");
            } else for (const h of d) {
              if (f.atextRx.test(h)) continue;
              const b = f.binary(h);
              if (!f.atomRx.test(b)) return u.code("INVALID_LOCAL_CHARS");
            }
          }
        }, f.binary = function(l) {
          return Array.from(f.encoder.encode(l)).map((m) => String.fromCharCode(m)).join("");
        }, f.atextRx = /^[\w!#\$%&'\*\+\-/=\?\^`\{\|\}~]+$/, f.atomRx = new RegExp(["(?:[\\xc2-\\xdf][\\x80-\\xbf])", "(?:\\xe0[\\xa0-\\xbf][\\x80-\\xbf])|(?:[\\xe1-\\xec][\\x80-\\xbf]{2})|(?:\\xed[\\x80-\\x9f][\\x80-\\xbf])|(?:[\\xee-\\xef][\\x80-\\xbf]{2})", "(?:\\xf0[\\x90-\\xbf][\\x80-\\xbf]{2})|(?:[\\xf1-\\xf3][\\x80-\\xbf]{3})|(?:\\xf4[\\x80-\\x8f][\\x80-\\xbf]{2})"].join("|"));
      }, 2178: (s, i) => {
        i.codes = { EMPTY_STRING: "Address must be a non-empty string", FORBIDDEN_UNICODE: "Address contains forbidden Unicode characters", MULTIPLE_AT_CHAR: "Address cannot contain more than one @ character", MISSING_AT_CHAR: "Address must contain one @ character", EMPTY_LOCAL: "Address local part cannot be empty", ADDRESS_TOO_LONG: "Address too long", LOCAL_TOO_LONG: "Address local part too long", EMPTY_LOCAL_SEGMENT: "Address local part contains empty dot-separated segment", INVALID_LOCAL_CHARS: "Address local part contains invalid character", DOMAIN_NON_EMPTY_STRING: "Domain must be a non-empty string", DOMAIN_TOO_LONG: "Domain too long", DOMAIN_INVALID_UNICODE_CHARS: "Domain contains forbidden Unicode characters", DOMAIN_INVALID_CHARS: "Domain contains invalid character", DOMAIN_INVALID_TLDS_CHARS: "Domain contains invalid tld character", DOMAIN_SEGMENTS_COUNT: "Domain lacks the minimum required number of segments", DOMAIN_SEGMENTS_COUNT_MAX: "Domain contains too many segments", DOMAIN_FORBIDDEN_TLDS: "Domain uses forbidden TLD", DOMAIN_EMPTY_SEGMENT: "Domain contains empty dot-separated segment", DOMAIN_LONG_SEGMENT: "Domain contains dot-separated segment that is too long" }, i.code = function(o) {
          return { code: o, error: i.codes[o] };
        };
      }, 9959: (s, i, o) => {
        const a = o(375), c = o(5752);
        i.regex = function() {
          let u = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          a(u.cidr === void 0 || typeof u.cidr == "string", "options.cidr must be a string");
          const f = u.cidr ? u.cidr.toLowerCase() : "optional";
          a(["required", "optional", "forbidden"].includes(f), "options.cidr must be one of required, optional, forbidden"), a(u.version === void 0 || typeof u.version == "string" || Array.isArray(u.version), "options.version must be a string or an array of string");
          let l = u.version || ["ipv4", "ipv6", "ipvfuture"];
          Array.isArray(l) || (l = [l]), a(l.length >= 1, "options.version must have at least 1 version specified");
          for (let d = 0; d < l.length; ++d) a(typeof l[d] == "string", "options.version must only contain strings"), l[d] = l[d].toLowerCase(), a(["ipv4", "ipv6", "ipvfuture"].includes(l[d]), "options.version contains unknown version " + l[d] + " - must be one of ipv4, ipv6, ipvfuture");
          l = Array.from(new Set(l));
          const m = `(?:${l.map((d) => {
            if (f === "forbidden") return c.ip[d];
            const h = `\\/${d === "ipv4" ? c.ip.v4Cidr : c.ip.v6Cidr}`;
            return f === "required" ? `${c.ip[d]}${h}` : `${c.ip[d]}(?:${h})?`;
          }).join("|")})`, p = new RegExp(`^${m}$`);
          return { cidr: f, versions: l, regex: p, raw: m };
        };
      }, 5752: (s, i, o) => {
        const a = o(375), c = o(6064), u = { generate: function() {
          const f = {}, l = "\\dA-Fa-f", m = "[" + l + "]", p = "\\w-\\.~", d = "!\\$&'\\(\\)\\*\\+,;=", h = "%" + l, b = p + h + d + ":@", g = "[" + b + "]", y = "(?:0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])";
          f.ipv4address = "(?:" + y + "\\.){3}" + y;
          const w = m + "{1,4}", _ = "(?:" + w + ":" + w + "|" + f.ipv4address + ")", E = "(?:" + w + ":){6}" + _, k = "::(?:" + w + ":){5}" + _, S = "(?:" + w + ")?::(?:" + w + ":){4}" + _, A = "(?:(?:" + w + ":){0,1}" + w + ")?::(?:" + w + ":){3}" + _, x = "(?:(?:" + w + ":){0,2}" + w + ")?::(?:" + w + ":){2}" + _, T = "(?:(?:" + w + ":){0,3}" + w + ")?::" + w + ":" + _, N = "(?:(?:" + w + ":){0,4}" + w + ")?::" + _, F = "(?:(?:" + w + ":){0,5}" + w + ")?::" + w, V = "(?:(?:" + w + ":){0,6}" + w + ")?::";
          f.ipv4Cidr = "(?:\\d|[1-2]\\d|3[0-2])", f.ipv6Cidr = "(?:0{0,2}\\d|0?[1-9]\\d|1[01]\\d|12[0-8])", f.ipv6address = "(?:" + E + "|" + k + "|" + S + "|" + A + "|" + x + "|" + T + "|" + N + "|" + F + "|" + V + ")", f.ipvFuture = "v" + m + "+\\.[" + p + d + ":]+", f.scheme = "[a-zA-Z][a-zA-Z\\d+-\\.]*", f.schemeRegex = new RegExp(f.scheme);
          const oe = "[" + p + h + d + ":]*", H = "[" + p + h + d + "]{1,255}", Q = "(?:\\[(?:" + f.ipv6address + "|" + f.ipvFuture + ")\\]|" + f.ipv4address + "|" + H + ")", ae = "(?:" + oe + "@)?" + Q + "(?::\\d*)?", Ee = "(?:" + oe + "@)?(" + Q + ")(?::\\d*)?", pe = g + "*", Re = g + "+", ve = "(?:\\/" + pe + ")*", Se = "\\/(?:" + Re + ve + ")?", ee = Re + ve, xe = "[" + p + h + d + "@]+" + ve, Ve = "(?:\\/\\/\\/" + pe + ve + ")";
          return f.hierPart = "(?:(?:\\/\\/" + ae + ve + ")|" + Se + "|" + ee + "|" + Ve + ")", f.hierPartCapture = "(?:(?:\\/\\/" + Ee + ve + ")|" + Se + "|" + ee + ")", f.relativeRef = "(?:(?:\\/\\/" + ae + ve + ")|" + Se + "|" + xe + "|)", f.relativeRefCapture = "(?:(?:\\/\\/" + Ee + ve + ")|" + Se + "|" + xe + "|)", f.query = "[" + b + "\\/\\?]*(?=#|$)", f.queryWithSquareBrackets = "[" + b + "\\[\\]\\/\\?]*(?=#|$)", f.fragment = "[" + b + "\\/\\?]*", f;
        } };
        u.rfc3986 = u.generate(), i.ip = { v4Cidr: u.rfc3986.ipv4Cidr, v6Cidr: u.rfc3986.ipv6Cidr, ipv4: u.rfc3986.ipv4address, ipv6: u.rfc3986.ipv6address, ipvfuture: u.rfc3986.ipvFuture }, u.createRegex = function(f) {
          const l = u.rfc3986, m = "(?:\\?" + (f.allowQuerySquareBrackets ? l.queryWithSquareBrackets : l.query) + ")?(?:#" + l.fragment + ")?", p = f.domain ? l.relativeRefCapture : l.relativeRef;
          if (f.relativeOnly) return u.wrap(p + m);
          let d = "";
          if (f.scheme) {
            a(f.scheme instanceof RegExp || typeof f.scheme == "string" || Array.isArray(f.scheme), "scheme must be a RegExp, String, or Array");
            const g = [].concat(f.scheme);
            a(g.length >= 1, "scheme must have at least 1 scheme specified");
            const y = [];
            for (let w = 0; w < g.length; ++w) {
              const _ = g[w];
              a(_ instanceof RegExp || typeof _ == "string", "scheme at position " + w + " must be a RegExp or String"), _ instanceof RegExp ? y.push(_.source.toString()) : (a(l.schemeRegex.test(_), "scheme at position " + w + " must be a valid scheme"), y.push(c(_)));
            }
            d = y.join("|");
          }
          const h = "(?:" + (d ? "(?:" + d + ")" : l.scheme) + ":" + (f.domain ? l.hierPartCapture : l.hierPart) + ")", b = f.allowRelative ? "(?:" + h + "|" + p + ")" : h;
          return u.wrap(b + m, d);
        }, u.wrap = function(f, l) {
          return { raw: f = `(?=.)(?!https?:/(?:$|[^/]))(?!https?:///)(?!https?:[^/])${f}`, regex: new RegExp(`^${f}$`), scheme: l };
        }, u.uriRegex = u.createRegex({}), i.regex = function() {
          let f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return f.scheme || f.allowRelative || f.relativeOnly || f.allowQuerySquareBrackets || f.domain ? u.createRegex(f) : u.uriRegex;
        };
      }, 1447: (s, i) => {
        const o = { operators: ["!", "^", "*", "/", "%", "+", "-", "<", "<=", ">", ">=", "==", "!=", "&&", "||", "??"], operatorCharacters: ["!", "^", "*", "/", "%", "+", "-", "<", "=", ">", "&", "|", "?"], operatorsOrder: [["^"], ["*", "/", "%"], ["+", "-"], ["<", "<=", ">", ">="], ["==", "!="], ["&&"], ["||", "??"]], operatorsPrefix: ["!", "n"], literals: { '"': '"', "`": "`", "'": "'", "[": "]" }, numberRx: /^(?:[0-9]*(\.[0-9]*)?){1}$/, tokenRx: /^[\w\$\#\.\@\:\{\}]+$/, symbol: Symbol("formula"), settings: Symbol("settings") };
        i.Parser = class {
          constructor(a) {
            let c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (!c[o.settings] && c.constants) for (const u in c.constants) {
              const f = c.constants[u];
              if (f !== null && !["boolean", "number", "string"].includes(typeof f)) throw new Error(`Formula constant ${u} contains invalid ${typeof f} value type`);
            }
            this.settings = c[o.settings] ? c : Object.assign({ [o.settings]: !0, constants: {}, functions: {} }, c), this.single = null, this._parts = null, this._parse(a);
          }
          _parse(a) {
            let c = [], u = "", f = 0, l = !1;
            const m = (d) => {
              if (f) throw new Error("Formula missing closing parenthesis");
              const h = c.length ? c[c.length - 1] : null;
              if (l || u || d) {
                if (h && h.type === "reference" && d === ")") return h.type = "function", h.value = this._subFormula(u, h.value), void (u = "");
                if (d === ")") {
                  const b = new i.Parser(u, this.settings);
                  c.push({ type: "segment", value: b });
                } else if (l) {
                  if (l === "]") return c.push({ type: "reference", value: u }), void (u = "");
                  c.push({ type: "literal", value: u });
                } else if (o.operatorCharacters.includes(u)) h && h.type === "operator" && o.operators.includes(h.value + u) ? h.value += u : c.push({ type: "operator", value: u });
                else if (u.match(o.numberRx)) c.push({ type: "constant", value: parseFloat(u) });
                else if (this.settings.constants[u] !== void 0) c.push({ type: "constant", value: this.settings.constants[u] });
                else {
                  if (!u.match(o.tokenRx)) throw new Error(`Formula contains invalid token: ${u}`);
                  c.push({ type: "reference", value: u });
                }
                u = "";
              }
            };
            for (const d of a) l ? d === l ? (m(), l = !1) : u += d : f ? d === "(" ? (u += d, ++f) : d === ")" ? (--f, f ? u += d : m(d)) : u += d : d in o.literals ? l = o.literals[d] : d === "(" ? (m(), ++f) : o.operatorCharacters.includes(d) ? (m(), u = d, m()) : d !== " " ? u += d : m();
            m(), c = c.map((d, h) => d.type !== "operator" || d.value !== "-" || h && c[h - 1].type !== "operator" ? d : { type: "operator", value: "n" });
            let p = !1;
            for (const d of c) {
              if (d.type === "operator") {
                if (o.operatorsPrefix.includes(d.value)) continue;
                if (!p) throw new Error("Formula contains an operator in invalid position");
                if (!o.operators.includes(d.value)) throw new Error(`Formula contains an unknown operator ${d.value}`);
              } else if (p) throw new Error("Formula missing expected operator");
              p = !p;
            }
            if (!p) throw new Error("Formula contains invalid trailing operator");
            c.length === 1 && ["reference", "literal", "constant"].includes(c[0].type) && (this.single = { type: c[0].type === "reference" ? "reference" : "value", value: c[0].value }), this._parts = c.map((d) => {
              if (d.type === "operator") return o.operatorsPrefix.includes(d.value) ? d : d.value;
              if (d.type !== "reference") return d.value;
              if (this.settings.tokenRx && !this.settings.tokenRx.test(d.value)) throw new Error(`Formula contains invalid reference ${d.value}`);
              return this.settings.reference ? this.settings.reference(d.value) : o.reference(d.value);
            });
          }
          _subFormula(a, c) {
            const u = this.settings.functions[c];
            if (typeof u != "function") throw new Error(`Formula contains unknown function ${c}`);
            let f = [];
            if (a) {
              let l = "", m = 0, p = !1;
              const d = () => {
                if (!l) throw new Error(`Formula contains function ${c} with invalid arguments ${a}`);
                f.push(l), l = "";
              };
              for (let h = 0; h < a.length; ++h) {
                const b = a[h];
                p ? (l += b, b === p && (p = !1)) : b in o.literals && !m ? (l += b, p = o.literals[b]) : b !== "," || m ? (l += b, b === "(" ? ++m : b === ")" && --m) : d();
              }
              d();
            }
            return f = f.map((l) => new i.Parser(l, this.settings)), function(l) {
              const m = [];
              for (const p of f) m.push(p.evaluate(l));
              return u.call(l, ...m);
            };
          }
          evaluate(a) {
            const c = this._parts.slice();
            for (let u = c.length - 2; u >= 0; --u) {
              const f = c[u];
              if (f && f.type === "operator") {
                const l = c[u + 1];
                c.splice(u + 1, 1);
                const m = o.evaluate(l, a);
                c[u] = o.single(f.value, m);
              }
            }
            return o.operatorsOrder.forEach((u) => {
              for (let f = 1; f < c.length - 1; ) if (u.includes(c[f])) {
                const l = c[f], m = o.evaluate(c[f - 1], a), p = o.evaluate(c[f + 1], a);
                c.splice(f, 2);
                const d = o.calculate(l, m, p);
                c[f - 1] = d === 0 ? 0 : d;
              } else f += 2;
            }), o.evaluate(c[0], a);
          }
        }, i.Parser.prototype[o.symbol] = !0, o.reference = function(a) {
          return function(c) {
            return c && c[a] !== void 0 ? c[a] : null;
          };
        }, o.evaluate = function(a, c) {
          return a === null ? null : typeof a == "function" ? a(c) : a[o.symbol] ? a.evaluate(c) : a;
        }, o.single = function(a, c) {
          if (a === "!") return !c;
          const u = -c;
          return u === 0 ? 0 : u;
        }, o.calculate = function(a, c, u) {
          if (a === "??") return o.exists(c) ? c : u;
          if (typeof c == "string" || typeof u == "string") {
            if (a === "+") return (c = o.exists(c) ? c : "") + (o.exists(u) ? u : "");
          } else switch (a) {
            case "^":
              return Math.pow(c, u);
            case "*":
              return c * u;
            case "/":
              return c / u;
            case "%":
              return c % u;
            case "+":
              return c + u;
            case "-":
              return c - u;
          }
          switch (a) {
            case "<":
              return c < u;
            case "<=":
              return c <= u;
            case ">":
              return c > u;
            case ">=":
              return c >= u;
            case "==":
              return c === u;
            case "!=":
              return c !== u;
            case "&&":
              return c && u;
            case "||":
              return c || u;
          }
          return null;
        }, o.exists = function(a) {
          return a != null;
        };
      }, 9926: () => {
      }, 5688: () => {
      }, 9708: () => {
      }, 1152: () => {
      }, 443: () => {
      }, 9848: () => {
      }, 5934: (s) => {
        s.exports = { version: "17.9.1" };
      } }, r = {}, function s(i) {
        var o = r[i];
        if (o !== void 0) return o.exports;
        var a = r[i] = { exports: {} };
        return n[i](a, a.exports, s), a.exports;
      }(5107);
      var n, r;
    });
  }(Lh)), Lh.exports;
}
var U3 = $3();
const B = /* @__PURE__ */ Fl(U3);
class Fm extends Error {
  constructor(e) {
    super(e.message), this.message = e.message, this.code = e.code, this.data = e.data;
  }
}
const lt = (t, e) => {
  let n;
  t.request ? n = t.request.bind(t) : t.sendAsync && (n = j3(t));
  const r = async ({ method: s, params: i }) => {
    const o = s;
    if (e && e[o] === null)
      throw new Fm({
        code: 4200,
        message: `The Provider does not support the requested method: ${s}`
      });
    if (e && e[o])
      return e[o]({ baseRequest: n, params: i });
    if (n)
      return n({ method: s, params: i });
    throw new Fm({
      code: 4200,
      message: `The Provider does not support the requested method: ${s}`
    });
  };
  return t.request = r, t;
}, j3 = (t) => ({ method: e, params: n }) => new Promise((r, s) => {
  t.sendAsync({
    id: 0,
    jsonrpc: "2.0",
    method: e,
    params: n
  }, (i, { result: o }) => {
    i ? s(JSON.parse(i)) : r(o ?? null);
  });
});
function df(t, { strict: e = !0 } = {}) {
  return !t || typeof t != "string" ? !1 : e ? /^0x[0-9a-fA-F]*$/.test(t) : t.startsWith("0x");
}
function Hm(t) {
  return df(t, { strict: !1 }) ? Math.ceil((t.length - 2) / 2) : t.length;
}
const F3 = "2.12.0", xk = (t) => t, Ck = (t) => t, H3 = () => `viem@${F3}`;
class Rr extends Error {
  constructor(e, n = {}) {
    var i;
    super(), Object.defineProperty(this, "details", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "docsPath", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "metaMessages", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "shortMessage", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "ViemError"
    }), Object.defineProperty(this, "version", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: H3()
    });
    const r = n.cause instanceof Rr ? n.cause.details : (i = n.cause) != null && i.message ? n.cause.message : n.details, s = n.cause instanceof Rr && n.cause.docsPath || n.docsPath;
    this.message = [
      e || "An error occurred.",
      "",
      ...n.metaMessages ? [...n.metaMessages, ""] : [],
      ...s ? [
        `Docs: https://viem.sh${s}${n.docsSlug ? `#${n.docsSlug}` : ""}`
      ] : [],
      ...r ? [`Details: ${r}`] : [],
      `Version: ${this.version}`
    ].join(`
`), n.cause && (this.cause = n.cause), this.details = r, this.docsPath = s, this.metaMessages = n.metaMessages, this.shortMessage = e;
  }
  walk(e) {
    return Y1(this, e);
  }
}
function Y1(t, e) {
  return e != null && e(t) ? t : t && typeof t == "object" && "cause" in t ? Y1(t.cause, e) : e ? null : t;
}
class kk extends Rr {
  constructor({ offset: e, position: n, size: r }) {
    super(`Slice ${n === "start" ? "starting" : "ending"} at offset "${e}" is out-of-bounds (size: ${r}).`), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "SliceOffsetOutOfBoundsError"
    });
  }
}
class X1 extends Rr {
  constructor({ size: e, targetSize: n, type: r }) {
    super(`${r.charAt(0).toUpperCase()}${r.slice(1).toLowerCase()} size (${e}) exceeds padding size (${n}).`), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "SizeExceedsPaddingSizeError"
    });
  }
}
class Sk extends Rr {
  constructor({ size: e, targetSize: n, type: r }) {
    super(`${r.charAt(0).toUpperCase()}${r.slice(1).toLowerCase()} is expected to be ${n} ${r} long, but is ${e} ${r} long.`), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "InvalidBytesLengthError"
    });
  }
}
function Wl(t, { dir: e, size: n = 32 } = {}) {
  return typeof t == "string" ? W3(t, { dir: e, size: n }) : G3(t, { dir: e, size: n });
}
function W3(t, { dir: e, size: n = 32 } = {}) {
  if (n === null)
    return t;
  const r = t.replace("0x", "");
  if (r.length > n * 2)
    throw new X1({
      size: Math.ceil(r.length / 2),
      targetSize: n,
      type: "hex"
    });
  return `0x${r[e === "right" ? "padEnd" : "padStart"](n * 2, "0")}`;
}
function G3(t, { dir: e, size: n = 32 } = {}) {
  if (n === null)
    return t;
  if (t.length > n)
    throw new X1({
      size: t.length,
      targetSize: n,
      type: "bytes"
    });
  const r = new Uint8Array(n);
  for (let s = 0; s < n; s++) {
    const i = e === "right";
    r[i ? s : n - s - 1] = t[i ? s : t.length - s - 1];
  }
  return r;
}
class z3 extends Rr {
  constructor({ max: e, min: n, signed: r, size: s, value: i }) {
    super(`Number "${i}" is not in safe ${s ? `${s * 8}-bit ${r ? "signed" : "unsigned"} ` : ""}integer range ${e ? `(${n} to ${e})` : `(above ${n})`}`), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "IntegerOutOfRangeError"
    });
  }
}
class Ok extends Rr {
  constructor(e) {
    super(`Bytes value "${e}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "InvalidBytesBooleanError"
    });
  }
}
class V3 extends Rr {
  constructor(e) {
    super(`Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "InvalidHexBooleanError"
    });
  }
}
class q3 extends Rr {
  constructor({ givenSize: e, maxSize: n }) {
    super(`Size cannot exceed ${n} bytes. Given size: ${e} bytes.`), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "SizeOverflowError"
    });
  }
}
function Qu(t, { dir: e = "left" } = {}) {
  let n = typeof t == "string" ? t.replace("0x", "") : t, r = 0;
  for (let s = 0; s < n.length - 1 && n[e === "left" ? s : n.length - s - 1].toString() === "0"; s++)
    r++;
  return n = e === "left" ? n.slice(r) : n.slice(0, n.length - r), typeof t == "string" ? (n.length === 1 && e === "right" && (n = `${n}0`), `0x${n.length % 2 === 1 ? `0${n}` : n}`) : n;
}
function zi(t, { size: e }) {
  if (Hm(t) > e)
    throw new q3({
      givenSize: Hm(t),
      maxSize: e
    });
}
function _d(t, e) {
  const n = typeof e == "string" ? { to: e } : e, r = n.to;
  return r === "number" ? Z3(t, n) : r === "bigint" ? Ap(t, n) : r === "string" ? J3(t, n) : r === "boolean" ? Q3(t, n) : Yf(t, n);
}
function Ap(t, e = {}) {
  const { signed: n } = e;
  e.size && zi(t, { size: e.size });
  const r = BigInt(t);
  if (!n)
    return r;
  const s = (t.length - 2) / 2, i = (1n << BigInt(s) * 8n - 1n) - 1n;
  return r <= i ? r : r - BigInt(`0x${"f".padStart(s * 2, "f")}`) - 1n;
}
function Q3(t, e = {}) {
  let n = t;
  if (e.size && (zi(n, { size: e.size }), n = Qu(n)), Qu(n) === "0x00")
    return !1;
  if (Qu(n) === "0x01")
    return !0;
  throw new V3(n);
}
function Z3(t, e = {}) {
  return Number(Ap(t, e));
}
function J3(t, e = {}) {
  let n = Yf(t);
  return e.size && (zi(n, { size: e.size }), n = Qu(n, { dir: "right" })), new TextDecoder().decode(n);
}
const K3 = /* @__PURE__ */ Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
function Wm(t, e = {}) {
  return typeof t == "number" || typeof t == "bigint" ? Ep(t, e) : typeof t == "string" ? e_(t, e) : typeof t == "boolean" ? Y3(t, e) : eb(t, e);
}
function Y3(t, e = {}) {
  const n = `0x${Number(t)}`;
  return typeof e.size == "number" ? (zi(n, { size: e.size }), Wl(n, { size: e.size })) : n;
}
function eb(t, e = {}) {
  let n = "";
  for (let s = 0; s < t.length; s++)
    n += K3[t[s]];
  const r = `0x${n}`;
  return typeof e.size == "number" ? (zi(r, { size: e.size }), Wl(r, { dir: "right", size: e.size })) : r;
}
function Ep(t, e = {}) {
  const { signed: n, size: r } = e, s = BigInt(t);
  let i;
  r ? n ? i = (1n << BigInt(r) * 8n - 1n) - 1n : i = 2n ** (BigInt(r) * 8n) - 1n : typeof t == "number" && (i = BigInt(Number.MAX_SAFE_INTEGER));
  const o = typeof i == "bigint" && n ? -i - 1n : 0;
  if (i && s > i || s < o) {
    const c = typeof t == "bigint" ? "n" : "";
    throw new z3({
      max: i ? `${i}${c}` : void 0,
      min: `${o}${c}`,
      signed: n,
      size: r,
      value: `${t}${c}`
    });
  }
  const a = `0x${(n && s < 0 ? (1n << BigInt(r * 8)) + BigInt(s) : s).toString(16)}`;
  return r ? Wl(a, { size: r }) : a;
}
const X3 = /* @__PURE__ */ new TextEncoder();
function e_(t, e = {}) {
  const n = X3.encode(t);
  return eb(n, e);
}
const t_ = /* @__PURE__ */ new TextEncoder();
function Tk(t, e = {}) {
  return typeof t == "number" || typeof t == "bigint" ? r_(t, e) : typeof t == "boolean" ? n_(t, e) : df(t) ? Yf(t, e) : s_(t, e);
}
function n_(t, e = {}) {
  const n = new Uint8Array(1);
  return n[0] = Number(t), typeof e.size == "number" ? (zi(n, { size: e.size }), Wl(n, { size: e.size })) : n;
}
const As = {
  zero: 48,
  nine: 57,
  A: 65,
  F: 70,
  a: 97,
  f: 102
};
function Gm(t) {
  if (t >= As.zero && t <= As.nine)
    return t - As.zero;
  if (t >= As.A && t <= As.F)
    return t - (As.A - 10);
  if (t >= As.a && t <= As.f)
    return t - (As.a - 10);
}
function Yf(t, e = {}) {
  let n = t;
  e.size && (zi(n, { size: e.size }), n = Wl(n, { dir: "right", size: e.size }));
  let r = n.slice(2);
  r.length % 2 && (r = `0${r}`);
  const s = r.length / 2, i = new Uint8Array(s);
  for (let o = 0, a = 0; o < s; o++) {
    const c = Gm(r.charCodeAt(a++)), u = Gm(r.charCodeAt(a++));
    if (c === void 0 || u === void 0)
      throw new Rr(`Invalid byte sequence ("${r[a - 2]}${r[a - 1]}" in "${r}").`);
    i[o] = c * 16 + u;
  }
  return i;
}
function r_(t, e) {
  const n = Ep(t, e);
  return Yf(n);
}
function s_(t, e = {}) {
  const n = t_.encode(t);
  return typeof e.size == "number" ? (zi(n, { size: e.size }), Wl(n, { dir: "right", size: e.size })) : n;
}
function pf(t) {
  if (!Number.isSafeInteger(t) || t < 0)
    throw new Error(`Wrong positive integer: ${t}`);
}
function xp(t, ...e) {
  if (!(t instanceof Uint8Array))
    throw new Error("Expected Uint8Array");
  if (e.length > 0 && !e.includes(t.length))
    throw new Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`);
}
function i_(t) {
  if (typeof t != "function" || typeof t.create != "function")
    throw new Error("Hash should be wrapped by utils.wrapConstructor");
  pf(t.outputLen), pf(t.blockLen);
}
function Tl(t, e = !0) {
  if (t.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (e && t.finished)
    throw new Error("Hash#digest() has already been called");
}
function tb(t, e) {
  xp(t);
  const n = e.outputLen;
  if (t.length < n)
    throw new Error(`digestInto() expects output buffer of length at least ${n}`);
}
const Pu = /* @__PURE__ */ BigInt(2 ** 32 - 1), Ad = /* @__PURE__ */ BigInt(32);
function nb(t, e = !1) {
  return e ? { h: Number(t & Pu), l: Number(t >> Ad & Pu) } : { h: Number(t >> Ad & Pu) | 0, l: Number(t & Pu) | 0 };
}
function rb(t, e = !1) {
  let n = new Uint32Array(t.length), r = new Uint32Array(t.length);
  for (let s = 0; s < t.length; s++) {
    const { h: i, l: o } = nb(t[s], e);
    [n[s], r[s]] = [i, o];
  }
  return [n, r];
}
const o_ = (t, e) => BigInt(t >>> 0) << Ad | BigInt(e >>> 0), a_ = (t, e, n) => t >>> n, l_ = (t, e, n) => t << 32 - n | e >>> n, c_ = (t, e, n) => t >>> n | e << 32 - n, u_ = (t, e, n) => t << 32 - n | e >>> n, f_ = (t, e, n) => t << 64 - n | e >>> n - 32, h_ = (t, e, n) => t >>> n - 32 | e << 64 - n, d_ = (t, e) => e, p_ = (t, e) => t, sb = (t, e, n) => t << n | e >>> 32 - n, ib = (t, e, n) => e << n | t >>> 32 - n, ob = (t, e, n) => e << n - 32 | t >>> 64 - n, ab = (t, e, n) => t << n - 32 | e >>> 64 - n;
function m_(t, e, n, r) {
  const s = (e >>> 0) + (r >>> 0);
  return { h: t + n + (s / 2 ** 32 | 0) | 0, l: s | 0 };
}
const g_ = (t, e, n) => (t >>> 0) + (e >>> 0) + (n >>> 0), b_ = (t, e, n, r) => e + n + r + (t / 2 ** 32 | 0) | 0, y_ = (t, e, n, r) => (t >>> 0) + (e >>> 0) + (n >>> 0) + (r >>> 0), w_ = (t, e, n, r, s) => e + n + r + s + (t / 2 ** 32 | 0) | 0, v_ = (t, e, n, r, s) => (t >>> 0) + (e >>> 0) + (n >>> 0) + (r >>> 0) + (s >>> 0), __ = (t, e, n, r, s, i) => e + n + r + s + i + (t / 2 ** 32 | 0) | 0, De = {
  fromBig: nb,
  split: rb,
  toBig: o_,
  shrSH: a_,
  shrSL: l_,
  rotrSH: c_,
  rotrSL: u_,
  rotrBH: f_,
  rotrBL: h_,
  rotr32H: d_,
  rotr32L: p_,
  rotlSH: sb,
  rotlSL: ib,
  rotlBH: ob,
  rotlBL: ab,
  add: m_,
  add3L: g_,
  add3H: b_,
  add4L: y_,
  add4H: w_,
  add5H: __,
  add5L: v_
}, Mh = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const lb = (t) => t instanceof Uint8Array, A_ = (t) => new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4)), Dh = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength), zr = (t, e) => t << 32 - e | t >>> e, E_ = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!E_)
  throw new Error("Non little-endian hardware is not supported");
function x_(t) {
  if (typeof t != "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof t}`);
  return new Uint8Array(new TextEncoder().encode(t));
}
function Xf(t) {
  if (typeof t == "string" && (t = x_(t)), !lb(t))
    throw new Error(`expected Uint8Array, got ${typeof t}`);
  return t;
}
function C_(...t) {
  const e = new Uint8Array(t.reduce((r, s) => r + s.length, 0));
  let n = 0;
  return t.forEach((r) => {
    if (!lb(r))
      throw new Error("Uint8Array expected");
    e.set(r, n), n += r.length;
  }), e;
}
class Cp {
  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }
}
function kp(t) {
  const e = (r) => t().update(Xf(r)).digest(), n = t();
  return e.outputLen = n.outputLen, e.blockLen = n.blockLen, e.create = () => t(), e;
}
function k_(t = 32) {
  if (Mh && typeof Mh.getRandomValues == "function")
    return Mh.getRandomValues(new Uint8Array(t));
  throw new Error("crypto.getRandomValues must be defined");
}
const [cb, ub, fb] = [[], [], []], S_ = /* @__PURE__ */ BigInt(0), _c = /* @__PURE__ */ BigInt(1), O_ = /* @__PURE__ */ BigInt(2), T_ = /* @__PURE__ */ BigInt(7), I_ = /* @__PURE__ */ BigInt(256), N_ = /* @__PURE__ */ BigInt(113);
for (let t = 0, e = _c, n = 1, r = 0; t < 24; t++) {
  [n, r] = [r, (2 * n + 3 * r) % 5], cb.push(2 * (5 * r + n)), ub.push((t + 1) * (t + 2) / 2 % 64);
  let s = S_;
  for (let i = 0; i < 7; i++)
    e = (e << _c ^ (e >> T_) * N_) % I_, e & O_ && (s ^= _c << (_c << /* @__PURE__ */ BigInt(i)) - _c);
  fb.push(s);
}
const [P_, R_] = /* @__PURE__ */ rb(fb, !0), zm = (t, e, n) => n > 32 ? ob(t, e, n) : sb(t, e, n), Vm = (t, e, n) => n > 32 ? ab(t, e, n) : ib(t, e, n);
function B_(t, e = 24) {
  const n = new Uint32Array(10);
  for (let r = 24 - e; r < 24; r++) {
    for (let o = 0; o < 10; o++)
      n[o] = t[o] ^ t[o + 10] ^ t[o + 20] ^ t[o + 30] ^ t[o + 40];
    for (let o = 0; o < 10; o += 2) {
      const a = (o + 8) % 10, c = (o + 2) % 10, u = n[c], f = n[c + 1], l = zm(u, f, 1) ^ n[a], m = Vm(u, f, 1) ^ n[a + 1];
      for (let p = 0; p < 50; p += 10)
        t[o + p] ^= l, t[o + p + 1] ^= m;
    }
    let s = t[2], i = t[3];
    for (let o = 0; o < 24; o++) {
      const a = ub[o], c = zm(s, i, a), u = Vm(s, i, a), f = cb[o];
      s = t[f], i = t[f + 1], t[f] = c, t[f + 1] = u;
    }
    for (let o = 0; o < 50; o += 10) {
      for (let a = 0; a < 10; a++)
        n[a] = t[o + a];
      for (let a = 0; a < 10; a++)
        t[o + a] ^= ~n[(a + 2) % 10] & n[(a + 4) % 10];
    }
    t[0] ^= P_[r], t[1] ^= R_[r];
  }
  n.fill(0);
}
class Sp extends Cp {
  // NOTE: we accept arguments in bytes instead of bits here.
  constructor(e, n, r, s = !1, i = 24) {
    if (super(), this.blockLen = e, this.suffix = n, this.outputLen = r, this.enableXOF = s, this.rounds = i, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, pf(r), 0 >= this.blockLen || this.blockLen >= 200)
      throw new Error("Sha3 supports only keccak-f1600 function");
    this.state = new Uint8Array(200), this.state32 = A_(this.state);
  }
  keccak() {
    B_(this.state32, this.rounds), this.posOut = 0, this.pos = 0;
  }
  update(e) {
    Tl(this);
    const { blockLen: n, state: r } = this;
    e = Xf(e);
    const s = e.length;
    for (let i = 0; i < s; ) {
      const o = Math.min(n - this.pos, s - i);
      for (let a = 0; a < o; a++)
        r[this.pos++] ^= e[i++];
      this.pos === n && this.keccak();
    }
    return this;
  }
  finish() {
    if (this.finished)
      return;
    this.finished = !0;
    const { state: e, suffix: n, pos: r, blockLen: s } = this;
    e[r] ^= n, n & 128 && r === s - 1 && this.keccak(), e[s - 1] ^= 128, this.keccak();
  }
  writeInto(e) {
    Tl(this, !1), xp(e), this.finish();
    const n = this.state, { blockLen: r } = this;
    for (let s = 0, i = e.length; s < i; ) {
      this.posOut >= r && this.keccak();
      const o = Math.min(r - this.posOut, i - s);
      e.set(n.subarray(this.posOut, this.posOut + o), s), this.posOut += o, s += o;
    }
    return e;
  }
  xofInto(e) {
    if (!this.enableXOF)
      throw new Error("XOF is not possible for this instance");
    return this.writeInto(e);
  }
  xof(e) {
    return pf(e), this.xofInto(new Uint8Array(e));
  }
  digestInto(e) {
    if (tb(e, this), this.finished)
      throw new Error("digest() was already called");
    return this.writeInto(e), this.destroy(), e;
  }
  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }
  destroy() {
    this.destroyed = !0, this.state.fill(0);
  }
  _cloneInto(e) {
    const { blockLen: n, suffix: r, outputLen: s, rounds: i, enableXOF: o } = this;
    return e || (e = new Sp(n, r, s, o, i)), e.state32.set(this.state32), e.pos = this.pos, e.posOut = this.posOut, e.finished = this.finished, e.rounds = i, e.suffix = r, e.outputLen = s, e.enableXOF = o, e.destroyed = this.destroyed, e;
  }
}
const L_ = (t, e, n) => kp(() => new Sp(e, t, n)), M_ = /* @__PURE__ */ L_(1, 136, 256 / 8), D_ = {
  gwei: 9,
  wei: 18
}, Ik = {
  ether: -9,
  wei: 9
};
function $_(t, e) {
  let n = t.toString();
  const r = n.startsWith("-");
  r && (n = n.slice(1)), n = n.padStart(e, "0");
  let [s, i] = [
    n.slice(0, n.length - e),
    n.slice(n.length - e)
  ];
  return i = i.replace(/(0+)$/, ""), `${r ? "-" : ""}${s || "0"}${i ? `.${i}` : ""}`;
}
function hb(t, e = "wei") {
  return $_(t, D_[e]);
}
function U_(t, e, n, r) {
  if (typeof t.setBigUint64 == "function")
    return t.setBigUint64(e, n, r);
  const s = BigInt(32), i = BigInt(4294967295), o = Number(n >> s & i), a = Number(n & i), c = r ? 4 : 0, u = r ? 0 : 4;
  t.setUint32(e + c, o, r), t.setUint32(e + u, a, r);
}
class db extends Cp {
  constructor(e, n, r, s) {
    super(), this.blockLen = e, this.outputLen = n, this.padOffset = r, this.isLE = s, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = Dh(this.buffer);
  }
  update(e) {
    Tl(this);
    const { view: n, buffer: r, blockLen: s } = this;
    e = Xf(e);
    const i = e.length;
    for (let o = 0; o < i; ) {
      const a = Math.min(s - this.pos, i - o);
      if (a === s) {
        const c = Dh(e);
        for (; s <= i - o; o += s)
          this.process(c, o);
        continue;
      }
      r.set(e.subarray(o, o + a), this.pos), this.pos += a, o += a, this.pos === s && (this.process(n, 0), this.pos = 0);
    }
    return this.length += e.length, this.roundClean(), this;
  }
  digestInto(e) {
    Tl(this), tb(e, this), this.finished = !0;
    const { buffer: n, view: r, blockLen: s, isLE: i } = this;
    let { pos: o } = this;
    n[o++] = 128, this.buffer.subarray(o).fill(0), this.padOffset > s - o && (this.process(r, 0), o = 0);
    for (let l = o; l < s; l++)
      n[l] = 0;
    U_(r, s - 8, BigInt(this.length * 8), i), this.process(r, 0);
    const a = Dh(e), c = this.outputLen;
    if (c % 4)
      throw new Error("_sha2: outputLen should be aligned to 32bit");
    const u = c / 4, f = this.get();
    if (u > f.length)
      throw new Error("_sha2: outputLen bigger than state");
    for (let l = 0; l < u; l++)
      a.setUint32(4 * l, f[l], i);
  }
  digest() {
    const { buffer: e, outputLen: n } = this;
    this.digestInto(e);
    const r = e.slice(0, n);
    return this.destroy(), r;
  }
  _cloneInto(e) {
    e || (e = new this.constructor()), e.set(...this.get());
    const { blockLen: n, buffer: r, length: s, finished: i, destroyed: o, pos: a } = this;
    return e.length = s, e.pos = a, e.finished = i, e.destroyed = o, s % n && e.buffer.set(r), e;
  }
}
const j_ = (t, e, n) => t & e ^ ~t & n, F_ = (t, e, n) => t & e ^ t & n ^ e & n, H_ = /* @__PURE__ */ new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]), ui = /* @__PURE__ */ new Uint32Array([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]), fi = /* @__PURE__ */ new Uint32Array(64);
class W_ extends db {
  constructor() {
    super(64, 32, 8, !1), this.A = ui[0] | 0, this.B = ui[1] | 0, this.C = ui[2] | 0, this.D = ui[3] | 0, this.E = ui[4] | 0, this.F = ui[5] | 0, this.G = ui[6] | 0, this.H = ui[7] | 0;
  }
  get() {
    const { A: e, B: n, C: r, D: s, E: i, F: o, G: a, H: c } = this;
    return [e, n, r, s, i, o, a, c];
  }
  // prettier-ignore
  set(e, n, r, s, i, o, a, c) {
    this.A = e | 0, this.B = n | 0, this.C = r | 0, this.D = s | 0, this.E = i | 0, this.F = o | 0, this.G = a | 0, this.H = c | 0;
  }
  process(e, n) {
    for (let l = 0; l < 16; l++, n += 4)
      fi[l] = e.getUint32(n, !1);
    for (let l = 16; l < 64; l++) {
      const m = fi[l - 15], p = fi[l - 2], d = zr(m, 7) ^ zr(m, 18) ^ m >>> 3, h = zr(p, 17) ^ zr(p, 19) ^ p >>> 10;
      fi[l] = h + fi[l - 7] + d + fi[l - 16] | 0;
    }
    let { A: r, B: s, C: i, D: o, E: a, F: c, G: u, H: f } = this;
    for (let l = 0; l < 64; l++) {
      const m = zr(a, 6) ^ zr(a, 11) ^ zr(a, 25), p = f + m + j_(a, c, u) + H_[l] + fi[l] | 0, h = (zr(r, 2) ^ zr(r, 13) ^ zr(r, 22)) + F_(r, s, i) | 0;
      f = u, u = c, c = a, a = o + p | 0, o = i, i = s, s = r, r = p + h | 0;
    }
    r = r + this.A | 0, s = s + this.B | 0, i = i + this.C | 0, o = o + this.D | 0, a = a + this.E | 0, c = c + this.F | 0, u = u + this.G | 0, f = f + this.H | 0, this.set(r, s, i, o, a, c, u, f);
  }
  roundClean() {
    fi.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
}
const pb = /* @__PURE__ */ kp(() => new W_());
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const mb = BigInt(0), eh = BigInt(1), G_ = BigInt(2), th = (t) => t instanceof Uint8Array, z_ = /* @__PURE__ */ Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
function Il(t) {
  if (!th(t))
    throw new Error("Uint8Array expected");
  let e = "";
  for (let n = 0; n < t.length; n++)
    e += z_[t[n]];
  return e;
}
function gb(t) {
  const e = t.toString(16);
  return e.length & 1 ? `0${e}` : e;
}
function Op(t) {
  if (typeof t != "string")
    throw new Error("hex string expected, got " + typeof t);
  return BigInt(t === "" ? "0" : `0x${t}`);
}
function Nl(t) {
  if (typeof t != "string")
    throw new Error("hex string expected, got " + typeof t);
  const e = t.length;
  if (e % 2)
    throw new Error("padded hex string expected, got unpadded hex of length " + e);
  const n = new Uint8Array(e / 2);
  for (let r = 0; r < n.length; r++) {
    const s = r * 2, i = t.slice(s, s + 2), o = Number.parseInt(i, 16);
    if (Number.isNaN(o) || o < 0)
      throw new Error("Invalid byte sequence");
    n[r] = o;
  }
  return n;
}
function jo(t) {
  return Op(Il(t));
}
function Tp(t) {
  if (!th(t))
    throw new Error("Uint8Array expected");
  return Op(Il(Uint8Array.from(t).reverse()));
}
function Pl(t, e) {
  return Nl(t.toString(16).padStart(e * 2, "0"));
}
function Ip(t, e) {
  return Pl(t, e).reverse();
}
function V_(t) {
  return Nl(gb(t));
}
function Cr(t, e, n) {
  let r;
  if (typeof e == "string")
    try {
      r = Nl(e);
    } catch (i) {
      throw new Error(`${t} must be valid hex string, got "${e}". Cause: ${i}`);
    }
  else if (th(e))
    r = Uint8Array.from(e);
  else
    throw new Error(`${t} must be hex string or Uint8Array`);
  const s = r.length;
  if (typeof n == "number" && s !== n)
    throw new Error(`${t} expected ${n} bytes, got ${s}`);
  return r;
}
function Vc(...t) {
  const e = new Uint8Array(t.reduce((r, s) => r + s.length, 0));
  let n = 0;
  return t.forEach((r) => {
    if (!th(r))
      throw new Error("Uint8Array expected");
    e.set(r, n), n += r.length;
  }), e;
}
function q_(t, e) {
  if (t.length !== e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (t[n] !== e[n])
      return !1;
  return !0;
}
function Q_(t) {
  if (typeof t != "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof t}`);
  return new Uint8Array(new TextEncoder().encode(t));
}
function Z_(t) {
  let e;
  for (e = 0; t > mb; t >>= eh, e += 1)
    ;
  return e;
}
function J_(t, e) {
  return t >> BigInt(e) & eh;
}
const K_ = (t, e, n) => t | (n ? eh : mb) << BigInt(e), Np = (t) => (G_ << BigInt(t - 1)) - eh, $h = (t) => new Uint8Array(t), qm = (t) => Uint8Array.from(t);
function bb(t, e, n) {
  if (typeof t != "number" || t < 2)
    throw new Error("hashLen must be a number");
  if (typeof e != "number" || e < 2)
    throw new Error("qByteLen must be a number");
  if (typeof n != "function")
    throw new Error("hmacFn must be a function");
  let r = $h(t), s = $h(t), i = 0;
  const o = () => {
    r.fill(1), s.fill(0), i = 0;
  }, a = (...l) => n(s, r, ...l), c = (l = $h()) => {
    s = a(qm([0]), l), r = a(), l.length !== 0 && (s = a(qm([1]), l), r = a());
  }, u = () => {
    if (i++ >= 1e3)
      throw new Error("drbg: tried 1000 values");
    let l = 0;
    const m = [];
    for (; l < e; ) {
      r = a();
      const p = r.slice();
      m.push(p), l += r.length;
    }
    return Vc(...m);
  };
  return (l, m) => {
    o(), c(l);
    let p;
    for (; !(p = m(u())); )
      c();
    return o(), p;
  };
}
const Y_ = {
  bigint: (t) => typeof t == "bigint",
  function: (t) => typeof t == "function",
  boolean: (t) => typeof t == "boolean",
  string: (t) => typeof t == "string",
  stringOrUint8Array: (t) => typeof t == "string" || t instanceof Uint8Array,
  isSafeInteger: (t) => Number.isSafeInteger(t),
  array: (t) => Array.isArray(t),
  field: (t, e) => e.Fp.isValid(t),
  hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen)
};
function Eu(t, e, n = {}) {
  const r = (s, i, o) => {
    const a = Y_[i];
    if (typeof a != "function")
      throw new Error(`Invalid validator "${i}", expected function`);
    const c = t[s];
    if (!(o && c === void 0) && !a(c, t))
      throw new Error(`Invalid param ${String(s)}=${c} (${typeof c}), expected ${i}`);
  };
  for (const [s, i] of Object.entries(e))
    r(s, i, !1);
  for (const [s, i] of Object.entries(n))
    r(s, i, !0);
  return t;
}
const X_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bitGet: J_,
  bitLen: Z_,
  bitMask: Np,
  bitSet: K_,
  bytesToHex: Il,
  bytesToNumberBE: jo,
  bytesToNumberLE: Tp,
  concatBytes: Vc,
  createHmacDrbg: bb,
  ensureBytes: Cr,
  equalBytes: q_,
  hexToBytes: Nl,
  hexToNumber: Op,
  numberToBytesBE: Pl,
  numberToBytesLE: Ip,
  numberToHexUnpadded: gb,
  numberToVarBytesBE: V_,
  utf8ToBytes: Q_,
  validateObject: Eu
}, Symbol.toStringTag, { value: "Module" }));
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const rn = BigInt(0), $t = BigInt(1), uo = BigInt(2), e4 = BigInt(3), Ed = BigInt(4), Qm = BigInt(5), Zm = BigInt(8);
BigInt(9);
BigInt(16);
function jn(t, e) {
  const n = t % e;
  return n >= rn ? n : e + n;
}
function t4(t, e, n) {
  if (n <= rn || e < rn)
    throw new Error("Expected power/modulo > 0");
  if (n === $t)
    return rn;
  let r = $t;
  for (; e > rn; )
    e & $t && (r = r * t % n), t = t * t % n, e >>= $t;
  return r;
}
function ar(t, e, n) {
  let r = t;
  for (; e-- > rn; )
    r *= r, r %= n;
  return r;
}
function xd(t, e) {
  if (t === rn || e <= rn)
    throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);
  let n = jn(t, e), r = e, s = rn, i = $t;
  for (; n !== rn; ) {
    const a = r / n, c = r % n, u = s - i * a;
    r = n, n = c, s = i, i = u;
  }
  if (r !== $t)
    throw new Error("invert: does not exist");
  return jn(s, e);
}
function n4(t) {
  const e = (t - $t) / uo;
  let n, r, s;
  for (n = t - $t, r = 0; n % uo === rn; n /= uo, r++)
    ;
  for (s = uo; s < t && t4(s, e, t) !== t - $t; s++)
    ;
  if (r === 1) {
    const o = (t + $t) / Ed;
    return function(c, u) {
      const f = c.pow(u, o);
      if (!c.eql(c.sqr(f), u))
        throw new Error("Cannot find square root");
      return f;
    };
  }
  const i = (n + $t) / uo;
  return function(a, c) {
    if (a.pow(c, e) === a.neg(a.ONE))
      throw new Error("Cannot find square root");
    let u = r, f = a.pow(a.mul(a.ONE, s), n), l = a.pow(c, i), m = a.pow(c, n);
    for (; !a.eql(m, a.ONE); ) {
      if (a.eql(m, a.ZERO))
        return a.ZERO;
      let p = 1;
      for (let h = a.sqr(m); p < u && !a.eql(h, a.ONE); p++)
        h = a.sqr(h);
      const d = a.pow(f, $t << BigInt(u - p - 1));
      f = a.sqr(d), l = a.mul(l, d), m = a.mul(m, f), u = p;
    }
    return l;
  };
}
function r4(t) {
  if (t % Ed === e4) {
    const e = (t + $t) / Ed;
    return function(r, s) {
      const i = r.pow(s, e);
      if (!r.eql(r.sqr(i), s))
        throw new Error("Cannot find square root");
      return i;
    };
  }
  if (t % Zm === Qm) {
    const e = (t - Qm) / Zm;
    return function(r, s) {
      const i = r.mul(s, uo), o = r.pow(i, e), a = r.mul(s, o), c = r.mul(r.mul(a, uo), o), u = r.mul(a, r.sub(c, r.ONE));
      if (!r.eql(r.sqr(u), s))
        throw new Error("Cannot find square root");
      return u;
    };
  }
  return n4(t);
}
const s4 = [
  "create",
  "isValid",
  "is0",
  "neg",
  "inv",
  "sqrt",
  "sqr",
  "eql",
  "add",
  "sub",
  "mul",
  "pow",
  "div",
  "addN",
  "subN",
  "mulN",
  "sqrN"
];
function i4(t) {
  const e = {
    ORDER: "bigint",
    MASK: "bigint",
    BYTES: "isSafeInteger",
    BITS: "isSafeInteger"
  }, n = s4.reduce((r, s) => (r[s] = "function", r), e);
  return Eu(t, n);
}
function o4(t, e, n) {
  if (n < rn)
    throw new Error("Expected power > 0");
  if (n === rn)
    return t.ONE;
  if (n === $t)
    return e;
  let r = t.ONE, s = e;
  for (; n > rn; )
    n & $t && (r = t.mul(r, s)), s = t.sqr(s), n >>= $t;
  return r;
}
function a4(t, e) {
  const n = new Array(e.length), r = e.reduce((i, o, a) => t.is0(o) ? i : (n[a] = i, t.mul(i, o)), t.ONE), s = t.inv(r);
  return e.reduceRight((i, o, a) => t.is0(o) ? i : (n[a] = t.mul(i, n[a]), t.mul(i, o)), s), n;
}
function yb(t, e) {
  const n = e !== void 0 ? e : t.toString(2).length, r = Math.ceil(n / 8);
  return { nBitLength: n, nByteLength: r };
}
function l4(t, e, n = !1, r = {}) {
  if (t <= rn)
    throw new Error(`Expected Field ORDER > 0, got ${t}`);
  const { nBitLength: s, nByteLength: i } = yb(t, e);
  if (i > 2048)
    throw new Error("Field lengths over 2048 bytes are not supported");
  const o = r4(t), a = Object.freeze({
    ORDER: t,
    BITS: s,
    BYTES: i,
    MASK: Np(s),
    ZERO: rn,
    ONE: $t,
    create: (c) => jn(c, t),
    isValid: (c) => {
      if (typeof c != "bigint")
        throw new Error(`Invalid field element: expected bigint, got ${typeof c}`);
      return rn <= c && c < t;
    },
    is0: (c) => c === rn,
    isOdd: (c) => (c & $t) === $t,
    neg: (c) => jn(-c, t),
    eql: (c, u) => c === u,
    sqr: (c) => jn(c * c, t),
    add: (c, u) => jn(c + u, t),
    sub: (c, u) => jn(c - u, t),
    mul: (c, u) => jn(c * u, t),
    pow: (c, u) => o4(a, c, u),
    div: (c, u) => jn(c * xd(u, t), t),
    // Same as above, but doesn't normalize
    sqrN: (c) => c * c,
    addN: (c, u) => c + u,
    subN: (c, u) => c - u,
    mulN: (c, u) => c * u,
    inv: (c) => xd(c, t),
    sqrt: r.sqrt || ((c) => o(a, c)),
    invertBatch: (c) => a4(a, c),
    // TODO: do we really need constant cmov?
    // We don't have const-time bigints anyway, so probably will be not very useful
    cmov: (c, u, f) => f ? u : c,
    toBytes: (c) => n ? Ip(c, i) : Pl(c, i),
    fromBytes: (c) => {
      if (c.length !== i)
        throw new Error(`Fp.fromBytes: expected ${i}, got ${c.length}`);
      return n ? Tp(c) : jo(c);
    }
  });
  return Object.freeze(a);
}
function wb(t) {
  if (typeof t != "bigint")
    throw new Error("field order must be bigint");
  const e = t.toString(2).length;
  return Math.ceil(e / 8);
}
function vb(t) {
  const e = wb(t);
  return e + Math.ceil(e / 2);
}
function c4(t, e, n = !1) {
  const r = t.length, s = wb(e), i = vb(e);
  if (r < 16 || r < i || r > 1024)
    throw new Error(`expected ${i}-1024 bytes of input, got ${r}`);
  const o = n ? jo(t) : Tp(t), a = jn(o, e - $t) + $t;
  return n ? Ip(a, s) : Pl(a, s);
}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const u4 = BigInt(0), Uh = BigInt(1);
function f4(t, e) {
  const n = (s, i) => {
    const o = i.negate();
    return s ? o : i;
  }, r = (s) => {
    const i = Math.ceil(e / s) + 1, o = 2 ** (s - 1);
    return { windows: i, windowSize: o };
  };
  return {
    constTimeNegate: n,
    // non-const time multiplication ladder
    unsafeLadder(s, i) {
      let o = t.ZERO, a = s;
      for (; i > u4; )
        i & Uh && (o = o.add(a)), a = a.double(), i >>= Uh;
      return o;
    },
    /**
     * Creates a wNAF precomputation window. Used for caching.
     * Default window size is set by `utils.precompute()` and is equal to 8.
     * Number of precomputed points depends on the curve size:
     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:
     * - 𝑊 is the window size
     * - 𝑛 is the bitlength of the curve order.
     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.
     * @returns precomputed point tables flattened to a single array
     */
    precomputeWindow(s, i) {
      const { windows: o, windowSize: a } = r(i), c = [];
      let u = s, f = u;
      for (let l = 0; l < o; l++) {
        f = u, c.push(f);
        for (let m = 1; m < a; m++)
          f = f.add(u), c.push(f);
        u = f.double();
      }
      return c;
    },
    /**
     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.
     * @param W window size
     * @param precomputes precomputed tables
     * @param n scalar (we don't check here, but should be less than curve order)
     * @returns real and fake (for const-time) points
     */
    wNAF(s, i, o) {
      const { windows: a, windowSize: c } = r(s);
      let u = t.ZERO, f = t.BASE;
      const l = BigInt(2 ** s - 1), m = 2 ** s, p = BigInt(s);
      for (let d = 0; d < a; d++) {
        const h = d * c;
        let b = Number(o & l);
        o >>= p, b > c && (b -= m, o += Uh);
        const g = h, y = h + Math.abs(b) - 1, w = d % 2 !== 0, _ = b < 0;
        b === 0 ? f = f.add(n(w, i[g])) : u = u.add(n(_, i[y]));
      }
      return { p: u, f };
    },
    wNAFCached(s, i, o, a) {
      const c = s._WINDOW_SIZE || 1;
      let u = i.get(s);
      return u || (u = this.precomputeWindow(s, c), c !== 1 && i.set(s, a(u))), this.wNAF(c, u, o);
    }
  };
}
function _b(t) {
  return i4(t.Fp), Eu(t, {
    n: "bigint",
    h: "bigint",
    Gx: "field",
    Gy: "field"
  }, {
    nBitLength: "isSafeInteger",
    nByteLength: "isSafeInteger"
  }), Object.freeze({
    ...yb(t.n, t.nBitLength),
    ...t,
    p: t.Fp.ORDER
  });
}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function h4(t) {
  const e = _b(t);
  Eu(e, {
    a: "field",
    b: "field"
  }, {
    allowedPrivateKeyLengths: "array",
    wrapPrivateKey: "boolean",
    isTorsionFree: "function",
    clearCofactor: "function",
    allowInfinityPoint: "boolean",
    fromBytes: "function",
    toBytes: "function"
  });
  const { endo: n, Fp: r, a: s } = e;
  if (n) {
    if (!r.eql(s, r.ZERO))
      throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");
    if (typeof n != "object" || typeof n.beta != "bigint" || typeof n.splitScalar != "function")
      throw new Error("Expected endomorphism with beta: bigint and splitScalar: function");
  }
  return Object.freeze({ ...e });
}
const { bytesToNumberBE: d4, hexToBytes: p4 } = X_, mo = {
  // asn.1 DER encoding utils
  Err: class extends Error {
    constructor(e = "") {
      super(e);
    }
  },
  _parseInt(t) {
    const { Err: e } = mo;
    if (t.length < 2 || t[0] !== 2)
      throw new e("Invalid signature integer tag");
    const n = t[1], r = t.subarray(2, n + 2);
    if (!n || r.length !== n)
      throw new e("Invalid signature integer: wrong length");
    if (r[0] & 128)
      throw new e("Invalid signature integer: negative");
    if (r[0] === 0 && !(r[1] & 128))
      throw new e("Invalid signature integer: unnecessary leading zero");
    return { d: d4(r), l: t.subarray(n + 2) };
  },
  toSig(t) {
    const { Err: e } = mo, n = typeof t == "string" ? p4(t) : t;
    if (!(n instanceof Uint8Array))
      throw new Error("ui8a expected");
    let r = n.length;
    if (r < 2 || n[0] != 48)
      throw new e("Invalid signature tag");
    if (n[1] !== r - 2)
      throw new e("Invalid signature: incorrect length");
    const { d: s, l: i } = mo._parseInt(n.subarray(2)), { d: o, l: a } = mo._parseInt(i);
    if (a.length)
      throw new e("Invalid signature: left bytes after parsing");
    return { r: s, s: o };
  },
  hexFromSig(t) {
    const e = (u) => Number.parseInt(u[0], 16) & 8 ? "00" + u : u, n = (u) => {
      const f = u.toString(16);
      return f.length & 1 ? `0${f}` : f;
    }, r = e(n(t.s)), s = e(n(t.r)), i = r.length / 2, o = s.length / 2, a = n(i), c = n(o);
    return `30${n(o + i + 4)}02${c}${s}02${a}${r}`;
  }
}, js = BigInt(0), pr = BigInt(1);
BigInt(2);
const Jm = BigInt(3);
BigInt(4);
function m4(t) {
  const e = h4(t), { Fp: n } = e, r = e.toBytes || ((d, h, b) => {
    const g = h.toAffine();
    return Vc(Uint8Array.from([4]), n.toBytes(g.x), n.toBytes(g.y));
  }), s = e.fromBytes || ((d) => {
    const h = d.subarray(1), b = n.fromBytes(h.subarray(0, n.BYTES)), g = n.fromBytes(h.subarray(n.BYTES, 2 * n.BYTES));
    return { x: b, y: g };
  });
  function i(d) {
    const { a: h, b } = e, g = n.sqr(d), y = n.mul(g, d);
    return n.add(n.add(y, n.mul(d, h)), b);
  }
  if (!n.eql(n.sqr(e.Gy), i(e.Gx)))
    throw new Error("bad generator point: equation left != right");
  function o(d) {
    return typeof d == "bigint" && js < d && d < e.n;
  }
  function a(d) {
    if (!o(d))
      throw new Error("Expected valid bigint: 0 < bigint < curve.n");
  }
  function c(d) {
    const { allowedPrivateKeyLengths: h, nByteLength: b, wrapPrivateKey: g, n: y } = e;
    if (h && typeof d != "bigint") {
      if (d instanceof Uint8Array && (d = Il(d)), typeof d != "string" || !h.includes(d.length))
        throw new Error("Invalid key");
      d = d.padStart(b * 2, "0");
    }
    let w;
    try {
      w = typeof d == "bigint" ? d : jo(Cr("private key", d, b));
    } catch {
      throw new Error(`private key must be ${b} bytes, hex or bigint, not ${typeof d}`);
    }
    return g && (w = jn(w, y)), a(w), w;
  }
  const u = /* @__PURE__ */ new Map();
  function f(d) {
    if (!(d instanceof l))
      throw new Error("ProjectivePoint expected");
  }
  class l {
    constructor(h, b, g) {
      if (this.px = h, this.py = b, this.pz = g, h == null || !n.isValid(h))
        throw new Error("x required");
      if (b == null || !n.isValid(b))
        throw new Error("y required");
      if (g == null || !n.isValid(g))
        throw new Error("z required");
    }
    // Does not validate if the point is on-curve.
    // Use fromHex instead, or call assertValidity() later.
    static fromAffine(h) {
      const { x: b, y: g } = h || {};
      if (!h || !n.isValid(b) || !n.isValid(g))
        throw new Error("invalid affine point");
      if (h instanceof l)
        throw new Error("projective point not allowed");
      const y = (w) => n.eql(w, n.ZERO);
      return y(b) && y(g) ? l.ZERO : new l(b, g, n.ONE);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    /**
     * Takes a bunch of Projective Points but executes only one
     * inversion on all of them. Inversion is very slow operation,
     * so this improves performance massively.
     * Optimization: converts a list of projective points to a list of identical points with Z=1.
     */
    static normalizeZ(h) {
      const b = n.invertBatch(h.map((g) => g.pz));
      return h.map((g, y) => g.toAffine(b[y])).map(l.fromAffine);
    }
    /**
     * Converts hash string or Uint8Array to Point.
     * @param hex short/long ECDSA hex
     */
    static fromHex(h) {
      const b = l.fromAffine(s(Cr("pointHex", h)));
      return b.assertValidity(), b;
    }
    // Multiplies generator point by privateKey.
    static fromPrivateKey(h) {
      return l.BASE.multiply(c(h));
    }
    // "Private method", don't use it directly
    _setWindowSize(h) {
      this._WINDOW_SIZE = h, u.delete(this);
    }
    // A point on curve is valid if it conforms to equation.
    assertValidity() {
      if (this.is0()) {
        if (e.allowInfinityPoint && !n.is0(this.py))
          return;
        throw new Error("bad point: ZERO");
      }
      const { x: h, y: b } = this.toAffine();
      if (!n.isValid(h) || !n.isValid(b))
        throw new Error("bad point: x or y not FE");
      const g = n.sqr(b), y = i(h);
      if (!n.eql(g, y))
        throw new Error("bad point: equation left != right");
      if (!this.isTorsionFree())
        throw new Error("bad point: not in prime-order subgroup");
    }
    hasEvenY() {
      const { y: h } = this.toAffine();
      if (n.isOdd)
        return !n.isOdd(h);
      throw new Error("Field doesn't support isOdd");
    }
    /**
     * Compare one point to another.
     */
    equals(h) {
      f(h);
      const { px: b, py: g, pz: y } = this, { px: w, py: _, pz: E } = h, k = n.eql(n.mul(b, E), n.mul(w, y)), S = n.eql(n.mul(g, E), n.mul(_, y));
      return k && S;
    }
    /**
     * Flips point to one corresponding to (x, -y) in Affine coordinates.
     */
    negate() {
      return new l(this.px, n.neg(this.py), this.pz);
    }
    // Renes-Costello-Batina exception-free doubling formula.
    // There is 30% faster Jacobian formula, but it is not complete.
    // https://eprint.iacr.org/2015/1060, algorithm 3
    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.
    double() {
      const { a: h, b } = e, g = n.mul(b, Jm), { px: y, py: w, pz: _ } = this;
      let E = n.ZERO, k = n.ZERO, S = n.ZERO, A = n.mul(y, y), x = n.mul(w, w), T = n.mul(_, _), N = n.mul(y, w);
      return N = n.add(N, N), S = n.mul(y, _), S = n.add(S, S), E = n.mul(h, S), k = n.mul(g, T), k = n.add(E, k), E = n.sub(x, k), k = n.add(x, k), k = n.mul(E, k), E = n.mul(N, E), S = n.mul(g, S), T = n.mul(h, T), N = n.sub(A, T), N = n.mul(h, N), N = n.add(N, S), S = n.add(A, A), A = n.add(S, A), A = n.add(A, T), A = n.mul(A, N), k = n.add(k, A), T = n.mul(w, _), T = n.add(T, T), A = n.mul(T, N), E = n.sub(E, A), S = n.mul(T, x), S = n.add(S, S), S = n.add(S, S), new l(E, k, S);
    }
    // Renes-Costello-Batina exception-free addition formula.
    // There is 30% faster Jacobian formula, but it is not complete.
    // https://eprint.iacr.org/2015/1060, algorithm 1
    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.
    add(h) {
      f(h);
      const { px: b, py: g, pz: y } = this, { px: w, py: _, pz: E } = h;
      let k = n.ZERO, S = n.ZERO, A = n.ZERO;
      const x = e.a, T = n.mul(e.b, Jm);
      let N = n.mul(b, w), F = n.mul(g, _), V = n.mul(y, E), oe = n.add(b, g), H = n.add(w, _);
      oe = n.mul(oe, H), H = n.add(N, F), oe = n.sub(oe, H), H = n.add(b, y);
      let Q = n.add(w, E);
      return H = n.mul(H, Q), Q = n.add(N, V), H = n.sub(H, Q), Q = n.add(g, y), k = n.add(_, E), Q = n.mul(Q, k), k = n.add(F, V), Q = n.sub(Q, k), A = n.mul(x, H), k = n.mul(T, V), A = n.add(k, A), k = n.sub(F, A), A = n.add(F, A), S = n.mul(k, A), F = n.add(N, N), F = n.add(F, N), V = n.mul(x, V), H = n.mul(T, H), F = n.add(F, V), V = n.sub(N, V), V = n.mul(x, V), H = n.add(H, V), N = n.mul(F, H), S = n.add(S, N), N = n.mul(Q, H), k = n.mul(oe, k), k = n.sub(k, N), N = n.mul(oe, F), A = n.mul(Q, A), A = n.add(A, N), new l(k, S, A);
    }
    subtract(h) {
      return this.add(h.negate());
    }
    is0() {
      return this.equals(l.ZERO);
    }
    wNAF(h) {
      return p.wNAFCached(this, u, h, (b) => {
        const g = n.invertBatch(b.map((y) => y.pz));
        return b.map((y, w) => y.toAffine(g[w])).map(l.fromAffine);
      });
    }
    /**
     * Non-constant-time multiplication. Uses double-and-add algorithm.
     * It's faster, but should only be used when you don't care about
     * an exposed private key e.g. sig verification, which works over *public* keys.
     */
    multiplyUnsafe(h) {
      const b = l.ZERO;
      if (h === js)
        return b;
      if (a(h), h === pr)
        return this;
      const { endo: g } = e;
      if (!g)
        return p.unsafeLadder(this, h);
      let { k1neg: y, k1: w, k2neg: _, k2: E } = g.splitScalar(h), k = b, S = b, A = this;
      for (; w > js || E > js; )
        w & pr && (k = k.add(A)), E & pr && (S = S.add(A)), A = A.double(), w >>= pr, E >>= pr;
      return y && (k = k.negate()), _ && (S = S.negate()), S = new l(n.mul(S.px, g.beta), S.py, S.pz), k.add(S);
    }
    /**
     * Constant time multiplication.
     * Uses wNAF method. Windowed method may be 10% faster,
     * but takes 2x longer to generate and consumes 2x memory.
     * Uses precomputes when available.
     * Uses endomorphism for Koblitz curves.
     * @param scalar by which the point would be multiplied
     * @returns New point
     */
    multiply(h) {
      a(h);
      let b = h, g, y;
      const { endo: w } = e;
      if (w) {
        const { k1neg: _, k1: E, k2neg: k, k2: S } = w.splitScalar(b);
        let { p: A, f: x } = this.wNAF(E), { p: T, f: N } = this.wNAF(S);
        A = p.constTimeNegate(_, A), T = p.constTimeNegate(k, T), T = new l(n.mul(T.px, w.beta), T.py, T.pz), g = A.add(T), y = x.add(N);
      } else {
        const { p: _, f: E } = this.wNAF(b);
        g = _, y = E;
      }
      return l.normalizeZ([g, y])[0];
    }
    /**
     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.
     * Not using Strauss-Shamir trick: precomputation tables are faster.
     * The trick could be useful if both P and Q are not G (not in our case).
     * @returns non-zero affine point
     */
    multiplyAndAddUnsafe(h, b, g) {
      const y = l.BASE, w = (E, k) => k === js || k === pr || !E.equals(y) ? E.multiplyUnsafe(k) : E.multiply(k), _ = w(this, b).add(w(h, g));
      return _.is0() ? void 0 : _;
    }
    // Converts Projective point to affine (x, y) coordinates.
    // Can accept precomputed Z^-1 - for example, from invertBatch.
    // (x, y, z) ∋ (x=x/z, y=y/z)
    toAffine(h) {
      const { px: b, py: g, pz: y } = this, w = this.is0();
      h == null && (h = w ? n.ONE : n.inv(y));
      const _ = n.mul(b, h), E = n.mul(g, h), k = n.mul(y, h);
      if (w)
        return { x: n.ZERO, y: n.ZERO };
      if (!n.eql(k, n.ONE))
        throw new Error("invZ was invalid");
      return { x: _, y: E };
    }
    isTorsionFree() {
      const { h, isTorsionFree: b } = e;
      if (h === pr)
        return !0;
      if (b)
        return b(l, this);
      throw new Error("isTorsionFree() has not been declared for the elliptic curve");
    }
    clearCofactor() {
      const { h, clearCofactor: b } = e;
      return h === pr ? this : b ? b(l, this) : this.multiplyUnsafe(e.h);
    }
    toRawBytes(h = !0) {
      return this.assertValidity(), r(l, this, h);
    }
    toHex(h = !0) {
      return Il(this.toRawBytes(h));
    }
  }
  l.BASE = new l(e.Gx, e.Gy, n.ONE), l.ZERO = new l(n.ZERO, n.ONE, n.ZERO);
  const m = e.nBitLength, p = f4(l, e.endo ? Math.ceil(m / 2) : m);
  return {
    CURVE: e,
    ProjectivePoint: l,
    normPrivateKeyToScalar: c,
    weierstrassEquation: i,
    isWithinCurveOrder: o
  };
}
function g4(t) {
  const e = _b(t);
  return Eu(e, {
    hash: "hash",
    hmac: "function",
    randomBytes: "function"
  }, {
    bits2int: "function",
    bits2int_modN: "function",
    lowS: "boolean"
  }), Object.freeze({ lowS: !0, ...e });
}
function b4(t) {
  const e = g4(t), { Fp: n, n: r } = e, s = n.BYTES + 1, i = 2 * n.BYTES + 1;
  function o(H) {
    return js < H && H < n.ORDER;
  }
  function a(H) {
    return jn(H, r);
  }
  function c(H) {
    return xd(H, r);
  }
  const { ProjectivePoint: u, normPrivateKeyToScalar: f, weierstrassEquation: l, isWithinCurveOrder: m } = m4({
    ...e,
    toBytes(H, Q, ae) {
      const Ee = Q.toAffine(), pe = n.toBytes(Ee.x), Re = Vc;
      return ae ? Re(Uint8Array.from([Q.hasEvenY() ? 2 : 3]), pe) : Re(Uint8Array.from([4]), pe, n.toBytes(Ee.y));
    },
    fromBytes(H) {
      const Q = H.length, ae = H[0], Ee = H.subarray(1);
      if (Q === s && (ae === 2 || ae === 3)) {
        const pe = jo(Ee);
        if (!o(pe))
          throw new Error("Point is not on curve");
        const Re = l(pe);
        let ve = n.sqrt(Re);
        const Se = (ve & pr) === pr;
        return (ae & 1) === 1 !== Se && (ve = n.neg(ve)), { x: pe, y: ve };
      } else if (Q === i && ae === 4) {
        const pe = n.fromBytes(Ee.subarray(0, n.BYTES)), Re = n.fromBytes(Ee.subarray(n.BYTES, 2 * n.BYTES));
        return { x: pe, y: Re };
      } else
        throw new Error(`Point of length ${Q} was invalid. Expected ${s} compressed bytes or ${i} uncompressed bytes`);
    }
  }), p = (H) => Il(Pl(H, e.nByteLength));
  function d(H) {
    const Q = r >> pr;
    return H > Q;
  }
  function h(H) {
    return d(H) ? a(-H) : H;
  }
  const b = (H, Q, ae) => jo(H.slice(Q, ae));
  class g {
    constructor(Q, ae, Ee) {
      this.r = Q, this.s = ae, this.recovery = Ee, this.assertValidity();
    }
    // pair (bytes of r, bytes of s)
    static fromCompact(Q) {
      const ae = e.nByteLength;
      return Q = Cr("compactSignature", Q, ae * 2), new g(b(Q, 0, ae), b(Q, ae, 2 * ae));
    }
    // DER encoded ECDSA signature
    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script
    static fromDER(Q) {
      const { r: ae, s: Ee } = mo.toSig(Cr("DER", Q));
      return new g(ae, Ee);
    }
    assertValidity() {
      if (!m(this.r))
        throw new Error("r must be 0 < r < CURVE.n");
      if (!m(this.s))
        throw new Error("s must be 0 < s < CURVE.n");
    }
    addRecoveryBit(Q) {
      return new g(this.r, this.s, Q);
    }
    recoverPublicKey(Q) {
      const { r: ae, s: Ee, recovery: pe } = this, Re = S(Cr("msgHash", Q));
      if (pe == null || ![0, 1, 2, 3].includes(pe))
        throw new Error("recovery id invalid");
      const ve = pe === 2 || pe === 3 ? ae + e.n : ae;
      if (ve >= n.ORDER)
        throw new Error("recovery id 2 or 3 invalid");
      const Se = pe & 1 ? "03" : "02", ee = u.fromHex(Se + p(ve)), xe = c(ve), Ve = a(-Re * xe), Pe = a(Ee * xe), Ne = u.BASE.multiplyAndAddUnsafe(ee, Ve, Pe);
      if (!Ne)
        throw new Error("point at infinify");
      return Ne.assertValidity(), Ne;
    }
    // Signatures should be low-s, to prevent malleability.
    hasHighS() {
      return d(this.s);
    }
    normalizeS() {
      return this.hasHighS() ? new g(this.r, a(-this.s), this.recovery) : this;
    }
    // DER-encoded
    toDERRawBytes() {
      return Nl(this.toDERHex());
    }
    toDERHex() {
      return mo.hexFromSig({ r: this.r, s: this.s });
    }
    // padded bytes of r, then padded bytes of s
    toCompactRawBytes() {
      return Nl(this.toCompactHex());
    }
    toCompactHex() {
      return p(this.r) + p(this.s);
    }
  }
  const y = {
    isValidPrivateKey(H) {
      try {
        return f(H), !0;
      } catch {
        return !1;
      }
    },
    normPrivateKeyToScalar: f,
    /**
     * Produces cryptographically secure private key from random of size
     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.
     */
    randomPrivateKey: () => {
      const H = vb(e.n);
      return c4(e.randomBytes(H), e.n);
    },
    /**
     * Creates precompute table for an arbitrary EC point. Makes point "cached".
     * Allows to massively speed-up `point.multiply(scalar)`.
     * @returns cached point
     * @example
     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));
     * fast.multiply(privKey); // much faster ECDH now
     */
    precompute(H = 8, Q = u.BASE) {
      return Q._setWindowSize(H), Q.multiply(BigInt(3)), Q;
    }
  };
  function w(H, Q = !0) {
    return u.fromPrivateKey(H).toRawBytes(Q);
  }
  function _(H) {
    const Q = H instanceof Uint8Array, ae = typeof H == "string", Ee = (Q || ae) && H.length;
    return Q ? Ee === s || Ee === i : ae ? Ee === 2 * s || Ee === 2 * i : H instanceof u;
  }
  function E(H, Q, ae = !0) {
    if (_(H))
      throw new Error("first arg must be private key");
    if (!_(Q))
      throw new Error("second arg must be public key");
    return u.fromHex(Q).multiply(f(H)).toRawBytes(ae);
  }
  const k = e.bits2int || function(H) {
    const Q = jo(H), ae = H.length * 8 - e.nBitLength;
    return ae > 0 ? Q >> BigInt(ae) : Q;
  }, S = e.bits2int_modN || function(H) {
    return a(k(H));
  }, A = Np(e.nBitLength);
  function x(H) {
    if (typeof H != "bigint")
      throw new Error("bigint expected");
    if (!(js <= H && H < A))
      throw new Error(`bigint expected < 2^${e.nBitLength}`);
    return Pl(H, e.nByteLength);
  }
  function T(H, Q, ae = N) {
    if (["recovered", "canonical"].some((Fe) => Fe in ae))
      throw new Error("sign() legacy options not supported");
    const { hash: Ee, randomBytes: pe } = e;
    let { lowS: Re, prehash: ve, extraEntropy: Se } = ae;
    Re == null && (Re = !0), H = Cr("msgHash", H), ve && (H = Cr("prehashed msgHash", Ee(H)));
    const ee = S(H), xe = f(Q), Ve = [x(xe), x(ee)];
    if (Se != null) {
      const Fe = Se === !0 ? pe(n.BYTES) : Se;
      Ve.push(Cr("extraEntropy", Fe));
    }
    const Pe = Vc(...Ve), Ne = ee;
    function ce(Fe) {
      const ct = k(Fe);
      if (!m(ct))
        return;
      const Xe = c(ct), kt = u.BASE.multiply(ct).toAffine(), Ze = a(kt.x);
      if (Ze === js)
        return;
      const St = a(Xe * a(Ne + Ze * xe));
      if (St === js)
        return;
      let Dn = (kt.x === Ze ? 0 : 2) | Number(kt.y & pr), sr = St;
      return Re && d(St) && (sr = h(St), Dn ^= 1), new g(Ze, sr, Dn);
    }
    return { seed: Pe, k2sig: ce };
  }
  const N = { lowS: e.lowS, prehash: !1 }, F = { lowS: e.lowS, prehash: !1 };
  function V(H, Q, ae = N) {
    const { seed: Ee, k2sig: pe } = T(H, Q, ae), Re = e;
    return bb(Re.hash.outputLen, Re.nByteLength, Re.hmac)(Ee, pe);
  }
  u.BASE._setWindowSize(8);
  function oe(H, Q, ae, Ee = F) {
    var kt;
    const pe = H;
    if (Q = Cr("msgHash", Q), ae = Cr("publicKey", ae), "strict" in Ee)
      throw new Error("options.strict was renamed to lowS");
    const { lowS: Re, prehash: ve } = Ee;
    let Se, ee;
    try {
      if (typeof pe == "string" || pe instanceof Uint8Array)
        try {
          Se = g.fromDER(pe);
        } catch (Ze) {
          if (!(Ze instanceof mo.Err))
            throw Ze;
          Se = g.fromCompact(pe);
        }
      else if (typeof pe == "object" && typeof pe.r == "bigint" && typeof pe.s == "bigint") {
        const { r: Ze, s: St } = pe;
        Se = new g(Ze, St);
      } else
        throw new Error("PARSE");
      ee = u.fromHex(ae);
    } catch (Ze) {
      if (Ze.message === "PARSE")
        throw new Error("signature must be Signature instance, Uint8Array or hex string");
      return !1;
    }
    if (Re && Se.hasHighS())
      return !1;
    ve && (Q = e.hash(Q));
    const { r: xe, s: Ve } = Se, Pe = S(Q), Ne = c(Ve), ce = a(Pe * Ne), Fe = a(xe * Ne), ct = (kt = u.BASE.multiplyAndAddUnsafe(ee, ce, Fe)) == null ? void 0 : kt.toAffine();
    return ct ? a(ct.x) === xe : !1;
  }
  return {
    CURVE: e,
    getPublicKey: w,
    getSharedSecret: E,
    sign: V,
    verify: oe,
    ProjectivePoint: u,
    Signature: g,
    utils: y
  };
}
class Ab extends Cp {
  constructor(e, n) {
    super(), this.finished = !1, this.destroyed = !1, i_(e);
    const r = Xf(n);
    if (this.iHash = e.create(), typeof this.iHash.update != "function")
      throw new Error("Expected instance of class which extends utils.Hash");
    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
    const s = this.blockLen, i = new Uint8Array(s);
    i.set(r.length > s ? e.create().update(r).digest() : r);
    for (let o = 0; o < i.length; o++)
      i[o] ^= 54;
    this.iHash.update(i), this.oHash = e.create();
    for (let o = 0; o < i.length; o++)
      i[o] ^= 106;
    this.oHash.update(i), i.fill(0);
  }
  update(e) {
    return Tl(this), this.iHash.update(e), this;
  }
  digestInto(e) {
    Tl(this), xp(e, this.outputLen), this.finished = !0, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy();
  }
  digest() {
    const e = new Uint8Array(this.oHash.outputLen);
    return this.digestInto(e), e;
  }
  _cloneInto(e) {
    e || (e = Object.create(Object.getPrototypeOf(this), {}));
    const { oHash: n, iHash: r, finished: s, destroyed: i, blockLen: o, outputLen: a } = this;
    return e = e, e.finished = s, e.destroyed = i, e.blockLen = o, e.outputLen = a, e.oHash = n._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e;
  }
  destroy() {
    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy();
  }
}
const Eb = (t, e, n) => new Ab(t, e).update(n).digest();
Eb.create = (t, e) => new Ab(t, e);
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function y4(t) {
  return {
    hash: t,
    hmac: (e, ...n) => Eb(t, e, C_(...n)),
    randomBytes: k_
  };
}
function w4(t, e) {
  const n = (r) => b4({ ...t, ...y4(r) });
  return Object.freeze({ ...n(e), create: n });
}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const xb = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"), Km = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), v4 = BigInt(1), Cd = BigInt(2), Ym = (t, e) => (t + e / Cd) / e;
function _4(t) {
  const e = xb, n = BigInt(3), r = BigInt(6), s = BigInt(11), i = BigInt(22), o = BigInt(23), a = BigInt(44), c = BigInt(88), u = t * t * t % e, f = u * u * t % e, l = ar(f, n, e) * f % e, m = ar(l, n, e) * f % e, p = ar(m, Cd, e) * u % e, d = ar(p, s, e) * p % e, h = ar(d, i, e) * d % e, b = ar(h, a, e) * h % e, g = ar(b, c, e) * b % e, y = ar(g, a, e) * h % e, w = ar(y, n, e) * f % e, _ = ar(w, o, e) * d % e, E = ar(_, r, e) * u % e, k = ar(E, Cd, e);
  if (!kd.eql(kd.sqr(k), t))
    throw new Error("Cannot find square root");
  return k;
}
const kd = l4(xb, void 0, void 0, { sqrt: _4 }), mi = w4({
  a: BigInt(0),
  b: BigInt(7),
  Fp: kd,
  n: Km,
  // Base point (x, y) aka generator point
  Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
  Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
  h: BigInt(1),
  lowS: !0,
  /**
   * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.
   * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.
   * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.
   * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066
   */
  endo: {
    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
    splitScalar: (t) => {
      const e = Km, n = BigInt("0x3086d221a7d46bcde86c90e49284eb15"), r = -v4 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"), s = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"), i = n, o = BigInt("0x100000000000000000000000000000000"), a = Ym(i * t, e), c = Ym(-r * t, e);
      let u = jn(t - a * n - c * s, e), f = jn(-a * r - c * i, e);
      const l = u > o, m = f > o;
      if (l && (u = e - u), m && (f = e - f), u > o || f > o)
        throw new Error("splitScalar: Endomorphism failed, k=" + t);
      return { k1neg: l, k1: u, k2neg: m, k2: f };
    }
  }
}, pb);
BigInt(0);
mi.ProjectivePoint;
const Cb = (t) => Cb(), A4 = (t) => {
  const e = Ap(t);
  return hb(e);
}, E4 = (t) => {
  if (!t)
    return t;
  const e = _d(t, "bigint");
  return hb(e);
}, Pk = (t) => Ep(t), x4 = (t, e) => `Please <a href="${e}" target="_blank">install</a> or enable to ${t} to continue`, C4 = async (t) => {
  const e = await import("./index-hjzPpSAI.js"), { id: n, label: r, token: s, publicRpcUrl: i, blockExplorerUrl: o, rpcUrl: a } = t;
  switch (n) {
    case "0x89": {
      const { polygon: c } = e;
      return c;
    }
    case "0xa": {
      const { optimism: c } = e;
      return c;
    }
    case "0xa4b1": {
      const { arbitrum: c } = e;
      return c;
    }
    case "0x144": {
      const { zkSync: c } = e;
      return c;
    }
    case "0x38": {
      const { bsc: c } = e;
      return c;
    }
    case "0x1": {
      const { mainnet: c } = e;
      return c;
    }
    case "0xaa36a7": {
      const { sepolia: c } = e;
      return c;
    }
    case "0xfa": {
      const { fantom: c } = e;
      return c;
    }
    case "0xa86a": {
      const { avalanche: c } = e;
      return c;
    }
    case "0xa4ec": {
      const { celo: c } = e;
      return c;
    }
    case "0x2105": {
      const { base: c } = e;
      return c;
    }
    case "0x14a33": {
      const { baseGoerli: c } = e;
      return c;
    }
    case "0x64": {
      const { gnosis: c } = e;
      return c;
    }
    case "0x63564C40": {
      const { harmonyOne: c } = e;
      return c;
    }
    case "0x27bc86aa": {
      const { degen: c } = e;
      return c;
    }
    default: {
      const { extractChain: c, defineChain: u } = await import("./index-uMELSyQt.js"), f = c({
        chains: Object.values(e),
        id: _d(n, "number")
      });
      return f || u({
        id: _d(n, "number"),
        name: r ?? "",
        nativeCurrency: {
          decimals: 18,
          name: s ?? "",
          symbol: s ?? ""
        },
        rpcUrls: {
          default: {
            http: [a ?? "", i ?? ""]
          }
        },
        blockExplorers: {
          default: { name: "Explorer", url: o ?? "" }
        }
      });
    }
  }
};
var Mi;
(function(t) {
  t[t.ACCOUNT_ACCESS_REJECTED = 4001] = "ACCOUNT_ACCESS_REJECTED", t[t.ACCOUNT_ACCESS_ALREADY_REQUESTED = -32002] = "ACCOUNT_ACCESS_ALREADY_REQUESTED", t[t.UNAUTHORIZED = 4100] = "UNAUTHORIZED", t[t.INVALID_PARAMS = -32602] = "INVALID_PARAMS", t[t.UNSUPPORTED_METHOD = 4200] = "UNSUPPORTED_METHOD", t[t.DISCONNECTED = 4900] = "DISCONNECTED", t[t.CHAIN_DISCONNECTED = 4901] = "CHAIN_DISCONNECTED", t[t.CHAIN_NOT_ADDED = 4902] = "CHAIN_NOT_ADDED", t[t.DOES_NOT_EXIST = -32601] = "DOES_NOT_EXIST", t[t.UNRECOGNIZED_CHAIN_ID = -32603] = "UNRECOGNIZED_CHAIN_ID";
})(Mi || (Mi = {}));
function on(t, e) {
  const n = t.validate(e);
  return n.error ? n : null;
}
const Pp = B.alternatives().try(B.string().pattern(/^0x[0-9a-fA-F]+$/), B.number().positive()), Rp = B.string().valid("evm"), k4 = B.object({
  address: B.string().required(),
  icon: B.string().optional()
}), S4 = B.object({
  namespace: Rp,
  id: Pp.required(),
  rpcUrl: B.string(),
  label: B.string(),
  token: B.string(),
  secondaryTokens: B.array().max(5).items(k4).optional(),
  icon: B.string(),
  color: B.string(),
  publicRpcUrl: B.string(),
  protectedRpcUrl: B.string(),
  blockExplorerUrl: B.string()
});
var Oc = { exports: {} };
Oc.exports;
var Xm;
function O4() {
  return Xm || (Xm = 1, function(t, e) {
    var n = 200, r = "Expected a function", s = "__lodash_hash_undefined__", i = 1, o = 2, a = 1 / 0, c = 9007199254740991, u = "[object Arguments]", f = "[object Array]", l = "[object Boolean]", m = "[object Date]", p = "[object Error]", d = "[object Function]", h = "[object GeneratorFunction]", b = "[object Map]", g = "[object Number]", y = "[object Object]", w = "[object Promise]", _ = "[object RegExp]", E = "[object Set]", k = "[object String]", S = "[object Symbol]", A = "[object WeakMap]", x = "[object ArrayBuffer]", T = "[object DataView]", N = "[object Float32Array]", F = "[object Float64Array]", V = "[object Int8Array]", oe = "[object Int16Array]", H = "[object Int32Array]", Q = "[object Uint8Array]", ae = "[object Uint8ClampedArray]", Ee = "[object Uint16Array]", pe = "[object Uint32Array]", Re = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, ve = /^\w*$/, Se = /^\./, ee = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, xe = /[\\^$.*+?()[\]{}|]/g, Ve = /\\(\\)?/g, Pe = /^\[object .+?Constructor\]$/, Ne = /^(?:0|[1-9]\d*)$/, ce = {};
    ce[N] = ce[F] = ce[V] = ce[oe] = ce[H] = ce[Q] = ce[ae] = ce[Ee] = ce[pe] = !0, ce[u] = ce[f] = ce[x] = ce[l] = ce[T] = ce[m] = ce[p] = ce[d] = ce[b] = ce[g] = ce[y] = ce[_] = ce[E] = ce[k] = ce[A] = !1;
    var Fe = typeof mr == "object" && mr && mr.Object === Object && mr, ct = typeof self == "object" && self && self.Object === Object && self, Xe = Fe || ct || Function("return this")(), kt = e && !e.nodeType && e, Ze = kt && !0 && t && !t.nodeType && t, St = Ze && Ze.exports === kt, Dn = St && Fe.process, sr = function() {
      try {
        return Dn && Dn.binding("util");
      } catch {
      }
    }(), $r = sr && sr.isTypedArray;
    function Js(v, C, P, $) {
      for (var te = -1, q = v ? v.length : 0; ++te < q; ) {
        var le = v[te];
        C($, le, P(le), v);
      }
      return $;
    }
    function Ks(v, C) {
      for (var P = -1, $ = v ? v.length : 0; ++P < $; )
        if (C(v[P], P, v))
          return !0;
      return !1;
    }
    function wr(v) {
      return function(C) {
        return C == null ? void 0 : C[v];
      };
    }
    function L(v, C) {
      for (var P = -1, $ = Array(v); ++P < v; )
        $[P] = C(P);
      return $;
    }
    function de(v) {
      return function(C) {
        return v(C);
      };
    }
    function fe(v, C) {
      return v == null ? void 0 : v[C];
    }
    function Le(v) {
      var C = !1;
      if (v != null && typeof v.toString != "function")
        try {
          C = !!(v + "");
        } catch {
        }
      return C;
    }
    function It(v) {
      var C = -1, P = Array(v.size);
      return v.forEach(function($, te) {
        P[++C] = [te, $];
      }), P;
    }
    function ft(v, C) {
      return function(P) {
        return v(C(P));
      };
    }
    function Oe(v) {
      var C = -1, P = Array(v.size);
      return v.forEach(function($) {
        P[++C] = $;
      }), P;
    }
    var Ft = Array.prototype, Gn = Function.prototype, vt = Object.prototype, Jt = Xe["__core-js_shared__"], zn = function() {
      var v = /[^.]+$/.exec(Jt && Jt.keys && Jt.keys.IE_PROTO || "");
      return v ? "Symbol(src)_1." + v : "";
    }(), bn = Gn.toString, Lt = vt.hasOwnProperty, dt = vt.toString, fs = RegExp(
      "^" + bn.call(Lt).replace(xe, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    ), Qi = Xe.Symbol, yn = Xe.Uint8Array, Ur = vt.propertyIsEnumerable, Xo = Ft.splice, jr = ft(Object.keys, Object), Ys = Yt(Xe, "DataView"), wn = Yt(Xe, "Map"), Zi = Yt(Xe, "Promise"), Ji = Yt(Xe, "Set"), hs = Yt(Xe, "WeakMap"), Vn = Yt(Object, "create"), Ki = M(Ys), Kt = M(wn), Yi = M(Zi), ds = M(Ji), ql = M(hs), Xs = Qi ? Qi.prototype : void 0, Xi = Xs ? Xs.valueOf : void 0, vr = Xs ? Xs.toString : void 0;
    function _r(v) {
      var C = -1, P = v ? v.length : 0;
      for (this.clear(); ++C < P; ) {
        var $ = v[C];
        this.set($[0], $[1]);
      }
    }
    function ei() {
      this.__data__ = Vn ? Vn(null) : {};
    }
    function eo(v) {
      return this.has(v) && delete this.__data__[v];
    }
    function ea(v) {
      var C = this.__data__;
      if (Vn) {
        var P = C[v];
        return P === s ? void 0 : P;
      }
      return Lt.call(C, v) ? C[v] : void 0;
    }
    function Ar(v) {
      var C = this.__data__;
      return Vn ? C[v] !== void 0 : Lt.call(C, v);
    }
    function Fr(v, C) {
      var P = this.__data__;
      return P[v] = Vn && C === void 0 ? s : C, this;
    }
    _r.prototype.clear = ei, _r.prototype.delete = eo, _r.prototype.get = ea, _r.prototype.has = Ar, _r.prototype.set = Fr;
    function qn(v) {
      var C = -1, P = v ? v.length : 0;
      for (this.clear(); ++C < P; ) {
        var $ = v[C];
        this.set($[0], $[1]);
      }
    }
    function Ql() {
      this.__data__ = [];
    }
    function Zl(v) {
      var C = this.__data__, P = ri(C, v);
      if (P < 0)
        return !1;
      var $ = C.length - 1;
      return P == $ ? C.pop() : Xo.call(C, P, 1), !0;
    }
    function Jl(v) {
      var C = this.__data__, P = ri(C, v);
      return P < 0 ? void 0 : C[P][1];
    }
    function Qn(v) {
      return ri(this.__data__, v) > -1;
    }
    function Kl(v, C) {
      var P = this.__data__, $ = ri(P, v);
      return $ < 0 ? P.push([v, C]) : P[$][1] = C, this;
    }
    qn.prototype.clear = Ql, qn.prototype.delete = Zl, qn.prototype.get = Jl, qn.prototype.has = Qn, qn.prototype.set = Kl;
    function vn(v) {
      var C = -1, P = v ? v.length : 0;
      for (this.clear(); ++C < P; ) {
        var $ = v[C];
        this.set($[0], $[1]);
      }
    }
    function Yl() {
      this.__data__ = {
        hash: new _r(),
        map: new (wn || qn)(),
        string: new _r()
      };
    }
    function ti(v) {
      return gs(this, v).delete(v);
    }
    function to(v) {
      return gs(this, v).get(v);
    }
    function Zn(v) {
      return gs(this, v).has(v);
    }
    function ni(v, C) {
      return gs(this, v).set(v, C), this;
    }
    vn.prototype.clear = Yl, vn.prototype.delete = ti, vn.prototype.get = to, vn.prototype.has = Zn, vn.prototype.set = ni;
    function ps(v) {
      var C = -1, P = v ? v.length : 0;
      for (this.__data__ = new vn(); ++C < P; )
        this.add(v[C]);
    }
    function Xl(v) {
      return this.__data__.set(v, s), this;
    }
    function ec(v) {
      return this.__data__.has(v);
    }
    ps.prototype.add = ps.prototype.push = Xl, ps.prototype.has = ec;
    function Jn(v) {
      this.__data__ = new qn(v);
    }
    function Hr() {
      this.__data__ = new qn();
    }
    function tc(v) {
      return this.__data__.delete(v);
    }
    function nc(v) {
      return this.__data__.get(v);
    }
    function Kn(v) {
      return this.__data__.has(v);
    }
    function rc(v, C) {
      var P = this.__data__;
      if (P instanceof qn) {
        var $ = P.__data__;
        if (!wn || $.length < n - 1)
          return $.push([v, C]), this;
        P = this.__data__ = new vn($);
      }
      return P.set(v, C), this;
    }
    Jn.prototype.clear = Hr, Jn.prototype.delete = tc, Jn.prototype.get = nc, Jn.prototype.has = Kn, Jn.prototype.set = rc;
    function sc(v, C) {
      var P = Je(v) || He(v) ? L(v.length, String) : [], $ = P.length, te = !!$;
      for (var q in v)
        Lt.call(v, q) && !(te && (q == "length" || bs(q, $))) && P.push(q);
      return P;
    }
    function ri(v, C) {
      for (var P = v.length; P--; )
        if (Me(v[P][0], C))
          return P;
      return -1;
    }
    function ic(v, C, P, $) {
      return oc(v, function(te, q, le) {
        C($, te, P(te), le);
      }), $;
    }
    var oc = ii(si), ac = oi();
    function si(v, C) {
      return v && ac(v, C, la);
    }
    function Wr(v, C) {
      C = ys(C, v) ? [C] : ra(C);
      for (var P = 0, $ = C.length; v != null && P < $; )
        v = v[I(C[P++])];
      return P && P == $ ? v : void 0;
    }
    function no(v) {
      return dt.call(v);
    }
    function lc(v, C) {
      return v != null && C in Object(v);
    }
    function ms(v, C, P, $, te) {
      return v === C ? !0 : v == null || C == null || !_n(v) && !or(C) ? v !== v && C !== C : ta(v, C, ms, P, $, te);
    }
    function ta(v, C, P, $, te, q) {
      var le = Je(v), Ie = Je(C), Ce = f, Ke = f;
      le || (Ce = Xt(v), Ce = Ce == u ? y : Ce), Ie || (Ke = Xt(C), Ke = Ke == u ? y : Ke);
      var Qe = Ce == y && !Le(v), Ye = Ke == y && !Le(C), tt = Ce == Ke;
      if (tt && !Qe)
        return q || (q = new Jn()), le || aa(v) ? ai(v, C, P, $, te, q) : so(v, C, Ce, P, $, te, q);
      if (!(te & o)) {
        var _t = Qe && Lt.call(v, "__wrapped__"), At = Ye && Lt.call(C, "__wrapped__");
        if (_t || At) {
          var an = _t ? v.value() : v, zt = At ? C.value() : C;
          return q || (q = new Jn()), P(an, zt, $, te, q);
        }
      }
      return tt ? (q || (q = new Jn()), li(v, C, P, $, te, q)) : !1;
    }
    function cc(v, C, P, $) {
      var te = P.length, q = te;
      if (v == null)
        return !q;
      for (v = Object(v); te--; ) {
        var le = P[te];
        if (le[2] ? le[1] !== v[le[0]] : !(le[0] in v))
          return !1;
      }
      for (; ++te < q; ) {
        le = P[te];
        var Ie = le[0], Ce = v[Ie], Ke = le[1];
        if (le[2]) {
          if (Ce === void 0 && !(Ie in v))
            return !1;
        } else {
          var Qe = new Jn(), Ye;
          if (!(Ye === void 0 ? ms(Ke, Ce, $, i | o, Qe) : Ye))
            return !1;
        }
      }
      return !0;
    }
    function uc(v) {
      if (!_n(v) || ia(v))
        return !1;
      var C = en(v) || Le(v) ? fs : Pe;
      return C.test(M(v));
    }
    function fc(v) {
      return or(v) && Pt(v.length) && !!ce[dt.call(v)];
    }
    function na(v) {
      return typeof v == "function" ? v : v == null ? Eh : typeof v == "object" ? Je(v) ? pc(v[0], v[1]) : dc(v) : xh(v);
    }
    function hc(v) {
      if (!oa(v))
        return jr(v);
      var C = [];
      for (var P in Object(v))
        Lt.call(v, P) && P != "constructor" && C.push(P);
      return C;
    }
    function dc(v) {
      var C = ir(v);
      return C.length == 1 && C[0][2] ? oo(C[0][0], C[0][1]) : function(P) {
        return P === v || cc(P, v, C);
      };
    }
    function pc(v, C) {
      return ys(v) && io(C) ? oo(I(v), C) : function(P) {
        var $ = Ah(P, v);
        return $ === void 0 && $ === C ? bc(P, v) : ms(C, $, void 0, i | o);
      };
    }
    function ro(v) {
      return function(C) {
        return Wr(C, v);
      };
    }
    function mc(v) {
      if (typeof v == "string")
        return v;
      if (ws(v))
        return vr ? vr.call(v) : "";
      var C = v + "";
      return C == "0" && 1 / v == -a ? "-0" : C;
    }
    function ra(v) {
      return Je(v) ? v : ci(v);
    }
    function sa(v, C) {
      return function(P, $) {
        var te = Je(P) ? Js : ic, q = C();
        return te(P, v, na($), q);
      };
    }
    function ii(v, C) {
      return function(P, $) {
        if (P == null)
          return P;
        if (!qe(P))
          return v(P, $);
        for (var te = P.length, q = -1, le = Object(P); ++q < te && $(le[q], q, le) !== !1; )
          ;
        return P;
      };
    }
    function oi(v) {
      return function(C, P, $) {
        for (var te = -1, q = Object(C), le = $(C), Ie = le.length; Ie--; ) {
          var Ce = le[++te];
          if (P(q[Ce], Ce, q) === !1)
            break;
        }
        return C;
      };
    }
    function ai(v, C, P, $, te, q) {
      var le = te & o, Ie = v.length, Ce = C.length;
      if (Ie != Ce && !(le && Ce > Ie))
        return !1;
      var Ke = q.get(v);
      if (Ke && q.get(C))
        return Ke == C;
      var Qe = -1, Ye = !0, tt = te & i ? new ps() : void 0;
      for (q.set(v, C), q.set(C, v); ++Qe < Ie; ) {
        var _t = v[Qe], At = C[Qe];
        if ($)
          var an = le ? $(At, _t, Qe, C, v, q) : $(_t, At, Qe, v, C, q);
        if (an !== void 0) {
          if (an)
            continue;
          Ye = !1;
          break;
        }
        if (tt) {
          if (!Ks(C, function(zt, An) {
            if (!tt.has(An) && (_t === zt || P(_t, zt, $, te, q)))
              return tt.add(An);
          })) {
            Ye = !1;
            break;
          }
        } else if (!(_t === At || P(_t, At, $, te, q))) {
          Ye = !1;
          break;
        }
      }
      return q.delete(v), q.delete(C), Ye;
    }
    function so(v, C, P, $, te, q, le) {
      switch (P) {
        case T:
          if (v.byteLength != C.byteLength || v.byteOffset != C.byteOffset)
            return !1;
          v = v.buffer, C = C.buffer;
        case x:
          return !(v.byteLength != C.byteLength || !$(new yn(v), new yn(C)));
        case l:
        case m:
        case g:
          return Me(+v, +C);
        case p:
          return v.name == C.name && v.message == C.message;
        case _:
        case k:
          return v == C + "";
        case b:
          var Ie = It;
        case E:
          var Ce = q & o;
          if (Ie || (Ie = Oe), v.size != C.size && !Ce)
            return !1;
          var Ke = le.get(v);
          if (Ke)
            return Ke == C;
          q |= i, le.set(v, C);
          var Qe = ai(Ie(v), Ie(C), $, te, q, le);
          return le.delete(v), Qe;
        case S:
          if (Xi)
            return Xi.call(v) == Xi.call(C);
      }
      return !1;
    }
    function li(v, C, P, $, te, q) {
      var le = te & o, Ie = la(v), Ce = Ie.length, Ke = la(C), Qe = Ke.length;
      if (Ce != Qe && !le)
        return !1;
      for (var Ye = Ce; Ye--; ) {
        var tt = Ie[Ye];
        if (!(le ? tt in C : Lt.call(C, tt)))
          return !1;
      }
      var _t = q.get(v);
      if (_t && q.get(C))
        return _t == C;
      var At = !0;
      q.set(v, C), q.set(C, v);
      for (var an = le; ++Ye < Ce; ) {
        tt = Ie[Ye];
        var zt = v[tt], An = C[tt];
        if ($)
          var yc = le ? $(An, zt, tt, C, v, q) : $(zt, An, tt, v, C, q);
        if (!(yc === void 0 ? zt === An || P(zt, An, $, te, q) : yc)) {
          At = !1;
          break;
        }
        an || (an = tt == "constructor");
      }
      if (At && !an) {
        var vs = v.constructor, _s = C.constructor;
        vs != _s && "constructor" in v && "constructor" in C && !(typeof vs == "function" && vs instanceof vs && typeof _s == "function" && _s instanceof _s) && (At = !1);
      }
      return q.delete(v), q.delete(C), At;
    }
    function gs(v, C) {
      var P = v.__data__;
      return gc(C) ? P[typeof C == "string" ? "string" : "hash"] : P.map;
    }
    function ir(v) {
      for (var C = la(v), P = C.length; P--; ) {
        var $ = C[P], te = v[$];
        C[P] = [$, te, io(te)];
      }
      return C;
    }
    function Yt(v, C) {
      var P = fe(v, C);
      return uc(P) ? P : void 0;
    }
    var Xt = no;
    (Ys && Xt(new Ys(new ArrayBuffer(1))) != T || wn && Xt(new wn()) != b || Zi && Xt(Zi.resolve()) != w || Ji && Xt(new Ji()) != E || hs && Xt(new hs()) != A) && (Xt = function(v) {
      var C = dt.call(v), P = C == y ? v.constructor : void 0, $ = P ? M(P) : void 0;
      if ($)
        switch ($) {
          case Ki:
            return T;
          case Kt:
            return b;
          case Yi:
            return w;
          case ds:
            return E;
          case ql:
            return A;
        }
      return C;
    });
    function Gr(v, C, P) {
      C = ys(C, v) ? [C] : ra(C);
      for (var $, te = -1, le = C.length; ++te < le; ) {
        var q = I(C[te]);
        if (!($ = v != null && P(v, q)))
          break;
        v = v[q];
      }
      if ($)
        return $;
      var le = v ? v.length : 0;
      return !!le && Pt(le) && bs(q, le) && (Je(v) || He(v));
    }
    function bs(v, C) {
      return C = C ?? c, !!C && (typeof v == "number" || Ne.test(v)) && v > -1 && v % 1 == 0 && v < C;
    }
    function ys(v, C) {
      if (Je(v))
        return !1;
      var P = typeof v;
      return P == "number" || P == "symbol" || P == "boolean" || v == null || ws(v) ? !0 : ve.test(v) || !Re.test(v) || C != null && v in Object(C);
    }
    function gc(v) {
      var C = typeof v;
      return C == "string" || C == "number" || C == "symbol" || C == "boolean" ? v !== "__proto__" : v === null;
    }
    function ia(v) {
      return !!zn && zn in v;
    }
    function oa(v) {
      var C = v && v.constructor, P = typeof C == "function" && C.prototype || vt;
      return v === P;
    }
    function io(v) {
      return v === v && !_n(v);
    }
    function oo(v, C) {
      return function(P) {
        return P == null ? !1 : P[v] === C && (C !== void 0 || v in Object(P));
      };
    }
    var ci = me(function(v) {
      v = _h(v);
      var C = [];
      return Se.test(v) && C.push(""), v.replace(ee, function(P, $, te, q) {
        C.push(te ? q.replace(Ve, "$1") : $ || P);
      }), C;
    });
    function I(v) {
      if (typeof v == "string" || ws(v))
        return v;
      var C = v + "";
      return C == "0" && 1 / v == -a ? "-0" : C;
    }
    function M(v) {
      if (v != null) {
        try {
          return bn.call(v);
        } catch {
        }
        try {
          return v + "";
        } catch {
        }
      }
      return "";
    }
    var G = sa(function(v, C, P) {
      v[P ? 0 : 1].push(C);
    }, function() {
      return [[], []];
    });
    function me(v, C) {
      if (typeof v != "function" || C && typeof C != "function")
        throw new TypeError(r);
      var P = function() {
        var $ = arguments, te = C ? C.apply(this, $) : $[0], q = P.cache;
        if (q.has(te))
          return q.get(te);
        var le = v.apply(this, $);
        return P.cache = q.set(te, le), le;
      };
      return P.cache = new (me.Cache || vn)(), P;
    }
    me.Cache = vn;
    function Me(v, C) {
      return v === C || v !== v && C !== C;
    }
    function He(v) {
      return ht(v) && Lt.call(v, "callee") && (!Ur.call(v, "callee") || dt.call(v) == u);
    }
    var Je = Array.isArray;
    function qe(v) {
      return v != null && Pt(v.length) && !en(v);
    }
    function ht(v) {
      return or(v) && qe(v);
    }
    function en(v) {
      var C = _n(v) ? dt.call(v) : "";
      return C == d || C == h;
    }
    function Pt(v) {
      return typeof v == "number" && v > -1 && v % 1 == 0 && v <= c;
    }
    function _n(v) {
      var C = typeof v;
      return !!v && (C == "object" || C == "function");
    }
    function or(v) {
      return !!v && typeof v == "object";
    }
    function ws(v) {
      return typeof v == "symbol" || or(v) && dt.call(v) == S;
    }
    var aa = $r ? de($r) : fc;
    function _h(v) {
      return v == null ? "" : mc(v);
    }
    function Ah(v, C, P) {
      var $ = v == null ? void 0 : Wr(v, C);
      return $ === void 0 ? P : $;
    }
    function bc(v, C) {
      return v != null && Gr(v, C, lc);
    }
    function la(v) {
      return qe(v) ? sc(v) : hc(v);
    }
    function Eh(v) {
      return v;
    }
    function xh(v) {
      return ys(v) ? wr(I(v)) : ro(v);
    }
    t.exports = G;
  }(Oc, Oc.exports)), Oc.exports;
}
var T4 = O4();
const I4 = /* @__PURE__ */ Fl(T4);
var Tc = { exports: {} };
Tc.exports;
var eg;
function N4() {
  return eg || (eg = 1, function(t, e) {
    var n = 200, r = "__lodash_hash_undefined__", s = 800, i = 16, o = 9007199254740991, a = "[object Arguments]", c = "[object Array]", u = "[object AsyncFunction]", f = "[object Boolean]", l = "[object Date]", m = "[object Error]", p = "[object Function]", d = "[object GeneratorFunction]", h = "[object Map]", b = "[object Number]", g = "[object Null]", y = "[object Object]", w = "[object Proxy]", _ = "[object RegExp]", E = "[object Set]", k = "[object String]", S = "[object Undefined]", A = "[object WeakMap]", x = "[object ArrayBuffer]", T = "[object DataView]", N = "[object Float32Array]", F = "[object Float64Array]", V = "[object Int8Array]", oe = "[object Int16Array]", H = "[object Int32Array]", Q = "[object Uint8Array]", ae = "[object Uint8ClampedArray]", Ee = "[object Uint16Array]", pe = "[object Uint32Array]", Re = /[\\^$.*+?()[\]{}|]/g, ve = /^\[object .+?Constructor\]$/, Se = /^(?:0|[1-9]\d*)$/, ee = {};
    ee[N] = ee[F] = ee[V] = ee[oe] = ee[H] = ee[Q] = ee[ae] = ee[Ee] = ee[pe] = !0, ee[a] = ee[c] = ee[x] = ee[f] = ee[T] = ee[l] = ee[m] = ee[p] = ee[h] = ee[b] = ee[y] = ee[_] = ee[E] = ee[k] = ee[A] = !1;
    var xe = typeof mr == "object" && mr && mr.Object === Object && mr, Ve = typeof self == "object" && self && self.Object === Object && self, Pe = xe || Ve || Function("return this")(), Ne = e && !e.nodeType && e, ce = Ne && !0 && t && !t.nodeType && t, Fe = ce && ce.exports === Ne, ct = Fe && xe.process, Xe = function() {
      try {
        var I = ce && ce.require && ce.require("util").types;
        return I || ct && ct.binding && ct.binding("util");
      } catch {
      }
    }(), kt = Xe && Xe.isTypedArray;
    function Ze(I, M, G) {
      switch (G.length) {
        case 0:
          return I.call(M);
        case 1:
          return I.call(M, G[0]);
        case 2:
          return I.call(M, G[0], G[1]);
        case 3:
          return I.call(M, G[0], G[1], G[2]);
      }
      return I.apply(M, G);
    }
    function St(I, M) {
      for (var G = -1, me = Array(I); ++G < I; )
        me[G] = M(G);
      return me;
    }
    function Dn(I) {
      return function(M) {
        return I(M);
      };
    }
    function sr(I, M) {
      return I == null ? void 0 : I[M];
    }
    function $r(I, M) {
      return function(G) {
        return I(M(G));
      };
    }
    var Js = Array.prototype, Ks = Function.prototype, wr = Object.prototype, L = Pe["__core-js_shared__"], de = Ks.toString, fe = wr.hasOwnProperty, Le = function() {
      var I = /[^.]+$/.exec(L && L.keys && L.keys.IE_PROTO || "");
      return I ? "Symbol(src)_1." + I : "";
    }(), It = wr.toString, ft = de.call(Object), Oe = RegExp(
      "^" + de.call(fe).replace(Re, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    ), Ft = Fe ? Pe.Buffer : void 0, Gn = Pe.Symbol, vt = Pe.Uint8Array;
    Ft && Ft.allocUnsafe;
    var Jt = $r(Object.getPrototypeOf, Object), zn = Object.create, bn = wr.propertyIsEnumerable, Lt = Js.splice, dt = Gn ? Gn.toStringTag : void 0, fs = function() {
      try {
        var I = no(Object, "defineProperty");
        return I({}, "", {}), I;
      } catch {
      }
    }(), Qi = Ft ? Ft.isBuffer : void 0, yn = Math.max, Ur = Date.now, Xo = no(Pe, "Map"), jr = no(Object, "create"), Ys = /* @__PURE__ */ function() {
      function I() {
      }
      return function(M) {
        if (!Xt(M))
          return {};
        if (zn)
          return zn(M);
        I.prototype = M;
        var G = new I();
        return I.prototype = void 0, G;
      };
    }();
    function wn(I) {
      var M = -1, G = I == null ? 0 : I.length;
      for (this.clear(); ++M < G; ) {
        var me = I[M];
        this.set(me[0], me[1]);
      }
    }
    function Zi() {
      this.__data__ = jr ? jr(null) : {}, this.size = 0;
    }
    function Ji(I) {
      var M = this.has(I) && delete this.__data__[I];
      return this.size -= M ? 1 : 0, M;
    }
    function hs(I) {
      var M = this.__data__;
      if (jr) {
        var G = M[I];
        return G === r ? void 0 : G;
      }
      return fe.call(M, I) ? M[I] : void 0;
    }
    function Vn(I) {
      var M = this.__data__;
      return jr ? M[I] !== void 0 : fe.call(M, I);
    }
    function Ki(I, M) {
      var G = this.__data__;
      return this.size += this.has(I) ? 0 : 1, G[I] = jr && M === void 0 ? r : M, this;
    }
    wn.prototype.clear = Zi, wn.prototype.delete = Ji, wn.prototype.get = hs, wn.prototype.has = Vn, wn.prototype.set = Ki;
    function Kt(I) {
      var M = -1, G = I == null ? 0 : I.length;
      for (this.clear(); ++M < G; ) {
        var me = I[M];
        this.set(me[0], me[1]);
      }
    }
    function Yi() {
      this.__data__ = [], this.size = 0;
    }
    function ds(I) {
      var M = this.__data__, G = ti(M, I);
      if (G < 0)
        return !1;
      var me = M.length - 1;
      return G == me ? M.pop() : Lt.call(M, G, 1), --this.size, !0;
    }
    function ql(I) {
      var M = this.__data__, G = ti(M, I);
      return G < 0 ? void 0 : M[G][1];
    }
    function Xs(I) {
      return ti(this.__data__, I) > -1;
    }
    function Xi(I, M) {
      var G = this.__data__, me = ti(G, I);
      return me < 0 ? (++this.size, G.push([I, M])) : G[me][1] = M, this;
    }
    Kt.prototype.clear = Yi, Kt.prototype.delete = ds, Kt.prototype.get = ql, Kt.prototype.has = Xs, Kt.prototype.set = Xi;
    function vr(I) {
      var M = -1, G = I == null ? 0 : I.length;
      for (this.clear(); ++M < G; ) {
        var me = I[M];
        this.set(me[0], me[1]);
      }
    }
    function _r() {
      this.size = 0, this.__data__ = {
        hash: new wn(),
        map: new (Xo || Kt)(),
        string: new wn()
      };
    }
    function ei(I) {
      var M = Wr(this, I).delete(I);
      return this.size -= M ? 1 : 0, M;
    }
    function eo(I) {
      return Wr(this, I).get(I);
    }
    function ea(I) {
      return Wr(this, I).has(I);
    }
    function Ar(I, M) {
      var G = Wr(this, I), me = G.size;
      return G.set(I, M), this.size += G.size == me ? 0 : 1, this;
    }
    vr.prototype.clear = _r, vr.prototype.delete = ei, vr.prototype.get = eo, vr.prototype.has = ea, vr.prototype.set = Ar;
    function Fr(I) {
      var M = this.__data__ = new Kt(I);
      this.size = M.size;
    }
    function qn() {
      this.__data__ = new Kt(), this.size = 0;
    }
    function Ql(I) {
      var M = this.__data__, G = M.delete(I);
      return this.size = M.size, G;
    }
    function Zl(I) {
      return this.__data__.get(I);
    }
    function Jl(I) {
      return this.__data__.has(I);
    }
    function Qn(I, M) {
      var G = this.__data__;
      if (G instanceof Kt) {
        var me = G.__data__;
        if (!Xo || me.length < n - 1)
          return me.push([I, M]), this.size = ++G.size, this;
        G = this.__data__ = new vr(me);
      }
      return G.set(I, M), this.size = G.size, this;
    }
    Fr.prototype.clear = qn, Fr.prototype.delete = Ql, Fr.prototype.get = Zl, Fr.prototype.has = Jl, Fr.prototype.set = Qn;
    function Kl(I, M) {
      var G = ai(I), me = !G && oi(I), Me = !G && !me && gs(I), He = !G && !me && !Me && ys(I), Je = G || me || Me || He, qe = Je ? St(I.length, String) : [], ht = qe.length;
      for (var en in I)
        Je && // Safari 9 has enumerable `arguments.length` in strict mode.
        (en == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        Me && (en == "offset" || en == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        He && (en == "buffer" || en == "byteLength" || en == "byteOffset") || // Skip index properties.
        ta(en, ht)) || qe.push(en);
      return qe;
    }
    function vn(I, M, G) {
      (G !== void 0 && !ii(I[M], G) || G === void 0 && !(M in I)) && to(I, M, G);
    }
    function Yl(I, M, G) {
      var me = I[M];
      (!(fe.call(I, M) && ii(me, G)) || G === void 0 && !(M in I)) && to(I, M, G);
    }
    function ti(I, M) {
      for (var G = I.length; G--; )
        if (ii(I[G][0], M))
          return G;
      return -1;
    }
    function to(I, M, G) {
      M == "__proto__" && fs ? fs(I, M, {
        configurable: !0,
        enumerable: !0,
        value: G,
        writable: !0
      }) : I[M] = G;
    }
    var Zn = si();
    function ni(I) {
      return I == null ? I === void 0 ? S : g : dt && dt in Object(I) ? lc(I) : dc(I);
    }
    function ps(I) {
      return Gr(I) && ni(I) == a;
    }
    function Xl(I) {
      if (!Xt(I) || fc(I))
        return !1;
      var M = ir(I) ? Oe : ve;
      return M.test(sa(I));
    }
    function ec(I) {
      return Gr(I) && Yt(I.length) && !!ee[ni(I)];
    }
    function Jn(I) {
      if (!Xt(I))
        return hc(I);
      var M = na(I), G = [];
      for (var me in I)
        me == "constructor" && (M || !fe.call(I, me)) || G.push(me);
      return G;
    }
    function Hr(I, M, G, me, Me) {
      I !== M && Zn(M, function(He, Je) {
        if (Me || (Me = new Fr()), Xt(He))
          tc(I, M, Je, G, Hr, me, Me);
        else {
          var qe = me ? me(ro(I, Je), He, Je + "", I, M, Me) : void 0;
          qe === void 0 && (qe = He), vn(I, Je, qe);
        }
      }, ia);
    }
    function tc(I, M, G, me, Me, He, Je) {
      var qe = ro(I, G), ht = ro(M, G), en = Je.get(ht);
      if (en) {
        vn(I, G, en);
        return;
      }
      var Pt = He ? He(qe, ht, G + "", I, M, Je) : void 0, _n = Pt === void 0;
      if (_n) {
        var or = ai(ht), ws = !or && gs(ht), aa = !or && !ws && ys(ht);
        Pt = ht, or || ws || aa ? ai(qe) ? Pt = qe : li(qe) ? Pt = ic(qe) : ws ? (_n = !1, Pt = rc(ht)) : aa ? (_n = !1, Pt = ri(ht)) : Pt = [] : bs(ht) || oi(ht) ? (Pt = qe, oi(qe) ? Pt = gc(qe) : (!Xt(qe) || ir(qe)) && (Pt = ms(ht))) : _n = !1;
      }
      _n && (Je.set(ht, Pt), Me(Pt, ht, me, He, Je), Je.delete(ht)), vn(I, G, Pt);
    }
    function nc(I, M) {
      return mc(pc(I, M, oo), I + "");
    }
    var Kn = fs ? function(I, M) {
      return fs(I, "toString", {
        configurable: !0,
        enumerable: !1,
        value: io(M),
        writable: !0
      });
    } : oo;
    function rc(I, M) {
      return I.slice();
    }
    function sc(I) {
      var M = new I.constructor(I.byteLength);
      return new vt(M).set(new vt(I)), M;
    }
    function ri(I, M) {
      var G = sc(I.buffer);
      return new I.constructor(G, I.byteOffset, I.length);
    }
    function ic(I, M) {
      var G = -1, me = I.length;
      for (M || (M = Array(me)); ++G < me; )
        M[G] = I[G];
      return M;
    }
    function oc(I, M, G, me) {
      var Me = !G;
      G || (G = {});
      for (var He = -1, Je = M.length; ++He < Je; ) {
        var qe = M[He], ht = void 0;
        ht === void 0 && (ht = I[qe]), Me ? to(G, qe, ht) : Yl(G, qe, ht);
      }
      return G;
    }
    function ac(I) {
      return nc(function(M, G) {
        var me = -1, Me = G.length, He = Me > 1 ? G[Me - 1] : void 0, Je = Me > 2 ? G[2] : void 0;
        for (He = I.length > 3 && typeof He == "function" ? (Me--, He) : void 0, Je && cc(G[0], G[1], Je) && (He = Me < 3 ? void 0 : He, Me = 1), M = Object(M); ++me < Me; ) {
          var qe = G[me];
          qe && I(M, qe, me, He);
        }
        return M;
      });
    }
    function si(I) {
      return function(M, G, me) {
        for (var Me = -1, He = Object(M), Je = me(M), qe = Je.length; qe--; ) {
          var ht = Je[++Me];
          if (G(He[ht], ht, He) === !1)
            break;
        }
        return M;
      };
    }
    function Wr(I, M) {
      var G = I.__data__;
      return uc(M) ? G[typeof M == "string" ? "string" : "hash"] : G.map;
    }
    function no(I, M) {
      var G = sr(I, M);
      return Xl(G) ? G : void 0;
    }
    function lc(I) {
      var M = fe.call(I, dt), G = I[dt];
      try {
        I[dt] = void 0;
        var me = !0;
      } catch {
      }
      var Me = It.call(I);
      return me && (M ? I[dt] = G : delete I[dt]), Me;
    }
    function ms(I) {
      return typeof I.constructor == "function" && !na(I) ? Ys(Jt(I)) : {};
    }
    function ta(I, M) {
      var G = typeof I;
      return M = M ?? o, !!M && (G == "number" || G != "symbol" && Se.test(I)) && I > -1 && I % 1 == 0 && I < M;
    }
    function cc(I, M, G) {
      if (!Xt(G))
        return !1;
      var me = typeof M;
      return (me == "number" ? so(G) && ta(M, G.length) : me == "string" && M in G) ? ii(G[M], I) : !1;
    }
    function uc(I) {
      var M = typeof I;
      return M == "string" || M == "number" || M == "symbol" || M == "boolean" ? I !== "__proto__" : I === null;
    }
    function fc(I) {
      return !!Le && Le in I;
    }
    function na(I) {
      var M = I && I.constructor, G = typeof M == "function" && M.prototype || wr;
      return I === G;
    }
    function hc(I) {
      var M = [];
      if (I != null)
        for (var G in Object(I))
          M.push(G);
      return M;
    }
    function dc(I) {
      return It.call(I);
    }
    function pc(I, M, G) {
      return M = yn(M === void 0 ? I.length - 1 : M, 0), function() {
        for (var me = arguments, Me = -1, He = yn(me.length - M, 0), Je = Array(He); ++Me < He; )
          Je[Me] = me[M + Me];
        Me = -1;
        for (var qe = Array(M + 1); ++Me < M; )
          qe[Me] = me[Me];
        return qe[M] = G(Je), Ze(I, this, qe);
      };
    }
    function ro(I, M) {
      if (!(M === "constructor" && typeof I[M] == "function") && M != "__proto__")
        return I[M];
    }
    var mc = ra(Kn);
    function ra(I) {
      var M = 0, G = 0;
      return function() {
        var me = Ur(), Me = i - (me - G);
        if (G = me, Me > 0) {
          if (++M >= s)
            return arguments[0];
        } else
          M = 0;
        return I.apply(void 0, arguments);
      };
    }
    function sa(I) {
      if (I != null) {
        try {
          return de.call(I);
        } catch {
        }
        try {
          return I + "";
        } catch {
        }
      }
      return "";
    }
    function ii(I, M) {
      return I === M || I !== I && M !== M;
    }
    var oi = ps(/* @__PURE__ */ function() {
      return arguments;
    }()) ? ps : function(I) {
      return Gr(I) && fe.call(I, "callee") && !bn.call(I, "callee");
    }, ai = Array.isArray;
    function so(I) {
      return I != null && Yt(I.length) && !ir(I);
    }
    function li(I) {
      return Gr(I) && so(I);
    }
    var gs = Qi || ci;
    function ir(I) {
      if (!Xt(I))
        return !1;
      var M = ni(I);
      return M == p || M == d || M == u || M == w;
    }
    function Yt(I) {
      return typeof I == "number" && I > -1 && I % 1 == 0 && I <= o;
    }
    function Xt(I) {
      var M = typeof I;
      return I != null && (M == "object" || M == "function");
    }
    function Gr(I) {
      return I != null && typeof I == "object";
    }
    function bs(I) {
      if (!Gr(I) || ni(I) != y)
        return !1;
      var M = Jt(I);
      if (M === null)
        return !0;
      var G = fe.call(M, "constructor") && M.constructor;
      return typeof G == "function" && G instanceof G && de.call(G) == ft;
    }
    var ys = kt ? Dn(kt) : ec;
    function gc(I) {
      return oc(I, ia(I));
    }
    function ia(I) {
      return so(I) ? Kl(I) : Jn(I);
    }
    var oa = ac(function(I, M, G) {
      Hr(I, M, G);
    });
    function io(I) {
      return function() {
        return I;
      };
    }
    function oo(I) {
      return I;
    }
    function ci() {
      return !1;
    }
    t.exports = oa;
  }(Tc, Tc.exports)), Tc.exports;
}
var P4 = N4();
const R4 = /* @__PURE__ */ Fl(P4);
var jh = { exports: {} }, tg;
function B4() {
  return tg || (tg = 1, function(t) {
    var e = Object.prototype.hasOwnProperty, n = "~";
    function r() {
    }
    Object.create && (r.prototype = /* @__PURE__ */ Object.create(null), new r().__proto__ || (n = !1));
    function s(c, u, f) {
      this.fn = c, this.context = u, this.once = f || !1;
    }
    function i(c, u, f, l, m) {
      if (typeof f != "function")
        throw new TypeError("The listener must be a function");
      var p = new s(f, l || c, m), d = n ? n + u : u;
      return c._events[d] ? c._events[d].fn ? c._events[d] = [c._events[d], p] : c._events[d].push(p) : (c._events[d] = p, c._eventsCount++), c;
    }
    function o(c, u) {
      --c._eventsCount === 0 ? c._events = new r() : delete c._events[u];
    }
    function a() {
      this._events = new r(), this._eventsCount = 0;
    }
    a.prototype.eventNames = function() {
      var u = [], f, l;
      if (this._eventsCount === 0) return u;
      for (l in f = this._events)
        e.call(f, l) && u.push(n ? l.slice(1) : l);
      return Object.getOwnPropertySymbols ? u.concat(Object.getOwnPropertySymbols(f)) : u;
    }, a.prototype.listeners = function(u) {
      var f = n ? n + u : u, l = this._events[f];
      if (!l) return [];
      if (l.fn) return [l.fn];
      for (var m = 0, p = l.length, d = new Array(p); m < p; m++)
        d[m] = l[m].fn;
      return d;
    }, a.prototype.listenerCount = function(u) {
      var f = n ? n + u : u, l = this._events[f];
      return l ? l.fn ? 1 : l.length : 0;
    }, a.prototype.emit = function(u, f, l, m, p, d) {
      var h = n ? n + u : u;
      if (!this._events[h]) return !1;
      var b = this._events[h], g = arguments.length, y, w;
      if (b.fn) {
        switch (b.once && this.removeListener(u, b.fn, void 0, !0), g) {
          case 1:
            return b.fn.call(b.context), !0;
          case 2:
            return b.fn.call(b.context, f), !0;
          case 3:
            return b.fn.call(b.context, f, l), !0;
          case 4:
            return b.fn.call(b.context, f, l, m), !0;
          case 5:
            return b.fn.call(b.context, f, l, m, p), !0;
          case 6:
            return b.fn.call(b.context, f, l, m, p, d), !0;
        }
        for (w = 1, y = new Array(g - 1); w < g; w++)
          y[w - 1] = arguments[w];
        b.fn.apply(b.context, y);
      } else {
        var _ = b.length, E;
        for (w = 0; w < _; w++)
          switch (b[w].once && this.removeListener(u, b[w].fn, void 0, !0), g) {
            case 1:
              b[w].fn.call(b[w].context);
              break;
            case 2:
              b[w].fn.call(b[w].context, f);
              break;
            case 3:
              b[w].fn.call(b[w].context, f, l);
              break;
            case 4:
              b[w].fn.call(b[w].context, f, l, m);
              break;
            default:
              if (!y) for (E = 1, y = new Array(g - 1); E < g; E++)
                y[E - 1] = arguments[E];
              b[w].fn.apply(b[w].context, y);
          }
      }
      return !0;
    }, a.prototype.on = function(u, f, l) {
      return i(this, u, f, l, !1);
    }, a.prototype.once = function(u, f, l) {
      return i(this, u, f, l, !0);
    }, a.prototype.removeListener = function(u, f, l, m) {
      var p = n ? n + u : u;
      if (!this._events[p]) return this;
      if (!f)
        return o(this, p), this;
      var d = this._events[p];
      if (d.fn)
        d.fn === f && (!m || d.once) && (!l || d.context === l) && o(this, p);
      else {
        for (var h = 0, b = [], g = d.length; h < g; h++)
          (d[h].fn !== f || m && !d[h].once || l && d[h].context !== l) && b.push(d[h]);
        b.length ? this._events[p] = b.length === 1 ? b[0] : b : o(this, p);
      }
      return this;
    }, a.prototype.removeAllListeners = function(u) {
      var f;
      return u ? (f = n ? n + u : u, this._events[f] && o(this, f)) : (this._events = new r(), this._eventsCount = 0), this;
    }, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prefixed = n, a.EventEmitter = a, t.exports = a;
  }(jh)), jh.exports;
}
var L4 = B4();
const M4 = /* @__PURE__ */ Fl(L4);
function mf(t, e) {
  var n = {};
  for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
  if (t != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, r = Object.getOwnPropertySymbols(t); s < r.length; s++)
      e.indexOf(r[s]) < 0 && Object.prototype.propertyIsEnumerable.call(t, r[s]) && (n[r[s]] = t[r[s]]);
  return n;
}
var kb = `<svg width="56" height="56" viewBox="0 0 56 56" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="56" height="56" rx="8" fill="#262A3D"/>
<g clip-path="url(#clip0_15747_103507)">
<path d="M20.6176 35.9801L16.0142 27.9949H25.2218L29.826 35.9801H20.6176Z" fill="#262A3D"/>
<path d="M20.6176 35.9801L16.0142 27.9949H25.2218L29.826 35.9801H20.6176Z" fill="white"/>
<path d="M25.2218 27.9947H16.0142L20.6176 20.0095H29.826L25.2218 27.9947Z" fill="url(#paint0_linear_15747_103507)"/>
<path d="M34.4302 27.9948L29.826 20.0096H20.6176L16.0142 12.0244H34.4302L43.6379 27.9948H34.4302Z" fill="#262A3D"/>
<path d="M34.4302 27.9948L29.826 20.0096H20.6176L16.0142 12.0244H34.4302L43.6379 27.9948H34.4302Z" fill="white"/>
<path d="M34.4302 43.9652H16.0142L20.6176 35.9801H29.826L34.4302 27.9949H43.6379L34.4302 43.9652Z" fill="url(#paint1_linear_15747_103507)"/>
</g>
<defs>
<linearGradient id="paint0_linear_15747_103507" x1="16.0142" y1="24.0021" x2="29.826" y2="24.0021" gradientUnits="userSpaceOnUse">
<stop stop-color="#55CCFE"/>
<stop offset="1" stop-color="#5E93EF"/>
</linearGradient>
<linearGradient id="paint1_linear_15747_103507" x1="76.5102" y1="5214.05" x2="10391.8" y2="5214.05" gradientUnits="userSpaceOnUse">
<stop stop-color="#55CCFE"/>
<stop offset="1" stop-color="#5E93EF"/>
</linearGradient>
<clipPath id="clip0_15747_103507">
<rect width="27.6667" height="32" fill="white" transform="translate(16 12)"/>
</clipPath>
</defs>
</svg>
`, D4 = `
<svg width="152" height="16" viewBox="0 0 152 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.03641 6.252C3.23241 6.252 2.41641 6.636 2.04441 7.272V6.396H1.00041V14.724H2.04441V11.124C2.41641 11.784 3.20841 12.144 4.04841 12.144C5.58441 12.144 6.84441 10.98 6.84441 9.204C6.84441 7.44 5.57241 6.252 4.03641 6.252ZM3.94041 11.16C3.02841 11.16 2.04441 10.428 2.04441 9.216C2.04441 8.016 2.94441 7.236 3.94041 7.236C4.97241 7.236 5.78841 8.1 5.78841 9.216C5.78841 10.344 4.97241 11.16 3.94041 11.16ZM10.8452 12.144C12.4412 12.144 13.7852 10.968 13.7852 9.192C13.7852 7.416 12.4412 6.252 10.8452 6.252C9.24919 6.252 7.91719 7.416 7.91719 9.192C7.91719 10.968 9.24919 12.144 10.8452 12.144ZM10.8452 11.16C9.82519 11.16 8.97319 10.356 8.97319 9.192C8.97319 8.04 9.82519 7.236 10.8452 7.236C11.8772 7.236 12.7412 8.04 12.7412 9.192C12.7412 10.356 11.8772 11.16 10.8452 11.16ZM22.2729 6.396L20.8449 10.38L19.4049 6.396H18.3849L16.9569 10.38L15.5289 6.396H14.4009L16.5369 12H17.4009L18.8889 7.836L20.4369 12H21.3129L23.4009 6.396H22.2729ZM29.6948 9.18C29.6948 7.404 28.5068 6.252 26.9108 6.252C25.3148 6.252 24.0308 7.404 24.0308 9.18C24.0308 10.956 25.3148 12.144 26.9108 12.144C27.9908 12.144 28.9988 11.616 29.4788 10.644L28.5788 10.284C28.2548 10.848 27.6308 11.16 26.9468 11.16C25.9868 11.16 25.2668 10.644 25.1108 9.648H29.6708C29.6828 9.492 29.6948 9.336 29.6948 9.18ZM25.1228 8.748C25.2908 7.74 25.9628 7.236 26.9108 7.236C27.8348 7.236 28.5188 7.788 28.6508 8.748H25.1228ZM33.7456 6.252C33.0016 6.252 32.4616 6.684 32.1736 7.668V6.396H31.1176V12H32.1736V9.948C32.1736 8.472 32.6176 7.26 33.7336 7.26C33.9496 7.26 34.2496 7.308 34.5496 7.452L34.7176 6.468C34.5496 6.36 34.1416 6.252 33.7456 6.252ZM40.8627 9.18C40.8627 7.404 39.6747 6.252 38.0787 6.252C36.4827 6.252 35.1987 7.404 35.1987 9.18C35.1987 10.956 36.4827 12.144 38.0787 12.144C39.1587 12.144 40.1667 11.616 40.6467 10.644L39.7467 10.284C39.4227 10.848 38.7987 11.16 38.1147 11.16C37.1547 11.16 36.4347 10.644 36.2787 9.648H40.8387C40.8507 9.492 40.8627 9.336 40.8627 9.18ZM36.2907 8.748C36.4587 7.74 37.1307 7.236 38.0787 7.236C39.0027 7.236 39.6867 7.788 39.8187 8.748H36.2907ZM46.7136 3.348V7.272C46.3416 6.612 45.5496 6.252 44.7096 6.252C43.1736 6.252 41.9136 7.416 41.9136 9.192C41.9136 10.956 43.1856 12.144 44.7216 12.144C45.5256 12.144 46.3416 11.76 46.7136 11.124V12H47.7576V3.348H46.7136ZM44.8056 11.16C43.7856 11.16 42.9696 10.296 42.9696 9.18C42.9696 8.052 43.7856 7.236 44.8056 7.236C45.7296 7.236 46.7136 7.968 46.7136 9.18C46.7136 10.38 45.8136 11.16 44.8056 11.16ZM55.6695 6.252C54.8295 6.252 54.0375 6.612 53.6655 7.272V3.348H52.6215V12H53.6655V11.124C54.0375 11.76 54.8535 12.144 55.6575 12.144C57.1935 12.144 58.4655 10.956 58.4655 9.192C58.4655 7.416 57.2055 6.252 55.6695 6.252ZM55.5615 11.16C54.5655 11.16 53.6655 10.38 53.6655 9.18C53.6655 7.968 54.6495 7.236 55.5615 7.236C56.5935 7.236 57.4095 8.052 57.4095 9.18C57.4095 10.296 56.5935 11.16 55.5615 11.16ZM63.6097 6.396L61.8937 10.524L60.2017 6.396H59.0737L61.3297 11.832L60.1537 14.724H61.2577L64.7377 6.396H63.6097Z" fill="var(--w3o-text-color, #707481)"/>
<g clip-path="url(#clip0_13558_103869)">
<path d="M143.502 11.0888L141.863 8.24889H145.142L146.782 11.0888H143.502Z" fill="currentColor"/>
<path d="M145.142 8.24887H141.863L143.502 5.40895H146.782L145.142 8.24887Z" fill="url(#paint0_linear_13558_103869)"/>
<path d="M148.421 8.24888L146.782 5.40896H143.502L141.863 2.56903H148.421L151.701 8.24888H148.421Z" fill="currentColor"/>
<path d="M148.421 13.9287H141.863L143.502 11.0888H146.782L148.421 8.24889H151.701L148.421 13.9287Z" fill="url(#paint1_linear_13558_103869)"/>
<path d="M76.4774 8.89232C76.4774 10.9327 74.9716 12.5077 73.1366 12.5077C72.1369 12.5077 71.4106 12.1378 70.9181 11.508V12.316H69.1513V2.71994L70.9181 2.17606V6.27771C71.4106 5.64894 72.1369 5.27797 73.1366 5.27797C74.9716 5.27797 76.4774 6.85198 76.4774 8.89232ZM74.7106 8.89232C74.7106 7.73959 73.9037 6.96201 72.8076 6.96201C71.7114 6.96201 70.9213 7.74273 70.9213 8.89232C70.9213 10.0419 71.7292 10.8237 72.8076 10.8237C73.8859 10.8237 74.7106 10.043 74.7106 8.89232Z" fill="currentColor"/>
<path d="M77.2718 2.71994L79.0376 2.17606V12.316H77.2718V2.71994Z" fill="currentColor"/>
<path d="M79.8183 8.89232C79.8171 8.17544 80.0286 7.47431 80.4261 6.87774C80.8236 6.28117 81.3893 5.816 82.0514 5.54113C82.7135 5.26627 83.4422 5.19408 84.1454 5.33371C84.8485 5.47333 85.4944 5.8185 86.0013 6.32549C86.5081 6.83247 86.8531 7.47847 86.9925 8.18166C87.1319 8.88486 87.0595 9.61361 86.7845 10.2756C86.5094 10.9376 86.0441 11.5031 85.4474 11.9005C84.8507 12.2978 84.1495 12.5092 83.4326 12.5077C82.9565 12.5128 82.4842 12.4227 82.0433 12.2428C81.6024 12.0629 81.2019 11.7967 80.8653 11.46C80.5286 11.1232 80.2626 10.7227 80.0828 10.2817C79.903 9.84083 79.8131 9.36845 79.8183 8.89232ZM85.2948 8.89232C85.2948 7.78359 84.4869 7.00602 83.4326 7.00602C82.3784 7.00602 81.5841 7.78674 81.5841 8.89232C81.5841 9.9979 82.392 10.7786 83.4326 10.7786C84.4733 10.7786 85.2948 10.0021 85.2948 8.89232Z" fill="currentColor"/>
<path d="M87.7313 8.89233C87.7313 6.85198 89.2645 5.27797 91.3457 5.27797C92.6881 5.27797 93.8513 5.98952 94.413 7.04375L92.8935 7.93451C92.6189 7.37281 92.03 7.01651 91.3321 7.01651C90.2778 7.01651 89.4971 7.79723 89.4971 8.89233C89.4971 9.98743 90.2778 10.7545 91.3321 10.7545C92.0447 10.7545 92.6326 10.4129 92.904 9.8512L94.4371 10.7273C94.1281 11.2741 93.6779 11.7279 93.1335 12.0413C92.5891 12.3547 91.9706 12.5161 91.3425 12.5088C89.2645 12.5077 87.7313 10.9327 87.7313 8.89233Z" fill="currentColor"/>
<path d="M99.5123 12.316L97.0203 9.20776V12.316H95.2534V2.71994L97.0203 2.17606V8.48153L99.374 5.46974H101.482L98.7316 8.85145L101.566 12.316H99.5123Z" fill="currentColor"/>
<path d="M108.623 8.11161V12.316H106.856V8.33377C106.856 7.40215 106.296 6.92324 105.501 6.92324C104.639 6.92324 103.994 7.4294 103.994 8.62091V12.316H102.229V5.46974H103.994V6.23579C104.405 5.6196 105.118 5.27797 106.035 5.27797C107.486 5.27797 108.623 6.29657 108.623 8.11161Z" fill="currentColor"/>
<path d="M116.74 5.46974V12.316H114.975V11.508C114.481 12.1242 113.742 12.5077 112.743 12.5077C110.921 12.5077 109.415 10.9358 109.415 8.89233C109.415 6.84884 110.921 5.27797 112.743 5.27797C113.742 5.27797 114.481 5.66152 114.975 6.27771V5.46974H116.74ZM114.975 8.89233C114.975 7.73959 114.167 6.96201 113.071 6.96201C111.974 6.96201 111.184 7.74273 111.184 8.89233C111.184 10.0419 111.992 10.8237 113.071 10.8237C114.149 10.8237 114.975 10.043 114.975 8.89233Z" fill="currentColor"/>
<path d="M121.344 7.16742V5.46975H119.796V3.45665L118.027 4.00053V10.0157C118.027 11.8643 118.866 12.5895 121.342 12.3212V10.7137C120.329 10.7692 119.794 10.7545 119.794 10.0157V7.16742H121.344Z" fill="currentColor"/>
<path d="M122.582 5.46974H124.347V12.316H122.582V5.46974Z" fill="currentColor"/>
<path d="M132.293 5.46974L129.691 12.316H127.678L125.077 5.46974H127.021L128.678 10.262L130.348 5.46974H132.293Z" fill="currentColor"/>
<path d="M136.073 10.9075C136.757 10.9075 137.305 10.6204 137.607 10.2232L139.03 11.0448C138.387 11.9754 137.36 12.5119 136.046 12.5119C133.74 12.5119 132.294 10.94 132.294 8.89652C132.294 6.85303 133.761 5.28217 135.908 5.28217C137.935 5.28217 139.373 6.88447 139.373 8.89652C139.37 9.13886 139.346 9.38049 139.301 9.61856H134.143C134.389 10.5219 135.142 10.9075 136.073 10.9075ZM137.607 8.25099C137.387 7.26487 136.648 6.8677 135.908 6.8677C134.965 6.8677 134.321 7.37491 134.114 8.25099H137.607Z" fill="currentColor"/>
</g>
<defs>
<linearGradient id="paint0_linear_13558_103869" x1="141.863" y1="6.82891" x2="146.782" y2="6.82891" gradientUnits="userSpaceOnUse">
<stop stop-color="#55CCFE"/>
<stop offset="1" stop-color="#5E93EF"/>
</linearGradient>
<linearGradient id="paint1_linear_13558_103869" x1="6973.93" y1="500.862" x2="7897.53" y2="500.862" gradientUnits="userSpaceOnUse">
<stop stop-color="#55CCFE"/>
<stop offset="1" stop-color="#5E93EF"/>
</linearGradient>
<clipPath id="clip0_13558_103869">
<rect width="82.8232" height="12" fill="white" transform="translate(69.0884 2)"/>
</clipPath>
</defs>
</svg>
`, ng = `
  <svg height="100%" viewBox="0 0 10 14" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M4.99902 0.12619V5.20805L9.58065 7.12736L4.99902 0.12619Z" fill="white" fill-opacity="0.602"/>
    <path d="M4.99923 0.12619L0.416992 7.12736L4.99923 5.20805V0.12619Z" fill="white"/>
    <path d="M4.99902 10.4207V13.8737L9.58371 7.92728L4.99902 10.4207Z" fill="white" fill-opacity="0.602"/>
    <path d="M4.99923 13.8737V10.4201L0.416992 7.92728L4.99923 13.8737Z" fill="white"/>
    <path d="M4.99902 9.62134L9.58065 7.12739L4.99902 5.20923V9.62134Z" fill="white" fill-opacity="0.2"/>
    <path d="M0.416992 7.12739L4.99923 9.62134V5.20923L0.416992 7.12739Z" fill="white" fill-opacity="0.602"/>
  </svg>
`, rg = `
  <svg width="100%" viewBox="0 0 14 13" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M10.5091 4.05856C10.2585 3.91901 9.9362 3.91901 9.64974 4.05856L7.64453 5.20986L6.28385 5.94251L4.31445 7.09382C4.0638 7.23337 3.74154 7.23337 3.45508 7.09382L1.91536 6.18673C1.66471 6.04718 1.48568 5.76807 1.48568 5.45408V3.70968C1.48568 3.43057 1.62891 3.15147 1.91536 2.97703L3.45508 2.10483C3.70573 1.96527 4.02799 1.96527 4.31445 2.10483L5.85417 3.01192C6.10482 3.15147 6.28385 3.43057 6.28385 3.74457V4.89587L7.64453 4.12833V2.94214C7.64453 2.66304 7.5013 2.38393 7.21484 2.20949L4.35026 0.569752C4.09961 0.4302 3.77734 0.4302 3.49089 0.569752L0.554687 2.24438C0.268229 2.38393 0.125 2.66304 0.125 2.94214V6.22162C0.125 6.50072 0.268229 6.77983 0.554687 6.95427L3.45508 8.59401C3.70573 8.73356 4.02799 8.73356 4.31445 8.59401L6.28385 7.47759L7.64453 6.71005L9.61393 5.59363C9.86458 5.45408 10.1868 5.45408 10.4733 5.59363L12.013 6.46583C12.2637 6.60539 12.4427 6.88449 12.4427 7.19848V8.94289C12.4427 9.22199 12.2995 9.50109 12.013 9.67553L10.5091 10.5477C10.2585 10.6873 9.9362 10.6873 9.64974 10.5477L8.11002 9.67553C7.85937 9.53598 7.68034 9.25688 7.68034 8.94289V7.82647L6.31966 8.59401V9.74531C6.31966 10.0244 6.46289 10.3035 6.74935 10.478L9.64974 12.1177C9.90039 12.2572 10.2227 12.2572 10.5091 12.1177L13.4095 10.478C13.6602 10.3384 13.8392 10.0593 13.8392 9.74531V6.43095C13.8392 6.15184 13.696 5.87274 13.4095 5.6983L10.5091 4.05856Z" fill="white"/>
  </svg>
`, $4 = `
  <svg width="100%" height="100%" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M4.32975 5.90275L7 3.2325L9.67163 5.90413L11.2254 4.35038L7 0.125L2.776 4.349L4.32975 5.90275ZM0.125 7L1.67875 5.44625L3.2325 7L1.67875 8.55375L0.125 7ZM4.32975 8.09725L7 10.7675L9.67163 8.09587L11.2254 9.64894L7 13.875L2.776 9.651L2.77394 9.64894L4.32975 8.09725ZM10.7675 7L12.3212 5.44625L13.875 7L12.3212 8.55375L10.7675 7ZM8.57575 6.99863H8.57713V7L7 8.57713L5.42494 7.00275L5.42219 7L5.42494 6.99794L5.70062 6.72156L5.83469 6.5875L7 5.42288L8.57644 6.99931L8.57575 6.99863Z" fill="white"/>
  </svg>
`, U4 = `
  <svg height="100%" viewBox="0 0 12 14" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M5.26613 0.133876C5.46683 0.0457135 5.68592 0 5.90775 0C6.12958 0 6.34867 0.0457135 6.54938 0.133876L10.2679 1.9598C10.3617 1.99893 10.4437 2.05898 10.5068 2.13465C10.5699 2.21033 10.6121 2.29932 10.6298 2.3938H10.6335V11.5637C10.6245 11.6667 10.5857 11.7654 10.5213 11.8495C10.457 11.9336 10.3694 11.9998 10.2679 12.0411L6.54938 13.8656C6.34867 13.9538 6.12958 13.9995 5.90775 13.9995C5.68592 13.9995 5.46683 13.9538 5.26613 13.8656L1.54762 12.0397C1.44724 11.9979 1.36095 11.9313 1.29799 11.8472C1.23504 11.7631 1.19779 11.6646 1.19025 11.5623C1.19025 11.5465 1.19025 11.5332 1.19025 11.522V2.39205C1.20579 2.29767 1.24673 2.20852 1.30923 2.13292C1.37173 2.05733 1.45375 1.99776 1.54762 1.9598L5.26613 0.133876ZM10.0478 7.50898L6.54938 9.22396C6.34872 9.31229 6.12961 9.35809 5.90775 9.35809C5.68589 9.35809 5.46678 9.31229 5.26613 9.22396L1.77525 7.51283V11.5455L5.26613 13.2493C5.43937 13.3471 5.62982 13.4154 5.82863 13.4512L5.9085 13.4558C6.12668 13.4357 6.3373 13.3704 6.525 13.2647L10.05 11.5301V7.50898H10.0478ZM0.585375 11.3642C0.568078 11.6186 0.612957 11.8734 0.716625 12.1093C0.805331 12.2602 0.936232 12.3857 1.09538 12.4726L1.10662 12.4796C1.1505 12.5069 1.1985 12.5356 1.25663 12.5692L1.32563 12.6081L1.53675 12.7267L1.23375 13.1922L0.9975 13.0592L0.95775 13.0365C0.889125 12.9973 0.8325 12.9637 0.779625 12.9315C0.214875 12.5769 0.004125 12.1912 0 11.3887V11.3642H0.585H0.585375ZM5.61412 5.05096C5.58845 5.05933 5.5634 5.06926 5.53912 5.08071L1.82137 6.90524L1.81013 6.91119H1.80675L1.81275 6.91469L1.82137 6.91889L5.53988 8.74341C5.56405 8.75505 5.58912 8.76499 5.61487 8.77316L5.61412 5.05096ZM6.201 5.05096V8.77456C6.22675 8.76639 6.25182 8.75645 6.276 8.74481L9.9945 6.92029L10.0057 6.91434H10.0091L10.0031 6.91154L9.9945 6.90699L6.276 5.08246C6.25182 5.07083 6.22675 5.06088 6.201 5.05271V5.05096ZM10.0478 3.04479L6.71025 4.68137L10.0478 6.31795V3.04304V3.04479ZM1.77525 3.04864V6.3141L5.103 4.68137L1.77525 3.04864ZM6.27525 0.61617C6.15894 0.569406 6.03364 0.545286 5.907 0.545286C5.78036 0.545286 5.65506 0.569406 5.53875 0.61617L1.821 2.4393L1.80975 2.4449L1.80638 2.44665L1.81238 2.4498L1.821 2.45365L5.5395 4.27817C5.65571 4.32526 5.78106 4.34956 5.90775 4.34956C6.03444 4.34956 6.15979 4.32526 6.276 4.27817L9.9945 2.45365L10.0057 2.4498L10.0091 2.44805L10.0031 2.4449L9.9945 2.4407L6.27525 0.61617ZM10.5968 0.816717L10.833 0.949365L10.875 0.970015C10.9432 1.00921 10.9999 1.04316 11.0528 1.07501C11.6179 1.42851 11.8282 1.81455 11.8328 2.61709V2.64159H11.2459C11.2632 2.38703 11.2183 2.13212 11.1146 1.8961C11.0258 1.74528 10.8948 1.61983 10.7355 1.53316L10.7242 1.52616C10.6807 1.49851 10.6327 1.47016 10.5743 1.43656L10.5056 1.39981L10.2945 1.28151L10.5975 0.816017L10.5968 0.816717Z" fill="white"/>
  </svg>
`, sg = `
  <svg width="100%" viewBox="0 0 17 10" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M3.33611 9.25254C2.38341 9.25254 1.60287 9.02834 0.99442 8.58002C0.393974 8.1237 0.09375 7.47526 0.09375 6.63462C0.09375 6.45849 0.113782 6.2423 0.153782 5.9861C0.257909 5.40972 0.406006 4.71718 0.598133 3.9086C1.14252 1.707 2.54757 0.606201 4.81323 0.606201C5.42967 0.606201 5.98206 0.710266 6.47044 0.918394C6.95882 1.11852 7.34308 1.42278 7.62327 1.8311C7.90346 2.23135 8.04362 2.71174 8.04362 3.27212C8.04362 3.44025 8.02359 3.65241 7.98352 3.9086C7.86346 4.62111 7.71933 5.31366 7.55121 5.9861C7.27101 7.08294 6.78666 7.90354 6.09815 8.44793C5.40964 8.98431 4.489 9.25254 3.33611 9.25254ZM3.50424 7.52326C3.95262 7.52326 4.33284 7.39116 4.6451 7.12697C4.96535 6.86278 5.19351 6.45849 5.32958 5.9141C5.51371 5.16153 5.65387 4.50502 5.74993 3.94463C5.78193 3.7765 5.79793 3.60441 5.79793 3.42822C5.79793 2.6997 5.41764 2.33542 4.65713 2.33542C4.20875 2.33542 3.82449 2.46751 3.50424 2.7317C3.19205 2.99596 2.96786 3.40025 2.83179 3.94463C2.68766 4.48102 2.54354 5.13753 2.39947 5.9141C2.36741 6.07417 2.35141 6.2423 2.35141 6.41842C2.35141 7.155 2.73573 7.52326 3.50424 7.52326Z" fill="white"/>
    <path d="M8.59569 9.13247C8.50762 9.13247 8.43953 9.10443 8.39153 9.04837C8.35146 8.98431 8.33949 8.9123 8.35549 8.83224L10.0127 1.02648C10.0287 0.938417 10.0727 0.866353 10.1448 0.810289C10.2169 0.754289 10.2929 0.726257 10.373 0.726257H13.5673C14.456 0.726257 15.1685 0.910385 15.7049 1.27864C16.2493 1.64696 16.5215 2.17931 16.5215 2.87582C16.5215 3.07595 16.4975 3.28415 16.4495 3.50027C16.2493 4.42098 15.845 5.10149 15.2366 5.54181C14.6361 5.98213 13.8115 6.20229 12.7627 6.20229H11.1415L10.5892 8.83224C10.5731 8.92031 10.5291 8.99231 10.4571 9.04837C10.385 9.10443 10.3089 9.13247 10.2289 9.13247H8.59569ZM12.8468 4.54507C13.183 4.54507 13.4752 4.45298 13.7234 4.26885C13.9796 4.08472 14.1478 3.82053 14.2278 3.47627C14.2518 3.34015 14.2639 3.22008 14.2639 3.11602C14.2639 2.88383 14.1958 2.7077 14.0597 2.58763C13.9236 2.45951 13.6914 2.3955 13.3632 2.3955H11.9221L11.4658 4.54507H12.8468Z" fill="white"/>
  </svg>
`, j4 = `
  <svg width="100%" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M19.8682 0.489349H0.110352V18.4468H19.8682V0.489349Z" fill="white"/>
  </svg>
`, F4 = `
<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 26.3.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Symbol" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 384 383" style="enable-background:new 0 0 384 383;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#FCFF52;}
</style>
<path class="st0" d="M383.5,0H0.5v383h383V249.3h-63.6C298,298.1,248.7,332,192.3,332c-77.8,0-140.8-63.6-140.8-140.8
	C51.4,114,114.5,51,192.3,51c57.5,0,106.8,35,128.7,84.9h62.5V0z"/>
</svg>
`, H4 = `
  <svg width="100%" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32C24.8366 32 32 24.8366 32 16Z" fill="#04795B"/>
    <path d="M11.6529 17.4492C12.2831 17.4492 12.8648 17.2392 13.3334 16.8758L9.4877 13.0316C9.12413 13.4919 8.9141 14.0734 8.9141 14.7114C8.906 16.2216 10.134 17.4492 11.6529 17.4492Z" fill="#EFEFEF"/>
    <path d="M23.0931 14.7033C23.0931 14.0734 22.8831 13.4919 22.5195 13.0234L18.6738 16.8677C19.1343 17.2311 19.716 17.4411 20.3543 17.4411C21.8651 17.4492 23.0931 16.2216 23.0931 14.7033Z" fill="#EFEFEF"/>
    <path d="M25.0322 10.528L23.3275 12.2321C23.8931 12.9105 24.2324 13.7666 24.2324 14.7195C24.2324 16.8597 22.4954 18.5961 20.3544 18.5961C19.4092 18.5961 18.5447 18.2569 17.866 17.6915L15.9998 19.5571L14.1335 17.6915C13.4549 18.2569 12.5985 18.5961 11.6451 18.5961C9.50416 18.5961 7.7672 16.8597 7.7672 14.7195C7.7672 13.7746 8.10651 12.9105 8.67206 12.2321L7.79947 11.3599L6.96736 10.528C5.99787 12.1271 5.44043 13.9927 5.44043 15.9956C5.44043 21.8265 10.1667 26.543 15.9917 26.543C21.8167 26.543 26.543 21.8185 26.543 15.9956C26.5591 13.9846 26.0017 12.119 25.0322 10.528Z" fill="#EFEFEF"/>
    <path d="M23.6338 8.71084C21.7191 6.6999 19.0045 5.44 15.9991 5.44C12.9937 5.44 10.2872 6.6999 8.36435 8.71084C8.10584 8.98545 7.85539 9.27617 7.62109 9.575L15.991 17.9419L24.361 9.56695C24.1509 9.27617 23.9005 8.97734 23.6338 8.71084ZM15.9991 6.81297C18.4713 6.81297 20.7658 7.76593 22.4866 9.50231L15.9991 15.9874L9.5116 9.50231C11.2405 7.76593 13.5269 6.81297 15.9991 6.81297Z" fill="#EFEFEF"/>
  </svg>
`, W4 = `
  <svg width="100%" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M12.5484 1.04102e-06C11.6346 -0.000708404 10.7578 0.361217 10.1105 1.00633C9.46322 1.65145 9.09835 2.52703 9.096 3.44089V7.256C8.74045 7.28 8.37689 7.29511 8 7.29511C7.62311 7.29511 7.26133 7.31022 6.904 7.33156V3.44089C6.88946 2.53496 6.51938 1.67105 5.87358 1.03553C5.22779 0.400017 4.35805 0.0438409 3.452 0.0438409C2.54595 0.0438409 1.67621 0.400017 1.03042 1.03553C0.384623 1.67105 0.0145378 2.53496 0 3.44089V12.5591C0.0145378 13.465 0.384623 14.329 1.03042 14.9645C1.67621 15.6 2.54595 15.9562 3.452 15.9562C4.35805 15.9562 5.22779 15.6 5.87358 14.9645C6.51938 14.329 6.88946 13.465 6.904 12.5591V8.744C7.25956 8.72 7.62311 8.70489 8 8.70489C8.37689 8.70489 8.73867 8.68978 9.096 8.66845V12.5591C9.11054 13.465 9.48062 14.329 10.1264 14.9645C10.7722 15.6 11.6419 15.9562 12.548 15.9562C13.4541 15.9562 14.3238 15.6 14.9696 14.9645C15.6154 14.329 15.9855 13.465 16 12.5591V3.44089C15.9976 2.52719 15.6329 1.65173 14.9858 1.00665C14.3387 0.361557 13.4622 -0.000472854 12.5484 1.04102e-06ZM3.45156 1.40978C3.99089 1.40954 4.50828 1.62326 4.89023 2.00404C5.27218 2.38482 5.48748 2.90156 5.48889 3.44089V7.48089C4.47892 7.62724 3.49264 7.90609 2.55556 8.31023C2.14954 8.48842 1.76733 8.71655 1.41778 8.98934V3.44089C1.41919 2.90218 1.634 2.38597 2.01518 2.00529C2.39636 1.62462 2.91284 1.41048 3.45156 1.40978ZM5.48889 12.5591C5.48889 13.0994 5.27424 13.6177 4.89217 13.9997C4.51009 14.3818 3.99189 14.5964 3.45156 14.5964C2.91122 14.5964 2.39302 14.3818 2.01094 13.9997C1.62887 13.6177 1.41422 13.0994 1.41422 12.5591V11.6444C1.41422 10.8364 2.05422 10.0711 3.12711 9.59467C3.88309 9.26852 4.6763 9.03656 5.48889 8.904V12.5591ZM12.5484 14.5902C12.0091 14.5905 11.4917 14.3767 11.1098 13.996C10.7278 13.6152 10.5125 13.0984 10.5111 12.5591V8.51911C11.5211 8.37276 12.5074 8.09392 13.4444 7.68978C13.8505 7.51159 14.2327 7.28345 14.5822 7.01067V12.5591C14.5808 13.0978 14.366 13.614 13.9848 13.9947C13.6036 14.3754 13.0872 14.5895 12.5484 14.5902ZM12.8729 6.4C12.1169 6.72615 11.3237 6.95811 10.5111 7.09067V3.44089C10.5111 2.90056 10.7258 2.38235 11.1078 2.00028C11.4899 1.6182 12.0081 1.40356 12.5484 1.40356C13.0888 1.40356 13.607 1.6182 13.9891 2.00028C14.3711 2.38235 14.5858 2.90056 14.5858 3.44089V4.35556C14.5858 5.16 13.9458 5.92534 12.8729 6.4Z" fill="url(#paint0_linear_10254_2422)"/>
    <defs>
      <linearGradient id="paint0_linear_10254_2422" x1="1.01333" y1="14.7674" x2="14.8954" y2="0.847434" gradientUnits="userSpaceOnUse">
        <stop stop-color="#00AEE9"/>
        <stop offset="1" stop-color="#69FABD"/>
      </linearGradient>
    </defs>
  </svg>
`, ig = `
  <svg height="100%" viewBox="0 0 22 25" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M13.7827 11.3172L15.5966 8.23933L20.4858 15.8545L20.4881 17.3159L20.4722 7.25942C20.4606 7.0136 20.3301 6.7887 20.1218 6.6561L11.3194 1.5928C11.1135 1.49162 10.8523 1.49269 10.6468 1.59594C10.6191 1.60989 10.593 1.62499 10.568 1.64147L10.5374 1.66079L1.99318 6.6121L1.95999 6.62712C1.91737 6.64674 1.8743 6.67165 1.83382 6.70063C1.67186 6.81683 1.56424 6.98861 1.52944 7.18131C1.52423 7.21052 1.52039 7.24026 1.51855 7.27023L1.53197 15.4653L6.08607 8.40666C6.65942 7.47067 7.90869 7.1692 9.06835 7.1856L10.4295 7.22155L2.40986 20.0827L3.3552 20.627L11.4709 7.23458L15.0581 7.22155L6.96327 20.9519L10.3366 22.8921L10.7396 23.1239C10.9101 23.1932 11.111 23.1967 11.283 23.1347L20.2091 17.9618L18.5026 18.9507L13.7827 11.3172ZM14.4747 21.2849L11.0677 15.9375L13.1474 12.4083L17.622 19.461L14.4747 21.2849Z" fill="#2D374B"/>
    <path d="M11.0684 15.9375L14.4754 21.2849L17.6228 19.4609L13.1482 12.4083L11.0684 15.9375Z" fill="#28A0F0"/>
    <path d="M20.4887 17.3159L20.4864 15.8545L15.5972 8.23932L13.7832 11.3172L18.5031 18.9507L20.2097 17.9618C20.3771 17.8259 20.4783 17.6264 20.489 17.4111L20.4887 17.3159Z" fill="#28A0F0"/>
    <path d="M7.71943e-05 18.694L2.41 20.0826L10.4296 7.22152L9.0685 7.18557C7.90883 7.16916 6.65964 7.47063 6.08621 8.40662L1.53211 15.4652L0 17.8193V18.694H7.71943e-05Z" fill="white"/>
    <path d="M15.0582 7.22156L11.4712 7.23459L3.35547 20.627L6.19211 22.2603L6.96354 20.9519L15.0582 7.22156Z" fill="white"/>
    <path d="M21.9999 7.20306C21.97 6.45287 21.5638 5.76608 20.9275 5.36626L12.0097 0.237888C11.3803 -0.079066 10.594 -0.0794494 9.96363 0.237658C9.88913 0.275218 1.2912 5.26171 1.2912 5.26171C1.17223 5.31874 1.05764 5.38673 0.949789 5.46384C0.381801 5.87094 0.0355663 6.50346 0 7.19846V17.8194L1.53211 15.4653L1.5187 7.27029C1.52054 7.24032 1.52429 7.21088 1.52958 7.18175C1.56415 6.9889 1.67185 6.81689 1.83397 6.70069C1.87444 6.67171 10.6192 1.60995 10.647 1.596C10.8526 1.49275 11.1137 1.49168 11.3195 1.59286L20.122 6.65616C20.3302 6.78876 20.4608 7.01366 20.4723 7.25948V17.4111C20.4617 17.6265 20.3766 17.8259 20.2092 17.9619L18.5026 18.9508L17.6221 19.461L14.4748 21.285L11.283 23.1347C11.1111 23.1968 10.9101 23.1933 10.7397 23.124L6.96334 20.952L6.19191 22.2603L9.58559 24.2142C9.6978 24.278 9.79784 24.3345 9.87985 24.3807C10.0069 24.452 10.0935 24.4996 10.1241 24.5144C10.3653 24.6315 10.7123 24.6997 11.025 24.6997C11.3118 24.6997 11.5913 24.647 11.8559 24.5434L21.1266 19.1745C21.6587 18.7623 21.9717 18.1406 21.9999 17.467V7.20306Z" fill="#96BEDC"/>
  </svg>
`, og = `
<svg height="100%" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_1607_202)">
<mask id="mask0_1607_202" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="32" height="32">
<path d="M32 0H0V32H32V0Z" fill="white"/>
</mask>
<g mask="url(#mask0_1607_202)">
<path d="M16 32C19.1645 32 22.258 31.0616 24.8892 29.3036C27.5204 27.5454 29.571 25.0466 30.782 22.123C31.993 19.1993 32.31 15.9823 31.6926 12.8786C31.0752 9.77486 29.5514 6.92394 27.3138 4.6863C25.076 2.44866 22.2252 0.924806 19.1214 0.307442C16.0177 -0.30992 12.8007 0.0069325 9.87706 1.21793C6.95344 2.42894 4.45458 4.4797 2.69648 7.11088C0.938384 9.74206 0 12.8355 0 16C0 20.2434 1.68571 24.3132 4.6863 27.3138C7.68688 30.3142 11.7565 32 16 32Z" fill="#0052FF"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M15.9624 27.2676C22.1852 27.2676 27.23 22.223 27.23 16C27.23 9.7771 22.1852 4.73242 15.9624 4.73242C10.0588 4.73242 5.21566 9.2726 4.7341 15.0518H21.4546V16.928H4.73242C5.20432 22.7168 10.0519 27.2676 15.9624 27.2676Z" fill="white"/>
</g>
</g>
<defs>
<clipPath id="clip0_1607_202">
<rect width="32" height="32" fill="white"/>
</clipPath>
</defs>
</svg>
`, G4 = `
<svg width="100%" height="100%" viewBox="0 0 12 20" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M0 0L0.0100002 6L4 10L0.0100002 14.01L0 20H12V14L8 10L12 6.01V0H0ZM10 14.5V18H2V14.5L6 10.5L10 14.5Z" fill="#929BED"/>
</svg>
`, qc = `
  <svg width="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M11.07 12.85C11.84 11.46 13.32 10.64 14.18 9.41C15.09 8.12 14.58 5.71 12 5.71C10.31 5.71 9.48 6.99 9.13 8.05L6.54 6.96C7.25 4.83 9.18 3 11.99 3C14.34 3 15.95 4.07 16.77 5.41C17.47 6.56 17.88 8.71 16.8 10.31C15.6 12.08 14.45 12.62 13.83 13.76C13.58 14.22 13.48 14.52 13.48 16H10.59C10.58 15.22 10.46 13.95 11.07 12.85ZM14 20C14 21.1 13.1 22 12 22C10.9 22 10 21.1 10 20C10 18.9 10.9 18 12 18C13.1 18 14 18.9 14 20Z" fill="currentColor"/>
  </svg>
`, z4 = `
<svg width="14" height="11" viewBox="0 0 14 11" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M4.48076 8.10881L1.33076 4.95881L0.280762 6.00881L4.48076 10.2088L13.4808 1.20881L12.4308 0.158813L4.48076 8.10881Z" fill="#A4F4C6"/>
</svg>
`, V4 = `<svg width="16" height="13" viewBox="0 0 16 13" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0.666992 13.0002H15.3337L8.00033 0.333496L0.666992 13.0002ZM8.66699 11.0002H7.33366V9.66683H8.66699V11.0002ZM8.66699 8.3335H7.33366V5.66683H8.66699V8.3335Z" fill="#FFB3B3"/>
</svg>
`, nh = `
  <svg width="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM13 17H11V11H13V17ZM13 9H11V7H13V9Z" fill="currentColor"/>
  </svg>
`, Sb = `
  <svg width="100%" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M6.74999 12.15L3.59999 9L2.54999 10.05L6.74999 14.25L15.75 5.25L14.7 4.2L6.74999 12.15Z" fill="currentColor"/>
  </svg>
`, q4 = `
  <svg width="100%" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <path d="M6 2L6.01 8L10 12L6.01 16.01L6 22H18V16L14 12L18 8.01V2H6ZM16 16.5V20H8V16.5L12 12.5L16 16.5Z" fill="currenColor"/>
  </svg>
`, Q4 = `
<?xml version="1.0" encoding="UTF-8"?>
<svg id="Layer_1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 477 477">
  <defs>
    <style>.cls-1{fill:#a36dfe;}.cls-2{fill:#4b2895;}</style>
  </defs>
  <circle class="cls-1" cx="238.5" cy="238.5" r="238.5"/>
  <g>
    <path class="cls-2" d="M237.85,113.99c29.25,1.32,54.97,2.45,80.69,3.69,3.95,.19,7.92,.72,11.82,1.43,9.23,1.69,15.34,8.72,14.78,18.2-1.33,22.33-3.22,44.63-4.79,66.95-.81,11.47-1.49,22.96-2.12,34.44-.29,5.24-2.03,8.14-7.74,10.18-37.84,13.52-76.98,15.46-116.47,13.42-23.24-1.2-45.99-5.86-68.06-13.68-4.71-1.67-6.72-3.91-7.03-8.72-1.31-20.46-2.83-40.9-4.25-61.35-.94-13.55-2.1-27.1-2.7-40.66-.49-11.15,6.17-18.37,17.2-19.01,30.7-1.78,61.4-3.39,88.69-4.88Z"/><path class="cls-2" d="M238.34,363.01c-31.19-1.24-61.52-5.51-90.12-18.31-20.8-9.31-38.13-23.01-48.65-43.63-3.63-7.1-5.68-15.3-6.91-23.24-1.17-7.59,1.95-14.47,8.76-18.93,6.74-4.42,13.4-3.5,20.12,.38,14.24,8.24,14.6,8.18,14.39,24.44-.09,7.1,3.71,11.23,8.41,15.24,12.51,10.67,26.94,17.78,42.7,21.94,38.88,10.26,77.66,10.06,115.42-4.42,11.31-4.33,21.33-12.17,31.67-18.82,5.27-3.39,7.7-8.7,6.88-15.19-1.34-10.7,2.19-17.99,12.86-22.48,7.8-3.29,14.95-6.25,22.38-.72,7.42,5.53,9.4,13.33,7.88,22.37-4.05,24.14-19.06,40.5-38.25,53.68-18.5,12.7-39.59,19.06-61.42,22.61-15.24,2.48-30.72,3.44-46.1,5.09Z"/>
  </g>
</svg>
`, Z4 = `<svg width="178" height="177" viewBox="0 0 178 177" fill="none" xmlns="http://www.w3.org/2000/svg">
<circle cx="89.0198" cy="88.4095" r="88.305" fill="#06061B"/>
<path d="M68.0815 75.158C67.5149 74.5153 66.8174 74.1932 65.9874 74.1932H49.0126C48.8618 74.1932 48.7384 74.1459 48.6455 74.0512C48.5511 73.9581 48.5039 73.8528 48.5039 73.7398V62.3958C48.5039 62.2828 48.5511 62.179 48.6455 62.0844C48.7384 61.9897 48.8618 61.9424 49.0126 61.9424H66.9499C71.4761 61.9424 75.381 63.7773 78.6629 67.4442L83.0201 72.7185L74.5327 82.9848L68.0815 75.158ZM99.4299 67.3877C102.712 63.7575 106.635 61.9424 111.199 61.9424H129.08C129.231 61.9424 129.344 61.9805 129.42 62.0553C129.495 62.1317 129.533 62.2446 129.533 62.3958V73.7398C129.533 73.8528 129.495 73.9581 129.42 74.0512C129.344 74.1459 129.231 74.1932 129.08 74.1932H112.105C111.275 74.1932 110.578 74.5153 110.011 75.158L97.5064 90.2452L110.068 105.445C110.634 106.051 111.312 106.354 112.105 106.354H129.08C129.231 106.354 129.344 106.401 129.42 106.496C129.495 106.59 129.533 106.714 129.533 106.864V118.208C129.533 118.321 129.495 118.426 129.42 118.519C129.344 118.614 129.231 118.661 129.08 118.661H111.199C106.635 118.661 102.73 116.828 99.4863 113.159L89.0754 100.568L78.6629 113.159C75.381 116.828 71.4578 118.661 66.8936 118.661H49.0126C48.8618 118.661 48.7476 118.614 48.673 118.519C48.5968 118.424 48.5603 118.302 48.5603 118.15V106.806C48.5603 106.693 48.5968 106.589 48.673 106.494C48.7476 106.399 48.8618 106.352 49.0126 106.352H65.9874C66.7793 106.352 67.4768 106.032 68.0815 105.387L80.3595 90.5276L99.4299 67.3877Z" fill="#00D1FF"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M1.62306 101.122C1.02459 96.9706 0.714844 92.7262 0.714844 88.4095C0.714844 85.5803 0.84789 82.7823 1.10807 80.0212L11.5198 67.3877C14.8017 63.7575 18.7248 61.9424 23.2891 61.9424H41.1701C41.3209 61.9424 41.4336 61.9805 41.5097 62.0553C41.5844 62.1317 41.6224 62.2446 41.6224 62.3958V73.7398C41.6224 73.8528 41.5844 73.9581 41.5097 74.0512C41.4336 74.1459 41.3209 74.1932 41.1701 74.1932H24.1953C23.3653 74.1932 22.6678 74.5153 22.1012 75.158L9.59627 90.2452L22.1576 105.445C22.7241 106.051 23.4018 106.354 24.1953 106.354H41.1701C41.3209 106.354 41.4336 106.401 41.5097 106.496C41.5844 106.59 41.6224 106.714 41.6224 106.864V118.208C41.6224 118.321 41.5844 118.426 41.5097 118.519C41.4336 118.614 41.3209 118.661 41.1701 118.661H23.2891C18.7248 118.661 14.82 116.828 11.5761 113.159L1.62306 101.122Z" fill="#00D1FF"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M176.393 101.284C177.007 97.0816 177.325 92.7827 177.325 88.4095C177.325 85.5791 177.192 82.7799 176.931 80.0176L168.27 90.5276L155.992 105.387C155.387 106.032 154.689 106.352 153.898 106.352H136.923C136.772 106.352 136.658 106.399 136.583 106.494C136.507 106.589 136.47 106.693 136.47 106.806V118.15C136.47 118.302 136.507 118.424 136.583 118.519C136.658 118.614 136.772 118.661 136.923 118.661H154.804C159.368 118.661 163.291 116.828 166.573 113.159L176.393 101.284ZM153.898 74.1932C154.728 74.1932 155.425 74.5153 155.992 75.158L162.443 82.9848L170.93 72.7185L166.573 67.4442C163.291 63.7773 159.386 61.9424 154.86 61.9424H136.923C136.772 61.9424 136.649 61.9897 136.556 62.0844C136.461 62.179 136.414 62.2828 136.414 62.3958V73.7398C136.414 73.8528 136.461 73.9581 136.556 74.0512C136.649 74.1459 136.772 74.1932 136.923 74.1932H153.898Z" fill="#00D1FF"/>
</svg>`;
function J4() {
  if (typeof window < "u") {
    const t = e2.getParser(window.navigator.userAgent), e = t.getOS(), n = t.getBrowser(), { type: r } = t.getPlatform();
    return {
      type: r,
      os: e,
      browser: n
    };
  } else
    return {
      type: null,
      os: null,
      browser: null
    };
}
const K4 = (t) => t != null;
function Bp(t) {
  return t.includes("<svg");
}
function Rk(t) {
  return `${t.slice(0, 6)}…${t.slice(-4)}`;
}
function Bk(t) {
  return t.length > 11 ? `${t.slice(0, 4)}…${t.slice(-6)}` : t;
}
async function Lk(t) {
  try {
    return await navigator.clipboard.writeText(t);
  } catch (e) {
    console.error("Failed to copy: ", e);
  }
}
const Ob = (t) => typeof t == "number" ? `0x${t.toString(16)}` : t;
function Y4(t) {
  return t.map((e) => {
    var { id: n } = e, r = mf(e, ["id"]);
    const s = Ob(n);
    return Object.assign({ id: s }, r);
  });
}
function Mk(t) {
  return `0x${(t * 1e9).toString(16)}`;
}
const Dk = {
  "0x1": "Ethereum",
  "0xaa36a7": "Sepolia",
  "0x38": "Binance",
  "0x89": "Polygon",
  "0xfa": "Fantom",
  "0xa": "OP Mainnet",
  "0x45": "OP Kovan",
  "0xa86a": "Avalanche",
  "0xa4ec": "Celo",
  "0x2105": "Base",
  "0x14a33": "Base Goerli",
  "0x64": "Gnosis",
  "0x63564C40": "Harmony One",
  "0xa4b1": "Arbitrum One",
  "0xa4ba": "Arbitrum Nova",
  "0x27bc86aa": "Degen",
  "0x890": "SNAX"
};
function gf(t) {
  switch (t) {
    case "0x1":
    case "0x89":
    // Polygon
    case "0xa":
    //Optimism
    case "0xa4b1":
    // Arb
    case "0x144":
      return "0x1";
    case "0x5":
      return t;
    case "0xaa36a7":
      return t;
    default:
      return null;
  }
}
const X4 = async (t) => {
  switch (t) {
    case "0x89":
    case "0xa":
    case "0xa4b1":
    case "0x144":
    case "0x1": {
      const { mainnet: e } = await import("./index-40a497ea-Bn2mC0r7.js");
      return e;
    }
    case "0xaa36a7": {
      const { sepolia: e } = await import("./index-40a497ea-Bn2mC0r7.js");
      return e;
    }
    default:
      return null;
  }
}, $k = {
  main: "0x1",
  sepolia: "0xaa36a7",
  xdai: "0x64",
  "bsc-main": "0x38",
  "matic-main": "0x89",
  "fantom-main": "0xfa",
  "matic-mumbai": "0x80001",
  degen: "0x27bc86aa",
  SNAX: "0x890"
}, eA = {
  "0x1": {
    icon: ng,
    color: "#627EEA"
  },
  "0xaa36a7": {
    icon: ng,
    color: "#627EEA"
  },
  "0x38": {
    icon: $4,
    color: "#F3BA2F"
  },
  "0x89": {
    icon: rg,
    color: "#8247E5"
  },
  "0xfa": {
    icon: U4,
    color: "#1969FF"
  },
  "0xa": {
    icon: sg,
    color: "#FF0420"
  },
  "0x45": {
    icon: sg,
    color: "#FF0420"
  },
  "0xa86a": {
    icon: j4,
    color: "#E84142"
  },
  "0xa4ec": {
    icon: F4,
    color: "#FBCC5C"
  },
  "0x64": {
    icon: H4,
    color: "#04795B"
  },
  "0x63564C40": {
    icon: W4,
    color: "#ffffff"
  },
  "0xa4b1": {
    icon: ig,
    color: "#33394B"
  },
  "0xa4ba": {
    icon: ig,
    color: "#33394B"
  },
  "0x2105": {
    icon: og,
    color: "#0259F9"
  },
  "0x14a33": {
    icon: og,
    color: "#0259F9"
  },
  "0x80001": {
    icon: rg,
    color: "#8247E5"
  },
  "0x27bc86aa": {
    icon: Q4,
    color: "#a36dfe"
  },
  "0x890": {
    icon: Z4,
    color: "#00D1FF"
  }
}, Uk = { icon: qc, color: "#33394B" };
function jk(t) {
  return t ? eA[t.toLowerCase()] : void 0;
}
function Fk(t, e) {
  return !!e.find(({ id: n, namespace: r }) => n === t.id && r === t.namespace);
}
const Hk = {
  pending: {
    backgroundColor: "var(--onboard-primary-700, var(--primary-700))",
    borderColor: "#6370E5",
    eventIcon: G4
  },
  success: {
    backgroundColor: "#052E17",
    borderColor: "var(--onboard-success-300, var(--success-300))",
    eventIcon: z4
  },
  error: {
    backgroundColor: "#FDB1B11A",
    borderColor: "var(--onboard-danger-300, var(--danger-300))",
    eventIcon: V4
  },
  hint: {
    backgroundColor: "var(--onboard-gray-500, var(--gray-500))",
    borderColor: "var(--onboard-gray-500, var(--gray-500))",
    iconColor: "var(--onboard-gray-100, var(--gray-100))",
    eventIcon: nh
  }
}, tA = (t) => new Promise((e) => setTimeout(e, t));
function rh(t) {
  try {
    return localStorage.getItem(t);
  } catch {
    return null;
  }
}
function sh(t, e) {
  try {
    localStorage.setItem(t, e);
  } catch {
    return;
  }
}
function Tb(t) {
  try {
    localStorage.removeItem(t);
  } catch {
    return;
  }
}
let Tn = {
  svelteInstance: null,
  device: J4(),
  initialWalletInit: [],
  gas: void 0,
  containerElements: { accountCenter: void 0, connectModal: void 0 },
  unstoppableResolution: void 0,
  wagmi: void 0
};
function ag(t) {
  Tn = Object.assign(Object.assign({}, Tn), t);
}
const gi = {
  wallets: [],
  walletModules: [],
  chains: [],
  accountCenter: {
    enabled: !0,
    position: "bottomRight",
    expanded: !1,
    minimal: !0
  },
  notify: {
    enabled: !0,
    position: "topRight",
    replacement: {
      gasPriceProbability: {
        speedup: 80,
        cancel: 95
      }
    }
  },
  notifications: [],
  locale: "",
  connect: {
    showSidebar: !0,
    disableClose: !1
  },
  appMetadata: null,
  wagmiConfig: null
}, os = {
  TERMS_AGREEMENT: "onboard.js:agreement",
  LAST_CONNECTED_WALLET: "onboard.js:last_connected_wallet"
}, Ht = 768, Wk = "https://rpc.blocknative.com/boost", Gk = "https://docs.blocknative.com/blocknative-mev-protection/transaction-boost", Ib = "add_chains", Nb = "update_chains", Pb = "reset_store", Rb = "add_wallet", Bb = "update_wallet", Lb = "remove_wallet", Mb = "update_account", Db = "update_account_center", $b = "update_connect_modal", Ub = "set_wallet_modules", jb = "set_locale", Fb = "update_notify", Hb = "add_notification", Wb = "remove_notification", Gb = "update_balance", zb = "update_app_metadata", Vb = "update_wagmi_config";
function nA(t, e) {
  const { type: n, payload: r } = e;
  switch (n) {
    case Ib:
      return Object.assign(Object.assign({}, t), { chains: [...t.chains, ...r] });
    case Nb: {
      const s = r, i = t.chains, o = i.findIndex((a) => a.id === s.id);
      return i[o] = s, Object.assign(Object.assign({}, t), { chains: i });
    }
    case Rb: {
      const s = r, i = t.wallets.find(({ label: o }) => o === s.label);
      return Object.assign(Object.assign({}, t), { wallets: [
        // add to front of wallets as it is now the primary wallet
        i || r,
        // filter out wallet if it already existed
        ...t.wallets.filter(({ label: o }) => o !== s.label)
      ] });
    }
    case Bb: {
      const s = r, { id: i } = s, o = mf(s, ["id"]), a = t.wallets.map((c) => c.label === i ? Object.assign(Object.assign({}, c), o) : c);
      return Object.assign(Object.assign({}, t), { wallets: a });
    }
    case Lb: {
      const s = r;
      return Object.assign(Object.assign({}, t), { wallets: t.wallets.filter(({ label: i }) => i !== s.id) });
    }
    case Mb: {
      const s = r, { id: i, address: o } = s, a = mf(s, ["id", "address"]), c = t.wallets.map((u) => (u.label === i && (u.accounts = u.accounts.map((f) => f.address === o ? Object.assign(Object.assign({}, f), a) : f)), u));
      return Object.assign(Object.assign({}, t), { wallets: c });
    }
    case Gb: {
      const s = r;
      return Object.assign(Object.assign({}, t), { wallets: s });
    }
    case $b: {
      const s = r;
      return Object.assign(Object.assign({}, t), { connect: Object.assign(Object.assign({}, t.connect), s) });
    }
    case Db: {
      const s = r;
      return Object.assign(Object.assign({}, t), { accountCenter: Object.assign(Object.assign({}, t.accountCenter), s) });
    }
    case Fb: {
      const s = r;
      return Object.assign(Object.assign({}, t), { notify: Object.assign(Object.assign({}, t.notify), s) });
    }
    case Hb: {
      const s = r, i = [...t.notifications], o = i.findIndex(({ id: a }) => a === s.id);
      return o !== -1 ? i[o] = s : i.unshift(s), Object.assign(Object.assign({}, t), { notifications: i });
    }
    case Wb: {
      const s = r;
      return Object.assign(Object.assign({}, t), { notifications: t.notifications.filter((i) => i.id !== s) });
    }
    case Ub:
      return Object.assign(Object.assign({}, t), { walletModules: r });
    case jb:
      return Ko.set(r), Object.assign(Object.assign({}, t), { locale: r });
    case zb: {
      const s = r;
      return Object.assign(Object.assign({}, t), { appMetadata: Object.assign(Object.assign(Object.assign({}, t.appMetadata), s), { name: s.name || "" }) });
    }
    case Vb: {
      const s = r;
      return Object.assign(Object.assign({}, t), { wagmiConfig: s });
    }
    case Pb:
      return gi;
    default:
      throw new Error(`Unknown type: ${n} in appStore reducer`);
  }
}
const ih = new wu(gi), bf = new qs();
bf.subscribe(ih);
function hn(t) {
  const e = ih.getValue();
  bf.next(nA(e, t));
}
function rA(t) {
  if (!t)
    return bf.asObservable();
  if (!Object.keys(ih.getValue()).includes(String(t)))
    throw new Error(`key: ${t} does not exist on this store`);
  return bf.asObservable().pipe(Qv(t), yp(t), Cl(K4));
}
function sA() {
  return ih.getValue();
}
const Te = {
  select: rA,
  get: sA
};
function X() {
}
const xu = (t) => t;
function iA(t, e) {
  for (const n in e)
    t[n] = e[n];
  return t;
}
function oA(t) {
  return !!t && (typeof t == "object" || typeof t == "function") && typeof t.then == "function";
}
function qb(t) {
  return t();
}
function lg() {
  return /* @__PURE__ */ Object.create(null);
}
function us(t) {
  t.forEach(qb);
}
function Vi(t) {
  return typeof t == "function";
}
function Vt(t, e) {
  return t != t ? e == e : t !== e || t && typeof t == "object" || typeof t == "function";
}
let Ru;
function Rl(t, e) {
  return Ru || (Ru = document.createElement("a")), Ru.href = e, t === Ru.href;
}
function aA(t) {
  return Object.keys(t).length === 0;
}
function lA(t, ...e) {
  if (t == null)
    return X;
  const n = t.subscribe(...e);
  return n.unsubscribe ? () => n.unsubscribe() : n;
}
function Tt(t, e, n) {
  t.$$.on_destroy.push(lA(e, n));
}
function Lp(t, e, n, r) {
  if (t) {
    const s = Qb(t, e, n, r);
    return t[0](s);
  }
}
function Qb(t, e, n, r) {
  return t[1] && r ? iA(n.ctx.slice(), t[1](r(e))) : n.ctx;
}
function Mp(t, e, n, r) {
  if (t[2] && r) {
    const s = t[2](r(n));
    if (e.dirty === void 0)
      return s;
    if (typeof s == "object") {
      const i = [], o = Math.max(e.dirty.length, s.length);
      for (let a = 0; a < o; a += 1)
        i[a] = e.dirty[a] | s[a];
      return i;
    }
    return e.dirty | s;
  }
  return e.dirty;
}
function Dp(t, e, n, r, s, i) {
  if (s) {
    const o = Qb(e, n, r, i);
    t.p(o, s);
  }
}
function $p(t) {
  if (t.ctx.length > 32) {
    const e = [], n = t.ctx.length / 32;
    for (let r = 0; r < n; r++)
      e[r] = -1;
    return e;
  }
  return -1;
}
function cg(t) {
  return t ?? "";
}
function ug(t) {
  const e = typeof t == "string" && t.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);
  return e ? [parseFloat(e[1]), e[2] || "px"] : [t, "px"];
}
const Zb = typeof window < "u";
let oh = Zb ? () => window.performance.now() : () => Date.now(), Up = Zb ? (t) => requestAnimationFrame(t) : X;
const Na = /* @__PURE__ */ new Set();
function Jb(t) {
  Na.forEach((e) => {
    e.c(t) || (Na.delete(e), e.f());
  }), Na.size !== 0 && Up(Jb);
}
function ah(t) {
  let e;
  return Na.size === 0 && Up(Jb), {
    promise: new Promise((n) => {
      Na.add(e = { c: t, f: n });
    }),
    abort() {
      Na.delete(e);
    }
  };
}
function W(t, e) {
  t.appendChild(e);
}
function qt(t, e, n) {
  const r = jp(t);
  if (!r.getElementById(e)) {
    const s = Z("style");
    s.id = e, s.textContent = n, Kb(r, s);
  }
}
function jp(t) {
  if (!t)
    return document;
  const e = t.getRootNode ? t.getRootNode() : t.ownerDocument;
  return e && e.host ? e : t.ownerDocument;
}
function cA(t) {
  const e = Z("style");
  return Kb(jp(t), e), e.sheet;
}
function Kb(t, e) {
  return W(t.head || t, e), e.sheet;
}
function ie(t, e, n) {
  t.insertBefore(e, n || null);
}
function re(t) {
  t.parentNode && t.parentNode.removeChild(t);
}
function Yb(t, e) {
  for (let n = 0; n < t.length; n += 1)
    t[n] && t[n].d(e);
}
function Z(t) {
  return document.createElement(t);
}
function uA(t) {
  return document.createElementNS("http://www.w3.org/2000/svg", t);
}
function Ge(t) {
  return document.createTextNode(t);
}
function we() {
  return Ge(" ");
}
function bt() {
  return Ge("");
}
function Hn(t, e, n, r) {
  return t.addEventListener(e, n, r), () => t.removeEventListener(e, n, r);
}
function fA(t) {
  return function(e) {
    return e.stopPropagation(), t.call(this, e);
  };
}
function U(t, e, n) {
  n == null ? t.removeAttribute(e) : t.getAttribute(e) !== n && t.setAttribute(e, n);
}
function hA(t) {
  return Array.from(t.childNodes);
}
function it(t, e) {
  e = "" + e, t.data !== e && (t.data = e);
}
function ga(t, e, n, r) {
  n == null ? t.style.removeProperty(e) : t.style.setProperty(e, n, "");
}
function zk(t, e, n) {
  for (let r = 0; r < t.options.length; r += 1) {
    const s = t.options[r];
    if (s.__value === e) {
      s.selected = !0;
      return;
    }
  }
  t.selectedIndex = -1;
}
function ge(t, e, n) {
  t.classList[n ? "add" : "remove"](e);
}
function dA(t, e, { bubbles: n = !1, cancelable: r = !1 } = {}) {
  const s = document.createEvent("CustomEvent");
  return s.initCustomEvent(t, n, r, e), s;
}
class Gl {
  constructor(e = !1) {
    this.is_svg = !1, this.is_svg = e, this.e = this.n = null;
  }
  c(e) {
    this.h(e);
  }
  m(e, n, r = null) {
    this.e || (this.is_svg ? this.e = uA(n.nodeName) : this.e = Z(n.nodeType === 11 ? "TEMPLATE" : n.nodeName), this.t = n.tagName !== "TEMPLATE" ? n : n.content, this.c(e)), this.i(r);
  }
  h(e) {
    this.e.innerHTML = e, this.n = Array.from(this.e.nodeName === "TEMPLATE" ? this.e.content.childNodes : this.e.childNodes);
  }
  i(e) {
    for (let n = 0; n < this.n.length; n += 1)
      ie(this.t, this.n[n], e);
  }
  p(e) {
    this.d(), this.h(e), this.i(this.a);
  }
  d() {
    this.n.forEach(re);
  }
}
function cs(t, e) {
  return new t(e);
}
const yf = /* @__PURE__ */ new Map();
let wf = 0;
function pA(t) {
  let e = 5381, n = t.length;
  for (; n--; )
    e = (e << 5) - e ^ t.charCodeAt(n);
  return e >>> 0;
}
function mA(t, e) {
  const n = { stylesheet: cA(e), rules: {} };
  return yf.set(t, n), n;
}
function Qc(t, e, n, r, s, i, o, a = 0) {
  const c = 16.666 / r;
  let u = `{
`;
  for (let b = 0; b <= 1; b += c) {
    const g = e + (n - e) * i(b);
    u += b * 100 + `%{${o(g, 1 - g)}}
`;
  }
  const f = u + `100% {${o(n, 1 - n)}}
}`, l = `__svelte_${pA(f)}_${a}`, m = jp(t), { stylesheet: p, rules: d } = yf.get(m) || mA(m, t);
  d[l] || (d[l] = !0, p.insertRule(`@keyframes ${l} ${f}`, p.cssRules.length));
  const h = t.style.animation || "";
  return t.style.animation = `${h ? `${h}, ` : ""}${l} ${r}ms linear ${s}ms 1 both`, wf += 1, l;
}
function Zc(t, e) {
  const n = (t.style.animation || "").split(", "), r = n.filter(
    e ? (i) => i.indexOf(e) < 0 : (i) => i.indexOf("__svelte") === -1
    // remove all Svelte animations
  ), s = n.length - r.length;
  s && (t.style.animation = r.join(", "), wf -= s, wf || gA());
}
function gA() {
  Up(() => {
    wf || (yf.forEach((t) => {
      const { ownerNode: e } = t.stylesheet;
      e && re(e);
    }), yf.clear());
  });
}
function Vk(t, e, n, r) {
  if (!e)
    return X;
  const s = t.getBoundingClientRect();
  if (e.left === s.left && e.right === s.right && e.top === s.top && e.bottom === s.bottom)
    return X;
  const {
    delay: i = 0,
    duration: o = 300,
    easing: a = xu,
    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?
    start: c = oh() + i,
    // @ts-ignore todo:
    end: u = c + o,
    tick: f = X,
    css: l
  } = n(t, { from: e, to: s }, r);
  let m = !0, p = !1, d;
  function h() {
    l && (d = Qc(t, 0, 1, o, i, a, l)), i || (p = !0);
  }
  function b() {
    l && Zc(t, d), m = !1;
  }
  return ah((g) => {
    if (!p && g >= c && (p = !0), p && g >= u && (f(1, 0), b()), !m)
      return !1;
    if (p) {
      const y = g - c, w = 0 + 1 * a(y / o);
      f(w, 1 - w);
    }
    return !0;
  }), h(), f(0, 1), b;
}
function qk(t) {
  const e = getComputedStyle(t);
  if (e.position !== "absolute" && e.position !== "fixed") {
    const { width: n, height: r } = e, s = t.getBoundingClientRect();
    t.style.position = "absolute", t.style.width = n, t.style.height = r, bA(t, s);
  }
}
function bA(t, e) {
  const n = t.getBoundingClientRect();
  if (e.left !== n.left || e.top !== n.top) {
    const r = getComputedStyle(t), s = r.transform === "none" ? "" : r.transform;
    t.style.transform = `${s} translate(${e.left - n.left}px, ${e.top - n.top}px)`;
  }
}
let Jc;
function Fs(t) {
  Jc = t;
}
function Fp() {
  if (!Jc)
    throw new Error("Function called outside component initialization");
  return Jc;
}
function yA(t) {
  Fp().$$.on_mount.push(t);
}
function Xb(t) {
  Fp().$$.on_destroy.push(t);
}
function wA(t, e) {
  const n = t.$$.callbacks[e.type];
  n && n.slice().forEach((r) => r.call(this, e));
}
const ba = [], vf = [];
let Pa = [];
const Sd = [], vA = /* @__PURE__ */ Promise.resolve();
let Od = !1;
function _A() {
  Od || (Od = !0, vA.then(Hp));
}
function Ln(t) {
  Pa.push(t);
}
function AA(t) {
  Sd.push(t);
}
const Fh = /* @__PURE__ */ new Set();
let ua = 0;
function Hp() {
  if (ua !== 0)
    return;
  const t = Jc;
  do {
    try {
      for (; ua < ba.length; ) {
        const e = ba[ua];
        ua++, Fs(e), EA(e.$$);
      }
    } catch (e) {
      throw ba.length = 0, ua = 0, e;
    }
    for (Fs(null), ba.length = 0, ua = 0; vf.length; )
      vf.pop()();
    for (let e = 0; e < Pa.length; e += 1) {
      const n = Pa[e];
      Fh.has(n) || (Fh.add(n), n());
    }
    Pa.length = 0;
  } while (ba.length);
  for (; Sd.length; )
    Sd.pop()();
  Od = !1, Fh.clear(), Fs(t);
}
function EA(t) {
  if (t.fragment !== null) {
    t.update(), us(t.before_update);
    const e = t.dirty;
    t.dirty = [-1], t.fragment && t.fragment.p(t.ctx, e), t.after_update.forEach(Ln);
  }
}
function xA(t) {
  const e = [], n = [];
  Pa.forEach((r) => t.indexOf(r) === -1 ? e.push(r) : n.push(r)), n.forEach((r) => r()), Pa = e;
}
let Ac;
function Wp() {
  return Ac || (Ac = Promise.resolve(), Ac.then(() => {
    Ac = null;
  })), Ac;
}
function Fo(t, e, n) {
  t.dispatchEvent(dA(`${e ? "intro" : "outro"}${n}`));
}
const Zu = /* @__PURE__ */ new Set();
let ns;
function xt() {
  ns = {
    r: 0,
    c: [],
    p: ns
    // parent group
  };
}
function Ct() {
  ns.r || us(ns.c), ns = ns.p;
}
function J(t, e) {
  t && t.i && (Zu.delete(t), t.i(e));
}
function se(t, e, n, r) {
  if (t && t.o) {
    if (Zu.has(t))
      return;
    Zu.add(t), ns.c.push(() => {
      Zu.delete(t), r && (n && t.d(1), r());
    }), t.o(e);
  } else r && r();
}
const Gp = { duration: 0 };
function zp(t, e, n) {
  const r = { direction: "in" };
  let s = e(t, n, r), i = !1, o, a, c = 0;
  function u() {
    o && Zc(t, o);
  }
  function f() {
    const { delay: m = 0, duration: p = 300, easing: d = xu, tick: h = X, css: b } = s || Gp;
    b && (o = Qc(t, 0, 1, p, m, d, b, c++)), h(0, 1);
    const g = oh() + m, y = g + p;
    a && a.abort(), i = !0, Ln(() => Fo(t, !0, "start")), a = ah((w) => {
      if (i) {
        if (w >= y)
          return h(1, 0), Fo(t, !0, "end"), u(), i = !1;
        if (w >= g) {
          const _ = d((w - g) / p);
          h(_, 1 - _);
        }
      }
      return i;
    });
  }
  let l = !1;
  return {
    start() {
      l || (l = !0, Zc(t), Vi(s) ? (s = s(r), Wp().then(f)) : f());
    },
    invalidate() {
      l = !1;
    },
    end() {
      i && (u(), i = !1);
    }
  };
}
function Qk(t, e, n) {
  const r = { direction: "out" };
  let s = e(t, n, r), i = !0, o;
  const a = ns;
  a.r += 1;
  function c() {
    const { delay: u = 0, duration: f = 300, easing: l = xu, tick: m = X, css: p } = s || Gp;
    p && (o = Qc(t, 1, 0, f, u, l, p));
    const d = oh() + u, h = d + f;
    Ln(() => Fo(t, !1, "start")), ah((b) => {
      if (i) {
        if (b >= h)
          return m(0, 1), Fo(t, !1, "end"), --a.r || us(a.c), !1;
        if (b >= d) {
          const g = l((b - d) / f);
          m(1 - g, g);
        }
      }
      return i;
    });
  }
  return Vi(s) ? Wp().then(() => {
    s = s(r), c();
  }) : c(), {
    end(u) {
      u && s.tick && s.tick(1, 0), i && (o && Zc(t, o), i = !1);
    }
  };
}
function fg(t, e, n, r) {
  const s = { direction: "both" };
  let i = e(t, n, s), o = r ? 0 : 1, a = null, c = null, u = null;
  function f() {
    u && Zc(t, u);
  }
  function l(p, d) {
    const h = p.b - o;
    return d *= Math.abs(h), {
      a: o,
      b: p.b,
      d: h,
      duration: d,
      start: p.start,
      end: p.start + d,
      group: p.group
    };
  }
  function m(p) {
    const { delay: d = 0, duration: h = 300, easing: b = xu, tick: g = X, css: y } = i || Gp, w = {
      start: oh() + d,
      b: p
    };
    p || (w.group = ns, ns.r += 1), a || c ? c = w : (y && (f(), u = Qc(t, o, p, h, d, b, y)), p && g(0, 1), a = l(w, h), Ln(() => Fo(t, p, "start")), ah((_) => {
      if (c && _ > c.start && (a = l(c, h), c = null, Fo(t, a.b, "start"), y && (f(), u = Qc(t, o, a.b, a.duration, 0, b, i.css))), a) {
        if (_ >= a.end)
          g(o = a.b, 1 - o), Fo(t, a.b, "end"), c || (a.b ? f() : --a.group.r || us(a.group.c)), a = null;
        else if (_ >= a.start) {
          const E = _ - a.start;
          o = a.a + a.d * b(E / a.duration), g(o, 1 - o);
        }
      }
      return !!(a || c);
    }));
  }
  return {
    run(p) {
      Vi(i) ? Wp().then(() => {
        i = i(s), m(p);
      }) : m(p);
    },
    end() {
      f(), a = c = null;
    }
  };
}
function Wo(t, e) {
  const n = e.token = {};
  function r(s, i, o, a) {
    if (e.token !== n)
      return;
    e.resolved = a;
    let c = e.ctx;
    o !== void 0 && (c = c.slice(), c[o] = a);
    const u = s && (e.current = s)(c);
    let f = !1;
    e.block && (e.blocks ? e.blocks.forEach((l, m) => {
      m !== i && l && (xt(), se(l, 1, 1, () => {
        e.blocks[m] === l && (e.blocks[m] = null);
      }), Ct());
    }) : e.block.d(1), u.c(), J(u, 1), u.m(e.mount(), e.anchor), f = !0), e.block = u, e.blocks && (e.blocks[i] = u), f && Hp();
  }
  if (oA(t)) {
    const s = Fp();
    if (t.then((i) => {
      Fs(s), r(e.then, 1, e.value, i), Fs(null);
    }, (i) => {
      if (Fs(s), r(e.catch, 2, e.error, i), Fs(null), !e.hasCatch)
        throw i;
    }), e.current !== e.pending)
      return r(e.pending, 0), !0;
  } else {
    if (e.current !== e.then)
      return r(e.then, 1, e.value, t), !0;
    e.resolved = t;
  }
}
function zl(t, e, n) {
  const r = e.slice(), { resolved: s } = t;
  t.current === t.then && (r[t.value] = s), t.current === t.catch && (r[t.error] = s), t.block.p(r, n);
}
function Zk(t, e) {
  t.d(1), e.delete(t.key);
}
function CA(t, e) {
  se(t, 1, 1, () => {
    e.delete(t.key);
  });
}
function Jk(t, e) {
  t.f(), CA(t, e);
}
function Kk(t, e, n, r, s, i, o, a, c, u, f, l) {
  let m = t.length, p = i.length, d = m;
  const h = {};
  for (; d--; )
    h[t[d].key] = d;
  const b = [], g = /* @__PURE__ */ new Map(), y = /* @__PURE__ */ new Map(), w = [];
  for (d = p; d--; ) {
    const S = l(s, i, d), A = n(S);
    let x = o.get(A);
    x ? w.push(() => x.p(S, e)) : (x = u(A, S), x.c()), g.set(A, b[d] = x), A in h && y.set(A, Math.abs(d - h[A]));
  }
  const _ = /* @__PURE__ */ new Set(), E = /* @__PURE__ */ new Set();
  function k(S) {
    J(S, 1), S.m(a, f), o.set(S.key, S), f = S.first, p--;
  }
  for (; m && p; ) {
    const S = b[p - 1], A = t[m - 1], x = S.key, T = A.key;
    S === A ? (f = S.first, m--, p--) : g.has(T) ? !o.has(x) || _.has(x) ? k(S) : E.has(T) ? m-- : y.get(x) > y.get(T) ? (E.add(x), k(S)) : (_.add(T), m--) : (c(A, o), m--);
  }
  for (; m--; ) {
    const S = t[m];
    g.has(S.key) || c(S, o);
  }
  for (; p; )
    k(b[p - 1]);
  return us(w), b;
}
function kA(t, e, n) {
  const r = t.$$.props[e];
  r !== void 0 && (t.$$.bound[r] = n, n(t.$$.ctx[r]));
}
function ze(t) {
  t && t.c();
}
function Ue(t, e, n, r) {
  const { fragment: s, after_update: i } = t.$$;
  s && s.m(e, n), r || Ln(() => {
    const o = t.$$.on_mount.map(qb).filter(Vi);
    t.$$.on_destroy ? t.$$.on_destroy.push(...o) : us(o), t.$$.on_mount = [];
  }), i.forEach(Ln);
}
function je(t, e) {
  const n = t.$$;
  n.fragment !== null && (xA(n.after_update), us(n.on_destroy), n.fragment && n.fragment.d(e), n.on_destroy = n.fragment = null, n.ctx = []);
}
function SA(t, e) {
  t.$$.dirty[0] === -1 && (ba.push(t), _A(), t.$$.dirty.fill(0)), t.$$.dirty[e / 31 | 0] |= 1 << e % 31;
}
function Qt(t, e, n, r, s, i, o, a = [-1]) {
  const c = Jc;
  Fs(t);
  const u = t.$$ = {
    fragment: null,
    ctx: [],
    // state
    props: i,
    update: X,
    not_equal: s,
    bound: lg(),
    // lifecycle
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(e.context || (c ? c.$$.context : [])),
    // everything else
    callbacks: lg(),
    dirty: a,
    skip_bound: !1,
    root: e.target || c.$$.root
  };
  o && o(u.root);
  let f = !1;
  if (u.ctx = n ? n(t, e.props || {}, (l, m, ...p) => {
    const d = p.length ? p[0] : m;
    return u.ctx && s(u.ctx[l], u.ctx[l] = d) && (!u.skip_bound && u.bound[l] && u.bound[l](d), f && SA(t, l)), m;
  }) : [], u.update(), f = !0, us(u.before_update), u.fragment = r ? r(u.ctx) : !1, e.target) {
    if (e.hydrate) {
      const l = hA(e.target);
      u.fragment && u.fragment.l(l), l.forEach(re);
    } else
      u.fragment && u.fragment.c();
    e.intro && J(t.$$.fragment), Ue(t, e.target, e.anchor, e.customElement), Hp();
  }
  Fs(c);
}
class Zt {
  $destroy() {
    je(this, 1), this.$destroy = X;
  }
  $on(e, n) {
    if (!Vi(n))
      return X;
    const r = this.$$.callbacks[e] || (this.$$.callbacks[e] = []);
    return r.push(n), () => {
      const s = r.indexOf(n);
      s !== -1 && r.splice(s, 1);
    };
  }
  $set(e) {
    this.$$set && !aA(e) && (this.$$.skip_bound = !0, this.$$set(e), this.$$.skip_bound = !1);
  }
}
const Vp = new qs(), qp = new qs(), Nr = new wu({ inProgress: !1, actionRequired: "" }), Bl = new wu(null), Qp = Te.select("wallets").pipe(ls(1));
Vp.pipe(S1(Qp), yp("1")).subscribe((t) => {
  t.forEach(({ label: e }) => {
    qp.next(e);
  }), y6();
});
const hg = new wu([]);
function Yk(t) {
  const e = hg.getValue();
  hg.next(e.filter((n) => n.hash !== t));
}
const dg = jv(() => {
  const t = new qs();
  return Xb(() => {
    t.next();
  }), t.asObservable().pipe(bp(1));
}), _a = {
  default: {
    "--w3o-background-color": "unset",
    "--w3o-foreground-color": "unset",
    "--w3o-text-color": "unset",
    "--w3o-border-color": "unset",
    "--w3o-action-color": "unset",
    "--w3o-border-radius": "unset",
    "--w3o-font-family": "inherit"
  },
  light: {
    "--w3o-background-color": "#ffffff",
    "--w3o-foreground-color": "#EFF1FC",
    "--w3o-text-color": "#1a1d26",
    "--w3o-border-color": "#d0d4f7",
    "--w3o-action-color": "#6370E5",
    "--w3o-border-radius": "16px",
    "--w3o-font-family": "inherit"
  },
  dark: {
    "--w3o-background-color": "#1A1D26",
    "--w3o-foreground-color": "#242835",
    "--w3o-text-color": "#EFF1FC",
    "--w3o-border-color": "#33394B",
    "--w3o-action-color": "#929bed",
    "--w3o-border-radius": "16px",
    "--w3o-font-family": "inherit"
  }
}, OA = (t) => typeof t == "string" && t === "system" ? IA() : TA(t), TA = (t) => {
  if (typeof t == "string" && t in _a)
    return _a[t];
  if (typeof t == "object")
    return t;
}, Ic = (t) => {
  Object.keys(t).forEach((e) => {
    document.documentElement.style.setProperty(e, t[e] || null);
  });
}, IA = () => {
  const t = window.matchMedia("(prefers-color-scheme: dark)");
  t.matches ? Ic(_a.dark) : Ic(_a.light), hd(t, "change").pipe(Gc(Vp)).subscribe((e) => {
    e.matches ? Ic(_a.dark) : Ic(_a.light);
  });
}, Hh = B.object().unknown(), NA = B.object({
  namespace: Rp.required(),
  id: Pp.required()
}), PA = B.any().allow(B.object({
  name: B.string().required(),
  avatar: B.string(),
  contentHash: B.any().allow(B.string(), null),
  getText: B.function().arity(1).required()
}), null), RA = B.any().allow(B.object({
  name: B.string().required()
}), null), BA = B.any().allow(B.object({
  eth: B.number()
}).unknown(), null), LA = B.any().allow(B.object({
  balance: B.string().required(),
  icon: B.string()
}), null), MA = B.object({
  address: B.string().required(),
  ens: PA,
  uns: RA,
  balance: BA,
  secondaryTokens: LA
}), DA = B.array().items(S4).unique((t, e) => t.id === e.id).error((t) => t[0].code === "array.unique" ? new Error(`There is a duplicate Chain ID in your Onboard Chains array: ${t}`) : new Error(`${t}`)), $A = B.array().items(MA), ey = B.object({
  label: B.string(),
  icon: B.string(),
  provider: Hh,
  instance: Hh,
  accounts: $A,
  chains: B.array().items(NA),
  wagmiConnector: Hh
}).required().error(new Error("wallet must be defined")), UA = B.array().items(ey), ty = B.object({
  name: B.string().required(),
  url: B.string().uri().required()
}), ny = B.object({
  version: B.string().required(),
  termsUrl: B.string().uri(),
  privacyUrl: B.string().uri()
}), jA = B.object({
  name: B.string().required(),
  description: B.string().required(),
  icon: B.string(),
  logo: B.string(),
  gettingStartedGuide: B.string(),
  email: B.string(),
  appUrl: B.string(),
  explore: B.string(),
  recommendedInjectedWallets: B.array().items(ty),
  agreement: ny
}), FA = B.object({
  name: B.string(),
  description: B.string(),
  icon: B.string(),
  logo: B.string(),
  gettingStartedGuide: B.string(),
  email: B.string(),
  appUrl: B.string(),
  explore: B.string(),
  recommendedInjectedWallets: B.array().items(ty),
  agreement: ny
});
B.object({
  label: B.string().required(),
  getInfo: B.function().arity(1).required(),
  getInterface: B.function().arity(1).required()
});
const ry = B.array().items(B.function()).required(), HA = B.string(), Zp = B.string().valid("topRight", "bottomRight", "bottomLeft", "topLeft"), pg = [70, 80, 90, 95, 99], _f = B.object({
  transactionHandler: B.function().optional(),
  enabled: B.boolean(),
  position: Zp,
  replacement: B.object({
    gasPriceProbability: B.object({
      speedup: B.number().valid(...pg),
      cancel: B.number().valid(...pg)
    })
  })
}), sy = B.object({
  desktop: _f,
  mobile: _f
}), mg = B.object({
  enabled: B.boolean(),
  position: Zp,
  minimal: B.boolean(),
  containerElement: B.string(),
  hideTransactionProtectionBtn: B.boolean(),
  transactionProtectionInfoLink: B.string()
}), WA = B.object({
  enabled: B.boolean(),
  position: Zp,
  expanded: B.boolean(),
  minimal: B.boolean(),
  hideTransactionProtectionBtn: B.boolean(),
  transactionProtectionInfoLink: B.string(),
  containerElement: B.string()
}), iy = B.object({
  showSidebar: B.boolean(),
  disableClose: B.boolean(),
  autoConnectLastWallet: B.boolean(),
  autoConnectAllPreviousWallet: B.boolean(),
  iDontHaveAWalletLink: B.string(),
  wheresMyWalletLink: B.string(),
  removeWhereIsMyWalletWarning: B.boolean(),
  removeIDontHaveAWalletInfoLink: B.boolean(),
  disableUDResolution: B.boolean()
}), GA = B.object({
  accountCenter: B.string(),
  connectModal: B.string()
}), zA = B.object({
  "--w3o-background-color": B.string(),
  "--w3o-font-family": B.string(),
  "--w3o-foreground-color": B.string(),
  "--w3o-text-color": B.string(),
  "--w3o-border-color": B.string(),
  "--w3o-action-color": B.string(),
  "--w3o-border-radius": B.string()
}), VA = B.string().valid("default", "dark", "light", "system"), oy = B.alternatives().try(zA, VA), qA = B.object({
  wallets: ry,
  chains: DA.required(),
  appMetadata: jA,
  i18n: B.object().unknown(),
  apiKey: B.string(),
  accountCenter: B.object({
    desktop: mg,
    mobile: mg,
    hideTransactionProtectionBtn: B.boolean(),
    transactionProtectionInfoLink: B.string()
  }),
  notify: [sy, _f],
  gas: B.object({
    get: B.function().required(),
    stream: B.function().required()
  }),
  wagmi: B.function(),
  connect: iy,
  containerElements: GA,
  // transactionPreview is deprecated but is still allowed to 
  // avoid breaking dapps a console error is shown although 
  // transactionPreview functionality has been removed
  transactionPreview: B.any(),
  theme: oy,
  disableFontDownload: B.boolean(),
  unstoppableResolution: B.function()
}), QA = B.object({
  autoSelect: B.alternatives().try(B.object({
    label: B.string().required(),
    disableModals: B.boolean()
  }), B.string())
}), ZA = B.object({
  label: B.string().required()
}).required(), JA = B.object({
  address: B.string().required(),
  icon: B.string().optional()
}), KA = B.object({
  chainId: Pp.required(),
  chainNamespace: Rp,
  wallet: B.string(),
  rpcUrl: B.string(),
  label: B.string(),
  token: B.string(),
  protectedRpcUrl: B.string(),
  secondaryTokens: B.array().max(5).items(JA).optional()
}), YA = B.object({
  key: B.string().required(),
  type: B.string().allow("pending", "error", "success", "hint"),
  eventCode: B.string(),
  message: B.string().required(),
  id: B.string().required(),
  autoDismiss: B.number(),
  onClick: B.function(),
  link: B.string()
});
B.object({
  sendTransaction: B.function(),
  estimateGas: B.function(),
  gasPrice: B.function(),
  balance: B.alternatives(B.string(), B.number()),
  txDetails: B.object({
    value: B.alternatives(B.string(), B.number()),
    to: B.string(),
    from: B.string()
  }),
  txApproveReminderTimeout: B.number()
});
const XA = B.object({
  key: B.string(),
  type: B.string().allow("pending", "error", "success", "hint"),
  eventCode: B.string(),
  message: B.string(),
  id: B.string(),
  autoDismiss: B.number(),
  onClick: B.function(),
  link: B.string()
});
B.object({
  id: B.string().required(),
  key: B.string().required(),
  type: B.string().allow("pending", "error", "success", "hint").required(),
  eventCode: B.string().required(),
  message: B.string().required(),
  autoDismiss: B.number().required(),
  network: B.string().required(),
  startTime: B.number(),
  onClick: B.function(),
  link: B.string()
});
function Jp(t) {
  return on(ey, t);
}
function e6(t) {
  return on(qA, t);
}
function t6(t) {
  return on(QA, t);
}
function n6(t) {
  return on(ZA, t);
}
function ay(t, e) {
  return on(B.string().required().label(e || "value"), t);
}
function ly(t) {
  return on(KA, t);
}
function r6(t) {
  return on(WA, t);
}
function s6(t) {
  return on(iy, t);
}
function i6(t) {
  return on(ry, t);
}
function o6(t) {
  return on(HA, t);
}
function cy(t) {
  return on(_f, t);
}
function a6(t) {
  return on(sy, t);
}
function l6(t) {
  return on(YA, t);
}
function gg(t) {
  return on(XA, t);
}
function c6(t) {
  return on(UA, t);
}
function u6(t) {
  return on(oy, t);
}
function f6(t) {
  return on(FA, t);
}
function h6(t) {
  const e = {
    type: Ib,
    payload: t.map((n) => {
      var { namespace: r = "evm", id: s, rpcUrl: i } = n, o = mf(n, ["namespace", "id", "rpcUrl"]);
      return Object.assign(Object.assign({}, o), { namespace: r, id: s.toLowerCase(), rpcUrl: i ? i.trim() : null });
    })
  };
  hn(e);
}
function uy(t) {
  const { label: e, token: n, rpcUrl: r, id: s, namespace: i } = t, o = ly({
    label: e,
    token: n,
    rpcUrl: r,
    chainId: s,
    chainNamespace: i
  });
  if (o)
    throw o;
  hn({
    type: Nb,
    payload: t
  });
}
function Td(t) {
  const e = Jp(t);
  if (e)
    throw console.error(e), e;
  hn({
    type: Rb,
    payload: t
  });
}
function $c(t, e) {
  const n = Jp(e);
  if (n)
    throw console.error(n), n;
  const r = {
    type: Bb,
    payload: Object.assign({ id: t }, e)
  };
  hn(r);
}
function d6(t) {
  const e = ay(t, "wallet id");
  if (e)
    throw e;
  hn({
    type: Lb,
    payload: {
      id: t
    }
  });
}
function p6(t, e) {
  const n = Jp(t) || e && ay(e, "address");
  if (n)
    throw n;
  if (e) {
    const r = t.accounts.find((s) => s.address === e);
    r && (t.accounts = [
      r,
      ...t.accounts.filter(({ address: s }) => s !== r.address)
    ]);
  }
  E6(t), Td(t);
}
function Nc(t, e, n) {
  const r = {
    type: Mb,
    payload: Object.assign({
      id: t,
      address: e
    }, n)
  };
  hn(r);
}
function fy(t) {
  const e = r6(t);
  if (e)
    throw e;
  hn({
    type: Db,
    payload: t
  });
}
function m6(t) {
  const e = s6(t);
  if (e)
    throw e;
  hn({
    type: $b,
    payload: t
  });
}
function Ju(t) {
  const e = cy(t);
  if (e)
    throw e;
  hn({
    type: Fb,
    payload: t
  });
}
function Wh(t) {
  const e = l6(t);
  if (e)
    throw e;
  hn({
    type: Hb,
    payload: t
  });
}
function g6(t) {
  const e = gg(t);
  if (e)
    throw e;
  const n = `customNotification-${D3()}`, r = Object.assign(Object.assign({}, t), { id: n, key: n });
  Wh(r);
  const s = () => {
    r.id && b6(r.id);
  }, i = (o) => {
    const a = gg(t);
    if (a)
      throw a;
    const c = Object.assign(Object.assign({}, o), { id: r.id, key: r.key });
    return Wh(c), {
      dismiss: s,
      update: i
    };
  };
  return Wh(r), {
    dismiss: s,
    update: i
  };
}
function b6(t) {
  if (typeof t != "string")
    throw new Error("Notification id must be of type string");
  hn({
    type: Wb,
    payload: t
  });
}
function y6() {
  hn({
    type: Pb
  });
}
function hy(t) {
  const e = i6(t);
  if (e)
    throw e;
  const n = _6(t), r = A6(n);
  hn({
    type: Ub,
    payload: r
  });
}
function w6(t) {
  const e = o6(t);
  if (e)
    throw e;
  hn({
    type: jb,
    payload: t
  });
}
function v6(t) {
  const e = c6(t);
  if (e)
    throw e;
  hn({
    type: Gb,
    payload: t
  });
}
function _6(t) {
  const { device: e } = Tn;
  return e ? t.reduce((n, r) => {
    const s = r({ device: e });
    return s && n.push(...Array.isArray(s) ? s : [s]), n;
  }, []) : [];
}
function A6(t) {
  return t.filter((e, n) => e && t.findIndex((r) => r && r.label === e.label) === n);
}
function dy(t) {
  const e = u6(t);
  if (e)
    throw e;
  const n = OA(t);
  n && Ic(n);
}
function py(t) {
  const e = f6(t);
  if (e)
    throw e;
  hn({
    type: zb,
    payload: t
  });
}
function my(t) {
  hn({
    type: Vb,
    payload: t
  });
}
function E6(t) {
  const { wagmi: e } = Tn;
  if (e)
    try {
      const { label: n } = t, { wagmiConnect: r, getWagmiConnector: s } = e, i = Te.get().wagmiConfig, o = s(n);
      r(i, { connector: o }).then(() => {
        $c(n, { wagmiConnector: o });
      });
    } catch (n) {
      console.error(`Error updating Wagmi connector on primary wallet switch ${n}`);
    }
}
async function x6(t) {
  if (t) {
    const s = t6(t);
    if (s)
      throw s;
  }
  const { chains: e } = Te.get();
  if (!e.length)
    throw new Error("At least one chain must be set before attempting to connect a wallet");
  let { autoSelect: n } = t || {};
  n || (n = { label: "", disableModals: !1 }), n && (typeof n == "string" || n.label) && await tA(50), Te.get().walletModules.length || hy(Tn.initialWalletInit), Nr.next({
    autoSelect: typeof n == "string" ? { label: n, disableModals: !1 } : n,
    inProgress: !0
  });
  const r = Nr.pipe(Cl(({ inProgress: s, actionRequired: i }) => s === !1 && !i), S1(Qp), yp(1));
  return Wc(r);
}
async function Kp(t) {
  const e = n6(t);
  if (e)
    throw e;
  const { label: n } = t, { wagmi: r } = Tn;
  if (r) {
    const i = await r.wagmiDisconnectWallet(n);
    i && my(i);
  }
  qp.next(n), d6(n);
  const s = rh(os.LAST_CONNECTED_WALLET);
  if (s)
    try {
      const i = JSON.parse(s);
      Array.isArray(i) && i.indexOf(n) >= 0 && sh(os.LAST_CONNECTED_WALLET, JSON.stringify(i.filter((o) => o !== n))), typeof i == "string" && i === n && Tb(os.LAST_CONNECTED_WALLET);
    } catch (i) {
      console.error(`There was an error disconnecting the last connected wallet from localStorage - Error: ${i}`);
    }
  return Te.get().wallets;
}
async function C6(t) {
  const { wallets: e, chains: n } = Te.get(), r = await Promise.all(e.map(async (s) => {
    const i = n.find(({ id: a }) => a === s.chains[0].id);
    if (!i)
      return;
    const o = await Promise.all(s.accounts.map(async (a) => {
      const c = await Af(a.address, i);
      if (!t || t.some((u) => u.toLowerCase() === a.address.toLowerCase())) {
        const u = await Ef(a.address, i);
        return Object.assign(Object.assign({}, a), { balance: u, secondaryTokens: c });
      }
      return Object.assign(Object.assign({}, a), { secondaryTokens: c });
    }));
    return Object.assign(Object.assign({}, s), { accounts: o });
  }));
  v6(r);
}
const Af = async (t, e) => {
  if (!e)
    return [];
  const n = e.rpcUrl;
  return !e.secondaryTokens || !e.secondaryTokens.length || !n ? [] : await Promise.all(e.secondaryTokens.map(async (s) => {
    try {
      const { createPublicClient: i, http: o } = await import("./index-uMELSyQt.js"), a = await C4(e), c = i({
        chain: a,
        transport: o(e.providerConnectionInfo && e.providerConnectionInfo.url ? e.providerConnectionInfo.url : n)
      }), u = {
        abi: [
          {
            inputs: [{ name: "owner", type: "address" }],
            name: "balanceOf",
            outputs: [{ name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function"
          },
          {
            inputs: [],
            name: "symbol",
            outputs: [{ name: "", type: "string" }],
            stateMutability: "view",
            type: "function"
          }
        ],
        address: s.address
      }, f = c.readContract(Object.assign(Object.assign({}, u), { functionName: "balanceOf", args: [t] })) || "", l = c.readContract(Object.assign(Object.assign({}, u), { functionName: "symbol", args: [] })) || "", [m, p] = await Promise.all([
        f,
        l
      ]);
      return {
        name: p,
        balance: E4(m.toString()),
        icon: s.icon
      };
    } catch (i) {
      console.error(`There was an error fetching balance and/or symbol 
          for token contract: ${s.address} - ${i}`);
    }
  }));
}, Gh = {};
async function k6(t) {
  if (!t)
    return null;
  if (!Gh[t.rpcUrl]) {
    const e = await X4(t.id);
    if (!e)
      return null;
    const { createPublicClient: n, http: r } = await import("./index-uMELSyQt.js"), s = n({
      chain: e,
      transport: r()
    });
    Gh[t.rpcUrl] = s;
  }
  return Gh[t.rpcUrl];
}
function gy(t) {
  const e = { method: "eth_requestAccounts" };
  return t.request(e);
}
function Xk(t) {
  const e = { method: "eth_selectAccounts" };
  return t.request(e);
}
function by(t) {
  return t.request({ method: "eth_chainId" });
}
function yy(t) {
  const { provider: e, disconnected$: n } = t;
  return C1((i) => {
    e.on("accountsChanged", i);
  }, (i) => {
    e.removeListener("accountsChanged", i);
  }).pipe(Gc(n));
}
function S6(t) {
  const { provider: e, disconnected$: n } = t;
  return C1((i) => {
    e.on("chainChanged", i);
  }, (i) => {
    e.removeListener("chainChanged", i);
  }).pipe(Gc(n));
}
function O6(t, e) {
  const n = qp.pipe(Cl((i) => i === e), bp(1)), r = yy({
    provider: t,
    disconnected$: n
  }).pipe(dd());
  r.subscribe(async ([i]) => {
    try {
      await I6(e);
    } catch (l) {
      console.warn("Web3Onboard: Error whilst trying to sync connected accounts:", l);
    }
    if (!i) {
      Kp({ label: e });
      return;
    }
    const { wallets: o } = Te.get(), a = o.find((l) => l.label === e), c = a ? a.accounts : [], [[u], f] = I4(c, (l) => l.address === i);
    $c(e, {
      accounts: [
        u || {
          address: i,
          ens: null,
          uns: null,
          balance: null
        },
        ...f
      ]
    });
  }), r.pipe(xm(async ([i]) => {
    if (!i)
      return;
    const { wallets: o, chains: a } = Te.get(), c = o.find((w) => w.label === e);
    if (!c)
      return;
    const { chains: u, accounts: f } = c, [l] = u, m = a.find(({ namespace: w, id: _ }) => w === "evm" && _ === l.id);
    if (!m)
      return;
    const p = Ef(i, m), d = Af(i, m), h = f.find((w) => w.address === i), b = a.find(({ id: w }) => w === gf(l.id)), g = h && h.ens ? Promise.resolve(h.ens) : b ? Id(i, b) : Promise.resolve(null), y = h && h.uns ? Promise.resolve(h.uns) : b ? Nd(i, b) : Promise.resolve(null);
    return Promise.all([
      Promise.resolve(i),
      p,
      g,
      y,
      d
    ]);
  })).subscribe((i) => {
    if (!i)
      return;
    const [o, a, c, u, f] = i;
    Nc(e, o, { balance: a, ens: c, uns: u, secondaryTokens: f });
  });
  const s = S6({ provider: t, disconnected$: n }).pipe(dd());
  s.subscribe(async (i) => {
    const { wallets: o } = Te.get(), a = o.find((m) => m.label === e);
    if (!a)
      return;
    const { chains: c, accounts: u } = a, [f] = c;
    if (df(i) || (i = Wm(i)), i === f.id)
      return;
    const l = u.map(({ address: m }) => ({
      address: m,
      ens: null,
      uns: null,
      balance: null
    }));
    $c(e, {
      chains: [{ namespace: "evm", id: i }],
      accounts: l
    });
  }), s.pipe(xm(async (i) => {
    const { wallets: o, chains: a } = Te.get(), c = o.find((l) => l.label === e), u = (c == null ? void 0 : c.accounts) || [];
    df(i) || (i = Wm(i));
    const f = a.find(({ namespace: l, id: m }) => l === "evm" && m === i);
    return f ? Promise.all(u.map(async ({ address: l }) => {
      const m = Ef(l, f), p = Af(l, f), d = a.find(({ id: E }) => E === gf(i)), h = d ? Id(l, d) : Promise.resolve(null), b = d ? Nd(l, d) : Promise.resolve(null), [g, y, w, _] = await Promise.all([
        m,
        h,
        b,
        p
      ]);
      return {
        address: l,
        balance: g,
        ens: y,
        uns: w,
        secondaryTokens: _
      };
    })) : Promise.resolve(null);
  })).subscribe((i) => {
    i && $c(e, { accounts: i });
  }), n.subscribe(() => {
    t.disconnect && t.disconnect();
  });
}
async function Id(t, e) {
  if (!e)
    return null;
  const n = await k6(e);
  if (!n)
    return null;
  try {
    const r = await n.getEnsName({
      address: t
    });
    let s = null;
    if (r) {
      const { labelhash: i, normalize: o } = await import("./index-021f6a62-C5QpSv3X.js").then(function(m) {
        return m.i;
      }), a = o(r), c = await n.getEnsResolver({
        name: a
      }), u = await n.getEnsAvatar({
        name: a
      }), f = i(a);
      s = {
        name: r,
        avatar: u,
        contentHash: f,
        ensResolver: c,
        getText: async (m) => await n.getEnsText({
          name: r,
          key: m
        })
      };
    }
    return s;
  } catch (r) {
    return console.error(r), null;
  }
}
async function Nd(t, e) {
  const { unstoppableResolution: n } = Tn;
  if (!n || !Cb() || !e)
    return null;
  try {
    return await n(t);
  } catch (r) {
    return console.error(r), null;
  }
}
async function Ef(t, e) {
  if (!e)
    return null;
  const { wallets: n } = Te.get();
  try {
    const r = n.find((o) => !!o.provider);
    if (!r)
      return null;
    const i = await r.provider.request({
      method: "eth_getBalance",
      params: [t, "latest"]
    });
    return i ? { [e.token || "eth"]: A4(i) } : null;
  } catch (r) {
    return console.error(r), null;
  }
}
function lh(t, e) {
  return t.request({
    method: "wallet_switchEthereumChain",
    params: [{ chainId: e }]
  });
}
function wy(t, e) {
  return t.request({
    method: "wallet_addEthereumChain",
    params: [
      {
        chainId: e.id,
        chainName: e.label,
        nativeCurrency: {
          name: e.label,
          symbol: e.token,
          decimals: 18
        },
        rpcUrls: [e.publicRpcUrl || e.rpcUrl],
        blockExplorerUrls: e.blockExplorerUrl ? [e.blockExplorerUrl] : null
      }
    ]
  });
}
function eS(t, e, n) {
  return t.request({
    method: "wallet_addEthereumChain",
    params: [
      {
        chainId: e.id,
        chainName: e.label,
        nativeCurrency: {
          name: e.label,
          symbol: e.token,
          decimals: 18
        },
        rpcUrls: [n],
        blockExplorerUrls: e.blockExplorerUrl ? [e.blockExplorerUrl] : void 0
      }
    ]
  });
}
async function T6(t) {
  try {
    const e = await t.request({
      method: "wallet_getPermissions"
    });
    return Array.isArray(e) ? e : [];
  } catch {
    return [];
  }
}
async function I6(t) {
  const e = Te.get().wallets.find((s) => s.label === t);
  if (!e)
    return;
  const r = (await T6(e.provider)).find(({ parentCapability: s }) => s === "eth_accounts");
  if (r) {
    const { value: s } = r.caveats.find(({ type: i }) => i === "restrictReturnedAccounts") || { value: null };
    if (s) {
      const i = e.accounts.filter(({ address: o }) => s.includes(o));
      $c(e.label, Object.assign(Object.assign({}, e), { accounts: i }));
    }
  }
}
const N6 = async (t, e) => {
  try {
    const { id: n } = e;
    return await wy(t, e), await lh(t, n), n;
  } catch {
    return;
  }
}, P6 = () => ({
  addOrSwitchChain: N6,
  getChainId: by,
  requestAccounts: gy,
  switchChain: lh
});
async function R6(t) {
  const e = ly(t);
  if (e)
    throw e;
  const { wallets: n, chains: r } = Te.get(), { chainId: s, chainNamespace: i = "evm", wallet: o, rpcUrl: a, label: c, token: u } = t, f = Ob(s), l = r.find(({ namespace: d, id: h }) => d === i && h.toLowerCase() === f.toLowerCase());
  if (!l)
    throw new Error(`Chain with chainId: ${s} and chainNamespace: ${i} has not been set and must be added when Onboard is initialized.`);
  const m = o ? n.find(({ label: d }) => d === o) : n[0];
  if (!m)
    throw new Error(o ? `Wallet with label ${o} is not connected` : "A wallet must be connected before a chain can be set");
  const [p] = m.chains;
  if (p.namespace === i && p.id === f)
    return !0;
  try {
    return await lh(m.provider, f), !0;
  } catch (d) {
    const { code: h } = d, b = Bl.pipe(Cl((g) => g === null), vu(() => !1));
    if (h === Mi.CHAIN_NOT_ADDED || h === Mi.UNRECOGNIZED_CHAIN_ID)
      return (a || c || u) && (a && (l.rpcUrl = a), c && (l.label = c), u && (l.token = u), uy(l)), B6(m, l, b, f);
    if (h === Mi.UNSUPPORTED_METHOD)
      return Bl.next({ chain: l }), Wc(b);
  }
  return !1;
}
const B6 = async (t, e, n, r) => {
  try {
    return await wy(t.provider, e), await lh(t.provider, r), !0;
  } catch (s) {
    const { code: i } = s;
    return i === Mi.ACCOUNT_ACCESS_REJECTED ? !1 : (Bl.next({ chain: e }), Wc(n));
  }
};
var L6 = {
  selectingWallet: {
    header: "Available Wallets",
    sidebar: {
      heading: "",
      subheading: "Connect your wallet",
      paragraph: "Connecting your wallet is like “logging in” to Web3. Select your wallet from the options to get started.",
      IDontHaveAWallet: "I don't have a wallet"
    },
    recommendedWalletsPart1: "{app} only supports",
    recommendedWalletsPart2: "on this platform. Please use or install one of the supported wallets to continue",
    installWallet: "You do not have any wallets installed that {app} supports, please use a supported wallet",
    agreement: {
      agree: "I agree to the",
      terms: "Terms & Conditions",
      and: "and",
      privacy: "Privacy Policy"
    },
    whyDontISeeMyWallet: "Why don't I see my wallet?",
    learnMore: "Click here to learn more"
  },
  connectingWallet: {
    header: "{connectionRejected, select, false {Connecting to {wallet}...} other {Connection Rejected}}",
    sidebar: {
      subheading: "Approve Connection",
      paragraph: "Please approve the connection in your wallet and authorize access to continue."
    },
    mainText: "Connecting...",
    paragraph: "Make sure to select all accounts that you want to grant access to.",
    previousConnection: "{wallet} already has a pending connection request, please open the {wallet} app to login and connect.",
    rejectedText: "Connection Rejected!",
    rejectedCTA: "Click here to try again",
    primaryButton: "Back to wallets"
  },
  connectedWallet: {
    header: "Connection Successful",
    sidebar: {
      subheading: "Connection Successful!",
      paragraph: "Your wallet is now connected to {app}"
    },
    mainText: "Connected",
    accountSelected: "Account Selected",
    availableWallet: "available wallet"
  }
}, M6 = {
  actionRequired: {
    heading: "Action required in {wallet}",
    paragraph: "Please switch the active account in your wallet.",
    linkText: "Learn more.",
    buttonText: "Okay"
  },
  switchChain: {
    heading: "Switch Chain",
    paragraph1: "{app} requires that you switch your wallet to the {nextNetworkName} network to continue.",
    paragraph2: "*Some wallets may not support changing networks. If you can not change networks in your wallet you may consider switching to a different wallet."
  },
  confirmDisconnectAll: {
    heading: "Disconnect all Wallets",
    description: "Are you sure that you would like to disconnect all your wallets?",
    confirm: "Confirm",
    cancel: "Cancel"
  },
  confirmTransactionProtection: {
    heading: "Enable Transaction Protection",
    description: "Protect RPC endpoints hide your transaction from front-running and sandwich bots.",
    link: "Learn more",
    enable: "Enable",
    dismiss: "Dismiss"
  }
}, D6 = {
  connectAnotherWallet: "Connect another Wallet",
  disconnectAllWallets: "Disconnect all Wallets",
  currentNetwork: "Current Network",
  enableTransactionProtection: "Enable Transaction Protection",
  appInfo: "App Info",
  learnMore: "Learn More",
  gettingStartedGuide: "Getting Started Guide",
  smartContracts: "Smart Contract(s)",
  explore: "Explore",
  poweredBy: "powered by",
  addAccount: "Add Account",
  setPrimaryAccount: "Set Primary Account",
  disconnectWallet: "Disconnect Wallet",
  copyAddress: "Copy Wallet address"
}, $6 = {
  transaction: {
    txRequest: "Your transaction is waiting for you to confirm",
    nsfFail: "You have insufficient funds for this transaction",
    txUnderpriced: "The gas price for your transaction is too low, try a higher gas price",
    txRepeat: "This could be a repeat transaction",
    txAwaitingApproval: "You have a previous transaction waiting for you to confirm",
    txConfirmReminder: "Please confirm your transaction to continue",
    txSendFail: "You rejected the transaction",
    txSent: "Your transaction has been sent to the network",
    txStallPending: "Your transaction has stalled before it was sent, please try again",
    txStuck: "Your transaction is stuck due to a nonce gap",
    txPool: "Your transaction has started",
    txStallConfirmed: "Your transaction has stalled and hasn't been confirmed",
    txSpeedUp: "Your transaction has been sped up",
    txCancel: "Your transaction is being canceled",
    txFailed: "Your transaction has failed",
    txConfirmed: "Your transaction has succeeded",
    txError: "Oops something went wrong, please try again",
    txReplaceError: "There was an error replacing your transaction, please try again"
  },
  watched: {
    txPool: "Your account is {verb} {formattedValue} {asset} {preposition} {counterpartyShortened}",
    txSpeedUp: "Transaction for {formattedValue} {asset} {preposition} {counterpartyShortened} has been sped up",
    txCancel: "Transaction for {formattedValue} {asset} {preposition} {counterpartyShortened} has been canceled",
    txConfirmed: "Your account successfully {verb} {formattedValue} {asset} {preposition} {counterpartyShortened}",
    txFailed: "Your account failed to {verb} {formattedValue} {asset} {preposition} {counterpartyShortened}",
    txStuck: "Your transaction is stuck due to a nonce gap"
  },
  time: {
    minutes: "min",
    seconds: "sec"
  }
}, $e = {
  connect: L6,
  modals: M6,
  accountCenter: D6,
  notify: $6
};
function U6(t) {
  if (t) {
    const { en: e } = t, n = R4($e, e || {});
    Vu("en", n), Object.keys(t).filter((s) => s !== "en").forEach((s) => {
      const i = t[s];
      i && Vu(s, i);
    });
  } else
    Vu("en", $e);
  p3({
    fallbackLocale: "en",
    initialLocale: E3()
  });
}
var j6 = `
  <svg width="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z" fill="currentColor"/>
  </svg>
`;
function F6(t) {
  qt(t, "svelte-1ubf722", ".close-button.svelte-1ubf722.svelte-1ubf722{position:relative;overflow:hidden;display:flex;align-items:center;justify-content:center;height:2rem;width:2rem;border-radius:2rem;cursor:pointer;color:var(--onboard-close-button-color, inherit)}.close-button.svelte-1ubf722.svelte-1ubf722:hover::before{opacity:0.2}.close-button.svelte-1ubf722:hover .svg-box.svelte-1ubf722{opacity:1}.close-button.svelte-1ubf722.svelte-1ubf722::before{content:'';position:absolute;height:inherit;width:inherit;opacity:0.1;background:currentColor;transition:300ms ease-in-out opacity}.svg-box.svelte-1ubf722.svelte-1ubf722{position:absolute;height:1.5rem;width:1.5rem;opacity:0.6;transition:300ms ease-in-out opacity}");
}
function H6(t) {
  let e, n;
  return {
    c() {
      e = Z("div"), n = Z("div"), U(n, "class", "svg-box svelte-1ubf722"), U(e, "class", "close-button svelte-1ubf722");
    },
    m(r, s) {
      ie(r, e, s), W(e, n), n.innerHTML = j6;
    },
    p: X,
    i: X,
    o: X,
    d(r) {
      r && re(e);
    }
  };
}
class vy extends Zt {
  constructor(e) {
    super(), Qt(this, e, null, H6, Vt, {}, F6);
  }
}
function _y(t) {
  const e = t - 1;
  return e * e * e + 1;
}
function tS(t) {
  return Math.pow(t - 1, 3) * (1 - t) + 1;
}
function xf(t, { delay: e = 0, duration: n = 400, easing: r = xu } = {}) {
  const s = +getComputedStyle(t).opacity;
  return {
    delay: e,
    duration: n,
    easing: r,
    css: (i) => `opacity: ${i * s}`
  };
}
function nS(t, { delay: e = 0, duration: n = 400, easing: r = _y, x: s = 0, y: i = 0, opacity: o = 0 } = {}) {
  const a = getComputedStyle(t), c = +a.opacity, u = a.transform === "none" ? "" : a.transform, f = c * (1 - o), [l, m] = ug(s), [p, d] = ug(i);
  return {
    delay: e,
    duration: n,
    easing: r,
    css: (h, b) => `
			transform: ${u} translate(${(1 - h) * l}${m}, ${(1 - h) * p}${d});
			opacity: ${c - f * b}`
  };
}
function W6(t, { delay: e = 0, duration: n = 400, easing: r = _y, axis: s = "y" } = {}) {
  const i = getComputedStyle(t), o = +i.opacity, a = s === "y" ? "height" : "width", c = parseFloat(i[a]), u = s === "y" ? ["top", "bottom"] : ["left", "right"], f = u.map((g) => `${g[0].toUpperCase()}${g.slice(1)}`), l = parseFloat(i[`padding${f[0]}`]), m = parseFloat(i[`padding${f[1]}`]), p = parseFloat(i[`margin${f[0]}`]), d = parseFloat(i[`margin${f[1]}`]), h = parseFloat(i[`border${f[0]}Width`]), b = parseFloat(i[`border${f[1]}Width`]);
  return {
    delay: e,
    duration: n,
    easing: r,
    css: (g) => `overflow: hidden;opacity: ${Math.min(g * 20, 1) * o};${a}: ${g * c}px;padding-${u[0]}: ${g * l}px;padding-${u[1]}: ${g * m}px;margin-${u[0]}: ${g * p}px;margin-${u[1]}: ${g * d}px;border-${u[0]}-width: ${g * h}px;border-${u[1]}-width: ${g * b}px;`
  };
}
function G6(t) {
  qt(t, "svelte-7ee2g7", `section.svelte-7ee2g7{top:0;left:0;pointer-events:none;z-index:var(--onboard-modal-z-index, var(--modal-z-index))}.background.svelte-7ee2g7{background:var(--onboard-modal-backdrop, var(--modal-backdrop));pointer-events:all}.full-screen-background.svelte-7ee2g7{width:100vw;height:100vh;height:100dvh}.max-height.svelte-7ee2g7{max-height:calc(100vh - 2rem)}.modal-position.svelte-7ee2g7{top:var(--onboard-modal-top, var(--modal-top));bottom:var(--onboard-modal-bottom, var(--modal-bottom));left:var(--onboard-modal-left, var(--modal-left));right:var(--onboard-modal-right, var(--modal-right))}.modal-overflow.svelte-7ee2g7{overflow:hidden}.modal-styling.svelte-7ee2g7{--border-radius:var(
      --onboard-modal-border-radius,
      var(--w3o-border-radius, 1rem)
    );border-radius:var(--border-radius) var(--border-radius) 0 0;box-shadow:var(--onboard-modal-box-shadow, var(--box-shadow-0));max-width:100vw}.modal.svelte-7ee2g7{overflow-y:auto;background:var(--onboard-modal-background, white);color:var(--onboard-modal-color, initial)}.width-100.svelte-7ee2g7{width:100%}.modal-container-mobile.svelte-7ee2g7{bottom:0}@media all and (min-width: 768px){.modal-styling.svelte-7ee2g7{border-radius:var(--border-radius)}.modal-container-mobile.svelte-7ee2g7{bottom:unset;margin:1rem}.width-100.svelte-7ee2g7{width:unset}}`);
}
function z6(t) {
  let e, n, r, s, i, o, a, c, u, f;
  const l = (
    /*#slots*/
    t[3].default
  ), m = Lp(
    l,
    t,
    /*$$scope*/
    t[2],
    null
  );
  return {
    c() {
      e = Z("section"), n = Z("div"), r = Z("div"), s = Z("div"), i = Z("div"), o = Z("div"), m && m.c(), U(o, "class", "modal relative svelte-7ee2g7"), U(i, "class", "modal-overflow modal-styling relative flex justify-center svelte-7ee2g7"), U(i, "style", `${/*connectContainerEl*/
      t[1] ? "max-width: 100%;" : ""}`), U(s, "class", "flex relative max-height svelte-7ee2g7"), ge(
        s,
        "width-100",
        /*connectContainerEl*/
        t[1]
      ), U(r, "class", "modal-container-mobile modal-position flex svelte-7ee2g7"), ge(r, "absolute", !/*connectContainerEl*/
      t[1]), ge(
        r,
        "width-100",
        /*connectContainerEl*/
        t[1]
      ), U(n, "class", "background flex items-center justify-center relative svelte-7ee2g7"), ge(n, "full-screen-background", !/*connectContainerEl*/
      t[1]), U(e, "class", "svelte-7ee2g7"), ge(e, "fixed", !/*connectContainerEl*/
      t[1]);
    },
    m(p, d) {
      ie(p, e, d), W(e, n), W(n, r), W(r, s), W(s, i), W(i, o), m && m.m(o, null), c = !0, u || (f = [
        Hn(s, "click", fA(
          /*click_handler*/
          t[4]
        )),
        Hn(n, "click", function() {
          Vi(
            /*close*/
            t[0]
          ) && t[0].apply(this, arguments);
        })
      ], u = !0);
    },
    p(p, [d]) {
      t = p, m && m.p && (!c || d & /*$$scope*/
      4) && Dp(
        m,
        l,
        t,
        /*$$scope*/
        t[2],
        c ? Mp(
          l,
          /*$$scope*/
          t[2],
          d,
          null
        ) : $p(
          /*$$scope*/
          t[2]
        ),
        null
      );
    },
    i(p) {
      c || (J(m, p), Ln(() => {
        c && (a || (a = fg(e, xf, {}, !0)), a.run(1));
      }), c = !0);
    },
    o(p) {
      se(m, p), a || (a = fg(e, xf, {}, !1)), a.run(0), c = !1;
    },
    d(p) {
      p && re(e), m && m.d(p), p && a && a.end(), u = !1, us(f);
    }
  };
}
function V6(t, e, n) {
  let { $$slots: r = {}, $$scope: s } = e;
  const i = !!Tn.containerElements.connectModal, o = document.documentElement;
  yA(() => {
    i || (o.style.position = "sticky", o.style.overflow = "hidden");
  }), Xb(() => {
    i || (o.style.position = "", o.style.removeProperty("overflow"));
  });
  let { close: a } = e;
  function c(u) {
    wA.call(this, t, u);
  }
  return t.$$set = (u) => {
    "close" in u && n(0, a = u.close), "$$scope" in u && n(2, s = u.$$scope);
  }, [a, i, s, r, c];
}
class Yp extends Zt {
  constructor(e) {
    super(), Qt(this, e, V6, z6, Vt, { close: 0 }, G6);
  }
}
function q6(t) {
  qt(t, "svelte-tz7ru1", ".container.svelte-tz7ru1{padding:var(--onboard-spacing-4, var(--spacing-4));font-size:var(--onboard-font-size-6, var(--font-size-6));line-height:24px}input.svelte-tz7ru1{height:1rem;width:1rem;margin-right:0.5rem}");
}
function Q6(t) {
  let e, n, r, s, i, o = (
    /*$_*/
    t[1]("connect.selectingWallet.agreement.agree") + ""
  ), a, c, u = " ", f, l, m, p, d, h = (
    /*termsUrl*/
    t[3] && Z6(t)
  ), b = (
    /*privacyUrl*/
    t[4] && J6(t)
  );
  return {
    c() {
      e = Z("div"), n = Z("label"), r = Z("input"), s = we(), i = Z("span"), a = Ge(o), c = we(), f = Ge(u), l = we(), h && h.c(), m = we(), b && b.c(), U(r, "class", " svelte-tz7ru1"), U(r, "type", "checkbox"), U(n, "class", "flex"), U(e, "class", "container flex items-center svelte-tz7ru1");
    },
    m(g, y) {
      ie(g, e, y), W(e, n), W(n, r), r.checked = /*agreed*/
      t[0], W(n, s), W(n, i), W(i, a), W(i, c), W(i, f), W(i, l), h && h.m(i, null), W(i, m), b && b.m(i, null), p || (d = Hn(
        r,
        "change",
        /*input_change_handler*/
        t[6]
      ), p = !0);
    },
    p(g, y) {
      y & /*agreed*/
      1 && (r.checked = /*agreed*/
      g[0]), y & /*$_*/
      2 && o !== (o = /*$_*/
      g[1]("connect.selectingWallet.agreement.agree") + "") && it(a, o), /*termsUrl*/
      g[3] && h.p(g, y), /*privacyUrl*/
      g[4] && b.p(g, y);
    },
    d(g) {
      g && re(e), h && h.d(), b && b.d(), p = !1, d();
    }
  };
}
function Z6(t) {
  let e, n = (
    /*$_*/
    t[1]("connect.selectingWallet.agreement.terms") + ""
  ), r, s = (
    /*privacyUrl*/
    t[4] ? " " + /*$_*/
    t[1]("connect.selectingWallet.agreement.and") + " " : "."
  ), i;
  return {
    c() {
      e = Z("a"), r = Ge(n), i = Ge(s), U(
        e,
        "href",
        /*termsUrl*/
        t[3]
      ), U(e, "target", "_blank");
    },
    m(o, a) {
      ie(o, e, a), W(e, r), ie(o, i, a);
    },
    p(o, a) {
      a & /*$_*/
      2 && n !== (n = /*$_*/
      o[1]("connect.selectingWallet.agreement.terms") + "") && it(r, n), a & /*$_*/
      2 && s !== (s = /*privacyUrl*/
      o[4] ? " " + /*$_*/
      o[1]("connect.selectingWallet.agreement.and") + " " : ".") && it(i, s);
    },
    d(o) {
      o && re(e), o && re(i);
    }
  };
}
function J6(t) {
  let e, n = (
    /*$_*/
    t[1]("connect.selectingWallet.agreement.privacy") + ""
  ), r, s;
  return {
    c() {
      e = Z("a"), r = Ge(n), s = Ge("."), U(
        e,
        "href",
        /*privacyUrl*/
        t[4]
      ), U(e, "target", "_blank");
    },
    m(i, o) {
      ie(i, e, o), W(e, r), ie(i, s, o);
    },
    p(i, o) {
      o & /*$_*/
      2 && n !== (n = /*$_*/
      i[1]("connect.selectingWallet.agreement.privacy") + "") && it(r, n);
    },
    d(i) {
      i && re(e), i && re(s);
    }
  };
}
function K6(t) {
  let e, n = (
    /*showTermsOfService*/
    t[5] && Q6(t)
  );
  return {
    c() {
      n && n.c(), e = bt();
    },
    m(r, s) {
      n && n.m(r, s), ie(r, e, s);
    },
    p(r, [s]) {
      /*showTermsOfService*/
      r[5] && n.p(r, s);
    },
    i: X,
    o: X,
    d(r) {
      n && n.d(r), r && re(e);
    }
  };
}
function Y6(t, e, n) {
  let r, s;
  Tt(t, Qs, (b) => n(1, s = b));
  let { agreed: i } = e;
  const { terms: o, privacy: a, version: c } = JSON.parse(rh(os.TERMS_AGREEMENT) || "{}"), u = {
    termsUrl: "",
    privacyUrl: "",
    version: ""
  }, f = Te.select("appMetadata").pipe(is(Te.get().appMetadata), ls(1));
  Tt(t, f, (b) => n(7, r = b));
  const { termsUrl: l, privacyUrl: m, version: p } = r && r.agreement || u, d = !!(l && !o || m && !a || p && p !== c);
  i = !d;
  function h() {
    i = this.checked, n(0, i);
  }
  return t.$$set = (b) => {
    "agreed" in b && n(0, i = b.agreed);
  }, t.$$.update = () => {
    t.$$.dirty & /*agreed*/
    1 && (i ? sh(os.TERMS_AGREEMENT, JSON.stringify({
      version: p,
      terms: !!l,
      privacy: !!m
    })) : i === !1 && Tb(os.TERMS_AGREEMENT));
  }, [
    i,
    s,
    f,
    l,
    m,
    d,
    h
  ];
}
class X6 extends Zt {
  constructor(e) {
    super(), Qt(this, e, Y6, K6, Vt, { agreed: 0 }, q6);
  }
}
function e5(t) {
  qt(t, "svelte-2btye1", ".icon.svelte-2btye1{color:var(--onboard-white, var(--white));border-radius:50px;bottom:-0.25rem;right:-0.25rem}.yellow.svelte-2btye1{background:var(--onboard-warning-500, var(--warning-500))}");
}
function t5(t) {
  let e, n, r;
  return {
    c() {
      e = Z("div"), U(e, "class", n = cg(`${/*className*/
      t[2]} icon flex absolute`) + " svelte-2btye1"), U(e, "style", r = `width: ${/*size*/
      t[0]}px; height: ${/*size*/
      t[0]}px; padding: ${/*size*/
      t[0] / 6}px;`), ge(
        e,
        "yellow",
        /*color*/
        t[1] === "yellow"
      );
    },
    m(s, i) {
      ie(s, e, i), e.innerHTML = q4;
    },
    p(s, [i]) {
      i & /*className*/
      4 && n !== (n = cg(`${/*className*/
      s[2]} icon flex absolute`) + " svelte-2btye1") && U(e, "class", n), i & /*size*/
      1 && r !== (r = `width: ${/*size*/
      s[0]}px; height: ${/*size*/
      s[0]}px; padding: ${/*size*/
      s[0] / 6}px;`) && U(e, "style", r), i & /*className, color*/
      6 && ge(
        e,
        "yellow",
        /*color*/
        s[1] === "yellow"
      );
    },
    i: X,
    o: X,
    d(s) {
      s && re(e);
    }
  };
}
function n5(t, e, n) {
  let { size: r } = e, { color: s = "yellow" } = e, { class: i = "test" } = e;
  return t.$$set = (o) => {
    "size" in o && n(0, r = o.size), "color" in o && n(1, s = o.color), "class" in o && n(2, i = o.class);
  }, [r, s, i];
}
class r5 extends Zt {
  constructor(e) {
    super(), Qt(this, e, n5, t5, Vt, { size: 0, color: 1, class: 2 }, e5);
  }
}
function s5(t) {
  qt(t, "svelte-1bikw7k", ".icon.svelte-1bikw7k{color:var(--onboard-white, var(--white));border-radius:50px}.green.svelte-1bikw7k{background:var(--onboard-success-600, var(--success-600))}.blue.svelte-1bikw7k{background:var(--onboard-primary-1, var(--primary-1))}");
}
function i5(t) {
  let e, n;
  return {
    c() {
      e = Z("div"), U(e, "class", "icon flex svelte-1bikw7k"), U(e, "style", n = `width: ${/*size*/
      t[0]}px; height: ${/*size*/
      t[0]}px; padding: ${/*size*/
      t[0] / 5}px;`), ge(
        e,
        "green",
        /*color*/
        t[1] === "green"
      ), ge(
        e,
        "blue",
        /*color*/
        t[1] === "blue"
      );
    },
    m(r, s) {
      ie(r, e, s), e.innerHTML = Sb;
    },
    p(r, [s]) {
      s & /*size*/
      1 && n !== (n = `width: ${/*size*/
      r[0]}px; height: ${/*size*/
      r[0]}px; padding: ${/*size*/
      r[0] / 5}px;`) && U(e, "style", n), s & /*color*/
      2 && ge(
        e,
        "green",
        /*color*/
        r[1] === "green"
      ), s & /*color*/
      2 && ge(
        e,
        "blue",
        /*color*/
        r[1] === "blue"
      );
    },
    i: X,
    o: X,
    d(r) {
      r && re(e);
    }
  };
}
function o5(t, e, n) {
  let { size: r } = e, { color: s = "green" } = e;
  return t.$$set = (i) => {
    "size" in i && n(0, r = i.size), "color" in i && n(1, s = i.color);
  }, [r, s];
}
class Ay extends Zt {
  constructor(e) {
    super(), Qt(this, e, o5, i5, Vt, { size: 0, color: 1 }, s5);
  }
}
function a5(t) {
  qt(t, "svelte-1le5672", ".loading-container.svelte-1le5672.svelte-1le5672{font-family:inherit;font-size:inherit;color:inherit}span.svelte-1le5672.svelte-1le5672{font-family:inherit;font-size:0.889em;margin-top:1rem}.loading.svelte-1le5672.svelte-1le5672{display:inline-block}.loading.svelte-1le5672 div.svelte-1le5672{font-size:inherit;display:block;position:absolute;border:3px solid;border-radius:50%;animation:svelte-1le5672-bn-loading 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;border-color:currentColor transparent transparent transparent}.loading.svelte-1le5672 .loading-first.svelte-1le5672{animation-delay:-0.45s}.loading.svelte-1le5672 .loading-second.svelte-1le5672{animation-delay:-0.3s}.loading.svelte-1le5672 .loading-third.svelte-1le5672{animation-delay:-0.15s}@keyframes svelte-1le5672-bn-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}");
}
function bg(t) {
  let e, n;
  return {
    c() {
      e = Z("span"), n = Ge(
        /*description*/
        t[0]
      ), U(e, "class", "svelte-1le5672");
    },
    m(r, s) {
      ie(r, e, s), W(e, n);
    },
    p(r, s) {
      s & /*description*/
      1 && it(
        n,
        /*description*/
        r[0]
      );
    },
    d(r) {
      r && re(e);
    }
  };
}
function l5(t) {
  let e, n, r, s, i, o, a, c, u, f, l, m, p = (
    /*description*/
    t[0] && bg(t)
  );
  return {
    c() {
      e = Z("div"), n = Z("div"), r = Z("div"), i = we(), o = Z("div"), c = we(), u = Z("div"), m = we(), p && p.c(), U(r, "class", "loading-first svelte-1le5672"), U(r, "style", s = `height: ${/*size*/
      t[1]}; width: ${/*size*/
      t[1]};`), U(o, "class", "loading-second svelte-1le5672"), U(o, "style", a = `height: ${/*size*/
      t[1]}; width: ${/*size*/
      t[1]};`), U(u, "class", "loading-third svelte-1le5672"), U(u, "style", f = `height: ${/*size*/
      t[1]}; width: ${/*size*/
      t[1]};`), U(n, "class", "loading relative svelte-1le5672"), U(n, "style", l = `height: ${/*size*/
      t[1]}; width: ${/*size*/
      t[1]};`), U(e, "class", "loading-container flex flex-column justify-center items-center absolute svelte-1le5672");
    },
    m(d, h) {
      ie(d, e, h), W(e, n), W(n, r), W(n, i), W(n, o), W(n, c), W(n, u), W(e, m), p && p.m(e, null);
    },
    p(d, [h]) {
      h & /*size*/
      2 && s !== (s = `height: ${/*size*/
      d[1]}; width: ${/*size*/
      d[1]};`) && U(r, "style", s), h & /*size*/
      2 && a !== (a = `height: ${/*size*/
      d[1]}; width: ${/*size*/
      d[1]};`) && U(o, "style", a), h & /*size*/
      2 && f !== (f = `height: ${/*size*/
      d[1]}; width: ${/*size*/
      d[1]};`) && U(u, "style", f), h & /*size*/
      2 && l !== (l = `height: ${/*size*/
      d[1]}; width: ${/*size*/
      d[1]};`) && U(n, "style", l), /*description*/
      d[0] ? p ? p.p(d, h) : (p = bg(d), p.c(), p.m(e, null)) : p && (p.d(1), p = null);
    },
    i: X,
    o: X,
    d(d) {
      d && re(e), p && p.d();
    }
  };
}
function c5(t, e, n) {
  let { description: r = "" } = e, { size: s = "2rem" } = e;
  return t.$$set = (i) => {
    "description" in i && n(0, r = i.description), "size" in i && n(1, s = i.size);
  }, [r, s];
}
class u5 extends Zt {
  constructor(e) {
    super(), Qt(this, e, c5, l5, Vt, { description: 0, size: 1 }, a5);
  }
}
function f5(t) {
  qt(t, "svelte-i129jl", `.icon.svelte-i129jl{height:100%}.border-custom.svelte-i129jl{border:1px solid var(--border-color)}.border-yellow.svelte-i129jl{border:1px solid var(--onboard-warning-500, var(--warning-500))}.border-gray.svelte-i129jl{border:1px solid var(--onboard-gray-400, var(--gray-400))}.border-green.svelte-i129jl{border:1px solid var(--onboard-success-500, var(--success-500))}.border-dark-green.svelte-i129jl{border:1px solid var(--onboard-success-700, var(--success-700))}.border-blue.svelte-i129jl{border:1px solid
      var(
        --onboard-wallet-app-icon-border-color,
        var(--onboard-primary-300, var(--primary-300))
      )}.border-dark-blue.svelte-i129jl{border:1px solid
      var(
        --onboard-wallet-app-icon-border-color,
        var(--onboard-primary-600, var(--primary-600))
      )}.border-transparent.svelte-i129jl{border:1px solid transparent}.border-black.svelte-i129jl{border:1px solid var(--onboard-gray-600, var(--gray-600))}.background-gray.svelte-i129jl{background:var(
      --onboard-wallet-app-icon-background-gray,
      var(--onboard-gray-500, var(--gray-500))
    )}.background-light-gray.svelte-i129jl{background:var(
      --onboard-wallet-app-icon-background-light-gray,
      var(--onboard-gray-100, var(--gray-100))
    )}.background-light-blue.svelte-i129jl{background:var(
      --onboard-wallet-app-icon-background-light-blue,
      var(--onboard-primary-100, var(--primary-100))
    )}.background-green.svelte-i129jl{background:var(
      --onboard-wallet-app-icon-background-green,
      var(--onboard-success-100, var(--success-100))
    )}.background-white.svelte-i129jl{background:var(
      --onboard-wallet-app-icon-background-white,
      var(--onboard-white, var(--white))
    )}.background-transparent.svelte-i129jl{background:var(
      --onboard-wallet-app-icon-background-transparent,
      transparent
    )}@keyframes svelte-i129jl-pulse{from{opacity:0}to{opacity:1}}.placeholder-icon.svelte-i129jl{width:100%;height:100%;background:var(--onboard-gray-100, var(--gray-100));border-radius:32px;animation:svelte-i129jl-pulse infinite 750ms alternate ease-in-out}.spinner-container.svelte-i129jl{color:var(--onboard-primary-300, var(--primary-300))}img.svelte-i129jl{max-width:100%;height:auto}.pending-status-icon{z-index:1;fill:white;box-shadow:0px 2px 12px 0px rgba(0, 0, 0, 0.1)}.status-icon-container.svelte-i129jl{right:-0.25rem;bottom:-0.25rem;position:absolute}`);
}
const h5 = (t) => ({}), yg = (t) => ({});
function d5(t) {
  let e, n, r, s = {
    ctx: t,
    current: null,
    token: null,
    hasCatch: !1,
    pending: w5,
    then: g5,
    catch: m5,
    value: 13,
    blocks: [, , ,]
  };
  return Wo(n = /*icon*/
  t[1], s), {
    c() {
      e = bt(), s.block.c();
    },
    m(i, o) {
      ie(i, e, o), s.block.m(i, s.anchor = o), s.mount = () => e.parentNode, s.anchor = e, r = !0;
    },
    p(i, o) {
      t = i, s.ctx = t, o & /*icon*/
      2 && n !== (n = /*icon*/
      t[1]) && Wo(n, s) || zl(s, t, o);
    },
    i(i) {
      r || (J(s.block), r = !0);
    },
    o(i) {
      for (let o = 0; o < 3; o += 1) {
        const a = s.blocks[o];
        se(a);
      }
      r = !1;
    },
    d(i) {
      i && re(e), s.block.d(i), s.token = null, s = null;
    }
  };
}
function p5(t) {
  let e, n, r;
  return n = new u5({ props: { size: "2rem" } }), {
    c() {
      e = Z("div"), ze(n.$$.fragment), U(e, "class", "spinner-container svelte-i129jl");
    },
    m(s, i) {
      ie(s, e, i), Ue(n, e, null), r = !0;
    },
    p: X,
    i(s) {
      r || (J(n.$$.fragment, s), r = !0);
    },
    o(s) {
      se(n.$$.fragment, s), r = !1;
    },
    d(s) {
      s && re(e), je(n);
    }
  };
}
function m5(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function g5(t) {
  let e, n, r, s, i, o;
  function a(l, m) {
    return m & /*icon*/
    2 && (n = null), n == null && (n = !!Bp(
      /*iconLoaded*/
      l[13]
    )), n ? y5 : b5;
  }
  let c = a(t, -1), u = c(t), f = (
    /*loading*/
    t[2] && /*windowWidth*/
    t[9] <= Ht && wg()
  );
  return {
    c() {
      e = Z("div"), u.c(), s = we(), f && f.c(), i = bt(), U(e, "class", "icon flex justify-center items-center svelte-i129jl");
    },
    m(l, m) {
      ie(l, e, m), u.m(e, null), ie(l, s, m), f && f.m(l, m), ie(l, i, m), o = !0;
    },
    p(l, m) {
      c === (c = a(l, m)) && u ? u.p(l, m) : (u.d(1), u = c(l), u && (u.c(), u.m(e, null))), /*loading*/
      l[2] && /*windowWidth*/
      l[9] <= Ht ? f ? m & /*loading, windowWidth*/
      516 && J(f, 1) : (f = wg(), f.c(), J(f, 1), f.m(i.parentNode, i)) : f && (xt(), se(f, 1, 1, () => {
        f = null;
      }), Ct());
    },
    i(l) {
      o || (l && (r || Ln(() => {
        r = zp(e, xf, {}), r.start();
      })), J(f), o = !0);
    },
    o(l) {
      se(f), o = !1;
    },
    d(l) {
      l && re(e), u.d(), l && re(s), f && f.d(l), l && re(i);
    }
  };
}
function b5(t) {
  let e, n;
  return {
    c() {
      e = Z("img"), Rl(e.src, n = /*iconLoaded*/
      t[13]) || U(e, "src", n), U(e, "alt", "logo"), U(e, "class", "svelte-i129jl");
    },
    m(r, s) {
      ie(r, e, s);
    },
    p(r, s) {
      s & /*icon*/
      2 && !Rl(e.src, n = /*iconLoaded*/
      r[13]) && U(e, "src", n);
    },
    d(r) {
      r && re(e);
    }
  };
}
function y5(t) {
  let e, n = (
    /*iconLoaded*/
    t[13] + ""
  ), r;
  return {
    c() {
      e = new Gl(!1), r = bt(), e.a = r;
    },
    m(s, i) {
      e.m(n, s, i), ie(s, r, i);
    },
    p(s, i) {
      i & /*icon*/
      2 && n !== (n = /*iconLoaded*/
      s[13] + "") && e.p(n);
    },
    d(s) {
      s && re(r), s && e.d();
    }
  };
}
function wg(t) {
  let e, n, r;
  return n = new r5({
    props: { class: "pending-status-icon", size: 20 }
  }), {
    c() {
      e = Z("div"), ze(n.$$.fragment), U(e, "class", "status-icon-container svelte-i129jl");
    },
    m(s, i) {
      ie(s, e, i), Ue(n, e, null), r = !0;
    },
    i(s) {
      r || (J(n.$$.fragment, s), r = !0);
    },
    o(s) {
      se(n.$$.fragment, s), r = !1;
    },
    d(s) {
      s && re(e), je(n);
    }
  };
}
function w5(t) {
  let e;
  return {
    c() {
      e = Z("div"), U(e, "class", "placeholder-icon svelte-i129jl");
    },
    m(n, r) {
      ie(n, e, r);
    },
    p: X,
    i: X,
    o: X,
    d(n) {
      n && re(e);
    }
  };
}
function v5(t) {
  let e, n, r, s, i, o, a, c;
  Ln(
    /*onwindowresize*/
    t[12]
  );
  const u = [p5, d5], f = [];
  function l(d, h) {
    return (
      /*loading*/
      d[2] && /*windowWidth*/
      d[9] >= Ht ? 0 : 1
    );
  }
  n = l(t), r = f[n] = u[n](t);
  const m = (
    /*#slots*/
    t[11].status
  ), p = Lp(
    m,
    t,
    /*$$scope*/
    t[10],
    yg
  );
  return {
    c() {
      e = Z("div"), r.c(), s = we(), p && p.c(), U(e, "class", "relative svelte-i129jl"), U(e, "style", i = `${/*background*/
      t[6] === "custom" ? `background-color: ${/*customBackgroundColor*/
      t[7]}` : ""}; padding: ${/*padding*/
      t[3] - 1}px; width: ${/*size*/
      t[0]}px; height: ${/*size*/
      t[0]}px; border-radius: ${/*radius*/
      t[8]}px; color: ${/*color*/
      t[4]};`), ge(
        e,
        "border-custom",
        /*border*/
        t[5] === "custom"
      ), ge(
        e,
        "border-yellow",
        /*border*/
        t[5] === "yellow"
      ), ge(
        e,
        "border-gray",
        /*border*/
        t[5] === "gray"
      ), ge(
        e,
        "border-green",
        /*border*/
        t[5] === "green"
      ), ge(
        e,
        "border-dark-green",
        /*border*/
        t[5] === "darkGreen"
      ), ge(
        e,
        "border-blue",
        /*border*/
        t[5] === "blue"
      ), ge(
        e,
        "border-dark-blue",
        /*border*/
        t[5] === "darkBlue"
      ), ge(
        e,
        "border-transparent",
        /*border*/
        t[5] === "transparent"
      ), ge(
        e,
        "border-black",
        /*border*/
        t[5] === "black"
      ), ge(
        e,
        "background-gray",
        /*background*/
        t[6] === "gray"
      ), ge(
        e,
        "background-light-gray",
        /*background*/
        t[6] === "lightGray"
      ), ge(
        e,
        "background-light-blue",
        /*background*/
        t[6] === "lightBlue"
      ), ge(
        e,
        "background-green",
        /*background*/
        t[6] === "green"
      ), ge(
        e,
        "background-white",
        /*background*/
        t[6] === "white"
      ), ge(
        e,
        "background-transparent",
        /*background*/
        t[6] === "transparent"
      );
    },
    m(d, h) {
      ie(d, e, h), f[n].m(e, null), W(e, s), p && p.m(e, null), o = !0, a || (c = Hn(
        window,
        "resize",
        /*onwindowresize*/
        t[12]
      ), a = !0);
    },
    p(d, [h]) {
      let b = n;
      n = l(d), n === b ? f[n].p(d, h) : (xt(), se(f[b], 1, 1, () => {
        f[b] = null;
      }), Ct(), r = f[n], r ? r.p(d, h) : (r = f[n] = u[n](d), r.c()), J(r, 1), r.m(e, s)), p && p.p && (!o || h & /*$$scope*/
      1024) && Dp(
        p,
        m,
        d,
        /*$$scope*/
        d[10],
        o ? Mp(
          m,
          /*$$scope*/
          d[10],
          h,
          h5
        ) : $p(
          /*$$scope*/
          d[10]
        ),
        yg
      ), (!o || h & /*background, customBackgroundColor, padding, size, radius, color*/
      473 && i !== (i = `${/*background*/
      d[6] === "custom" ? `background-color: ${/*customBackgroundColor*/
      d[7]}` : ""}; padding: ${/*padding*/
      d[3] - 1}px; width: ${/*size*/
      d[0]}px; height: ${/*size*/
      d[0]}px; border-radius: ${/*radius*/
      d[8]}px; color: ${/*color*/
      d[4]};`)) && U(e, "style", i), (!o || h & /*border*/
      32) && ge(
        e,
        "border-custom",
        /*border*/
        d[5] === "custom"
      ), (!o || h & /*border*/
      32) && ge(
        e,
        "border-yellow",
        /*border*/
        d[5] === "yellow"
      ), (!o || h & /*border*/
      32) && ge(
        e,
        "border-gray",
        /*border*/
        d[5] === "gray"
      ), (!o || h & /*border*/
      32) && ge(
        e,
        "border-green",
        /*border*/
        d[5] === "green"
      ), (!o || h & /*border*/
      32) && ge(
        e,
        "border-dark-green",
        /*border*/
        d[5] === "darkGreen"
      ), (!o || h & /*border*/
      32) && ge(
        e,
        "border-blue",
        /*border*/
        d[5] === "blue"
      ), (!o || h & /*border*/
      32) && ge(
        e,
        "border-dark-blue",
        /*border*/
        d[5] === "darkBlue"
      ), (!o || h & /*border*/
      32) && ge(
        e,
        "border-transparent",
        /*border*/
        d[5] === "transparent"
      ), (!o || h & /*border*/
      32) && ge(
        e,
        "border-black",
        /*border*/
        d[5] === "black"
      ), (!o || h & /*background*/
      64) && ge(
        e,
        "background-gray",
        /*background*/
        d[6] === "gray"
      ), (!o || h & /*background*/
      64) && ge(
        e,
        "background-light-gray",
        /*background*/
        d[6] === "lightGray"
      ), (!o || h & /*background*/
      64) && ge(
        e,
        "background-light-blue",
        /*background*/
        d[6] === "lightBlue"
      ), (!o || h & /*background*/
      64) && ge(
        e,
        "background-green",
        /*background*/
        d[6] === "green"
      ), (!o || h & /*background*/
      64) && ge(
        e,
        "background-white",
        /*background*/
        d[6] === "white"
      ), (!o || h & /*background*/
      64) && ge(
        e,
        "background-transparent",
        /*background*/
        d[6] === "transparent"
      );
    },
    i(d) {
      o || (J(r), J(p, d), o = !0);
    },
    o(d) {
      se(r), se(p, d), o = !1;
    },
    d(d) {
      d && re(e), f[n].d(), p && p.d(d), a = !1, c();
    }
  };
}
function _5(t, e, n) {
  let { $$slots: r = {}, $$scope: s } = e, { size: i } = e, { icon: o } = e, { loading: a = !1 } = e, { padding: c = i / 6 } = e, { color: u = "black" } = e, { border: f = "transparent" } = e, { background: l = "transparent" } = e, { customBackgroundColor: m = "" } = e, { radius: p = 12 } = e, d;
  function h() {
    n(9, d = window.innerWidth);
  }
  return t.$$set = (b) => {
    "size" in b && n(0, i = b.size), "icon" in b && n(1, o = b.icon), "loading" in b && n(2, a = b.loading), "padding" in b && n(3, c = b.padding), "color" in b && n(4, u = b.color), "border" in b && n(5, f = b.border), "background" in b && n(6, l = b.background), "customBackgroundColor" in b && n(7, m = b.customBackgroundColor), "radius" in b && n(8, p = b.radius), "$$scope" in b && n(10, s = b.$$scope);
  }, [
    i,
    o,
    a,
    c,
    u,
    f,
    l,
    m,
    p,
    d,
    s,
    r,
    h
  ];
}
class Kc extends Zt {
  constructor(e) {
    super(), Qt(
      this,
      e,
      _5,
      v5,
      Vt,
      {
        size: 0,
        icon: 1,
        loading: 2,
        padding: 3,
        color: 4,
        border: 5,
        background: 6,
        customBackgroundColor: 7,
        radius: 8
      },
      f5
    );
  }
}
function A5(t) {
  qt(t, "svelte-q2gson", ".container.svelte-q2gson{gap:1rem;padding:0.75rem;color:var(--onboard-warning-700, var(--warning-700));font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:16px;border:1px solid var(--onboard-warning-400, var(--warning-400));background:var(--onboard-warning-100, var(--warning-100));border-radius:12px}.icon.svelte-q2gson{color:var(--onboard-warning-700, var(--warning-700));width:1rem;height:1rem;flex:0 0 auto}");
}
function E5(t) {
  let e, n, r, s, i, o;
  const a = (
    /*#slots*/
    t[1].default
  ), c = Lp(
    a,
    t,
    /*$$scope*/
    t[0],
    null
  );
  return {
    c() {
      e = Z("div"), n = Z("div"), c && c.c(), r = we(), s = Z("div"), U(s, "class", "icon svelte-q2gson"), U(e, "class", "container flex justify-between svelte-q2gson");
    },
    m(u, f) {
      ie(u, e, f), W(e, n), c && c.m(n, null), W(e, r), W(e, s), s.innerHTML = nh, o = !0;
    },
    p(u, [f]) {
      c && c.p && (!o || f & /*$$scope*/
      1) && Dp(
        c,
        a,
        u,
        /*$$scope*/
        u[0],
        o ? Mp(
          a,
          /*$$scope*/
          u[0],
          f,
          null
        ) : $p(
          /*$$scope*/
          u[0]
        ),
        null
      );
    },
    i(u) {
      o || (J(c, u), u && (i || Ln(() => {
        i = zp(e, W6, { delay: 50, duration: 500 }), i.start();
      })), o = !0);
    },
    o(u) {
      se(c, u), o = !1;
    },
    d(u) {
      u && re(e), c && c.d(u);
    }
  };
}
function x5(t, e, n) {
  let { $$slots: r = {}, $$scope: s } = e;
  return t.$$set = (i) => {
    "$$scope" in i && n(0, s = i.$$scope);
  }, [s, r];
}
class Xp extends Zt {
  constructor(e) {
    super(), Qt(this, e, x5, E5, Vt, {}, A5);
  }
}
function C5(t) {
  qt(t, "svelte-1kfgpsl", `.container.svelte-1kfgpsl{padding:var(--onboard-spacing-4, var(--spacing-4));color:var(
      --onboard-connect-accent-text-color,
      var(--onboard-gray-700, var(--gray-700))
    )}.connecting-container.svelte-1kfgpsl{padding:var(--onboard-spacing-4, var(--spacing-4));border-radius:var(--onboard-border-radius-1, var(--border-radius-1));background:var(--onboard-success-100, var(--success-100));border:1px solid var(--onboard-success-600, var(--success-600));width:100%}.text.svelte-1kfgpsl{right:var(--onboard-spacing-5, var(--spacing-5))}.tick.svelte-1kfgpsl{color:var(--onboard-success-700, var(--success-700))}`);
}
function k5(t) {
  let e, n, r, s, i, o, a, c, u, f, l, m, p, d = (
    /*$_*/
    t[2]("connect.connectedWallet.mainText", {
      default: $e.connect.connectedWallet.mainText,
      values: { wallet: (
        /*selectedWallet*/
        t[0].label
      ) }
    }) + ""
  ), h, b, g, y;
  return i = new Kc({
    props: {
      size: 40,
      padding: 8,
      background: (
        /*$appMetadata$*/
        t[1] && /*$appMetadata$*/
        t[1].icon ? "lightBlue" : "lightGray"
      ),
      border: "darkGreen",
      icon: (
        /*$appMetadata$*/
        t[1] && /*$appMetadata$*/
        t[1].icon || qc
      )
    }
  }), c = new Ay({ props: { size: 17 } }), l = new Kc({
    props: {
      size: 40,
      padding: 8,
      border: "darkGreen",
      background: "white",
      icon: (
        /*selectedWallet*/
        t[0].icon
      )
    }
  }), {
    c() {
      e = Z("div"), n = Z("div"), r = Z("div"), s = Z("div"), ze(i.$$.fragment), o = we(), a = Z("div"), ze(c.$$.fragment), u = we(), f = Z("div"), ze(l.$$.fragment), m = we(), p = Z("div"), h = Ge(d), b = we(), g = Z("div"), U(a, "class", "relative"), ga(a, "right", "1rem"), ga(a, "top", "4px"), ga(a, "z-index", "1"), U(f, "class", "relative"), ga(f, "right", "1.75rem"), U(s, "class", "flex justify-center items-end relative"), U(p, "class", "text relative svelte-1kfgpsl"), U(r, "class", "flex items-center"), U(g, "class", "tick flex items-center svelte-1kfgpsl"), ga(g, "width", "24px"), U(n, "class", "connecting-container flex justify-between items-center svelte-1kfgpsl"), U(e, "class", "container svelte-1kfgpsl");
    },
    m(w, _) {
      ie(w, e, _), W(e, n), W(n, r), W(r, s), Ue(i, s, null), W(s, o), W(s, a), Ue(c, a, null), W(s, u), W(s, f), Ue(l, f, null), W(r, m), W(r, p), W(p, h), W(n, b), W(n, g), g.innerHTML = Sb, y = !0;
    },
    p(w, [_]) {
      const E = {};
      _ & /*$appMetadata$*/
      2 && (E.background = /*$appMetadata$*/
      w[1] && /*$appMetadata$*/
      w[1].icon ? "lightBlue" : "lightGray"), _ & /*$appMetadata$*/
      2 && (E.icon = /*$appMetadata$*/
      w[1] && /*$appMetadata$*/
      w[1].icon || qc), i.$set(E);
      const k = {};
      _ & /*selectedWallet*/
      1 && (k.icon = /*selectedWallet*/
      w[0].icon), l.$set(k), (!y || _ & /*$_, selectedWallet*/
      5) && d !== (d = /*$_*/
      w[2]("connect.connectedWallet.mainText", {
        default: $e.connect.connectedWallet.mainText,
        values: { wallet: (
          /*selectedWallet*/
          w[0].label
        ) }
      }) + "") && it(h, d);
    },
    i(w) {
      y || (J(i.$$.fragment, w), J(c.$$.fragment, w), J(l.$$.fragment, w), y = !0);
    },
    o(w) {
      se(i.$$.fragment, w), se(c.$$.fragment, w), se(l.$$.fragment, w), y = !1;
    },
    d(w) {
      w && re(e), je(i), je(c), je(l);
    }
  };
}
function S5(t, e, n) {
  let r, s;
  Tt(t, Qs, (a) => n(2, s = a));
  let { selectedWallet: i } = e;
  const o = Te.select("appMetadata").pipe(is(Te.get().appMetadata), ls(1));
  return Tt(t, o, (a) => n(1, r = a)), t.$$set = (a) => {
    "selectedWallet" in a && n(0, i = a.selectedWallet);
  }, [i, r, s, o];
}
class O5 extends Zt {
  constructor(e) {
    super(), Qt(this, e, S5, k5, Vt, { selectedWallet: 0 }, C5);
  }
}
function T5(t) {
  qt(t, "svelte-j1ywa3", `.container.svelte-j1ywa3{padding:var(--onboard-spacing-4, var(--spacing-4))}.connecting-container.svelte-j1ywa3{width:100%;padding:var(--onboard-spacing-4, var(--spacing-4));transition:background-color 100ms ease-in-out,
      border-color 100ms ease-in-out;border-radius:24px;background:var(--onboard-primary-100, var(--primary-100));border:1px solid;border-color:var(--onboard-primary-300, var(--primary-300));color:var(--onboard-gray-600, var(--gray-600))}.connecting-container.warning.svelte-j1ywa3{background:var(--onboard-warning-100, var(--warning-100));border-color:var(--onboard-warning-400, var(--warning-400))}.text.svelte-j1ywa3{line-height:16px;margin-bottom:var(--onboard-spacing-5, var(--spacing-5))}.text.text-rejected.svelte-j1ywa3{line-height:24px;margin-bottom:0}.subtext.svelte-j1ywa3{font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:16px}.rejected-cta.svelte-j1ywa3{color:var(--onboard-primary-500, var(--primary-500))}.onboard-button-primary.svelte-j1ywa3{bottom:var(--onboard-spacing-3, var(--spacing-3))}.ml.svelte-j1ywa3{margin-left:var(--onboard-spacing-4, var(--spacing-4))}@media all and (max-width: 520px){.connecting-container.svelte-j1ywa3{border-radius:var(--onboard-border-radius-4, var(--border-radius-4))}.container.svelte-j1ywa3{padding-bottom:0}.wallet-badges.svelte-j1ywa3{display:none}.connecting-wallet-info.svelte-j1ywa3{margin:0}.onboard-button-primary.svelte-j1ywa3{display:none}}`);
}
function I5(t) {
  let e, n = (
    /*$_*/
    t[7](
      `connect.connectingWallet.${/*previousConnectionRequest*/
      t[5] ? "previousConnection" : "paragraph"}`,
      {
        default: $e.connect.connectingWallet.paragraph,
        values: { wallet: (
          /*selectedWallet*/
          t[1].label
        ) }
      }
    ) + ""
  ), r;
  return {
    c() {
      e = Z("div"), r = Ge(n), U(e, "class", "subtext svelte-j1ywa3");
    },
    m(s, i) {
      ie(s, e, i), W(e, r);
    },
    p(s, i) {
      i & /*$_, previousConnectionRequest, selectedWallet*/
      162 && n !== (n = /*$_*/
      s[7](
        `connect.connectingWallet.${/*previousConnectionRequest*/
        s[5] ? "previousConnection" : "paragraph"}`,
        {
          default: $e.connect.connectingWallet.paragraph,
          values: { wallet: (
            /*selectedWallet*/
            s[1].label
          ) }
        }
      ) + "") && it(r, n);
    },
    d(s) {
      s && re(e);
    }
  };
}
function N5(t) {
  let e, n = (
    /*$_*/
    t[7]("connect.connectingWallet.rejectedCTA", {
      default: $e.connect.connectingWallet.rejectedCTA,
      values: { wallet: (
        /*selectedWallet*/
        t[1].label
      ) }
    }) + ""
  ), r, s, i;
  return {
    c() {
      e = Z("div"), r = Ge(n), U(e, "class", "rejected-cta pointer subtext svelte-j1ywa3");
    },
    m(o, a) {
      ie(o, e, a), W(e, r), s || (i = Hn(e, "click", function() {
        Vi(
          /*connectWallet*/
          t[0]
        ) && t[0].apply(this, arguments);
      }), s = !0);
    },
    p(o, a) {
      t = o, a & /*$_, selectedWallet*/
      130 && n !== (n = /*$_*/
      t[7]("connect.connectingWallet.rejectedCTA", {
        default: $e.connect.connectingWallet.rejectedCTA,
        values: { wallet: (
          /*selectedWallet*/
          t[1].label
        ) }
      }) + "") && it(r, n);
    },
    d(o) {
      o && re(e), s = !1, i();
    }
  };
}
function P5(t) {
  let e, n, r, s, i, o, a, c, u, f, l, m = (
    /*$_*/
    t[7](
      `connect.connectingWallet.${/*connectionRejected*/
      t[4] ? "rejectedText" : "mainText"}`,
      {
        default: (
          /*connectionRejected*/
          t[4] ? $e.connect.connectingWallet.rejectedText : $e.connect.connectingWallet.mainText
        ),
        values: { wallet: (
          /*selectedWallet*/
          t[1].label
        ) }
      }
    ) + ""
  ), p, d, h, b, g = (
    /*$_*/
    t[7]("connect.connectingWallet.primaryButton", {
      default: $e.connect.connectingWallet.primaryButton
    }) + ""
  ), y, w, _, E;
  i = new Kc({
    props: {
      size: 40,
      padding: 8,
      icon: (
        /*$appMetadata$*/
        t[6] && /*$appMetadata$*/
        t[6].icon || qc
      ),
      border: (
        /*connectionRejected*/
        t[4] || /*previousConnectionRequest*/
        t[5] ? "yellow" : "blue"
      ),
      background: "lightGray"
    }
  }), c = new Kc({
    props: {
      size: 40,
      padding: 8,
      border: (
        /*connectionRejected*/
        t[4] || /*previousConnectionRequest*/
        t[5] ? "yellow" : "blue"
      ),
      background: "white",
      icon: (
        /*selectedWallet*/
        t[1].icon
      )
    }
  });
  function k(x, T) {
    return (
      /*connectionRejected*/
      x[4] ? N5 : I5
    );
  }
  let S = k(t), A = S(t);
  return {
    c() {
      e = Z("div"), n = Z("div"), r = Z("div"), s = Z("div"), ze(i.$$.fragment), o = we(), a = Z("div"), ze(c.$$.fragment), u = we(), f = Z("div"), l = Z("div"), p = Ge(m), d = we(), A.c(), h = we(), b = Z("button"), y = Ge(g), U(a, "class", "relative"), ga(a, "right", "0.5rem"), U(s, "class", "flex justify-center relative wallet-badges svelte-j1ywa3"), U(l, "class", "text svelte-j1ywa3"), ge(
        l,
        "text-rejected",
        /*connectionRejected*/
        t[4]
      ), U(f, "class", "flex flex-column justify-center ml connecting-wallet-info svelte-j1ywa3"), U(r, "class", "flex"), U(n, "class", "connecting-container flex justify-between items-center svelte-j1ywa3"), ge(
        n,
        "warning",
        /*connectionRejected*/
        t[4] || /*previousConnectionRequest*/
        t[5]
      ), U(b, "class", "onboard-button-primary absolute svelte-j1ywa3"), U(e, "class", "container flex flex-column items-center svelte-j1ywa3");
    },
    m(x, T) {
      ie(x, e, T), W(e, n), W(n, r), W(r, s), Ue(i, s, null), W(s, o), W(s, a), Ue(c, a, null), W(r, u), W(r, f), W(f, l), W(l, p), W(f, d), A.m(f, null), W(e, h), W(e, b), W(b, y), w = !0, _ || (E = Hn(
        b,
        "click",
        /*click_handler*/
        t[9]
      ), _ = !0);
    },
    p(x, [T]) {
      const N = {};
      T & /*$appMetadata$*/
      64 && (N.icon = /*$appMetadata$*/
      x[6] && /*$appMetadata$*/
      x[6].icon || qc), T & /*connectionRejected, previousConnectionRequest*/
      48 && (N.border = /*connectionRejected*/
      x[4] || /*previousConnectionRequest*/
      x[5] ? "yellow" : "blue"), i.$set(N);
      const F = {};
      T & /*connectionRejected, previousConnectionRequest*/
      48 && (F.border = /*connectionRejected*/
      x[4] || /*previousConnectionRequest*/
      x[5] ? "yellow" : "blue"), T & /*selectedWallet*/
      2 && (F.icon = /*selectedWallet*/
      x[1].icon), c.$set(F), (!w || T & /*$_, connectionRejected, selectedWallet*/
      146) && m !== (m = /*$_*/
      x[7](
        `connect.connectingWallet.${/*connectionRejected*/
        x[4] ? "rejectedText" : "mainText"}`,
        {
          default: (
            /*connectionRejected*/
            x[4] ? $e.connect.connectingWallet.rejectedText : $e.connect.connectingWallet.mainText
          ),
          values: { wallet: (
            /*selectedWallet*/
            x[1].label
          ) }
        }
      ) + "") && it(p, m), (!w || T & /*connectionRejected*/
      16) && ge(
        l,
        "text-rejected",
        /*connectionRejected*/
        x[4]
      ), S === (S = k(x)) && A ? A.p(x, T) : (A.d(1), A = S(x), A && (A.c(), A.m(f, null))), (!w || T & /*connectionRejected, previousConnectionRequest*/
      48) && ge(
        n,
        "warning",
        /*connectionRejected*/
        x[4] || /*previousConnectionRequest*/
        x[5]
      ), (!w || T & /*$_*/
      128) && g !== (g = /*$_*/
      x[7]("connect.connectingWallet.primaryButton", {
        default: $e.connect.connectingWallet.primaryButton
      }) + "") && it(y, g);
    },
    i(x) {
      w || (J(i.$$.fragment, x), J(c.$$.fragment, x), w = !0);
    },
    o(x) {
      se(i.$$.fragment, x), se(c.$$.fragment, x), w = !1;
    },
    d(x) {
      x && re(e), je(i), je(c), A.d(), _ = !1, E();
    }
  };
}
function R5(t, e, n) {
  let r, s;
  Tt(t, Qs, (p) => n(7, s = p));
  let { connectWallet: i } = e, { selectedWallet: o } = e, { deselectWallet: a } = e, { setStep: c } = e, { connectionRejected: u } = e, { previousConnectionRequest: f } = e;
  const l = Te.select("appMetadata").pipe(is(Te.get().appMetadata), ls(1));
  Tt(t, l, (p) => n(6, r = p));
  const m = () => {
    a(o.label), c("selectingWallet");
  };
  return t.$$set = (p) => {
    "connectWallet" in p && n(0, i = p.connectWallet), "selectedWallet" in p && n(1, o = p.selectedWallet), "deselectWallet" in p && n(2, a = p.deselectWallet), "setStep" in p && n(3, c = p.setStep), "connectionRejected" in p && n(4, u = p.connectionRejected), "previousConnectionRequest" in p && n(5, f = p.previousConnectionRequest);
  }, [
    i,
    o,
    a,
    c,
    u,
    f,
    r,
    s,
    l,
    m
  ];
}
class B5 extends Zt {
  constructor(e) {
    super(), Qt(
      this,
      e,
      R5,
      P5,
      Vt,
      {
        connectWallet: 0,
        selectedWallet: 1,
        deselectWallet: 2,
        setStep: 3,
        connectionRejected: 4,
        previousConnectionRequest: 5
      },
      T5
    );
  }
}
function L5(t) {
  qt(t, "svelte-1uy2ffh", ".outer-container.svelte-1uy2ffh{padding:var(--onboard-spacing-4, var(--spacing-4))}.link.svelte-1uy2ffh{font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:16px;color:var(--onboard-primary-500, var(--primary-500));text-decoration:none}");
}
function vg(t, e, n) {
  const r = t.slice();
  return r[3] = e[n].name, r[4] = e[n].url, r[6] = n, r;
}
function M5(t) {
  let e = (
    /*$_*/
    t[1]("connect.selectingWallet.installWallet", {
      default: $e.connect.selectingWallet.installWallet,
      values: {
        app: (
          /*$appMetadata$*/
          t[0].name || "this app"
        )
      }
    }) + ""
  ), n;
  return {
    c() {
      n = Ge(e);
    },
    m(r, s) {
      ie(r, n, s);
    },
    p(r, s) {
      s & /*$_, $appMetadata$*/
      3 && e !== (e = /*$_*/
      r[1]("connect.selectingWallet.installWallet", {
        default: $e.connect.selectingWallet.installWallet,
        values: {
          app: (
            /*$appMetadata$*/
            r[0].name || "this app"
          )
        }
      }) + "") && it(n, e);
    },
    d(r) {
      r && re(n);
    }
  };
}
function D5(t) {
  let e = (
    /*$_*/
    t[1]("connect.selectingWallet.recommendedWalletsPart1", {
      default: $e.connect.selectingWallet.recommendedWalletsPart1,
      values: {
        app: (
          /*$appMetadata$*/
          t[0].name || "This app"
        )
      }
    }) + ""
  ), n, r, s, i = (
    /*$_*/
    t[1]("connect.selectingWallet.recommendedWalletsPart2", {
      default: $e.connect.selectingWallet.recommendedWalletsPart2
    }) + ""
  ), o, a = (
    /*$appMetadata$*/
    t[0].recommendedInjectedWallets
  ), c = [];
  for (let u = 0; u < a.length; u += 1)
    c[u] = _g(vg(t, a, u));
  return {
    c() {
      n = Ge(e), r = we();
      for (let u = 0; u < c.length; u += 1)
        c[u].c();
      s = we(), o = Ge(i);
    },
    m(u, f) {
      ie(u, n, f), ie(u, r, f);
      for (let l = 0; l < c.length; l += 1)
        c[l] && c[l].m(u, f);
      ie(u, s, f), ie(u, o, f);
    },
    p(u, f) {
      if (f & /*$_, $appMetadata$*/
      3 && e !== (e = /*$_*/
      u[1]("connect.selectingWallet.recommendedWalletsPart1", {
        default: $e.connect.selectingWallet.recommendedWalletsPart1,
        values: {
          app: (
            /*$appMetadata$*/
            u[0].name || "This app"
          )
        }
      }) + "") && it(n, e), f & /*$appMetadata$*/
      1) {
        a = /*$appMetadata$*/
        u[0].recommendedInjectedWallets;
        let l;
        for (l = 0; l < a.length; l += 1) {
          const m = vg(u, a, l);
          c[l] ? c[l].p(m, f) : (c[l] = _g(m), c[l].c(), c[l].m(s.parentNode, s));
        }
        for (; l < c.length; l += 1)
          c[l].d(1);
        c.length = a.length;
      }
      f & /*$_*/
      2 && i !== (i = /*$_*/
      u[1]("connect.selectingWallet.recommendedWalletsPart2", {
        default: $e.connect.selectingWallet.recommendedWalletsPart2
      }) + "") && it(o, i);
    },
    d(u) {
      u && re(n), u && re(r), Yb(c, u), u && re(s), u && re(o);
    }
  };
}
function _g(t) {
  let e, n = (
    /*name*/
    t[3] + ""
  ), r, s = (
    /*i*/
    t[6] < /*$appMetadata$*/
    t[0].recommendedInjectedWallets.length - 1 ? ", " : ""
  ), i, o;
  return {
    c() {
      e = Z("a"), r = Ge(n), i = Ge(s), U(e, "class", "link pointer svelte-1uy2ffh"), U(e, "href", o = /*url*/
      t[4]), U(e, "target", "_blank"), U(e, "rel", "noreferrer noopener");
    },
    m(a, c) {
      ie(a, e, c), W(e, r), W(e, i);
    },
    p(a, c) {
      c & /*$appMetadata$*/
      1 && n !== (n = /*name*/
      a[3] + "") && it(r, n), c & /*$appMetadata$*/
      1 && s !== (s = /*i*/
      a[6] < /*$appMetadata$*/
      a[0].recommendedInjectedWallets.length - 1 ? ", " : "") && it(i, s), c & /*$appMetadata$*/
      1 && o !== (o = /*url*/
      a[4]) && U(e, "href", o);
    },
    d(a) {
      a && re(e);
    }
  };
}
function $5(t) {
  let e;
  function n(i, o) {
    return (
      /*$appMetadata$*/
      i[0].recommendedInjectedWallets ? D5 : M5
    );
  }
  let r = n(t), s = r(t);
  return {
    c() {
      s.c(), e = bt();
    },
    m(i, o) {
      s.m(i, o), ie(i, e, o);
    },
    p(i, o) {
      r === (r = n(i)) && s ? s.p(i, o) : (s.d(1), s = r(i), s && (s.c(), s.m(e.parentNode, e)));
    },
    d(i) {
      s.d(i), i && re(e);
    }
  };
}
function U5(t) {
  let e, n, r;
  return n = new Xp({
    props: {
      $$slots: { default: [$5] },
      $$scope: { ctx: t }
    }
  }), {
    c() {
      e = Z("div"), ze(n.$$.fragment), U(e, "class", "outer-container svelte-1uy2ffh");
    },
    m(s, i) {
      ie(s, e, i), Ue(n, e, null), r = !0;
    },
    p(s, [i]) {
      const o = {};
      i & /*$$scope, $_, $appMetadata$*/
      131 && (o.$$scope = { dirty: i, ctx: s }), n.$set(o);
    },
    i(s) {
      r || (J(n.$$.fragment, s), r = !0);
    },
    o(s) {
      se(n.$$.fragment, s), r = !1;
    },
    d(s) {
      s && re(e), je(n);
    }
  };
}
function j5(t, e, n) {
  let r, s;
  Tt(t, Qs, (o) => n(1, s = o));
  const i = Te.select("appMetadata").pipe(is(Te.get().appMetadata), ls(1));
  return Tt(t, i, (o) => n(0, r = o)), [r, s, i];
}
class F5 extends Zt {
  constructor(e) {
    super(), Qt(this, e, j5, U5, Vt, {}, L5);
  }
}
function H5(t) {
  qt(t, "svelte-1ct6vh0", "button.svelte-1ct6vh0:disabled{opacity:0.5}button.wallet-button-styling.svelte-1ct6vh0{position:relative;align-items:flex-start;flex:1;padding:0;background:none;color:var(--onboard-wallet-button-color, inherit)}.wallet-button-container.svelte-1ct6vh0{display:flex}.wallet-button-container-inner.svelte-1ct6vh0{position:relative;display:flex;flex-flow:column;align-items:center;gap:0.5rem;padding:0.75rem;width:5rem}.name.svelte-1ct6vh0{font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:1rem;text-overflow:ellipsis;max-width:5rem;max-height:2rem;overflow:hidden}.status-icon.svelte-1ct6vh0{position:absolute;top:3.5rem;left:3.5rem}@media screen and (min-width: 768px){button.wallet-button-styling.svelte-1ct6vh0{transition:background-color 250ms ease-in-out;background:var(--onboard-wallet-button-background, none);border:1px solid transparent;border-color:var(--onboard-wallet-button-border-color, var(--border-color));border-radius:var(--onboard-wallet-button-border-radius, var(--border-radius-1))}button.wallet-button-styling.svelte-1ct6vh0:hover{background:var(--onboard-wallet-button-background-hover, var(--foreground-color));color:var(--onboard-wallet-button-color-hover)}.wallet-button-container-inner.svelte-1ct6vh0{flex:1;flex-flow:row nowrap;gap:1rem;padding:1rem}button.connected.svelte-1ct6vh0{border-color:var(--onboard-success-500, var(--success-500))}.name.svelte-1ct6vh0{font-size:var(--onboard-font-size-5, var(--font-size-5));line-height:1.25rem;text-align:initial;max-width:inherit;max-height:3rem}.status-icon.svelte-1ct6vh0{top:0;bottom:0;left:auto;right:1rem;margin:auto;height:20px}}");
}
function Ag(t) {
  let e, n, r;
  return n = new Ay({ props: { size: 20 } }), {
    c() {
      e = Z("div"), ze(n.$$.fragment), U(e, "class", "status-icon svelte-1ct6vh0");
    },
    m(s, i) {
      ie(s, e, i), Ue(n, e, null), r = !0;
    },
    i(s) {
      r || (J(n.$$.fragment, s), r = !0);
    },
    o(s) {
      se(n.$$.fragment, s), r = !1;
    },
    d(s) {
      s && re(e), je(n);
    }
  };
}
function W5(t) {
  let e, n, r, s, i, o, a, c, u, f, l, m;
  Ln(
    /*onwindowresize*/
    t[7]
  ), s = new Kc({
    props: {
      size: (
        /*windowWidth*/
        t[6] >= Ht ? 48 : 56
      ),
      icon: (
        /*icon*/
        t[0]
      ),
      loading: (
        /*connecting*/
        t[4]
      ),
      border: (
        /*connected*/
        t[3] ? "green" : "custom"
      ),
      background: "transparent"
    }
  });
  let p = (
    /*connected*/
    t[3] && Ag()
  );
  return {
    c() {
      e = Z("div"), n = Z("button"), r = Z("div"), ze(s.$$.fragment), i = we(), o = Z("div"), a = Ge(
        /*label*/
        t[1]
      ), c = we(), p && p.c(), U(o, "class", "name svelte-1ct6vh0"), U(r, "class", "wallet-button-container-inner svelte-1ct6vh0"), U(n, "class", "wallet-button-styling svelte-1ct6vh0"), n.disabled = /*disabled*/
      t[5], ge(
        n,
        "connected",
        /*connected*/
        t[3]
      ), U(e, "class", "wallet-button-container svelte-1ct6vh0");
    },
    m(d, h) {
      ie(d, e, h), W(e, n), W(n, r), Ue(s, r, null), W(r, i), W(r, o), W(o, a), W(r, c), p && p.m(r, null), f = !0, l || (m = [
        Hn(
          window,
          "resize",
          /*onwindowresize*/
          t[7]
        ),
        Hn(n, "click", function() {
          Vi(
            /*onClick*/
            t[2]
          ) && t[2].apply(this, arguments);
        })
      ], l = !0);
    },
    p(d, [h]) {
      t = d;
      const b = {};
      h & /*windowWidth*/
      64 && (b.size = /*windowWidth*/
      t[6] >= Ht ? 48 : 56), h & /*icon*/
      1 && (b.icon = /*icon*/
      t[0]), h & /*connecting*/
      16 && (b.loading = /*connecting*/
      t[4]), h & /*connected*/
      8 && (b.border = /*connected*/
      t[3] ? "green" : "custom"), s.$set(b), (!f || h & /*label*/
      2) && it(
        a,
        /*label*/
        t[1]
      ), /*connected*/
      t[3] ? p ? h & /*connected*/
      8 && J(p, 1) : (p = Ag(), p.c(), J(p, 1), p.m(r, null)) : p && (xt(), se(p, 1, 1, () => {
        p = null;
      }), Ct()), (!f || h & /*disabled*/
      32) && (n.disabled = /*disabled*/
      t[5]), (!f || h & /*connected*/
      8) && ge(
        n,
        "connected",
        /*connected*/
        t[3]
      );
    },
    i(d) {
      f || (J(s.$$.fragment, d), J(p), d && (u || Ln(() => {
        u = zp(n, xf, {}), u.start();
      })), f = !0);
    },
    o(d) {
      se(s.$$.fragment, d), se(p), f = !1;
    },
    d(d) {
      d && re(e), je(s), p && p.d(), l = !1, us(m);
    }
  };
}
function G5(t, e, n) {
  let { icon: r } = e, { label: s } = e, { onClick: i } = e, { connected: o } = e, { connecting: a } = e, { disabled: c } = e, u;
  function f() {
    n(6, u = window.innerWidth);
  }
  return t.$$set = (l) => {
    "icon" in l && n(0, r = l.icon), "label" in l && n(1, s = l.label), "onClick" in l && n(2, i = l.onClick), "connected" in l && n(3, o = l.connected), "connecting" in l && n(4, a = l.connecting), "disabled" in l && n(5, c = l.disabled);
  }, [
    r,
    s,
    i,
    o,
    a,
    c,
    u,
    f
  ];
}
class z5 extends Zt {
  constructor(e) {
    super(), Qt(
      this,
      e,
      G5,
      W5,
      Vt,
      {
        icon: 0,
        label: 1,
        onClick: 2,
        connected: 3,
        connecting: 4,
        disabled: 5
      },
      H5
    );
  }
}
function V5(t) {
  qt(t, "svelte-kpc6js", ".wallets-container.svelte-kpc6js{display:flex;gap:0.5rem;overflow-x:scroll;overflow-y:hidden;padding:0.75rem 0.5rem;border-bottom:1px solid var(--border-color);-ms-overflow-style:none;scrollbar-width:none}.wallets-container.svelte-kpc6js::-webkit-scrollbar{display:none}.warning-container.svelte-kpc6js{margin:1rem 1rem 0}.notice-container.svelte-kpc6js{flex:0 0 100%;margin-top:0.75rem}@media all and (min-width: 768px){.wallets-container.svelte-kpc6js{display:grid;grid-template-columns:repeat(var(--onboard-wallet-columns, 2), 1fr);padding:1rem;border:none}.notice-container.svelte-kpc6js{grid-column:span 2;margin:0}}");
}
function Eg(t, e, n) {
  const r = t.slice();
  return r[10] = e[n], r;
}
function xg(t) {
  let e, n, r;
  return n = new Xp({
    props: {
      $$slots: { default: [q5] },
      $$scope: { ctx: t }
    }
  }), {
    c() {
      e = Z("div"), ze(n.$$.fragment), U(e, "class", "warning-container svelte-kpc6js");
    },
    m(s, i) {
      ie(s, e, i), Ue(n, e, null), r = !0;
    },
    p(s, i) {
      const o = {};
      i & /*$$scope, connectingErrorMessage*/
      8200 && (o.$$scope = { dirty: i, ctx: s }), n.$set(o);
    },
    i(s) {
      r || (J(n.$$.fragment, s), r = !0);
    },
    o(s) {
      se(n.$$.fragment, s), r = !1;
    },
    d(s) {
      s && re(e), je(n);
    }
  };
}
function q5(t) {
  let e, n;
  return {
    c() {
      e = new Gl(!1), n = bt(), e.a = n;
    },
    m(r, s) {
      e.m(
        /*connectingErrorMessage*/
        t[3],
        r,
        s
      ), ie(r, n, s);
    },
    p(r, s) {
      s & /*connectingErrorMessage*/
      8 && e.p(
        /*connectingErrorMessage*/
        r[3]
      );
    },
    d(r) {
      r && re(n), r && e.d();
    }
  };
}
function Cg(t) {
  let e, n;
  function r() {
    return (
      /*func*/
      t[9](
        /*wallet*/
        t[10]
      )
    );
  }
  return e = new z5({
    props: {
      connected: (
        /*checkConnected*/
        t[7](
          /*wallet*/
          t[10].label
        )
      ),
      connecting: (
        /*connectingWalletLabel*/
        t[2] === /*wallet*/
        t[10].label
      ),
      label: (
        /*wallet*/
        t[10].label
      ),
      icon: (
        /*wallet*/
        t[10].icon
      ),
      onClick: r,
      disabled: (
        /*windowWidth*/
        t[4] <= Ht && /*connectingWalletLabel*/
        t[2] && /*connectingWalletLabel*/
        t[2] !== /*wallet*/
        t[10].label
      )
    }
  }), {
    c() {
      ze(e.$$.fragment);
    },
    m(s, i) {
      Ue(e, s, i), n = !0;
    },
    p(s, i) {
      t = s;
      const o = {};
      i & /*wallets*/
      1 && (o.connected = /*checkConnected*/
      t[7](
        /*wallet*/
        t[10].label
      )), i & /*connectingWalletLabel, wallets*/
      5 && (o.connecting = /*connectingWalletLabel*/
      t[2] === /*wallet*/
      t[10].label), i & /*wallets*/
      1 && (o.label = /*wallet*/
      t[10].label), i & /*wallets*/
      1 && (o.icon = /*wallet*/
      t[10].icon), i & /*selectWallet, wallets*/
      3 && (o.onClick = r), i & /*windowWidth, connectingWalletLabel, wallets*/
      21 && (o.disabled = /*windowWidth*/
      t[4] <= Ht && /*connectingWalletLabel*/
      t[2] && /*connectingWalletLabel*/
      t[2] !== /*wallet*/
      t[10].label), e.$set(o);
    },
    i(s) {
      n || (J(e.$$.fragment, s), n = !0);
    },
    o(s) {
      se(e.$$.fragment, s), n = !1;
    },
    d(s) {
      je(e, s);
    }
  };
}
function Q5(t) {
  let e, n, r;
  return n = new Xp({
    props: {
      $$slots: { default: [Z5] },
      $$scope: { ctx: t }
    }
  }), {
    c() {
      e = Z("div"), ze(n.$$.fragment), U(e, "class", "notice-container svelte-kpc6js");
    },
    m(s, i) {
      ie(s, e, i), Ue(n, e, null), r = !0;
    },
    p(s, i) {
      const o = {};
      i & /*$$scope, $_*/
      8224 && (o.$$scope = { dirty: i, ctx: s }), n.$set(o);
    },
    i(s) {
      r || (J(n.$$.fragment, s), r = !0);
    },
    o(s) {
      se(n.$$.fragment, s), r = !1;
    },
    d(s) {
      s && re(e), je(n);
    }
  };
}
function Z5(t) {
  let e, n = (
    /*$_*/
    t[5]("connect.selectingWallet.whyDontISeeMyWallet", {
      default: $e.connect.selectingWallet.whyDontISeeMyWallet
    }) + ""
  ), r, s, i, o = (
    /*$_*/
    t[5]("connect.selectingWallet.learnMore", {
      default: $e.connect.selectingWallet.learnMore
    }) + ""
  ), a;
  return {
    c() {
      e = Z("div"), r = Ge(n), s = we(), i = Z("a"), a = Ge(o), U(i, "class", "link pointer"), U(
        i,
        "href",
        /*connect*/
        t[6].wheresMyWalletLink || K5
      ), U(i, "target", "_blank"), U(i, "rel", "noreferrer noopener");
    },
    m(c, u) {
      ie(c, e, u), W(e, r), ie(c, s, u), ie(c, i, u), W(i, a);
    },
    p(c, u) {
      u & /*$_*/
      32 && n !== (n = /*$_*/
      c[5]("connect.selectingWallet.whyDontISeeMyWallet", {
        default: $e.connect.selectingWallet.whyDontISeeMyWallet
      }) + "") && it(r, n), u & /*$_*/
      32 && o !== (o = /*$_*/
      c[5]("connect.selectingWallet.learnMore", {
        default: $e.connect.selectingWallet.learnMore
      }) + "") && it(a, o);
    },
    d(c) {
      c && re(e), c && re(s), c && re(i);
    }
  };
}
function J5(t) {
  let e, n, r, s, i, o, a;
  Ln(
    /*onwindowresize*/
    t[8]
  );
  let c = (
    /*connectingErrorMessage*/
    t[3] && xg(t)
  ), u = (
    /*wallets*/
    t[0]
  ), f = [];
  for (let p = 0; p < u.length; p += 1)
    f[p] = Cg(Eg(t, u, p));
  const l = (p) => se(f[p], 1, 1, () => {
    f[p] = null;
  });
  let m = !/*connect*/
  t[6].removeWhereIsMyWalletWarning && Q5(t);
  return {
    c() {
      e = Z("div"), c && c.c(), n = we(), r = Z("div");
      for (let p = 0; p < f.length; p += 1)
        f[p].c();
      s = we(), m && m.c(), U(r, "class", "wallets-container svelte-kpc6js"), U(e, "class", "outer-container");
    },
    m(p, d) {
      ie(p, e, d), c && c.m(e, null), W(e, n), W(e, r);
      for (let h = 0; h < f.length; h += 1)
        f[h] && f[h].m(r, null);
      W(r, s), m && m.m(r, null), i = !0, o || (a = Hn(
        window,
        "resize",
        /*onwindowresize*/
        t[8]
      ), o = !0);
    },
    p(p, [d]) {
      if (/*connectingErrorMessage*/
      p[3] ? c ? (c.p(p, d), d & /*connectingErrorMessage*/
      8 && J(c, 1)) : (c = xg(p), c.c(), J(c, 1), c.m(e, n)) : c && (xt(), se(c, 1, 1, () => {
        c = null;
      }), Ct()), d & /*checkConnected, wallets, connectingWalletLabel, selectWallet, windowWidth, MOBILE_WINDOW_WIDTH*/
      151) {
        u = /*wallets*/
        p[0];
        let h;
        for (h = 0; h < u.length; h += 1) {
          const b = Eg(p, u, h);
          f[h] ? (f[h].p(b, d), J(f[h], 1)) : (f[h] = Cg(b), f[h].c(), J(f[h], 1), f[h].m(r, s));
        }
        for (xt(), h = u.length; h < f.length; h += 1)
          l(h);
        Ct();
      }
      /*connect*/
      p[6].removeWhereIsMyWalletWarning || m.p(p, d);
    },
    i(p) {
      if (!i) {
        J(c);
        for (let d = 0; d < u.length; d += 1)
          J(f[d]);
        J(m), i = !0;
      }
    },
    o(p) {
      se(c), f = f.filter(Boolean);
      for (let d = 0; d < f.length; d += 1)
        se(f[d]);
      se(m), i = !1;
    },
    d(p) {
      p && re(e), c && c.d(), Yb(f, p), m && m.d(), o = !1, a();
    }
  };
}
const K5 = "https://www.blocknative.com/blog/metamask-wont-connect-web3-wallet-troubleshooting";
function Y5(t, e, n) {
  let r;
  Tt(t, Qs, (p) => n(5, r = p));
  let { wallets: s } = e, { selectWallet: i } = e, { connectingWalletLabel: o } = e, { connectingErrorMessage: a } = e, c;
  const { connect: u } = Te.get();
  function f(p) {
    const { wallets: d } = Te.get();
    return !!d.find((h) => h.label === p);
  }
  function l() {
    n(4, c = window.innerWidth);
  }
  const m = (p) => i(p);
  return t.$$set = (p) => {
    "wallets" in p && n(0, s = p.wallets), "selectWallet" in p && n(1, i = p.selectWallet), "connectingWalletLabel" in p && n(2, o = p.connectingWalletLabel), "connectingErrorMessage" in p && n(3, a = p.connectingErrorMessage);
  }, [
    s,
    i,
    o,
    a,
    c,
    r,
    u,
    f,
    l,
    m
  ];
}
class X5 extends Zt {
  constructor(e) {
    super(), Qt(
      this,
      e,
      Y5,
      J5,
      Vt,
      {
        wallets: 0,
        selectWallet: 1,
        connectingWalletLabel: 2,
        connectingErrorMessage: 3
      },
      V5
    );
  }
}
function e8(t) {
  qt(t, "svelte-obaru3", `.sidebar.svelte-obaru3{--background-color:var(
      --onboard-connect-sidebar-background,
      var(--w3o-foreground-color, none)
    );--text-color:var(--onboard-connect-sidebar-color, inherit);--border-color:var(--onboard-connect-sidebar-border-color, inherit);display:flex;flex-flow:column;gap:1rem;padding:1rem;align-items:center}.inner-container.svelte-obaru3{display:flex;flex-flow:column;align-items:center;align-self:stretch;gap:0.5rem;padding:1.5rem;text-align:center;border:1px solid transparent;border-radius:12px;border-color:var(--border-color);background:var(--background-color);color:var(--text-color)}.icon-container.svelte-obaru3{display:flex;height:3.5rem;width:auto;min-width:3.5rem;max-width:100%}.heading.svelte-obaru3{font-size:var(--onboard-font-size-3, var(--font-size-3));margin:0 0 var(--onboard-spacing-5, var(--spacing-5)) 0}.subheading.svelte-obaru3{line-height:1rem}.description.svelte-obaru3{line-height:1.25rem;font-size:var(--onboard-font-size-6, var(--font-size-6))}img.svelte-obaru3{max-width:100%;height:auto}.indicators.svelte-obaru3{margin-top:auto}.indicator.svelte-obaru3{box-sizing:content-box;width:8px;height:8px;border-radius:8px;background:var(
      --onboard-connect-sidebar-progress-background,
      var(--onboard-gray-700, var(--gray-700))
    );transition:background 250ms ease-in-out}.indicator.on.svelte-obaru3{background:var(
      --onboard-connect-sidebar-progress-color,
      var(--action-color)
    );border:2px solid
      var(
        --onboard-connect-sidebar-progress-background,
        var(--onboard-gray-700, var(--gray-700))
      )}.join.svelte-obaru3{box-sizing:content-box;z-index:1;right:4px;height:2px;background:var(
      --onboard-connect-sidebar-progress-background,
      var(--onboard-gray-700, var(--gray-700))
    );transition:background 250ms ease-in-out}.join.active.svelte-obaru3{background:var(
      --onboard-connect-sidebar-progress-color,
      var(--action-color)
    )}.no-link.svelte-obaru3{display:flex;flex-direction:row;align-items:center;padding:0.25rem 0.5rem 0.25rem 0.75rem;gap:0.25rem;font-size:var(--onboard-font-size-6, var(--font-size-6))}.info-icon.svelte-obaru3{width:1.25rem;display:flex;align-items:center}@media all and (min-width: 768px){.sidebar.svelte-obaru3{max-width:280px;border-right:1px solid;border-color:var(--border-color);background:var(--background-color)}.inner-container.svelte-obaru3{border:none;text-align:initial;flex:1;align-items:flex-start;gap:1rem}.indicators.svelte-obaru3{margin-bottom:0.25rem}}`);
}
function kg(t) {
  let e, n, r = (
    /*$_*/
    t[3](`connect.${/*step*/
    t[0]}.sidebar.header`, { default: "" })
  ), s;
  function i(u, f) {
    return (
      /*$appMetadata$*/
      u[2] && /*$appMetadata$*/
      (u[2].logo || /*$appMetadata$*/
      u[2].icon) ? n8 : t8
    );
  }
  let o = i(t), a = o(t), c = r && Sg(t);
  return {
    c() {
      e = Z("div"), a.c(), n = we(), c && c.c(), s = bt(), U(e, "class", "icon-container svelte-obaru3");
    },
    m(u, f) {
      ie(u, e, f), a.m(e, null), ie(u, n, f), c && c.m(u, f), ie(u, s, f);
    },
    p(u, f) {
      o === (o = i(u)) && a ? a.p(u, f) : (a.d(1), a = o(u), a && (a.c(), a.m(e, null))), f & /*$_, step*/
      9 && (r = /*$_*/
      u[3](`connect.${/*step*/
      u[0]}.sidebar.header`, { default: "" })), r ? c ? c.p(u, f) : (c = Sg(u), c.c(), c.m(s.parentNode, s)) : c && (c.d(1), c = null);
    },
    d(u) {
      u && re(e), a.d(), u && re(n), c && c.d(u), u && re(s);
    }
  };
}
function t8(t) {
  let e, n;
  return {
    c() {
      e = new Gl(!1), n = bt(), e.a = n;
    },
    m(r, s) {
      e.m(kb, r, s), ie(r, n, s);
    },
    p: X,
    d(r) {
      r && re(n), r && e.d();
    }
  };
}
function n8(t) {
  let e, n;
  function r(o, a) {
    return a & /*$appMetadata$*/
    4 && (e = null), e == null && (e = !!Bp(
      /*$appMetadata$*/
      o[2].logo || /*$appMetadata$*/
      o[2].icon
    )), e ? s8 : r8;
  }
  let s = r(t, -1), i = s(t);
  return {
    c() {
      i.c(), n = bt();
    },
    m(o, a) {
      i.m(o, a), ie(o, n, a);
    },
    p(o, a) {
      s === (s = r(o, a)) && i ? i.p(o, a) : (i.d(1), i = s(o), i && (i.c(), i.m(n.parentNode, n)));
    },
    d(o) {
      i.d(o), o && re(n);
    }
  };
}
function r8(t) {
  let e, n;
  return {
    c() {
      e = Z("img"), Rl(e.src, n = /*$appMetadata$*/
      t[2].logo || /*$appMetadata$*/
      t[2].icon) || U(e, "src", n), U(e, "alt", "logo"), U(e, "class", "svelte-obaru3");
    },
    m(r, s) {
      ie(r, e, s);
    },
    p(r, s) {
      s & /*$appMetadata$*/
      4 && !Rl(e.src, n = /*$appMetadata$*/
      r[2].logo || /*$appMetadata$*/
      r[2].icon) && U(e, "src", n);
    },
    d(r) {
      r && re(e);
    }
  };
}
function s8(t) {
  let e, n = (
    /*$appMetadata$*/
    (t[2].logo || /*$appMetadata$*/
    t[2].icon) + ""
  ), r;
  return {
    c() {
      e = new Gl(!1), r = Ge("​"), e.a = r;
    },
    m(s, i) {
      e.m(n, s, i), ie(s, r, i);
    },
    p(s, i) {
      i & /*$appMetadata$*/
      4 && n !== (n = /*$appMetadata$*/
      (s[2].logo || /*$appMetadata$*/
      s[2].icon) + "") && e.p(n);
    },
    d(s) {
      s && e.d(), s && re(r);
    }
  };
}
function Sg(t) {
  let e, n = (
    /*$_*/
    t[3](`connect.${/*step*/
    t[0]}.sidebar.header`, { default: (
      /*heading*/
      t[7]
    ) }) + ""
  ), r;
  return {
    c() {
      e = Z("div"), r = Ge(n), U(e, "class", "heading svelte-obaru3");
    },
    m(s, i) {
      ie(s, e, i), W(e, r);
    },
    p(s, i) {
      i & /*$_, step*/
      9 && n !== (n = /*$_*/
      s[3](`connect.${/*step*/
      s[0]}.sidebar.header`, { default: (
        /*heading*/
        s[7]
      ) }) + "") && it(r, n);
    },
    d(s) {
      s && re(e);
    }
  };
}
function i8(t) {
  let e, n = (
    /*$_*/
    t[3]("connect.selectingWallet.sidebar.IDontHaveAWallet", {
      default: $e.connect.selectingWallet.sidebar.IDontHaveAWallet
    }) + ""
  ), r, s, i;
  return {
    c() {
      e = Z("a"), r = Ge(n), s = we(), i = Z("div"), U(i, "class", "info-icon svelte-obaru3"), U(
        e,
        "href",
        /*connect*/
        t[4].iDontHaveAWalletLink || "https://ethereum.org/en/wallets/find-wallet/#main-content"
      ), U(e, "target", "_blank"), U(e, "rel", "noreferrer noopener"), U(e, "class", "no-link svelte-obaru3");
    },
    m(o, a) {
      ie(o, e, a), W(e, r), W(e, s), W(e, i), i.innerHTML = nh;
    },
    p(o, a) {
      a & /*$_*/
      8 && n !== (n = /*$_*/
      o[3]("connect.selectingWallet.sidebar.IDontHaveAWallet", {
        default: $e.connect.selectingWallet.sidebar.IDontHaveAWallet
      }) + "") && it(r, n);
    },
    d(o) {
      o && re(e);
    }
  };
}
function Og(t) {
  let e, n, r, s, i, o, a, c, u, f, l, m;
  return {
    c() {
      e = Z("div"), n = Z("div"), r = we(), s = Z("div"), o = we(), a = Z("div"), c = we(), u = Z("div"), l = we(), m = Z("div"), U(n, "class", "indicator relative svelte-obaru3"), ge(n, "on", !0), U(s, "class", "join relative svelte-obaru3"), U(s, "style", i = `${/*step*/
      t[0] !== "selectingWallet" ? "right: 4px; width: 52px;" : "right: 2px; width: 54px;"}`), ge(
        s,
        "active",
        /*step*/
        t[0] !== "selectingWallet"
      ), U(a, "class", "indicator relative svelte-obaru3"), U(a, "style", "right: 8px;"), ge(
        a,
        "on",
        /*step*/
        t[0] !== "selectingWallet"
      ), U(u, "class", "join relative svelte-obaru3"), U(u, "style", f = `${/*step*/
      t[0] === "connectedWallet" ? "right: 12px; width: 52px;" : "right: 10px; width: 54px;"}`), ge(
        u,
        "active",
        /*step*/
        t[0] === "connectedWallet"
      ), U(m, "style", "right: 16px;"), U(m, "class", "indicator relative svelte-obaru3"), ge(
        m,
        "on",
        /*step*/
        t[0] === "connectedWallet"
      ), U(e, "class", "indicators flex items-center svelte-obaru3");
    },
    m(p, d) {
      ie(p, e, d), W(e, n), W(e, r), W(e, s), W(e, o), W(e, a), W(e, c), W(e, u), W(e, l), W(e, m);
    },
    p(p, d) {
      d & /*step*/
      1 && i !== (i = `${/*step*/
      p[0] !== "selectingWallet" ? "right: 4px; width: 52px;" : "right: 2px; width: 54px;"}`) && U(s, "style", i), d & /*step*/
      1 && ge(
        s,
        "active",
        /*step*/
        p[0] !== "selectingWallet"
      ), d & /*step*/
      1 && ge(
        a,
        "on",
        /*step*/
        p[0] !== "selectingWallet"
      ), d & /*step*/
      1 && f !== (f = `${/*step*/
      p[0] === "connectedWallet" ? "right: 12px; width: 52px;" : "right: 10px; width: 54px;"}`) && U(u, "style", f), d & /*step*/
      1 && ge(
        u,
        "active",
        /*step*/
        p[0] === "connectedWallet"
      ), d & /*step*/
      1 && ge(
        m,
        "on",
        /*step*/
        p[0] === "connectedWallet"
      );
    },
    d(p) {
      p && re(e);
    }
  };
}
function Tg(t) {
  let e, n, r, s, i, o, a, c, u, f, l, m;
  return {
    c() {
      e = Z("div"), n = Z("div"), r = we(), s = Z("div"), o = we(), a = Z("div"), c = we(), u = Z("div"), l = we(), m = Z("div"), U(n, "class", "indicator relative svelte-obaru3"), ge(n, "on", !0), U(s, "class", "join relative svelte-obaru3"), U(s, "style", i = `right: 2px; ${/*step*/
      t[0] !== "selectingWallet" ? "width: 78px;" : "width: 82px;"}`), ge(
        s,
        "active",
        /*step*/
        t[0] !== "selectingWallet"
      ), U(a, "class", "indicator relative svelte-obaru3"), U(a, "style", "right: 4px;"), ge(
        a,
        "on",
        /*step*/
        t[0] !== "selectingWallet"
      ), U(u, "class", "join relative svelte-obaru3"), U(u, "style", f = `right: 6px; ${/*step*/
      t[0] === "connectedWallet" ? "width: 74px;" : "width: 81px;"}`), ge(
        u,
        "active",
        /*step*/
        t[0] === "connectedWallet"
      ), U(m, "style", "right: 8px;"), U(m, "class", "indicator relative svelte-obaru3"), ge(
        m,
        "on",
        /*step*/
        t[0] === "connectedWallet"
      ), U(e, "class", "indicators flex items-center svelte-obaru3");
    },
    m(p, d) {
      ie(p, e, d), W(e, n), W(e, r), W(e, s), W(e, o), W(e, a), W(e, c), W(e, u), W(e, l), W(e, m);
    },
    p(p, d) {
      d & /*step*/
      1 && i !== (i = `right: 2px; ${/*step*/
      p[0] !== "selectingWallet" ? "width: 78px;" : "width: 82px;"}`) && U(s, "style", i), d & /*step*/
      1 && ge(
        s,
        "active",
        /*step*/
        p[0] !== "selectingWallet"
      ), d & /*step*/
      1 && ge(
        a,
        "on",
        /*step*/
        p[0] !== "selectingWallet"
      ), d & /*step*/
      1 && f !== (f = `right: 6px; ${/*step*/
      p[0] === "connectedWallet" ? "width: 74px;" : "width: 81px;"}`) && U(u, "style", f), d & /*step*/
      1 && ge(
        u,
        "active",
        /*step*/
        p[0] === "connectedWallet"
      ), d & /*step*/
      1 && ge(
        m,
        "on",
        /*step*/
        p[0] === "connectedWallet"
      );
    },
    d(p) {
      p && re(e);
    }
  };
}
function o8(t) {
  let e, n, r, s, i = (
    /*$_*/
    t[3](`connect.${/*step*/
    t[0]}.sidebar.subheading`, { default: (
      /*subheading*/
      t[5]
    ) }) + ""
  ), o, a, c, u = (
    /*$_*/
    t[3](`connect.${/*step*/
    t[0]}.sidebar.paragraph`, {
      values: {
        app: (
          /*$appMetadata$*/
          t[2] && /*$appMetadata$*/
          t[2].name || "This App"
        )
      },
      default: (
        /*paragraph*/
        t[6]
      )
    }) + ""
  ), f, l, m, p, d, h, b, g;
  Ln(
    /*onwindowresize*/
    t[9]
  );
  let y = (
    /*windowWidth*/
    t[1] >= Ht && kg(t)
  ), w = !/*connect*/
  t[4].removeIDontHaveAWalletInfoLink && i8(t), _ = (
    /*windowWidth*/
    t[1] < Ht && Og(t)
  ), E = (
    /*windowWidth*/
    t[1] >= Ht && Tg(t)
  );
  return {
    c() {
      e = Z("div"), n = Z("div"), y && y.c(), r = we(), s = Z("div"), o = Ge(i), a = we(), c = Z("div"), f = Ge(u), l = we(), w && w.c(), m = we(), _ && _.c(), p = we(), E && E.c(), d = we(), h = Z("div"), U(s, "class", "subheading svelte-obaru3"), U(c, "class", "description svelte-obaru3"), U(n, "class", "inner-container svelte-obaru3"), U(e, "class", "sidebar svelte-obaru3");
    },
    m(k, S) {
      ie(k, e, S), W(e, n), y && y.m(n, null), W(n, r), W(n, s), W(s, o), W(n, a), W(n, c), W(c, f), W(n, l), w && w.m(n, null), W(n, m), _ && _.m(n, null), W(e, p), E && E.m(e, null), W(e, d), W(e, h), h.innerHTML = D4, b || (g = Hn(
        window,
        "resize",
        /*onwindowresize*/
        t[9]
      ), b = !0);
    },
    p(k, [S]) {
      /*windowWidth*/
      k[1] >= Ht ? y ? y.p(k, S) : (y = kg(k), y.c(), y.m(n, r)) : y && (y.d(1), y = null), S & /*$_, step*/
      9 && i !== (i = /*$_*/
      k[3](`connect.${/*step*/
      k[0]}.sidebar.subheading`, { default: (
        /*subheading*/
        k[5]
      ) }) + "") && it(o, i), S & /*$_, step, $appMetadata$*/
      13 && u !== (u = /*$_*/
      k[3](`connect.${/*step*/
      k[0]}.sidebar.paragraph`, {
        values: {
          app: (
            /*$appMetadata$*/
            k[2] && /*$appMetadata$*/
            k[2].name || "This App"
          )
        },
        default: (
          /*paragraph*/
          k[6]
        )
      }) + "") && it(f, u), /*connect*/
      k[4].removeIDontHaveAWalletInfoLink || w.p(k, S), /*windowWidth*/
      k[1] < Ht ? _ ? _.p(k, S) : (_ = Og(k), _.c(), _.m(n, null)) : _ && (_.d(1), _ = null), /*windowWidth*/
      k[1] >= Ht ? E ? E.p(k, S) : (E = Tg(k), E.c(), E.m(e, d)) : E && (E.d(1), E = null);
    },
    i: X,
    o: X,
    d(k) {
      k && re(e), y && y.d(), w && w.d(), _ && _.d(), E && E.d(), b = !1, g();
    }
  };
}
function a8(t, e, n) {
  let r, s;
  Tt(t, Qs, (d) => n(3, s = d));
  let { step: i } = e;
  const { connect: o } = Te.get(), a = $e.connect[i].sidebar, { subheading: c, paragraph: u } = a, { heading: f } = a;
  let l;
  const m = Te.select("appMetadata").pipe(is(Te.get().appMetadata), ls(1));
  Tt(t, m, (d) => n(2, r = d));
  function p() {
    n(1, l = window.innerWidth);
  }
  return t.$$set = (d) => {
    "step" in d && n(0, i = d.step);
  }, [
    i,
    l,
    r,
    s,
    o,
    c,
    u,
    f,
    m,
    p
  ];
}
class l8 extends Zt {
  constructor(e) {
    super(), Qt(this, e, a8, o8, Vt, { step: 0 }, e8);
  }
}
function c8(t) {
  qt(t, "svelte-1qwmck3", `.container.svelte-1qwmck3{--background-color:var(
      --onboard-main-scroll-container-background,
      var(--w3o-background-color)
    );--foreground-color:var(--w3o-foreground-color);--text-color:var(--onboard-connect-text-color, var(--w3o-text-color));--border-color:var(--w3o-border-color, var(--gray-200));--action-color:var(--w3o-action-color, var(--primary-500));font-family:var(--onboard-font-family-normal, var(--font-family-normal));font-size:var(--onboard-font-size-5, 1rem);background:var(--background-color);color:var(--text-color);border-color:var(--border-color);line-height:24px;overflow:hidden;position:relative;display:flex;height:min-content;flex-flow:column-reverse}.content.svelte-1qwmck3{width:var(--onboard-connect-content-width, 100%)}.header.svelte-1qwmck3{display:flex;padding:1rem;border-bottom:1px solid transparent;background:var(--onboard-connect-header-background);color:var(--onboard-connect-header-color);border-color:var(--border-color)}.header-heading.svelte-1qwmck3{line-height:1rem}.button-container.svelte-1qwmck3{right:0.5rem;top:0.5rem}.mobile-header.svelte-1qwmck3{display:flex;gap:0.5rem;height:4.5rem;padding:1rem;border-bottom:1px solid;border-color:var(--border-color)}.mobile-subheader.svelte-1qwmck3{opacity:0.6;font-size:0.875rem;font-weight:400;line-height:1rem;margin-top:0.25rem}.icon-container.svelte-1qwmck3{display:flex;flex:0 0 auto;height:2.5rem;width:2.5rem;min-width:2.5rem;justify-content:center;align-items:center}.disabled.svelte-1qwmck3{opacity:0.2;pointer-events:none;overflow:hidden}.icon-container svg{display:block;height:100%;width:auto}.w-full.svelte-1qwmck3{width:100%}.scroll-container.svelte-1qwmck3{overflow-y:auto;transition:opacity 250ms ease-in-out;scrollbar-width:none}.scroll-container.svelte-1qwmck3::-webkit-scrollbar{display:none}@media all and (min-width: 768px){.container.svelte-1qwmck3{margin:0;flex-flow:row;height:var(--onboard-connect-content-height, 440px)}.content.svelte-1qwmck3{width:var(--onboard-connect-content-width, 488px)}.mobile-subheader.svelte-1qwmck3{display:none}.icon-container.svelte-1qwmck3{display:none}}`);
}
function Ig(t) {
  let e, n;
  return e = new Yp({
    props: {
      close: !/*connect*/
      t[16].disableClose && /*close*/
      t[20],
      $$slots: { default: [v8] },
      $$scope: { ctx: t }
    }
  }), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p(r, s) {
      const i = {};
      s[0] & /*scrollContainer, selectedWallet, $modalStep$, windowWidth, connectionRejected, previousConnectionRequest, displayConnectingWallet, agreed, wallets, connectingWalletLabel, connectingErrorMessage, availableWallets, $_, $appMetadata$*/
      32766 | s[1] & /*$$scope*/
      32 && (i.$$scope = { dirty: s, ctx: r }), e.$set(i);
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function u8(t) {
  let e, n;
  return e = new l8({ props: { step: (
    /*$modalStep$*/
    t[5]
  ) } }), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p(r, s) {
      const i = {};
      s[0] & /*$modalStep$*/
      32 && (i.step = /*$modalStep$*/
      r[5]), e.$set(i);
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function f8(t) {
  let e, n, r = (
    /*$_*/
    t[14](`connect.${/*$modalStep$*/
    t[5]}.header`, {
      default: $e.connect[
        /*$modalStep$*/
        t[5]
      ].header,
      values: {
        connectionRejected: (
          /*connectionRejected*/
          t[1]
        ),
        wallet: (
          /*selectedWallet*/
          t[3] && /*selectedWallet*/
          t[3].label
        )
      }
    }) + ""
  ), s, i, o = (
    /*$modalStep$*/
    t[5] === "selectingWallet" ? `(${/*availableWallets*/
    t[12]})` : ""
  ), a;
  return {
    c() {
      e = Z("div"), n = Z("div"), s = Ge(r), i = we(), a = Ge(o), U(n, "class", "header-heading svelte-1qwmck3"), U(e, "class", "header relative flex items-center svelte-1qwmck3");
    },
    m(c, u) {
      ie(c, e, u), W(e, n), W(n, s), W(n, i), W(n, a);
    },
    p(c, u) {
      u[0] & /*$_, $modalStep$, connectionRejected, selectedWallet*/
      16426 && r !== (r = /*$_*/
      c[14](`connect.${/*$modalStep$*/
      c[5]}.header`, {
        default: $e.connect[
          /*$modalStep$*/
          c[5]
        ].header,
        values: {
          connectionRejected: (
            /*connectionRejected*/
            c[1]
          ),
          wallet: (
            /*selectedWallet*/
            c[3] && /*selectedWallet*/
            c[3].label
          )
        }
      }) + "") && it(s, r), u[0] & /*$modalStep$, availableWallets*/
      4128 && o !== (o = /*$modalStep$*/
      c[5] === "selectingWallet" ? `(${/*availableWallets*/
      c[12]})` : "") && it(a, o);
    },
    d(c) {
      c && re(e);
    }
  };
}
function h8(t) {
  let e, n, r, s, i, o = (
    /*$_*/
    t[14](
      /*$modalStep$*/
      t[5] === "connectingWallet" && /*selectedWallet*/
      t[3] ? `connect.${/*$modalStep$*/
      t[5]}.header` : `connect.${/*$modalStep$*/
      t[5]}.sidebar.subheading`,
      {
        default: (
          /*$modalStep$*/
          t[5] === "connectingWallet" && /*selectedWallet*/
          t[3] ? $e.connect[
            /*$modalStep$*/
            t[5]
          ].header : $e.connect[
            /*$modalStep$*/
            t[5]
          ].sidebar.subheading
        ),
        values: {
          connectionRejected: (
            /*connectionRejected*/
            t[1]
          ),
          wallet: (
            /*selectedWallet*/
            t[3] && /*selectedWallet*/
            t[3].label
          )
        }
      }
    ) + ""
  ), a, c, u, f = (
    /*$modalStep$*/
    t[5] === "selectingWallet" ? (
      /*availableWallets*/
      t[12] > 1 ? `${/*availableWallets*/
      t[12]} ${/*$_*/
      t[14]("connect.selectingWallet.header").toLowerCase()}` : `1 ${/*$_*/
      t[14]("connect.connectedWallet.availableWallet").toLowerCase()}`
    ) : `1 ${/*$_*/
    t[14]("connect.connectedWallet.accountSelected").toLowerCase()}`
  ), l;
  function m(h, b) {
    return (
      /*$appMetadata$*/
      h[13] && /*$appMetadata$*/
      h[13].icon ? p8 : d8
    );
  }
  let p = m(t), d = p(t);
  return {
    c() {
      e = Z("div"), n = Z("div"), d.c(), r = we(), s = Z("div"), i = Z("div"), a = Ge(o), c = we(), u = Z("div"), l = Ge(f), U(n, "class", "icon-container svelte-1qwmck3"), U(i, "class", "header-heading svelte-1qwmck3"), U(u, "class", "mobile-subheader svelte-1qwmck3"), U(s, "class", "flex flex-column justify-center w-full svelte-1qwmck3"), U(e, "class", "mobile-header svelte-1qwmck3");
    },
    m(h, b) {
      ie(h, e, b), W(e, n), d.m(n, null), W(e, r), W(e, s), W(s, i), W(i, a), W(s, c), W(s, u), W(u, l);
    },
    p(h, b) {
      p === (p = m(h)) && d ? d.p(h, b) : (d.d(1), d = p(h), d && (d.c(), d.m(n, null))), b[0] & /*$_, $modalStep$, selectedWallet, connectionRejected*/
      16426 && o !== (o = /*$_*/
      h[14](
        /*$modalStep$*/
        h[5] === "connectingWallet" && /*selectedWallet*/
        h[3] ? `connect.${/*$modalStep$*/
        h[5]}.header` : `connect.${/*$modalStep$*/
        h[5]}.sidebar.subheading`,
        {
          default: (
            /*$modalStep$*/
            h[5] === "connectingWallet" && /*selectedWallet*/
            h[3] ? $e.connect[
              /*$modalStep$*/
              h[5]
            ].header : $e.connect[
              /*$modalStep$*/
              h[5]
            ].sidebar.subheading
          ),
          values: {
            connectionRejected: (
              /*connectionRejected*/
              h[1]
            ),
            wallet: (
              /*selectedWallet*/
              h[3] && /*selectedWallet*/
              h[3].label
            )
          }
        }
      ) + "") && it(a, o), b[0] & /*$modalStep$, availableWallets, $_*/
      20512 && f !== (f = /*$modalStep$*/
      h[5] === "selectingWallet" ? (
        /*availableWallets*/
        h[12] > 1 ? `${/*availableWallets*/
        h[12]} ${/*$_*/
        h[14]("connect.selectingWallet.header").toLowerCase()}` : `1 ${/*$_*/
        h[14]("connect.connectedWallet.availableWallet").toLowerCase()}`
      ) : `1 ${/*$_*/
      h[14]("connect.connectedWallet.accountSelected").toLowerCase()}`) && it(l, f);
    },
    d(h) {
      h && re(e), d.d();
    }
  };
}
function d8(t) {
  let e, n;
  return {
    c() {
      e = new Gl(!1), n = bt(), e.a = n;
    },
    m(r, s) {
      e.m(kb, r, s), ie(r, n, s);
    },
    p: X,
    d(r) {
      r && re(n), r && e.d();
    }
  };
}
function p8(t) {
  let e, n;
  function r(o, a) {
    return a[0] & /*$appMetadata$*/
    8192 && (e = null), e == null && (e = !!Bp(
      /*$appMetadata$*/
      o[13].icon
    )), e ? g8 : m8;
  }
  let s = r(t, [-1, -1]), i = s(t);
  return {
    c() {
      i.c(), n = bt();
    },
    m(o, a) {
      i.m(o, a), ie(o, n, a);
    },
    p(o, a) {
      s === (s = r(o, a)) && i ? i.p(o, a) : (i.d(1), i = s(o), i && (i.c(), i.m(n.parentNode, n)));
    },
    d(o) {
      i.d(o), o && re(n);
    }
  };
}
function m8(t) {
  let e, n;
  return {
    c() {
      e = Z("img"), Rl(e.src, n = /*$appMetadata$*/
      t[13].icon) || U(e, "src", n), U(e, "alt", "logo");
    },
    m(r, s) {
      ie(r, e, s);
    },
    p(r, s) {
      s[0] & /*$appMetadata$*/
      8192 && !Rl(e.src, n = /*$appMetadata$*/
      r[13].icon) && U(e, "src", n);
    },
    d(r) {
      r && re(e);
    }
  };
}
function g8(t) {
  let e, n = (
    /*$appMetadata$*/
    t[13].icon + ""
  ), r;
  return {
    c() {
      e = new Gl(!1), r = bt(), e.a = r;
    },
    m(s, i) {
      e.m(n, s, i), ie(s, r, i);
    },
    p(s, i) {
      i[0] & /*$appMetadata$*/
      8192 && n !== (n = /*$appMetadata$*/
      s[13].icon + "") && e.p(n);
    },
    d(s) {
      s && re(r), s && e.d();
    }
  };
}
function b8(t) {
  let e, n, r, s, i;
  return n = new vy({}), {
    c() {
      e = Z("div"), ze(n.$$.fragment), U(e, "class", "button-container absolute svelte-1qwmck3");
    },
    m(o, a) {
      ie(o, e, a), Ue(n, e, null), r = !0, s || (i = Hn(
        e,
        "click",
        /*close*/
        t[20]
      ), s = !0);
    },
    p: X,
    i(o) {
      r || (J(n.$$.fragment, o), r = !0);
    },
    o(o) {
      se(n.$$.fragment, o), r = !1;
    },
    d(o) {
      o && re(e), je(n), s = !1, i();
    }
  };
}
function Ng(t) {
  let e, n, r, s;
  const i = [w8, y8], o = [];
  function a(c, u) {
    return (
      /*wallets*/
      c[2].length ? 0 : 1
    );
  }
  return e = a(t), n = o[e] = i[e](t), {
    c() {
      n.c(), r = bt();
    },
    m(c, u) {
      o[e].m(c, u), ie(c, r, u), s = !0;
    },
    p(c, u) {
      let f = e;
      e = a(c), e === f ? o[e].p(c, u) : (xt(), se(o[f], 1, 1, () => {
        o[f] = null;
      }), Ct(), n = o[e], n ? n.p(c, u) : (n = o[e] = i[e](c), n.c()), J(n, 1), n.m(r.parentNode, r));
    },
    i(c) {
      s || (J(n), s = !0);
    },
    o(c) {
      se(n), s = !1;
    },
    d(c) {
      o[e].d(c), c && re(r);
    }
  };
}
function y8(t) {
  let e, n;
  return e = new F5({}), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p: X,
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function w8(t) {
  let e, n, r, s, i, o;
  function a(u) {
    t[24](u);
  }
  let c = {};
  return (
    /*agreed*/
    t[7] !== void 0 && (c.agreed = /*agreed*/
    t[7]), e = new X6({ props: c }), vf.push(() => kA(e, "agreed", a)), i = new X5({
      props: {
        selectWallet: (
          /*selectWallet*/
          t[18]
        ),
        wallets: (
          /*wallets*/
          t[2]
        ),
        connectingWalletLabel: (
          /*connectingWalletLabel*/
          t[8]
        ),
        connectingErrorMessage: (
          /*connectingErrorMessage*/
          t[9]
        )
      }
    }), {
      c() {
        ze(e.$$.fragment), r = we(), s = Z("div"), ze(i.$$.fragment), U(s, "class", "svelte-1qwmck3"), ge(s, "disabled", !/*agreed*/
        t[7]);
      },
      m(u, f) {
        Ue(e, u, f), ie(u, r, f), ie(u, s, f), Ue(i, s, null), o = !0;
      },
      p(u, f) {
        const l = {};
        !n && f[0] & /*agreed*/
        128 && (n = !0, l.agreed = /*agreed*/
        u[7], AA(() => n = !1)), e.$set(l);
        const m = {};
        f[0] & /*wallets*/
        4 && (m.wallets = /*wallets*/
        u[2]), f[0] & /*connectingWalletLabel*/
        256 && (m.connectingWalletLabel = /*connectingWalletLabel*/
        u[8]), f[0] & /*connectingErrorMessage*/
        512 && (m.connectingErrorMessage = /*connectingErrorMessage*/
        u[9]), i.$set(m), (!o || f[0] & /*agreed*/
        128) && ge(s, "disabled", !/*agreed*/
        u[7]);
      },
      i(u) {
        o || (J(e.$$.fragment, u), J(i.$$.fragment, u), o = !0);
      },
      o(u) {
        se(e.$$.fragment, u), se(i.$$.fragment, u), o = !1;
      },
      d(u) {
        je(e, u), u && re(r), u && re(s), je(i);
      }
    }
  );
}
function Pg(t) {
  let e, n;
  return e = new B5({
    props: {
      connectWallet: (
        /*connectWallet*/
        t[21]
      ),
      connectionRejected: (
        /*connectionRejected*/
        t[1]
      ),
      previousConnectionRequest: (
        /*previousConnectionRequest*/
        t[6]
      ),
      setStep: (
        /*setStep*/
        t[22]
      ),
      deselectWallet: (
        /*deselectWallet*/
        t[19]
      ),
      selectedWallet: (
        /*selectedWallet*/
        t[3]
      )
    }
  }), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p(r, s) {
      const i = {};
      s[0] & /*connectionRejected*/
      2 && (i.connectionRejected = /*connectionRejected*/
      r[1]), s[0] & /*previousConnectionRequest*/
      64 && (i.previousConnectionRequest = /*previousConnectionRequest*/
      r[6]), s[0] & /*selectedWallet*/
      8 && (i.selectedWallet = /*selectedWallet*/
      r[3]), e.$set(i);
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function Rg(t) {
  let e, n;
  return e = new O5({
    props: {
      selectedWallet: (
        /*selectedWallet*/
        t[3]
      )
    }
  }), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p(r, s) {
      const i = {};
      s[0] & /*selectedWallet*/
      8 && (i.selectedWallet = /*selectedWallet*/
      r[3]), e.$set(i);
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function v8(t) {
  let e, n, r, s, i, o, a, c, u, f = (
    /*connect*/
    t[16].showSidebar && u8(t)
  );
  function l(y, w) {
    return (
      /*windowWidth*/
      y[4] <= Ht ? h8 : f8
    );
  }
  let m = l(t), p = m(t), d = !/*connect*/
  t[16].disableClose && b8(t), h = (
    /*$modalStep$*/
    (t[5] === "selectingWallet" || /*windowWidth*/
    t[4] <= Ht) && Ng(t)
  ), b = (
    /*displayConnectingWallet*/
    t[11] && Pg(t)
  ), g = (
    /*$modalStep$*/
    t[5] === "connectedWallet" && /*selectedWallet*/
    t[3] && /*windowWidth*/
    t[4] >= Ht && Rg(t)
  );
  return {
    c() {
      e = Z("div"), f && f.c(), n = we(), r = Z("div"), p.c(), s = we(), d && d.c(), i = we(), o = Z("div"), h && h.c(), a = we(), b && b.c(), c = we(), g && g.c(), U(o, "class", "scroll-container svelte-1qwmck3"), U(r, "class", "content flex flex-column svelte-1qwmck3"), U(e, "class", "container svelte-1qwmck3");
    },
    m(y, w) {
      ie(y, e, w), f && f.m(e, null), W(e, n), W(e, r), p.m(r, null), W(r, s), d && d.m(r, null), W(r, i), W(r, o), h && h.m(o, null), W(o, a), b && b.m(o, null), W(o, c), g && g.m(o, null), t[25](o), u = !0;
    },
    p(y, w) {
      /*connect*/
      y[16].showSidebar && f.p(y, w), m === (m = l(y)) && p ? p.p(y, w) : (p.d(1), p = m(y), p && (p.c(), p.m(r, s))), /*connect*/
      y[16].disableClose || d.p(y, w), /*$modalStep$*/
      y[5] === "selectingWallet" || /*windowWidth*/
      y[4] <= Ht ? h ? (h.p(y, w), w[0] & /*$modalStep$, windowWidth*/
      48 && J(h, 1)) : (h = Ng(y), h.c(), J(h, 1), h.m(o, a)) : h && (xt(), se(h, 1, 1, () => {
        h = null;
      }), Ct()), /*displayConnectingWallet*/
      y[11] ? b ? (b.p(y, w), w[0] & /*displayConnectingWallet*/
      2048 && J(b, 1)) : (b = Pg(y), b.c(), J(b, 1), b.m(o, c)) : b && (xt(), se(b, 1, 1, () => {
        b = null;
      }), Ct()), /*$modalStep$*/
      y[5] === "connectedWallet" && /*selectedWallet*/
      y[3] && /*windowWidth*/
      y[4] >= Ht ? g ? (g.p(y, w), w[0] & /*$modalStep$, selectedWallet, windowWidth*/
      56 && J(g, 1)) : (g = Rg(y), g.c(), J(g, 1), g.m(o, null)) : g && (xt(), se(g, 1, 1, () => {
        g = null;
      }), Ct());
    },
    i(y) {
      u || (J(f), J(d), J(h), J(b), J(g), u = !0);
    },
    o(y) {
      se(f), se(d), se(h), se(b), se(g), u = !1;
    },
    d(y) {
      y && re(e), f && f.d(), p.d(), d && d.d(), h && h.d(), b && b.d(), g && g.d(), t[25](null);
    }
  };
}
function _8(t) {
  let e, n, r, s;
  Ln(
    /*onwindowresize*/
    t[23]
  );
  let i = !/*autoSelect*/
  t[0].disableModals && Ig(t);
  return {
    c() {
      i && i.c(), e = bt();
    },
    m(o, a) {
      i && i.m(o, a), ie(o, e, a), n = !0, r || (s = Hn(
        window,
        "resize",
        /*onwindowresize*/
        t[23]
      ), r = !0);
    },
    p(o, a) {
      /*autoSelect*/
      o[0].disableModals ? i && (xt(), se(i, 1, 1, () => {
        i = null;
      }), Ct()) : i ? (i.p(o, a), a[0] & /*autoSelect*/
      1 && J(i, 1)) : (i = Ig(o), i.c(), J(i, 1), i.m(e.parentNode, e));
    },
    i(o) {
      n || (J(i), n = !0);
    },
    o(o) {
      se(i), n = !1;
    },
    d(o) {
      i && i.d(o), o && re(e), r = !1, s();
    }
  };
}
function A8(t, e, n) {
  let r, s, i, o, a;
  Tt(t, Qs, (ee) => n(14, a = ee));
  let { autoSelect: c } = e;
  const u = Te.select("appMetadata").pipe(is(Te.get().appMetadata), ls(1));
  Tt(t, u, (ee) => n(13, i = ee));
  const { walletModules: f, connect: l, chains: m } = Te.get(), p = new qs(), { unstoppableResolution: d, wagmi: h } = Tn;
  let b = !1, g = !1, y = [], w, _, E, k, S, A;
  const x = new wu("selectingWallet");
  Tt(t, x, (ee) => n(5, o = ee)), Nr.pipe(k1((ee, xe) => ee.autoSelect && xe.autoSelect && ee.autoSelect.disableModals === xe.autoSelect.disableModals), Cl(({ autoSelect: ee }) => ee && ee.disableModals === !1), Gc(dg)).subscribe(() => {
    w && Q();
  });
  async function T({ label: ee, icon: xe, getInterface: Ve }) {
    n(8, E = ee);
    try {
      const Pe = Te.get().wallets.find((Xe) => Xe.label === ee);
      if (Pe) {
        Td(Pe), setTimeout(() => Ee("connectedWallet"), 1), n(3, w = Pe);
        return;
      }
      const { chains: Ne } = Te.get(), { provider: ce, instance: Fe } = await Ve({
        chains: Ne,
        EventEmitter: M4,
        appMetadata: i
      }), ct = await xe;
      n(3, w = {
        label: ee,
        icon: ct,
        provider: ce,
        instance: Fe,
        accounts: [],
        chains: [{ namespace: "evm", id: "0x1" }]
      }), n(9, k = ""), pe(), setTimeout(() => Ee("connectingWallet"), 1);
    } catch (Pe) {
      const { message: Ne } = Pe;
      n(9, k = Ne), n(8, E = ""), pe();
    }
  }
  function N() {
    n(3, w = null);
  }
  function F(ee) {
    n(3, w = Object.assign(Object.assign({}, w), ee));
  }
  async function V(ee) {
    const { getIcon: xe, getInterface: Ve, label: Pe } = ee, Ne = xe();
    T({ label: Pe, icon: Ne, getInterface: Ve });
  }
  async function oe() {
    n(2, y = f.map(({ getIcon: ee, getInterface: xe, label: Ve }) => ({ label: Ve, icon: ee(), getInterface: xe })));
  }
  function H() {
    Nr.next({ inProgress: !1 });
  }
  async function Q() {
    n(1, b = !1);
    const { provider: ee, label: xe } = w;
    p.next();
    try {
      let Ve, Pe;
      if (h) {
        const { buildWagmiConfig: Fe, wagmiConnect: ct, getWagmiConnector: Xe } = h, kt = await Fe(m, { label: xe, provider: ee });
        my(kt), Pe = Xe(xe);
        const Ze = await Promise.race([
          ct(kt, { connector: Pe }),
          // or connect wallet is called again whilst waiting for response
          Wc(p.pipe(Sh([])))
        ]);
        if (!Ze || !("accounts" in Ze))
          return;
        const [St] = Ze.accounts;
        Ve = St;
      } else {
        const [Fe] = await Promise.race([
          // resolved account
          gy(ee),
          // or connect wallet is called again whilst waiting for response
          Wc(p.pipe(Sh([])))
        ]);
        if (!Fe)
          return;
        Ve = Fe;
      }
      if (Te.get().connect.autoConnectLastWallet || Te.get().connect.autoConnectAllPreviousWallet) {
        let Fe = rh(os.LAST_CONNECTED_WALLET);
        try {
          let ct = JSON.parse(Fe);
          if (ct && Array.isArray(ct)) {
            const Xe = ct;
            Fe = [.../* @__PURE__ */ new Set([xe, ...Xe])];
          }
        } catch (ct) {
          if (ct instanceof SyntaxError && Fe && typeof Fe == "string")
            Fe = [Fe];
          else
            throw new Error(ct);
        }
        Fe || (Fe = [xe]), sh(os.LAST_CONNECTED_WALLET, JSON.stringify(Fe));
      }
      const Ne = await by(ee), ce = {
        accounts: [
          {
            address: Ve,
            ens: null,
            uns: null,
            balance: null
          }
        ],
        chains: [{ namespace: "evm", id: Ne }],
        wagmiConnector: Pe
      };
      Td(Object.assign(Object.assign({}, w), ce)), O6(ee, xe), F(ce), Ee("connectedWallet"), pe();
    } catch (Ve) {
      const { code: Pe } = Ve;
      if (pe(), Pe === Mi.ACCOUNT_ACCESS_REJECTED) {
        n(1, b = !0), c.disableModals ? Nr.next({ inProgress: !1 }) : c.label && n(0, c.label = "", c);
        return;
      }
      if (Pe === Mi.ACCOUNT_ACCESS_ALREADY_REQUESTED) {
        if (n(6, g = !0), c.disableModals) {
          Nr.next({ inProgress: !1 });
          return;
        }
        yy({
          provider: w.provider,
          disconnected$: Nr.pipe(Cl(({ inProgress: Ne }) => !Ne), Sh(""))
        }).pipe(bp(1)).subscribe(([Ne]) => {
          Ne && Q();
        });
        return;
      }
    }
  }
  async function ae() {
    const { accounts: ee, chains: xe } = w, Ve = Te.get().chains, [Pe] = xe, Ne = Ve.find(({ namespace: Ze, id: St }) => Ze === Pe.namespace && St === Pe.id), { address: ce } = ee[0];
    let { balance: Fe, ens: ct, uns: Xe, secondaryTokens: kt } = ee[0];
    if (Fe === null && Ef(ce, Ne).then((Ze) => {
      Nc(w.label, ce, { balance: Ze });
    }), Ne && !kt && Array.isArray(Ne.secondaryTokens) && Ne.secondaryTokens.length && Af(ce, Ne).then((Ze) => {
      Nc(w.label, ce, { secondaryTokens: Ze });
    }), ct === null && gf(Pe.id)) {
      const Ze = m.find(({ id: St }) => St === gf(Pe.id));
      Id(ce, Ze).then((St) => {
        Nc(w.label, ce, { ens: St });
      });
    }
    Xe === null && d && Nd(ce, Ne).then((Ze) => {
      Nc(w.label, ce, { uns: Ze });
    }), setTimeout(() => Nr.next({ inProgress: !1 }), 1500);
  }
  x.pipe(Gc(dg)).subscribe((ee) => {
    switch (ee) {
      case "selectingWallet": {
        if (c.label) {
          const xe = f.find(({ label: Ve }) => Ve.toLowerCase() === c.label.toLowerCase());
          xe ? V(xe) : c.disableModals && Nr.next({ inProgress: !1 });
        } else
          n(8, E = ""), oe();
        break;
      }
      case "connectingWallet": {
        Q();
        break;
      }
      case "connectedWallet": {
        n(8, E = ""), ae();
        break;
      }
    }
  });
  function Ee(ee) {
    p.next(), x.next(ee);
  }
  function pe() {
    A && A.scrollTo(0, 0);
  }
  function Re() {
    n(4, S = window.innerWidth);
  }
  function ve(ee) {
    _ = ee, n(7, _);
  }
  function Se(ee) {
    vf[ee ? "unshift" : "push"](() => {
      A = ee, n(10, A);
    });
  }
  return t.$$set = (ee) => {
    "autoSelect" in ee && n(0, c = ee.autoSelect);
  }, t.$$.update = () => {
    t.$$.dirty[0] & /*wallets*/
    4 && n(12, r = y.length - Te.get().wallets.length), t.$$.dirty[0] & /*$modalStep$, selectedWallet, windowWidth, connectionRejected*/
    58 && n(11, s = o === "connectingWallet" && w && S >= Ht || S <= Ht && b && o === "connectingWallet" && w);
  }, [
    c,
    b,
    y,
    w,
    S,
    o,
    g,
    _,
    E,
    k,
    A,
    s,
    r,
    i,
    a,
    u,
    l,
    x,
    T,
    N,
    H,
    Q,
    Ee,
    Re,
    ve,
    Se
  ];
}
class E8 extends Zt {
  constructor(e) {
    super(), Qt(this, e, A8, _8, Vt, { autoSelect: 0 }, c8, [-1, -1]);
  }
}
function x8(t) {
  qt(t, "svelte-12yam41", ".container.svelte-12yam41{padding:var(--onboard-spacing-4, var(--spacing-4));font-family:var(--onboard-font-family-normal, var(--font-family-normal));line-height:16px;font-size:var(--onboard-font-size-5, var(--font-size-5))}.close.svelte-12yam41{top:var(--onboard-spacing-5, var(--spacing-5));right:var(--onboard-spacing-5, var(--spacing-5));padding:0.5rem}h4.svelte-12yam41{font-size:var(--onboard-font-size-3, var(--font-size-3));margin:var(--onboard-spacing-4, var(--spacing-4)) 0}p.svelte-12yam41{margin:0 0 var(--onboard-spacing-4, var(--spacing-4)) 0;max-width:488px}");
}
function C8(t) {
  let e, n, r = (
    /*$_*/
    t[0]("modals.switchChain.heading", { default: $e.modals.switchChain.heading }) + ""
  ), s, i, o, a = (
    /*$_*/
    t[0]("modals.switchChain.paragraph1", {
      default: $e.modals.switchChain.paragraph1,
      values: {
        app: (
          /*$appMetadata$*/
          t[1] && /*$appMetadata$*/
          t[1].name || "This app"
        ),
        nextNetworkName: (
          /*nextNetworkName*/
          t[2]
        )
      }
    }) + ""
  ), c, u, f, l = (
    /*$_*/
    t[0]("modals.switchChain.paragraph2", {
      default: $e.modals.switchChain.paragraph2
    }) + ""
  ), m, p, d, h, b, g, y;
  return h = new vy({}), {
    c() {
      e = Z("div"), n = Z("h4"), s = Ge(r), i = we(), o = Z("p"), c = Ge(a), u = we(), f = Z("p"), m = Ge(l), p = we(), d = Z("div"), ze(h.$$.fragment), U(n, "class", "svelte-12yam41"), U(o, "class", "svelte-12yam41"), U(f, "class", "svelte-12yam41"), U(d, "class", "close absolute svelte-12yam41"), U(e, "class", "container relative svelte-12yam41");
    },
    m(w, _) {
      ie(w, e, _), W(e, n), W(n, s), W(e, i), W(e, o), W(o, c), W(e, u), W(e, f), W(f, m), W(e, p), W(e, d), Ue(h, d, null), b = !0, g || (y = Hn(
        d,
        "click",
        /*close*/
        t[3]
      ), g = !0);
    },
    p(w, _) {
      (!b || _ & /*$_*/
      1) && r !== (r = /*$_*/
      w[0]("modals.switchChain.heading", { default: $e.modals.switchChain.heading }) + "") && it(s, r), (!b || _ & /*$_, $appMetadata$*/
      3) && a !== (a = /*$_*/
      w[0]("modals.switchChain.paragraph1", {
        default: $e.modals.switchChain.paragraph1,
        values: {
          app: (
            /*$appMetadata$*/
            w[1] && /*$appMetadata$*/
            w[1].name || "This app"
          ),
          nextNetworkName: (
            /*nextNetworkName*/
            w[2]
          )
        }
      }) + "") && it(c, a), (!b || _ & /*$_*/
      1) && l !== (l = /*$_*/
      w[0]("modals.switchChain.paragraph2", {
        default: $e.modals.switchChain.paragraph2
      }) + "") && it(m, l);
    },
    i(w) {
      b || (J(h.$$.fragment, w), b = !0);
    },
    o(w) {
      se(h.$$.fragment, w), b = !1;
    },
    d(w) {
      w && re(e), je(h), g = !1, y();
    }
  };
}
function k8(t) {
  let e, n;
  return e = new Yp({
    props: {
      close: (
        /*close*/
        t[3]
      ),
      $$slots: { default: [C8] },
      $$scope: { ctx: t }
    }
  }), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p(r, [s]) {
      const i = {};
      s & /*$$scope, $_, $appMetadata$*/
      67 && (i.$$scope = { dirty: s, ctx: r }), e.$set(i);
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function S8(t, e, n) {
  let r, s, i;
  Tt(t, Bl, (u) => n(5, r = u)), Tt(t, Qs, (u) => n(0, s = u));
  const o = r.chain.label;
  function a() {
    Bl.next(null);
  }
  const c = Te.select("appMetadata").pipe(is(Te.get().appMetadata), ls(1));
  return Tt(t, c, (u) => n(1, i = u)), [s, i, o, a, c];
}
class O8 extends Zt {
  constructor(e) {
    super(), Qt(this, e, S8, k8, Vt, {}, x8);
  }
}
function T8(t) {
  qt(t, "svelte-z54y2j", ".icon.svelte-z54y2j{border-radius:50px;color:var(--onboard-primary-500, var(--primary-500))}");
}
function I8(t) {
  let e, n;
  return {
    c() {
      e = Z("div"), U(e, "class", "icon flex svelte-z54y2j"), U(e, "style", n = `width: ${/*size*/
      t[0]}px; height: ${/*size*/
      t[0]}px;`);
    },
    m(r, s) {
      ie(r, e, s), e.innerHTML = nh;
    },
    p(r, [s]) {
      s & /*size*/
      1 && n !== (n = `width: ${/*size*/
      r[0]}px; height: ${/*size*/
      r[0]}px;`) && U(e, "style", n);
    },
    i: X,
    o: X,
    d(r) {
      r && re(e);
    }
  };
}
function N8(t, e, n) {
  let { size: r = 20 } = e;
  return t.$$set = (s) => {
    "size" in s && n(0, r = s.size);
  }, [r];
}
class P8 extends Zt {
  constructor(e) {
    super(), Qt(this, e, N8, I8, Vt, { size: 0 }, T8);
  }
}
function R8(t) {
  qt(t, "svelte-20hjq1", `.content.svelte-20hjq1{padding:1rem;width:300px;font-family:var(--onboard-font-family-normal, var(--font-family-normal));font-size:var(--onboard-font-size-5, var(--font-size-5));line-height:24px;background:var(
      --onboard-action-required-modal-background,
      var(--onboard-white, var(--white))
    )}.icon-container.svelte-20hjq1{width:3rem;height:3rem;background:var(--onboard-primary-100, var(--primary-100));border-radius:24px}h4.svelte-20hjq1{margin:1.5rem 0 0.5rem 0;font-weight:600}.action-required-heading.svelte-20hjq1,.action-required-info.svelte-20hjq1{color:var(
      --onboard-action-required-text-color,
      var(--onboard-black, inherit)
    )}.action-required-btn.svelte-20hjq1{color:var(
      --onboard-action-required-btn-text-color,
      var(--onboard-black, inherit)
    )}p.svelte-20hjq1{margin:0;font-weight:400}a.svelte-20hjq1{font-weight:600}button.svelte-20hjq1{margin-top:1.5rem;font-weight:600}`);
}
function Bg(t) {
  let e, n = (
    /*$_*/
    t[1]("modals.actionRequired.linkText", { values: { wallet: (
      /*wallet*/
      t[0]
    ) } }) + ""
  ), r;
  return {
    c() {
      e = Z("a"), r = Ge(n), U(e, "href", "https://metamask.zendesk.com/hc/en-us/articles/360061346311-Switching-accounts-in-MetaMask"), U(e, "target", "_blank"), U(e, "rel", "noreferrer noopener"), U(e, "class", "svelte-20hjq1");
    },
    m(s, i) {
      ie(s, e, i), W(e, r);
    },
    p(s, i) {
      i & /*$_, wallet*/
      3 && n !== (n = /*$_*/
      s[1]("modals.actionRequired.linkText", { values: { wallet: (
        /*wallet*/
        s[0]
      ) } }) + "") && it(r, n);
    },
    d(s) {
      s && re(e);
    }
  };
}
function B8(t) {
  let e, n, r, s, i, o = (
    /*$_*/
    t[1]("modals.actionRequired.heading", { values: { wallet: (
      /*wallet*/
      t[0]
    ) } }) + ""
  ), a, c, u, f = (
    /*$_*/
    t[1]("modals.actionRequired.paragraph", { values: { wallet: (
      /*wallet*/
      t[0]
    ) } }) + ""
  ), l, m, p, d, h = (
    /*$_*/
    t[1]("modals.actionRequired.buttonText") + ""
  ), b, g, y, w;
  r = new P8({});
  let _ = (
    /*wallet*/
    t[0] === "MetaMask" && Bg(t)
  );
  return {
    c() {
      e = Z("div"), n = Z("div"), ze(r.$$.fragment), s = we(), i = Z("h4"), a = Ge(o), c = we(), u = Z("p"), l = Ge(f), m = we(), _ && _.c(), p = we(), d = Z("button"), b = Ge(h), U(n, "class", "icon-container flex justify-center items-center svelte-20hjq1"), U(i, "class", "action-required-heading svelte-20hjq1"), U(u, "class", "action-required-info svelte-20hjq1"), U(d, "class", "button-neutral-solid rounded action-required-btn svelte-20hjq1"), U(e, "class", "content svelte-20hjq1");
    },
    m(E, k) {
      ie(E, e, k), W(e, n), Ue(r, n, null), W(e, s), W(e, i), W(i, a), W(e, c), W(e, u), W(u, l), W(u, m), _ && _.m(u, null), W(e, p), W(e, d), W(d, b), g = !0, y || (w = Hn(
        d,
        "click",
        /*close*/
        t[2]
      ), y = !0);
    },
    p(E, k) {
      (!g || k & /*$_, wallet*/
      3) && o !== (o = /*$_*/
      E[1]("modals.actionRequired.heading", { values: { wallet: (
        /*wallet*/
        E[0]
      ) } }) + "") && it(a, o), (!g || k & /*$_, wallet*/
      3) && f !== (f = /*$_*/
      E[1]("modals.actionRequired.paragraph", { values: { wallet: (
        /*wallet*/
        E[0]
      ) } }) + "") && it(l, f), /*wallet*/
      E[0] === "MetaMask" ? _ ? _.p(E, k) : (_ = Bg(E), _.c(), _.m(u, null)) : _ && (_.d(1), _ = null), (!g || k & /*$_*/
      2) && h !== (h = /*$_*/
      E[1]("modals.actionRequired.buttonText") + "") && it(b, h);
    },
    i(E) {
      g || (J(r.$$.fragment, E), g = !0);
    },
    o(E) {
      se(r.$$.fragment, E), g = !1;
    },
    d(E) {
      E && re(e), je(r), _ && _.d(), y = !1, w();
    }
  };
}
function L8(t) {
  let e, n;
  return e = new Yp({
    props: {
      close: (
        /*close*/
        t[2]
      ),
      $$slots: { default: [B8] },
      $$scope: { ctx: t }
    }
  }), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p(r, [s]) {
      const i = {};
      s & /*$$scope, $_, wallet*/
      11 && (i.$$scope = { dirty: s, ctx: r }), e.$set(i);
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function M8(t, e, n) {
  let r;
  Tt(t, Qs, (o) => n(1, r = o));
  let { wallet: s } = e;
  function i() {
    Nr.next({ inProgress: !1, actionRequired: "" });
  }
  return t.$$set = (o) => {
    "wallet" in o && n(0, s = o.wallet);
  }, [s, r, i];
}
class D8 extends Zt {
  constructor(e) {
    super(), Qt(this, e, M8, L8, Vt, { wallet: 0 }, R8);
  }
}
function $8(t) {
  qt(t, "svelte-w5zexe", `.flex{display:flex}.inline-flex{display:inline-flex}.flex-column{flex-direction:column}.items-center{align-items:center}.items-end{align-items:flex-end}.items-start{align-items:flex-start}.justify-center{justify-content:center}.justify-start{justify-content:flex-start}.justify-between{justify-content:space-between}.justify-end{justify-content:flex-end}.justify-around{justify-content:space-around}.relative{position:relative}.absolute{position:absolute}.fixed{position:fixed}.pointer{cursor:pointer}.shadow-1{box-shadow:var(--onboard-shadow-1, var(--shadow-1))}.w-100{width:100%}*{box-sizing:border-box}input{background:var(--onboard-white, var(--white))}input{width:100%;padding:0.5rem 1rem;outline:2px solid var(--onboard-gray-200, var(--gray-200));border:none;border-radius:8px;font-size:1rem;line-height:1.5;color:var(--onboard-gray-600, var(--gray-600));transition:all 200ms ease-in-out}input[type='checkbox']{-webkit-appearance:none;appearance:none;width:auto;background:var(--onboard-white, var(--white));outline:1px solid var(--onboard-gray-300, var(--gray-300));border:none;padding:0.5em;border-radius:3px;display:flex;justify-content:center;align-items:center;position:relative;cursor:pointer}input[type='checkbox']:hover{border-color:var(
      --onboard-checkbox-background,
      var(--onboard-primary-500, var(--primary-500))
    )}input[type='checkbox']:checked{background:var(
      --onboard-checkbox-background,
      var(--onboard-primary-500, var(--primary-500))
    );border-color:var(
      --onboard-checkbox-background,
      var(--onboard-primary-500, var(--primary-500))
    );color:var(--onboard-checkbox-color, var(--onboard-white, var(--white)))}input[type='checkbox']:checked:after{content:url("data:image/svg+xml,%3Csvg width='0.885em' height='0.6em' viewBox='0 0 14 11' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M0 6L5 11L14 2L12.59 0.58L5 8.17L1.41 4.59L0 6Z' fill='white'/%3E%3C/svg%3E");font-size:12px;position:absolute;color:var(--onboard-checkbox-color, var(--onboard-white, var(--white)))}input:hover{border-color:var(
      --onboard-checkbox-color,
      var(--onboard-white, var(--white))
    )}input:focus{border-color:var(--onboard-primary-500, var(--primary-500));box-shadow:0 0 1px 1px
      var(
        --onboard-checkbox-background,
        var(--onboard-primary-500, var(--primary-500))
      );box-shadow:0 0 0 1px -moz-mac-focusring}input:disabled, textarea:disabled, select:disabled{background:var(--gray-100)}input::-moz-focus-inner{outline:0;padding:0;margin-top:-2px;margin-bottom:-2px}a{color:var(
      --onboard-link-color,
      var(--onboard-primary-500, var(--primary-500))
    );text-decoration:none}a:hover{text-decoration:underline}button{display:flex;align-items:center;justify-content:center;padding:calc(var(--onboard-spacing-4, var(--spacing-4)) - 1px);border-radius:24px;cursor:pointer;font:inherit;border:none;transition:background-color 150ms ease-in-out, color 150ms ease-in-out}.onboard-button-primary{background:var(--onboard-white, var(--white));padding:calc(var(--onboard-spacing-5, var(--spacing-5)) - 1px)
      calc(var(--onboard-spacing-4, var(--spacing-4)) - 1px);color:var(--onboard-gray-500, var(--gray-500));font-size:var(--onboard-font-size-6, var(--font-size-6));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3));border:1px solid var(--onboard-gray-500, var(--gray-500));font-weight:600}.button-neutral-solid{width:100%;border-radius:8px;background:var(--onboard-gray-500, var(--gray-500));color:var(--onboard-white, var(--white));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3))}.button-neutral-solid-b{width:100%;background:var(--onboard-gray-100, var(--gray-100));color:var(--onboard-gray-500, var(--gray-500));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3))}button.rounded{border-radius:24px}.button-neutral-solid:hover{background:var(--onboard-gray-700, var(--gray-700))}.button-neutral-solid-b:hover{background:var(--onboard-gray-200, var(--gray-200))}.button-neutral-solid:active{color:var(--onboard-gray-300, var(--gray-300))}.button-neutral-solid-b:active{color:var(--onboard-gray-600, var(--gray-600));background:var(--onboard-gray-300, var(--gray-300))}.container.svelte-w5zexe{padding:16px;font-family:var(--onboard-font-family-normal, var(--font-family-normal));pointer-events:none;touch-action:none;width:100%}.z-indexed.svelte-w5zexe{z-index:var(--account-center-z-index)}@media all and (min-width: 428px){.container.svelte-w5zexe{max-width:348px}}`);
}
function Lg(t) {
  let e, n;
  return e = new E8({
    props: {
      autoSelect: (
        /*$connectWallet$*/
        t[8].autoSelect
      )
    }
  }), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p(r, s) {
      const i = {};
      s & /*$connectWallet$*/
      256 && (i.autoSelect = /*$connectWallet$*/
      r[8].autoSelect), e.$set(i);
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function Mg(t) {
  let e, n;
  return e = new D8({
    props: {
      wallet: (
        /*$connectWallet$*/
        t[8].actionRequired
      )
    }
  }), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    p(r, s) {
      const i = {};
      s & /*$connectWallet$*/
      256 && (i.wallet = /*$connectWallet$*/
      r[8].actionRequired), e.$set(i);
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function Dg(t) {
  let e, n;
  return e = new O8({}), {
    c() {
      ze(e.$$.fragment);
    },
    m(r, s) {
      Ue(e, r, s), n = !0;
    },
    i(r) {
      n || (J(e.$$.fragment, r), n = !0);
    },
    o(r) {
      se(e.$$.fragment, r), n = !1;
    },
    d(r) {
      je(e, r);
    }
  };
}
function $g(t) {
  let e, n = (
    /*$notify$*/
    t[3].position.includes("bottom") && /*$accountCenter$*/
    t[1].position.includes("bottom") && /*samePositionOrMobile*/
    t[7]
  ), r, s, i, o = (
    /*$notify$*/
    t[3].position.includes("top") && /*$accountCenter$*/
    t[1].position.includes("top") && /*samePositionOrMobile*/
    t[7]
  ), a, c, u = n && Ug(t), f = {
    ctx: t,
    current: null,
    token: null,
    hasCatch: !1,
    pending: V8,
    then: G8,
    catch: W8,
    value: 23,
    blocks: [, , ,]
  };
  Wo(
    /*accountCenterComponent*/
    t[16],
    f
  );
  let l = o && jg(t);
  return {
    c() {
      e = Z("div"), u && u.c(), r = we(), s = Z("div"), f.block.c(), i = we(), l && l.c(), U(s, "id", "account-center-with-notify"), U(e, "class", "container flex flex-column fixed z-indexed svelte-w5zexe"), U(e, "style", a = /*setPositioningDefaults*/
      t[15](Cf)[
        /*$accountCenter$*/
        t[1].position
      ] + "; " + /*device*/
      (t[11].type === "mobile" && /*$accountCenter$*/
      t[1].position.includes("top") ? "padding-bottom: 0;" : (
        /*device*/
        t[11].type === "mobile" && /*$accountCenter$*/
        t[1].position.includes("bottom") ? "padding-top:0;" : ""
      )));
    },
    m(m, p) {
      ie(m, e, p), u && u.m(e, null), W(e, r), W(e, s), f.block.m(s, f.anchor = null), f.mount = () => s, f.anchor = null, W(e, i), l && l.m(e, null), c = !0;
    },
    p(m, p) {
      t = m, p & /*$notify$, $accountCenter$, samePositionOrMobile*/
      138 && (n = /*$notify$*/
      t[3].position.includes("bottom") && /*$accountCenter$*/
      t[1].position.includes("bottom") && /*samePositionOrMobile*/
      t[7]), n ? u ? (u.p(t, p), p & /*$notify$, $accountCenter$, samePositionOrMobile*/
      138 && J(u, 1)) : (u = Ug(t), u.c(), J(u, 1), u.m(e, r)) : u && (xt(), se(u, 1, 1, () => {
        u = null;
      }), Ct()), zl(f, t, p), p & /*$notify$, $accountCenter$, samePositionOrMobile*/
      138 && (o = /*$notify$*/
      t[3].position.includes("top") && /*$accountCenter$*/
      t[1].position.includes("top") && /*samePositionOrMobile*/
      t[7]), o ? l ? (l.p(t, p), p & /*$notify$, $accountCenter$, samePositionOrMobile*/
      138 && J(l, 1)) : (l = jg(t), l.c(), J(l, 1), l.m(e, null)) : l && (xt(), se(l, 1, 1, () => {
        l = null;
      }), Ct()), (!c || p & /*$accountCenter$*/
      2 && a !== (a = /*setPositioningDefaults*/
      t[15](Cf)[
        /*$accountCenter$*/
        t[1].position
      ] + "; " + /*device*/
      (t[11].type === "mobile" && /*$accountCenter$*/
      t[1].position.includes("top") ? "padding-bottom: 0;" : (
        /*device*/
        t[11].type === "mobile" && /*$accountCenter$*/
        t[1].position.includes("bottom") ? "padding-top:0;" : ""
      )))) && U(e, "style", a);
    },
    i(m) {
      c || (J(u), J(f.block), J(l), c = !0);
    },
    o(m) {
      se(u);
      for (let p = 0; p < 3; p += 1) {
        const d = f.blocks[p];
        se(d);
      }
      se(l), c = !1;
    },
    d(m) {
      m && re(e), u && u.d(), f.block.d(), f.token = null, f = null, l && l.d();
    }
  };
}
function Ug(t) {
  let e, n, r = {
    ctx: t,
    current: null,
    token: null,
    hasCatch: !1,
    pending: H8,
    then: j8,
    catch: U8,
    value: 22,
    blocks: [, , ,]
  };
  return Wo(
    /*notifyComponent*/
    t[17],
    r
  ), {
    c() {
      e = bt(), r.block.c();
    },
    m(s, i) {
      ie(s, e, i), r.block.m(s, r.anchor = i), r.mount = () => e.parentNode, r.anchor = e, n = !0;
    },
    p(s, i) {
      t = s, zl(r, t, i);
    },
    i(s) {
      n || (J(r.block), n = !0);
    },
    o(s) {
      for (let i = 0; i < 3; i += 1) {
        const o = r.blocks[i];
        se(o);
      }
      n = !1;
    },
    d(s) {
      s && re(e), r.block.d(s), r.token = null, r = null;
    }
  };
}
function U8(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function j8(t) {
  let e, n, r = (
    /*Notify*/
    t[22] && F8(t)
  );
  return {
    c() {
      r && r.c(), e = bt();
    },
    m(s, i) {
      r && r.m(s, i), ie(s, e, i), n = !0;
    },
    p(s, i) {
      /*Notify*/
      s[22] && r.p(s, i);
    },
    i(s) {
      n || (J(r), n = !0);
    },
    o(s) {
      se(r), n = !1;
    },
    d(s) {
      r && r.d(s), s && re(e);
    }
  };
}
function F8(t) {
  let e, n, r;
  var s = (
    /*Notify*/
    t[22]
  );
  function i(o) {
    return {
      props: {
        notifications: (
          /*$notifications$*/
          o[10]
        ),
        position: (
          /*$notify$*/
          o[3].position
        ),
        sharedContainer: (
          /*sharedContainer*/
          o[0]
        )
      }
    };
  }
  return s && (e = cs(s, i(t))), {
    c() {
      e && ze(e.$$.fragment), n = bt();
    },
    m(o, a) {
      e && Ue(e, o, a), ie(o, n, a), r = !0;
    },
    p(o, a) {
      const c = {};
      if (a & /*$notifications$*/
      1024 && (c.notifications = /*$notifications$*/
      o[10]), a & /*$notify$*/
      8 && (c.position = /*$notify$*/
      o[3].position), a & /*sharedContainer*/
      1 && (c.sharedContainer = /*sharedContainer*/
      o[0]), s !== (s = /*Notify*/
      o[22])) {
        if (e) {
          xt();
          const u = e;
          se(u.$$.fragment, 1, 0, () => {
            je(u, 1);
          }), Ct();
        }
        s ? (e = cs(s, i(o)), ze(e.$$.fragment), J(e.$$.fragment, 1), Ue(e, n.parentNode, n)) : e = null;
      } else s && e.$set(c);
    },
    i(o) {
      r || (e && J(e.$$.fragment, o), r = !0);
    },
    o(o) {
      e && se(e.$$.fragment, o), r = !1;
    },
    d(o) {
      o && re(n), e && je(e, o);
    }
  };
}
function H8(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function W8(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function G8(t) {
  let e, n, r = (
    /*AccountCenter*/
    t[23] && z8(t)
  );
  return {
    c() {
      r && r.c(), e = bt();
    },
    m(s, i) {
      r && r.m(s, i), ie(s, e, i), n = !0;
    },
    p(s, i) {
      /*AccountCenter*/
      s[23] && r.p(s, i);
    },
    i(s) {
      n || (J(r), n = !0);
    },
    o(s) {
      se(r), n = !1;
    },
    d(s) {
      r && r.d(s), s && re(e);
    }
  };
}
function z8(t) {
  let e, n, r;
  var s = (
    /*AccountCenter*/
    t[23]
  );
  function i(o) {
    return {};
  }
  return s && (e = cs(s, i())), {
    c() {
      e && ze(e.$$.fragment), n = bt();
    },
    m(o, a) {
      e && Ue(e, o, a), ie(o, n, a), r = !0;
    },
    p(o, a) {
      if (s !== (s = /*AccountCenter*/
      o[23])) {
        if (e) {
          xt();
          const c = e;
          se(c.$$.fragment, 1, 0, () => {
            je(c, 1);
          }), Ct();
        }
        s ? (e = cs(s, i()), ze(e.$$.fragment), J(e.$$.fragment, 1), Ue(e, n.parentNode, n)) : e = null;
      }
    },
    i(o) {
      r || (e && J(e.$$.fragment, o), r = !0);
    },
    o(o) {
      e && se(e.$$.fragment, o), r = !1;
    },
    d(o) {
      o && re(n), e && je(e, o);
    }
  };
}
function V8(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function jg(t) {
  let e, n, r = {
    ctx: t,
    current: null,
    token: null,
    hasCatch: !1,
    pending: J8,
    then: Q8,
    catch: q8,
    value: 22,
    blocks: [, , ,]
  };
  return Wo(
    /*notifyComponent*/
    t[17],
    r
  ), {
    c() {
      e = bt(), r.block.c();
    },
    m(s, i) {
      ie(s, e, i), r.block.m(s, r.anchor = i), r.mount = () => e.parentNode, r.anchor = e, n = !0;
    },
    p(s, i) {
      t = s, zl(r, t, i);
    },
    i(s) {
      n || (J(r.block), n = !0);
    },
    o(s) {
      for (let i = 0; i < 3; i += 1) {
        const o = r.blocks[i];
        se(o);
      }
      n = !1;
    },
    d(s) {
      s && re(e), r.block.d(s), r.token = null, r = null;
    }
  };
}
function q8(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function Q8(t) {
  let e, n, r = (
    /*Notify*/
    t[22] && Z8(t)
  );
  return {
    c() {
      r && r.c(), e = bt();
    },
    m(s, i) {
      r && r.m(s, i), ie(s, e, i), n = !0;
    },
    p(s, i) {
      /*Notify*/
      s[22] && r.p(s, i);
    },
    i(s) {
      n || (J(r), n = !0);
    },
    o(s) {
      se(r), n = !1;
    },
    d(s) {
      r && r.d(s), s && re(e);
    }
  };
}
function Z8(t) {
  let e, n, r;
  var s = (
    /*Notify*/
    t[22]
  );
  function i(o) {
    return {
      props: {
        notifications: (
          /*$notifications$*/
          o[10]
        ),
        position: (
          /*$notify$*/
          o[3].position
        ),
        sharedContainer: (
          /*sharedContainer*/
          o[0]
        )
      }
    };
  }
  return s && (e = cs(s, i(t))), {
    c() {
      e && ze(e.$$.fragment), n = bt();
    },
    m(o, a) {
      e && Ue(e, o, a), ie(o, n, a), r = !0;
    },
    p(o, a) {
      const c = {};
      if (a & /*$notifications$*/
      1024 && (c.notifications = /*$notifications$*/
      o[10]), a & /*$notify$*/
      8 && (c.position = /*$notify$*/
      o[3].position), a & /*sharedContainer*/
      1 && (c.sharedContainer = /*sharedContainer*/
      o[0]), s !== (s = /*Notify*/
      o[22])) {
        if (e) {
          xt();
          const u = e;
          se(u.$$.fragment, 1, 0, () => {
            je(u, 1);
          }), Ct();
        }
        s ? (e = cs(s, i(o)), ze(e.$$.fragment), J(e.$$.fragment, 1), Ue(e, n.parentNode, n)) : e = null;
      } else s && e.$set(c);
    },
    i(o) {
      r || (e && J(e.$$.fragment, o), r = !0);
    },
    o(o) {
      e && se(e.$$.fragment, o), r = !1;
    },
    d(o) {
      o && re(n), e && je(e, o);
    }
  };
}
function J8(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function Fg(t) {
  let e, n, r, s, i = (
    /*$accountCenter$*/
    t[1].enabled && /*$wallets$*/
    t[2].length && Hg(t)
  );
  return {
    c() {
      e = Z("div"), n = Z("div"), i && i.c(), U(e, "class", "container flex flex-column fixed z-indexed svelte-w5zexe"), U(e, "style", r = /*setPositioningDefaults*/
      t[15](Cf)[
        /*$accountCenter$*/
        t[1].position
      ] + "; " + /*device*/
      (t[11].type === "mobile" && /*$accountCenter$*/
      t[1].position.includes("top") ? "padding-bottom: 0;" : (
        /*device*/
        t[11].type === "mobile" && /*$accountCenter$*/
        t[1].position.includes("bottom") ? "padding-top:0;" : ""
      )));
    },
    m(o, a) {
      ie(o, e, a), W(e, n), i && i.m(n, null), s = !0;
    },
    p(o, a) {
      /*$accountCenter$*/
      o[1].enabled && /*$wallets$*/
      o[2].length ? i ? (i.p(o, a), a & /*$accountCenter$, $wallets$*/
      6 && J(i, 1)) : (i = Hg(o), i.c(), J(i, 1), i.m(n, null)) : i && (xt(), se(i, 1, 1, () => {
        i = null;
      }), Ct()), (!s || a & /*$accountCenter$*/
      2 && r !== (r = /*setPositioningDefaults*/
      o[15](Cf)[
        /*$accountCenter$*/
        o[1].position
      ] + "; " + /*device*/
      (o[11].type === "mobile" && /*$accountCenter$*/
      o[1].position.includes("top") ? "padding-bottom: 0;" : (
        /*device*/
        o[11].type === "mobile" && /*$accountCenter$*/
        o[1].position.includes("bottom") ? "padding-top:0;" : ""
      )))) && U(e, "style", r);
    },
    i(o) {
      s || (J(i), s = !0);
    },
    o(o) {
      se(i), s = !1;
    },
    d(o) {
      o && re(e), i && i.d();
    }
  };
}
function Hg(t) {
  let e, n, r = {
    ctx: t,
    current: null,
    token: null,
    hasCatch: !1,
    pending: eE,
    then: Y8,
    catch: K8,
    value: 23,
    blocks: [, , ,]
  };
  return Wo(
    /*accountCenterComponent*/
    t[16],
    r
  ), {
    c() {
      e = bt(), r.block.c();
    },
    m(s, i) {
      ie(s, e, i), r.block.m(s, r.anchor = i), r.mount = () => e.parentNode, r.anchor = e, n = !0;
    },
    p(s, i) {
      t = s, zl(r, t, i);
    },
    i(s) {
      n || (J(r.block), n = !0);
    },
    o(s) {
      for (let i = 0; i < 3; i += 1) {
        const o = r.blocks[i];
        se(o);
      }
      n = !1;
    },
    d(s) {
      s && re(e), r.block.d(s), r.token = null, r = null;
    }
  };
}
function K8(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function Y8(t) {
  let e, n, r = (
    /*AccountCenter*/
    t[23] && X8(t)
  );
  return {
    c() {
      r && r.c(), e = bt();
    },
    m(s, i) {
      r && r.m(s, i), ie(s, e, i), n = !0;
    },
    p(s, i) {
      /*AccountCenter*/
      s[23] && r.p(s, i);
    },
    i(s) {
      n || (J(r), n = !0);
    },
    o(s) {
      se(r), n = !1;
    },
    d(s) {
      r && r.d(s), s && re(e);
    }
  };
}
function X8(t) {
  let e, n, r;
  var s = (
    /*AccountCenter*/
    t[23]
  );
  function i(o) {
    return {};
  }
  return s && (e = cs(s, i())), {
    c() {
      e && ze(e.$$.fragment), n = bt();
    },
    m(o, a) {
      e && Ue(e, o, a), ie(o, n, a), r = !0;
    },
    p(o, a) {
      if (s !== (s = /*AccountCenter*/
      o[23])) {
        if (e) {
          xt();
          const c = e;
          se(c.$$.fragment, 1, 0, () => {
            je(c, 1);
          }), Ct();
        }
        s ? (e = cs(s, i()), ze(e.$$.fragment), J(e.$$.fragment, 1), Ue(e, n.parentNode, n)) : e = null;
      }
    },
    i(o) {
      r || (e && J(e.$$.fragment, o), r = !0);
    },
    o(o) {
      e && se(e.$$.fragment, o), r = !1;
    },
    d(o) {
      o && re(n), e && je(e, o);
    }
  };
}
function eE(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function Wg(t) {
  let e, n, r, s = {
    ctx: t,
    current: null,
    token: null,
    hasCatch: !1,
    pending: sE,
    then: nE,
    catch: tE,
    value: 22,
    blocks: [, , ,]
  };
  return Wo(
    /*notifyComponent*/
    t[17],
    s
  ), {
    c() {
      e = Z("div"), s.block.c(), U(e, "class", "container flex flex-column fixed z-indexed svelte-w5zexe"), U(e, "style", n = /*setPositioningDefaults*/
      t[15](Gg)[
        /*$notify$*/
        t[3].position
      ] + "; " + /*device*/
      (t[11].type === "mobile" && /*$notify$*/
      t[3].position.includes("top") ? "padding-bottom: 0;" : (
        /*device*/
        t[11].type === "mobile" && /*$notify$*/
        t[3].position.includes("bottom") ? "padding-top:0;" : ""
      )));
    },
    m(i, o) {
      ie(i, e, o), s.block.m(e, s.anchor = null), s.mount = () => e, s.anchor = null, r = !0;
    },
    p(i, o) {
      t = i, zl(s, t, o), (!r || o & /*$notify$*/
      8 && n !== (n = /*setPositioningDefaults*/
      t[15](Gg)[
        /*$notify$*/
        t[3].position
      ] + "; " + /*device*/
      (t[11].type === "mobile" && /*$notify$*/
      t[3].position.includes("top") ? "padding-bottom: 0;" : (
        /*device*/
        t[11].type === "mobile" && /*$notify$*/
        t[3].position.includes("bottom") ? "padding-top:0;" : ""
      )))) && U(e, "style", n);
    },
    i(i) {
      r || (J(s.block), r = !0);
    },
    o(i) {
      for (let o = 0; o < 3; o += 1) {
        const a = s.blocks[o];
        se(a);
      }
      r = !1;
    },
    d(i) {
      i && re(e), s.block.d(), s.token = null, s = null;
    }
  };
}
function tE(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function nE(t) {
  let e, n, r = (
    /*Notify*/
    t[22] && rE(t)
  );
  return {
    c() {
      r && r.c(), e = bt();
    },
    m(s, i) {
      r && r.m(s, i), ie(s, e, i), n = !0;
    },
    p(s, i) {
      /*Notify*/
      s[22] && r.p(s, i);
    },
    i(s) {
      n || (J(r), n = !0);
    },
    o(s) {
      se(r), n = !1;
    },
    d(s) {
      r && r.d(s), s && re(e);
    }
  };
}
function rE(t) {
  let e, n, r;
  var s = (
    /*Notify*/
    t[22]
  );
  function i(o) {
    return {
      props: {
        notifications: (
          /*$notifications$*/
          o[10]
        ),
        position: (
          /*$notify$*/
          o[3].position
        ),
        sharedContainer: (
          /*sharedContainer*/
          o[0]
        )
      }
    };
  }
  return s && (e = cs(s, i(t))), {
    c() {
      e && ze(e.$$.fragment), n = bt();
    },
    m(o, a) {
      e && Ue(e, o, a), ie(o, n, a), r = !0;
    },
    p(o, a) {
      const c = {};
      if (a & /*$notifications$*/
      1024 && (c.notifications = /*$notifications$*/
      o[10]), a & /*$notify$*/
      8 && (c.position = /*$notify$*/
      o[3].position), a & /*sharedContainer*/
      1 && (c.sharedContainer = /*sharedContainer*/
      o[0]), s !== (s = /*Notify*/
      o[22])) {
        if (e) {
          xt();
          const u = e;
          se(u.$$.fragment, 1, 0, () => {
            je(u, 1);
          }), Ct();
        }
        s ? (e = cs(s, i(o)), ze(e.$$.fragment), J(e.$$.fragment, 1), Ue(e, n.parentNode, n)) : e = null;
      } else s && e.$set(c);
    },
    i(o) {
      r || (e && J(e.$$.fragment, o), r = !0);
    },
    o(o) {
      e && se(e.$$.fragment, o), r = !1;
    },
    d(o) {
      o && re(n), e && je(e, o);
    }
  };
}
function sE(t) {
  return {
    c: X,
    m: X,
    p: X,
    i: X,
    o: X,
    d: X
  };
}
function iE(t) {
  let e, n, r, s, i, o, a, c = (
    /*$connectWallet$*/
    t[8].inProgress && Lg(t)
  ), u = (
    /*$connectWallet$*/
    t[8].actionRequired && Mg(t)
  ), f = (
    /*$switchChainModal$*/
    t[9] && Dg()
  ), l = (
    /*displayAccountCenterNotifySameContainer*/
    t[4] && $g(t)
  ), m = (
    /*displayAccountCenterSeparate*/
    t[5] && Fg(t)
  ), p = (
    /*displayNotifySeparate*/
    t[6] && Wg(t)
  );
  return {
    c() {
      c && c.c(), e = we(), u && u.c(), n = we(), f && f.c(), r = we(), l && l.c(), s = we(), m && m.c(), i = we(), p && p.c(), o = bt();
    },
    m(d, h) {
      c && c.m(d, h), ie(d, e, h), u && u.m(d, h), ie(d, n, h), f && f.m(d, h), ie(d, r, h), l && l.m(d, h), ie(d, s, h), m && m.m(d, h), ie(d, i, h), p && p.m(d, h), ie(d, o, h), a = !0;
    },
    p(d, [h]) {
      /*$connectWallet$*/
      d[8].inProgress ? c ? (c.p(d, h), h & /*$connectWallet$*/
      256 && J(c, 1)) : (c = Lg(d), c.c(), J(c, 1), c.m(e.parentNode, e)) : c && (xt(), se(c, 1, 1, () => {
        c = null;
      }), Ct()), /*$connectWallet$*/
      d[8].actionRequired ? u ? (u.p(d, h), h & /*$connectWallet$*/
      256 && J(u, 1)) : (u = Mg(d), u.c(), J(u, 1), u.m(n.parentNode, n)) : u && (xt(), se(u, 1, 1, () => {
        u = null;
      }), Ct()), /*$switchChainModal$*/
      d[9] ? f ? h & /*$switchChainModal$*/
      512 && J(f, 1) : (f = Dg(), f.c(), J(f, 1), f.m(r.parentNode, r)) : f && (xt(), se(f, 1, 1, () => {
        f = null;
      }), Ct()), /*displayAccountCenterNotifySameContainer*/
      d[4] ? l ? (l.p(d, h), h & /*displayAccountCenterNotifySameContainer*/
      16 && J(l, 1)) : (l = $g(d), l.c(), J(l, 1), l.m(s.parentNode, s)) : l && (xt(), se(l, 1, 1, () => {
        l = null;
      }), Ct()), /*displayAccountCenterSeparate*/
      d[5] ? m ? (m.p(d, h), h & /*displayAccountCenterSeparate*/
      32 && J(m, 1)) : (m = Fg(d), m.c(), J(m, 1), m.m(i.parentNode, i)) : m && (xt(), se(m, 1, 1, () => {
        m = null;
      }), Ct()), /*displayNotifySeparate*/
      d[6] ? p ? (p.p(d, h), h & /*displayNotifySeparate*/
      64 && J(p, 1)) : (p = Wg(d), p.c(), J(p, 1), p.m(o.parentNode, o)) : p && (xt(), se(p, 1, 1, () => {
        p = null;
      }), Ct());
    },
    i(d) {
      a || (J(c), J(u), J(f), J(l), J(m), J(p), a = !0);
    },
    o(d) {
      se(c), se(u), se(f), se(l), se(m), se(p), a = !1;
    },
    d(d) {
      c && c.d(d), d && re(e), u && u.d(d), d && re(n), f && f.d(d), d && re(r), l && l.d(d), d && re(s), m && m.d(d), d && re(i), p && p.d(d), d && re(o);
    }
  };
}
const Cf = "account-center", Gg = "notify-onboard-container";
function oE(t, e, n) {
  let r, s, i, o, a, c, u, f, l, m, p, d;
  Tt(t, Qp, (x) => n(2, f = x)), Tt(t, Nr, (x) => n(8, m = x)), Tt(t, Bl, (x) => n(9, p = x));
  const { device: h, containerElements: b } = Tn, g = Te.select("accountCenter").pipe(is(Te.get().accountCenter), ls(1));
  Tt(t, g, (x) => n(1, u = x));
  const y = Te.select("notify").pipe(is(Te.get().notify), ls(1));
  Tt(t, y, (x) => n(3, l = x));
  const w = Te.select("notifications").pipe(is(Te.get().notifications));
  Tt(t, w, (x) => n(10, d = x));
  const _ = (x) => ({
    topLeft: `
        top: var(--${x}-position-top, 0); 
        left: var(--${x}-position-left, 0);`,
    topRight: `
        top: var(--${x}-position-top, 0); 
        right: var(--${x}-position-right, 0);`,
    bottomRight: `
        bottom: var(--${x}-position-bottom, 0); 
        right: var(--${x}-position-right, 0);`,
    bottomLeft: `
        bottom: var(--${x}-position-bottom, 0); 
        left: var(--${x}-position-left, 0);`
  }), E = u.enabled ? import("./Index-838ea599-CkVxQacD.js").then((x) => x.default) : Promise.resolve(null), k = l.enabled ? import("./Index-2cf0e913-CTnBUPQ8.js").then((x) => x.default) : Promise.resolve(null), S = u.enabled && b && b.accountCenter, A = (x, T, N, F) => {
    const V = x.attachShadow({ mode: "open" });
    let H = document.querySelector("onboard-v2").shadowRoot.styleSheets;
    const Q = new CSSStyleSheet();
    Object.values(H).forEach((pe) => {
      Object.values(pe.cssRules).forEach((ve) => Q.insertRule(ve.cssText));
    }), V.adoptedStyleSheets = [Q];
    const ae = document.querySelector(T);
    if (ae.appendChild(x), !ae)
      throw new Error(`Element with query ${T} does not exist.`);
    (async () => {
      let pe = await N;
      pe && new pe({
        target: V,
        props: {
          settings: F,
          mountInContainer: !0
        }
      });
    })();
  };
  if (S) {
    const x = document.createElement("onboard-account-center");
    A(x, S, E, u);
  }
  return t.$$.update = () => {
    t.$$.dirty & /*$accountCenter$, $notify$*/
    10 && n(0, r = !S && u.enabled && l.enabled && l.position === u.position), t.$$.dirty & /*$accountCenter$, $notify$*/
    10 && n(7, s = h.type === "mobile" || u.position === l.position), t.$$.dirty & /*$notify$, $accountCenter$*/
    10 && n(18, i = l.position.includes("bottom") && u.position.includes("bottom") || l.position.includes("top") && u.position.includes("top")), t.$$.dirty & /*$notify$, $accountCenter$, sharedMobileContainerCheck, $wallets$*/
    262158 && n(6, o = l.enabled && (!u.enabled || S || l.position !== u.position && h.type !== "mobile" || h.type === "mobile" && !i || !f.length)), t.$$.dirty & /*$accountCenter$, $notify$, sharedMobileContainerCheck, $wallets$*/
    262158 && n(5, a = u.enabled && (!l.enabled || l.position !== u.position && h.type !== "mobile" || h.type === "mobile" && !i) && f.length), t.$$.dirty & /*$notify$, $accountCenter$, sharedContainer, sharedMobileContainerCheck, $wallets$*/
    262159 && n(4, c = l.enabled && u.enabled && (r || h.type === "mobile" && i) && f.length);
  }, [
    r,
    u,
    f,
    l,
    c,
    a,
    o,
    s,
    m,
    p,
    d,
    h,
    g,
    y,
    w,
    _,
    E,
    k,
    i
  ];
}
class aE extends Zt {
  constructor(e) {
    super(), Qt(this, e, oE, iE, Vt, {}, $8);
  }
}
const Uc = {
  connectWallet: x6,
  disconnectWallet: Kp,
  setChain: R6,
  state: {
    get: Te.get,
    select: Te.select,
    actions: {
      setWalletModules: hy,
      setLocale: w6,
      updateNotify: Ju,
      customNotification: g6,
      updateBalances: C6,
      updateAccountCenter: fy,
      setPrimaryWallet: p6,
      updateTheme: dy,
      updateAppMetadata: py
    }
  }
};
function lE(t) {
  if (typeof window > "u")
    return Uc;
  {
    const w = e6(t);
    if (w)
      throw w;
  }
  const { wallets: e, chains: n, appMetadata: r, i18n: s, accountCenter: i, notify: o, gas: a, connect: c, containerElements: u, transactionPreview: f, theme: l, disableFontDownload: m, unstoppableResolution: p, wagmi: d } = t;
  u && ag({ containerElements: u });
  const { device: h, svelteInstance: b } = Tn;
  if (b && (console.warn("Re-initializing Onboard and resetting back to initial state"), Vp.next()), U6(s), h6(Y4(n)), typeof c < "u" && m6(c), typeof i < "u") {
    let w;
    const { hideTransactionProtectionBtn: _, transactionProtectionInfoLink: E } = i;
    h.type === "mobile" ? w = Object.assign(Object.assign(Object.assign({}, gi.accountCenter), {
      hideTransactionProtectionBtn: _,
      transactionProtectionInfoLink: E
    }), i.mobile ? i.mobile : {}) : i.desktop && (w = Object.assign(Object.assign(Object.assign({}, gi.accountCenter), {
      hideTransactionProtectionBtn: _,
      transactionProtectionInfoLink: E
    }), i.desktop)), typeof w < "u" && fy(w);
  }
  let g;
  if (typeof d < "u" && (g = d(Object.assign({ disconnect: Kp, updateChain: uy }, P6()))), typeof o < "u")
    if (console.warn("Support for notifications on transaction state changes have been deprecated. Custom notifications can still be sent ot the user."), "desktop" in o || "mobile" in o) {
      const w = a6(o);
      if (w)
        throw w;
      o && o.desktop && o.desktop.position && i && i.desktop && i.desktop.position && (o.desktop.position = i.desktop.position), o && o.mobile && o.mobile.position && i && i.mobile && i.mobile.position && (o.mobile.position = i.mobile.position);
      let _ = {};
      h.type === "mobile" && o.mobile ? _ = Object.assign(Object.assign({}, gi.notify), o.mobile) : o.desktop && (_ = Object.assign(Object.assign({}, gi.notify), o.desktop)), Ju(_);
    } else {
      const w = cy(o);
      if (w)
        throw w;
      const _ = Object.assign(Object.assign({}, gi.notify), o);
      Ju(_);
    }
  else {
    const w = gi.notify;
    Ju(w);
  }
  const y = b || fE(l || {}, m || !1);
  if (ag({
    svelteInstance: y,
    initialWalletInit: e,
    gas: a,
    unstoppableResolution: p,
    wagmi: g
  }), r && py(r), f && console.error("Transaction Preview support has been removed and is no longer supported within Web3-Onboard"), l && dy(l), c && (c.autoConnectLastWallet || c.autoConnectAllPreviousWallet)) {
    const w = rh(os.LAST_CONNECTED_WALLET);
    try {
      const _ = JSON.parse(w);
      _ && Array.isArray(_) && _.length && zg(_, c), _ && typeof _ == "string" && zg([_], c);
    } catch (_) {
      _ instanceof SyntaxError && w && Uc.connectWallet({
        autoSelect: {
          label: w,
          disableModals: !0
        }
      });
    }
  }
  return Uc;
}
const cE = (t, e) => e || document.body && (getComputedStyle(document.body).getPropertyValue("--onboard-font-family-normal") || getComputedStyle(document.body).getPropertyValue("--w3o-font-family")) ? !0 : t ? !!(typeof t == "object" && t["--w3o-font-family"]) : !1, uE = async () => {
  const { InterVar: t } = await import("./index-Jp32L0kj.js"), e = document.createElement("style");
  e.innerHTML = `
    ${t}
  `, document.body.appendChild(e);
}, zg = async (t, e) => {
  const n = [], r = t;
  if (!e.autoConnectAllPreviousWallet)
    Uc.connectWallet({
      autoSelect: { label: r[0], disableModals: !0 }
    }), n.push(r[0]);
  else
    for (let s = r.length; s--; )
      (await Uc.connectWallet({
        autoSelect: { label: r[s], disableModals: !0 }
      })).some((o) => o.label === r[s]) && n.unshift(r[s]);
  sh(os.LAST_CONNECTED_WALLET, JSON.stringify(n));
};
function fE(t, e) {
  class n extends HTMLElement {
    constructor() {
      super();
    }
  }
  customElements.get("onboard-v2") || customElements.define("onboard-v2", n), cE(t, e) || uE();
  const r = document.createElement("onboard-v2"), s = r.attachShadow({ mode: "open" });
  r.style.all = "initial", s.innerHTML = `

  <style>
    :host {
          /* COLORS */
          --white: white;
          --black: black;
          --primary-1: #2F80ED;
          --primary-100: #eff1fc;
          --primary-200: #d0d4f7;
          --primary-300: #b1b8f2;
          --primary-400: #929bed;
          --primary-500: #6370e5;
          --primary-600: #454ea0;
          --primary-700: #323873;
          --gray-100: #ebebed;
          --gray-200: #c2c4c9;
          --gray-300: #999ca5;
          --gray-400: #707481;
          --gray-500: #33394b;
          --gray-600: #242835;
          --gray-700: #1a1d26;
          --success-100: #d1fae3;
          --success-200: #baf7d5;
          --success-300: #a4f4c6;
          --success-400: #8df2b8;
          --success-500: #5aec99;
          --success-600: #18ce66;
          --success-700: #129b4d;
          --danger-100: #ffe5e6;
          --danger-200: #ffcccc;
          --danger-300: #ffb3b3;
          --danger-400: #ff8080;
          --danger-500: #ff4f4f;
          --danger-600: #cc0000;
          --danger-700: #660000;
          --warning-100: #ffefcc;
          --warning-200: #ffe7b3;
          --warning-300: #ffd780;
          --warning-400: #ffc74c;
          --warning-500: #ffaf00;
          --warning-600: #cc8c00;
          --warning-700: #664600;

          /* FONTS */
          --font-family-normal: var(--w3o-font-family, Inter, sans-serif);

          --font-size-1: 3rem;
          --font-size-2: 2.25rem;
          --font-size-3: 1.5rem;
          --font-size-4: 1.25rem;
          --font-size-5: 1rem;
          --font-size-6: .875rem;
          --font-size-7: .75rem;

          --font-line-height-1: 24px;
          --font-line-height-2: 20px;
          --font-line-height-3: 16px;
          --font-line-height-4: 12px;

          /* SPACING */
          --spacing-1: 3rem;
          --spacing-2: 2rem;
          --spacing-3: 1.5rem;
          --spacing-4: 1rem;
          --spacing-5: 0.5rem;
          --spacing-6: 0.25rem;
          --spacing-7: 0.125rem;

          /* BORDER RADIUS */
          --border-radius-1: 24px;
          --border-radius-2: 20px;
          --border-radius-3: 16px;
          --border-radius-4: 12px;
          --border-radius-5: 8px;

          /* SHADOWS */
          --shadow-0: none;
          --shadow-1: 0px 4px 12px rgba(0, 0, 0, 0.1);
          --shadow-2: inset 0px -1px 0px rgba(0, 0, 0, 0.1);
          --shadow-3: 0px 4px 16px rgba(0, 0, 0, 0.2);

          /* MODAL POSITIONING */
          --modal-z-index: 10;
          --modal-top: unset;
          --modal-right: unset;
          --modal-bottom: unset;
          --modal-left: unset;

          /* MODAL STYLES */
          --modal-backdrop: rgba(0, 0, 0, 0.6);

        }
      </style>
    `;
  let i;
  Tn && Tn.containerElements && Tn.containerElements.connectModal && (i = Tn.containerElements.connectModal);
  const o = i || Te.get().accountCenter.containerElement || "body", a = document.querySelector(o);
  if (!a)
    throw new Error(`Element with query ${o} does not exist.`);
  return a.appendChild(r), new aE({
    target: s
  });
}
const hE = "Must call the provided initialization method`init` method before using hooks.";
let kf, Ey = !1;
const dE = (t) => (kf = lE(t), kf), xy = cp.createContext(void 0);
function pE({ children: t, web3Onboard: e }) {
  return Ey = !0, kf = void 0, cp.createElement(xy.Provider, { value: e }, t);
}
function Cy() {
  const t = Ey ? cp.useContext(xy) : kf;
  if (!t)
    throw new Error(hE);
  return t;
}
var Bu = { exports: {} }, zh = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Vg;
function mE() {
  if (Vg) return zh;
  Vg = 1;
  var t = up;
  function e(l, m) {
    return l === m && (l !== 0 || 1 / l === 1 / m) || l !== l && m !== m;
  }
  var n = typeof Object.is == "function" ? Object.is : e, r = t.useState, s = t.useEffect, i = t.useLayoutEffect, o = t.useDebugValue;
  function a(l, m) {
    var p = m(), d = r({ inst: { value: p, getSnapshot: m } }), h = d[0].inst, b = d[1];
    return i(function() {
      h.value = p, h.getSnapshot = m, c(h) && b({ inst: h });
    }, [l, p, m]), s(function() {
      return c(h) && b({ inst: h }), l(function() {
        c(h) && b({ inst: h });
      });
    }, [l]), o(p), p;
  }
  function c(l) {
    var m = l.getSnapshot;
    l = l.value;
    try {
      var p = m();
      return !n(l, p);
    } catch {
      return !0;
    }
  }
  function u(l, m) {
    return m();
  }
  var f = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? u : a;
  return zh.useSyncExternalStore = t.useSyncExternalStore !== void 0 ? t.useSyncExternalStore : f, zh;
}
var Vh = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var qg;
function gE() {
  return qg || (qg = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var t = up, e = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function n(w) {
      {
        for (var _ = arguments.length, E = new Array(_ > 1 ? _ - 1 : 0), k = 1; k < _; k++)
          E[k - 1] = arguments[k];
        r("error", w, E);
      }
    }
    function r(w, _, E) {
      {
        var k = e.ReactDebugCurrentFrame, S = k.getStackAddendum();
        S !== "" && (_ += "%s", E = E.concat([S]));
        var A = E.map(function(x) {
          return String(x);
        });
        A.unshift("Warning: " + _), Function.prototype.apply.call(console[w], console, A);
      }
    }
    function s(w, _) {
      return w === _ && (w !== 0 || 1 / w === 1 / _) || w !== w && _ !== _;
    }
    var i = typeof Object.is == "function" ? Object.is : s, o = t.useState, a = t.useEffect, c = t.useLayoutEffect, u = t.useDebugValue, f = !1, l = !1;
    function m(w, _, E) {
      f || t.startTransition !== void 0 && (f = !0, n("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var k = _();
      if (!l) {
        var S = _();
        i(k, S) || (n("The result of getSnapshot should be cached to avoid an infinite loop"), l = !0);
      }
      var A = o({
        inst: {
          value: k,
          getSnapshot: _
        }
      }), x = A[0].inst, T = A[1];
      return c(function() {
        x.value = k, x.getSnapshot = _, p(x) && T({
          inst: x
        });
      }, [w, k, _]), a(function() {
        p(x) && T({
          inst: x
        });
        var N = function() {
          p(x) && T({
            inst: x
          });
        };
        return w(N);
      }, [w]), u(k), k;
    }
    function p(w) {
      var _ = w.getSnapshot, E = w.value;
      try {
        var k = _();
        return !i(E, k);
      } catch {
        return !0;
      }
    }
    function d(w, _, E) {
      return _();
    }
    var h = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", b = !h, g = b ? d : m, y = t.useSyncExternalStore !== void 0 ? t.useSyncExternalStore : g;
    Vh.useSyncExternalStore = y, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Vh;
}
var Qg;
function bE() {
  return Qg || (Qg = 1, process.env.NODE_ENV === "production" ? Bu.exports = mE() : Bu.exports = gE()), Bu.exports;
}
var yE = bE();
const wE = (t = void 0) => {
  const e = Cy(), { select: n, get: r } = e.state, s = Ui((a) => {
    const { unsubscribe: c } = t ? n(t).subscribe(a) : n().subscribe(a);
    return () => c;
  }, [t]), i = Ui(() => {
    const a = r();
    return t ? a[t] : a;
  }, [t]), o = () => i();
  return yE.useSyncExternalStore(s, i, o);
}, em = () => {
  const t = Cy(), { connectWallet: e, disconnectWallet: n } = t, s = wE("wallets")[0] || null, [i, o] = ji(!1), a = Ui(async (m) => {
    o(!0);
    const p = await e(m);
    return o(!1), p;
  }, []), c = Ui(async ({ label: m }) => {
    o(!0);
    const p = await n({ label: m });
    return o(!1), p;
  }, []), u = t.state.actions.updateBalances, f = t.state.actions.setWalletModules, l = t.state.actions.setPrimaryWallet;
  return [
    { wallet: s, connecting: i },
    a,
    c,
    u,
    f,
    l
  ];
}, vE = "6.13.4";
function _E(t, e, n) {
  const r = e.split("|").map((i) => i.trim());
  for (let i = 0; i < r.length; i++)
    switch (e) {
      case "any":
        return;
      case "bigint":
      case "boolean":
      case "number":
      case "string":
        if (typeof t === e)
          return;
    }
  const s = new Error(`invalid value for type ${e}`);
  throw s.code = "INVALID_ARGUMENT", s.argument = `value.${n}`, s.value = t, s;
}
async function Sn(t) {
  const e = Object.keys(t);
  return (await Promise.all(e.map((r) => Promise.resolve(t[r])))).reduce((r, s, i) => (r[e[i]] = s, r), {});
}
function ke(t, e, n) {
  for (let r in e) {
    let s = e[r];
    const i = n ? n[r] : null;
    i && _E(s, i, r), Object.defineProperty(t, r, { enumerable: !0, value: s, writable: !1 });
  }
}
function Aa(t) {
  if (t == null)
    return "null";
  if (Array.isArray(t))
    return "[ " + t.map(Aa).join(", ") + " ]";
  if (t instanceof Uint8Array) {
    const e = "0123456789abcdef";
    let n = "0x";
    for (let r = 0; r < t.length; r++)
      n += e[t[r] >> 4], n += e[t[r] & 15];
    return n;
  }
  if (typeof t == "object" && typeof t.toJSON == "function")
    return Aa(t.toJSON());
  switch (typeof t) {
    case "boolean":
    case "symbol":
      return t.toString();
    case "bigint":
      return BigInt(t).toString();
    case "number":
      return t.toString();
    case "string":
      return JSON.stringify(t);
    case "object": {
      const e = Object.keys(t);
      return e.sort(), "{ " + e.map((n) => `${Aa(n)}: ${Aa(t[n])}`).join(", ") + " }";
    }
  }
  return "[ COULD NOT SERIALIZE ]";
}
function un(t, e) {
  return t && t.code === e;
}
function tm(t) {
  return un(t, "CALL_EXCEPTION");
}
function Rt(t, e, n) {
  let r = t;
  {
    const i = [];
    if (n) {
      if ("message" in n || "code" in n || "name" in n)
        throw new Error(`value will overwrite populated values: ${Aa(n)}`);
      for (const o in n) {
        if (o === "shortMessage")
          continue;
        const a = n[o];
        i.push(o + "=" + Aa(a));
      }
    }
    i.push(`code=${e}`), i.push(`version=${vE}`), i.length && (t += " (" + i.join(", ") + ")");
  }
  let s;
  switch (e) {
    case "INVALID_ARGUMENT":
      s = new TypeError(t);
      break;
    case "NUMERIC_FAULT":
    case "BUFFER_OVERRUN":
      s = new RangeError(t);
      break;
    default:
      s = new Error(t);
  }
  return ke(s, { code: e }), n && Object.assign(s, n), s.shortMessage == null && ke(s, { shortMessage: r }), s;
}
function K(t, e, n, r) {
  if (!t)
    throw Rt(e, n, r);
}
function D(t, e, n, r) {
  K(t, e, "INVALID_ARGUMENT", { argument: n, value: r });
}
function ky(t, e, n) {
  n == null && (n = ""), n && (n = ": " + n), K(t >= e, "missing arguemnt" + n, "MISSING_ARGUMENT", {
    count: t,
    expectedCount: e
  }), K(t <= e, "too many arguments" + n, "UNEXPECTED_ARGUMENT", {
    count: t,
    expectedCount: e
  });
}
["NFD", "NFC", "NFKD", "NFKC"].reduce((t, e) => {
  try {
    if ("test".normalize(e) !== "test")
      throw new Error("bad");
    if (e === "NFD" && "é".normalize("NFD") !== "é")
      throw new Error("broken");
    t.push(e);
  } catch {
  }
  return t;
}, []);
function Cu(t, e, n) {
  if (n == null && (n = ""), t !== e) {
    let r = n, s = "new";
    n && (r += ".", s += " " + n), K(!1, `private constructor; use ${r}from* methods`, "UNSUPPORTED_OPERATION", {
      operation: s
    });
  }
}
function Sy(t, e, n) {
  if (t instanceof Uint8Array)
    return n ? new Uint8Array(t) : t;
  if (typeof t == "string" && t.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)) {
    const r = new Uint8Array((t.length - 2) / 2);
    let s = 2;
    for (let i = 0; i < r.length; i++)
      r[i] = parseInt(t.substring(s, s + 2), 16), s += 2;
    return r;
  }
  D(!1, "invalid BytesLike value", e || "value", t);
}
function st(t, e) {
  return Sy(t, e, !1);
}
function On(t, e) {
  return Sy(t, e, !0);
}
function wt(t, e) {
  return !(typeof t != "string" || !t.match(/^0x[0-9A-Fa-f]*$/) || typeof e == "number" && t.length !== 2 + 2 * e || e === !0 && t.length % 2 !== 0);
}
function nm(t) {
  return wt(t, !0) || t instanceof Uint8Array;
}
const Zg = "0123456789abcdef";
function ye(t) {
  const e = st(t);
  let n = "0x";
  for (let r = 0; r < e.length; r++) {
    const s = e[r];
    n += Zg[(s & 240) >> 4] + Zg[s & 15];
  }
  return n;
}
function jt(t) {
  return "0x" + t.map((e) => ye(e).substring(2)).join("");
}
function Ra(t) {
  return wt(t, !0) ? (t.length - 2) / 2 : st(t).length;
}
function Bt(t, e, n) {
  const r = st(t);
  return n != null && n > r.length && K(!1, "cannot slice beyond data bounds", "BUFFER_OVERRUN", {
    buffer: r,
    length: r.length,
    offset: n
  }), ye(r.slice(e ?? 0, n ?? r.length));
}
function Oy(t, e, n) {
  const r = st(t);
  K(e >= r.length, "padding exceeds data length", "BUFFER_OVERRUN", {
    buffer: new Uint8Array(r),
    length: e,
    offset: e + 1
  });
  const s = new Uint8Array(e);
  return s.fill(0), n ? s.set(r, e - r.length) : s.set(r, 0), ye(s);
}
function Go(t, e) {
  return Oy(t, e, !0);
}
function AE(t, e) {
  return Oy(t, e, !1);
}
const ch = BigInt(0), Pr = BigInt(1), Ea = 9007199254740991;
function Sf(t, e) {
  const n = uh(t, "value"), r = BigInt(Be(e, "width"));
  if (K(n >> r === ch, "overflow", "NUMERIC_FAULT", {
    operation: "fromTwos",
    fault: "overflow",
    value: t
  }), n >> r - Pr) {
    const s = (Pr << r) - Pr;
    return -((~n & s) + Pr);
  }
  return n;
}
function Ty(t, e) {
  let n = _e(t, "value");
  const r = BigInt(Be(e, "width")), s = Pr << r - Pr;
  if (n < ch) {
    n = -n, K(n <= s, "too low", "NUMERIC_FAULT", {
      operation: "toTwos",
      fault: "overflow",
      value: t
    });
    const i = (Pr << r) - Pr;
    return (~n & i) + Pr;
  } else
    K(n < s, "too high", "NUMERIC_FAULT", {
      operation: "toTwos",
      fault: "overflow",
      value: t
    });
  return n;
}
function go(t, e) {
  const n = uh(t, "value"), r = BigInt(Be(e, "bits"));
  return n & (Pr << r) - Pr;
}
function _e(t, e) {
  switch (typeof t) {
    case "bigint":
      return t;
    case "number":
      return D(Number.isInteger(t), "underflow", e || "value", t), D(t >= -Ea && t <= Ea, "overflow", e || "value", t), BigInt(t);
    case "string":
      try {
        if (t === "")
          throw new Error("empty string");
        return t[0] === "-" && t[1] !== "-" ? -BigInt(t.substring(1)) : BigInt(t);
      } catch (n) {
        D(!1, `invalid BigNumberish string: ${n.message}`, e || "value", t);
      }
  }
  D(!1, "invalid BigNumberish value", e || "value", t);
}
function uh(t, e) {
  const n = _e(t, e);
  return K(n >= ch, "unsigned value cannot be negative", "NUMERIC_FAULT", {
    fault: "overflow",
    operation: "getUint",
    value: t
  }), n;
}
const Jg = "0123456789abcdef";
function fh(t) {
  if (t instanceof Uint8Array) {
    let e = "0x0";
    for (const n of t)
      e += Jg[n >> 4], e += Jg[n & 15];
    return BigInt(e);
  }
  return _e(t);
}
function Be(t, e) {
  switch (typeof t) {
    case "bigint":
      return D(t >= -Ea && t <= Ea, "overflow", e || "value", t), Number(t);
    case "number":
      return D(Number.isInteger(t), "underflow", e || "value", t), D(t >= -Ea && t <= Ea, "overflow", e || "value", t), t;
    case "string":
      try {
        if (t === "")
          throw new Error("empty string");
        return Be(BigInt(t), e);
      } catch (n) {
        D(!1, `invalid numeric string: ${n.message}`, e || "value", t);
      }
  }
  D(!1, "invalid numeric value", e || "value", t);
}
function EE(t) {
  return Be(fh(t));
}
function Hi(t, e) {
  let r = uh(t, "value").toString(16);
  if (e == null)
    r.length % 2 && (r = "0" + r);
  else {
    const s = Be(e, "width");
    for (K(s * 2 >= r.length, `value exceeds width (${s} bytes)`, "NUMERIC_FAULT", {
      operation: "toBeHex",
      fault: "overflow",
      value: t
    }); r.length < s * 2; )
      r = "0" + r;
  }
  return "0x" + r;
}
function In(t) {
  const e = uh(t, "value");
  if (e === ch)
    return new Uint8Array([]);
  let n = e.toString(16);
  n.length % 2 && (n = "0" + n);
  const r = new Uint8Array(n.length / 2);
  for (let s = 0; s < r.length; s++) {
    const i = s * 2;
    r[s] = parseInt(n.substring(i, i + 2), 16);
  }
  return r;
}
function xa(t) {
  let e = ye(nm(t) ? t : In(t)).substring(2);
  for (; e.startsWith("0"); )
    e = e.substring(1);
  return e === "" && (e = "0"), "0x" + e;
}
const Kg = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
BigInt(0);
const Yg = BigInt(58);
function xE(t) {
  const e = st(t);
  let n = fh(e), r = "";
  for (; n; )
    r = Kg[Number(n % Yg)] + r, n /= Yg;
  for (let s = 0; s < e.length && !e[s]; s++)
    r = Kg[0] + r;
  return r;
}
function CE(t) {
  t = atob(t);
  const e = new Uint8Array(t.length);
  for (let n = 0; n < t.length; n++)
    e[n] = t.charCodeAt(n);
  return st(e);
}
function kE(t) {
  const e = st(t);
  let n = "";
  for (let r = 0; r < e.length; r++)
    n += String.fromCharCode(e[r]);
  return btoa(n);
}
var Da;
class Iy {
  /**
   *  Create a new **EventPayload** for %%emitter%% with
   *  the %%listener%% and for %%filter%%.
   */
  constructor(e, n, r) {
    /**
     *  The event filter.
     */
    j(this, "filter");
    /**
     *  The **EventEmitterable**.
     */
    j(this, "emitter");
    z(this, Da);
    R(this, Da, n), ke(this, { emitter: e, filter: r });
  }
  /**
   *  Unregister the triggered listener for future events.
   */
  async removeListener() {
    O(this, Da) != null && await this.emitter.off(this.filter, O(this, Da));
  }
}
Da = new WeakMap();
function SE(t, e, n, r, s) {
  D(!1, `invalid codepoint at offset ${e}; ${t}`, "bytes", n);
}
function Ny(t, e, n, r, s) {
  if (t === "BAD_PREFIX" || t === "UNEXPECTED_CONTINUE") {
    let i = 0;
    for (let o = e + 1; o < n.length && n[o] >> 6 === 2; o++)
      i++;
    return i;
  }
  return t === "OVERRUN" ? n.length - e - 1 : 0;
}
function OE(t, e, n, r, s) {
  return t === "OVERLONG" ? (D(typeof s == "number", "invalid bad code point for replacement", "badCodepoint", s), r.push(s), 0) : (r.push(65533), Ny(t, e, n));
}
const TE = Object.freeze({
  error: SE,
  ignore: Ny,
  replace: OE
});
function IE(t, e) {
  e == null && (e = TE.error);
  const n = st(t, "bytes"), r = [];
  let s = 0;
  for (; s < n.length; ) {
    const i = n[s++];
    if (!(i >> 7)) {
      r.push(i);
      continue;
    }
    let o = null, a = null;
    if ((i & 224) === 192)
      o = 1, a = 127;
    else if ((i & 240) === 224)
      o = 2, a = 2047;
    else if ((i & 248) === 240)
      o = 3, a = 65535;
    else {
      (i & 192) === 128 ? s += e("UNEXPECTED_CONTINUE", s - 1, n, r) : s += e("BAD_PREFIX", s - 1, n, r);
      continue;
    }
    if (s - 1 + o >= n.length) {
      s += e("OVERRUN", s - 1, n, r);
      continue;
    }
    let c = i & (1 << 8 - o - 1) - 1;
    for (let u = 0; u < o; u++) {
      let f = n[s];
      if ((f & 192) != 128) {
        s += e("MISSING_CONTINUE", s, n, r), c = null;
        break;
      }
      c = c << 6 | f & 63, s++;
    }
    if (c !== null) {
      if (c > 1114111) {
        s += e("OUT_OF_RANGE", s - 1 - o, n, r, c);
        continue;
      }
      if (c >= 55296 && c <= 57343) {
        s += e("UTF16_SURROGATE", s - 1 - o, n, r, c);
        continue;
      }
      if (c <= a) {
        s += e("OVERLONG", s - 1 - o, n, r, c);
        continue;
      }
      r.push(c);
    }
  }
  return r;
}
function Ws(t, e) {
  D(typeof t == "string", "invalid string value", "str", t);
  let n = [];
  for (let r = 0; r < t.length; r++) {
    const s = t.charCodeAt(r);
    if (s < 128)
      n.push(s);
    else if (s < 2048)
      n.push(s >> 6 | 192), n.push(s & 63 | 128);
    else if ((s & 64512) == 55296) {
      r++;
      const i = t.charCodeAt(r);
      D(r < t.length && (i & 64512) === 56320, "invalid surrogate pair", "str", t);
      const o = 65536 + ((s & 1023) << 10) + (i & 1023);
      n.push(o >> 18 | 240), n.push(o >> 12 & 63 | 128), n.push(o >> 6 & 63 | 128), n.push(o & 63 | 128);
    } else
      n.push(s >> 12 | 224), n.push(s >> 6 & 63 | 128), n.push(s & 63 | 128);
  }
  return new Uint8Array(n);
}
function NE(t) {
  return t.map((e) => e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode((e >> 10 & 1023) + 55296, (e & 1023) + 56320))).join("");
}
function Of(t, e) {
  return NE(IE(t, e));
}
function Py(t) {
  async function e(n, r) {
    K(r == null || !r.cancelled, "request cancelled before sending", "CANCELLED");
    const s = n.url.split(":")[0].toLowerCase();
    K(s === "http" || s === "https", `unsupported protocol ${s}`, "UNSUPPORTED_OPERATION", {
      info: { protocol: s },
      operation: "request"
    }), K(s === "https" || !n.credentials || n.allowInsecureAuthentication, "insecure authorized connections unsupported", "UNSUPPORTED_OPERATION", {
      operation: "request"
    });
    let i = null;
    const o = new AbortController(), a = setTimeout(() => {
      i = Rt("request timeout", "TIMEOUT"), o.abort();
    }, n.timeout);
    r && r.addListener(() => {
      i = Rt("request cancelled", "CANCELLED"), o.abort();
    });
    const c = {
      method: n.method,
      headers: new Headers(Array.from(n)),
      body: n.body || void 0,
      signal: o.signal
    };
    let u;
    try {
      u = await fetch(n.url, c);
    } catch (p) {
      throw clearTimeout(a), i || p;
    }
    clearTimeout(a);
    const f = {};
    u.headers.forEach((p, d) => {
      f[d.toLowerCase()] = p;
    });
    const l = await u.arrayBuffer(), m = l == null ? null : new Uint8Array(l);
    return {
      statusCode: u.status,
      statusMessage: u.statusText,
      headers: f,
      body: m
    };
  }
  return e;
}
const PE = 12, RE = 250;
let Xg = Py();
const BE = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"), LE = new RegExp("^ipfs://(ipfs/)?(.*)$", "i");
let qh = !1;
async function Ry(t, e) {
  try {
    const n = t.match(BE);
    if (!n)
      throw new Error("invalid data");
    return new Di(200, "OK", {
      "content-type": n[1] || "text/plain"
    }, n[2] ? CE(n[3]) : DE(n[3]));
  } catch {
    return new Di(599, "BAD REQUEST (invalid data: URI)", {}, null, new zs(t));
  }
}
function By(t) {
  async function e(n, r) {
    try {
      const s = n.match(LE);
      if (!s)
        throw new Error("invalid link");
      return new zs(`${t}${s[2]}`);
    } catch {
      return new Di(599, "BAD REQUEST (invalid IPFS URI)", {}, null, new zs(n));
    }
  }
  return e;
}
const Lu = {
  data: Ry,
  ipfs: By("https://gateway.ipfs.io/ipfs/")
}, Ly = /* @__PURE__ */ new WeakMap();
var wo, yi;
class ME {
  constructor(e) {
    z(this, wo);
    z(this, yi);
    R(this, wo, []), R(this, yi, !1), Ly.set(e, () => {
      if (!O(this, yi)) {
        R(this, yi, !0);
        for (const n of O(this, wo))
          setTimeout(() => {
            n();
          }, 0);
        R(this, wo, []);
      }
    });
  }
  addListener(e) {
    K(!O(this, yi), "singal already cancelled", "UNSUPPORTED_OPERATION", {
      operation: "fetchCancelSignal.addCancelListener"
    }), O(this, wo).push(e);
  }
  get cancelled() {
    return O(this, yi);
  }
  checkSignal() {
    K(!this.cancelled, "cancelled", "CANCELLED", {});
  }
}
wo = new WeakMap(), yi = new WeakMap();
function Mu(t) {
  if (t == null)
    throw new Error("missing signal; should not happen");
  return t.checkSignal(), t;
}
var $a, Ua, kr, Os, ja, Fa, tn, er, Ts, vo, _o, Ao, Vr, Sr, wi, Eo, Pc;
const jf = class jf {
  /**
   *  Create a new FetchRequest instance with default values.
   *
   *  Once created, each property may be set before issuing a
   *  ``.send()`` to make the request.
   */
  constructor(e) {
    z(this, Eo);
    z(this, $a);
    z(this, Ua);
    z(this, kr);
    z(this, Os);
    z(this, ja);
    z(this, Fa);
    z(this, tn);
    z(this, er);
    z(this, Ts);
    // Hooks
    z(this, vo);
    z(this, _o);
    z(this, Ao);
    z(this, Vr);
    z(this, Sr);
    z(this, wi);
    R(this, Fa, String(e)), R(this, $a, !1), R(this, Ua, !0), R(this, kr, {}), R(this, Os, ""), R(this, ja, 3e5), R(this, Sr, {
      slotInterval: RE,
      maxAttempts: PE
    }), R(this, wi, null);
  }
  /**
   *  The fetch URL to request.
   */
  get url() {
    return O(this, Fa);
  }
  set url(e) {
    R(this, Fa, String(e));
  }
  /**
   *  The fetch body, if any, to send as the request body. //(default: null)//
   *
   *  When setting a body, the intrinsic ``Content-Type`` is automatically
   *  set and will be used if **not overridden** by setting a custom
   *  header.
   *
   *  If %%body%% is null, the body is cleared (along with the
   *  intrinsic ``Content-Type``).
   *
   *  If %%body%% is a string, the intrinsic ``Content-Type`` is set to
   *  ``text/plain``.
   *
   *  If %%body%% is a Uint8Array, the intrinsic ``Content-Type`` is set to
   *  ``application/octet-stream``.
   *
   *  If %%body%% is any other object, the intrinsic ``Content-Type`` is
   *  set to ``application/json``.
   */
  get body() {
    return O(this, tn) == null ? null : new Uint8Array(O(this, tn));
  }
  set body(e) {
    if (e == null)
      R(this, tn, void 0), R(this, er, void 0);
    else if (typeof e == "string")
      R(this, tn, Ws(e)), R(this, er, "text/plain");
    else if (e instanceof Uint8Array)
      R(this, tn, e), R(this, er, "application/octet-stream");
    else if (typeof e == "object")
      R(this, tn, Ws(JSON.stringify(e))), R(this, er, "application/json");
    else
      throw new Error("invalid body");
  }
  /**
   *  Returns true if the request has a body.
   */
  hasBody() {
    return O(this, tn) != null;
  }
  /**
   *  The HTTP method to use when requesting the URI. If no method
   *  has been explicitly set, then ``GET`` is used if the body is
   *  null and ``POST`` otherwise.
   */
  get method() {
    return O(this, Os) ? O(this, Os) : this.hasBody() ? "POST" : "GET";
  }
  set method(e) {
    e == null && (e = ""), R(this, Os, String(e).toUpperCase());
  }
  /**
   *  The headers that will be used when requesting the URI. All
   *  keys are lower-case.
   *
   *  This object is a copy, so any changes will **NOT** be reflected
   *  in the ``FetchRequest``.
   *
   *  To set a header entry, use the ``setHeader`` method.
   */
  get headers() {
    const e = Object.assign({}, O(this, kr));
    return O(this, Ts) && (e.authorization = `Basic ${kE(Ws(O(this, Ts)))}`), this.allowGzip && (e["accept-encoding"] = "gzip"), e["content-type"] == null && O(this, er) && (e["content-type"] = O(this, er)), this.body && (e["content-length"] = String(this.body.length)), e;
  }
  /**
   *  Get the header for %%key%%, ignoring case.
   */
  getHeader(e) {
    return this.headers[e.toLowerCase()];
  }
  /**
   *  Set the header for %%key%% to %%value%%. All values are coerced
   *  to a string.
   */
  setHeader(e, n) {
    O(this, kr)[String(e).toLowerCase()] = String(n);
  }
  /**
   *  Clear all headers, resetting all intrinsic headers.
   */
  clearHeaders() {
    R(this, kr, {});
  }
  [Symbol.iterator]() {
    const e = this.headers, n = Object.keys(e);
    let r = 0;
    return {
      next: () => {
        if (r < n.length) {
          const s = n[r++];
          return {
            value: [s, e[s]],
            done: !1
          };
        }
        return { value: void 0, done: !0 };
      }
    };
  }
  /**
   *  The value that will be sent for the ``Authorization`` header.
   *
   *  To set the credentials, use the ``setCredentials`` method.
   */
  get credentials() {
    return O(this, Ts) || null;
  }
  /**
   *  Sets an ``Authorization`` for %%username%% with %%password%%.
   */
  setCredentials(e, n) {
    D(!e.match(/:/), "invalid basic authentication username", "username", "[REDACTED]"), R(this, Ts, `${e}:${n}`);
  }
  /**
   *  Enable and request gzip-encoded responses. The response will
   *  automatically be decompressed. //(default: true)//
   */
  get allowGzip() {
    return O(this, Ua);
  }
  set allowGzip(e) {
    R(this, Ua, !!e);
  }
  /**
   *  Allow ``Authentication`` credentials to be sent over insecure
   *  channels. //(default: false)//
   */
  get allowInsecureAuthentication() {
    return !!O(this, $a);
  }
  set allowInsecureAuthentication(e) {
    R(this, $a, !!e);
  }
  /**
   *  The timeout (in milliseconds) to wait for a complete response.
   *  //(default: 5 minutes)//
   */
  get timeout() {
    return O(this, ja);
  }
  set timeout(e) {
    D(e >= 0, "timeout must be non-zero", "timeout", e), R(this, ja, e);
  }
  /**
   *  This function is called prior to each request, for example
   *  during a redirection or retry in case of server throttling.
   *
   *  This offers an opportunity to populate headers or update
   *  content before sending a request.
   */
  get preflightFunc() {
    return O(this, vo) || null;
  }
  set preflightFunc(e) {
    R(this, vo, e);
  }
  /**
   *  This function is called after each response, offering an
   *  opportunity to provide client-level throttling or updating
   *  response data.
   *
   *  Any error thrown in this causes the ``send()`` to throw.
   *
   *  To schedule a retry attempt (assuming the maximum retry limit
   *  has not been reached), use [[response.throwThrottleError]].
   */
  get processFunc() {
    return O(this, _o) || null;
  }
  set processFunc(e) {
    R(this, _o, e);
  }
  /**
   *  This function is called on each retry attempt.
   */
  get retryFunc() {
    return O(this, Ao) || null;
  }
  set retryFunc(e) {
    R(this, Ao, e);
  }
  /**
   *  This function is called to fetch content from HTTP and
   *  HTTPS URLs and is platform specific (e.g. nodejs vs
   *  browsers).
   *
   *  This is by default the currently registered global getUrl
   *  function, which can be changed using [[registerGetUrl]].
   *  If this has been set, setting is to ``null`` will cause
   *  this FetchRequest (and any future clones) to revert back to
   *  using the currently registered global getUrl function.
   *
   *  Setting this is generally not necessary, but may be useful
   *  for developers that wish to intercept requests or to
   *  configurege a proxy or other agent.
   */
  get getUrlFunc() {
    return O(this, wi) || Xg;
  }
  set getUrlFunc(e) {
    R(this, wi, e);
  }
  toString() {
    return `<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${O(this, tn) ? ye(O(this, tn)) : "null"}>`;
  }
  /**
   *  Update the throttle parameters used to determine maximum
   *  attempts and exponential-backoff properties.
   */
  setThrottleParams(e) {
    e.slotInterval != null && (O(this, Sr).slotInterval = e.slotInterval), e.maxAttempts != null && (O(this, Sr).maxAttempts = e.maxAttempts);
  }
  /**
   *  Resolves to the response by sending the request.
   */
  send() {
    return K(O(this, Vr) == null, "request already sent", "UNSUPPORTED_OPERATION", { operation: "fetchRequest.send" }), R(this, Vr, new ME(this)), ne(this, Eo, Pc).call(this, 0, e0() + this.timeout, 0, this, new Di(0, "", {}, null, this));
  }
  /**
   *  Cancels the inflight response, causing a ``CANCELLED``
   *  error to be rejected from the [[send]].
   */
  cancel() {
    K(O(this, Vr) != null, "request has not been sent", "UNSUPPORTED_OPERATION", { operation: "fetchRequest.cancel" });
    const e = Ly.get(this);
    if (!e)
      throw new Error("missing signal; should not happen");
    e();
  }
  /**
   *  Returns a new [[FetchRequest]] that represents the redirection
   *  to %%location%%.
   */
  redirect(e) {
    const n = this.url.split(":")[0].toLowerCase(), r = e.split(":")[0].toLowerCase();
    K(this.method === "GET" && (n !== "https" || r !== "http") && e.match(/^https?:/), "unsupported redirect", "UNSUPPORTED_OPERATION", {
      operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(e)})`
    });
    const s = new jf(e);
    return s.method = "GET", s.allowGzip = this.allowGzip, s.timeout = this.timeout, R(s, kr, Object.assign({}, O(this, kr))), O(this, tn) && R(s, tn, new Uint8Array(O(this, tn))), R(s, er, O(this, er)), s;
  }
  /**
   *  Create a new copy of this request.
   */
  clone() {
    const e = new jf(this.url);
    return R(e, Os, O(this, Os)), O(this, tn) && R(e, tn, O(this, tn)), R(e, er, O(this, er)), R(e, kr, Object.assign({}, O(this, kr))), R(e, Ts, O(this, Ts)), this.allowGzip && (e.allowGzip = !0), e.timeout = this.timeout, this.allowInsecureAuthentication && (e.allowInsecureAuthentication = !0), R(e, vo, O(this, vo)), R(e, _o, O(this, _o)), R(e, Ao, O(this, Ao)), R(e, Sr, Object.assign({}, O(this, Sr))), R(e, wi, O(this, wi)), e;
  }
  /**
   *  Locks all static configuration for gateways and FetchGetUrlFunc
   *  registration.
   */
  static lockConfig() {
    qh = !0;
  }
  /**
   *  Get the current Gateway function for %%scheme%%.
   */
  static getGateway(e) {
    return Lu[e.toLowerCase()] || null;
  }
  /**
   *  Use the %%func%% when fetching URIs using %%scheme%%.
   *
   *  This method affects all requests globally.
   *
   *  If [[lockConfig]] has been called, no change is made and this
   *  throws.
   */
  static registerGateway(e, n) {
    if (e = e.toLowerCase(), e === "http" || e === "https")
      throw new Error(`cannot intercept ${e}; use registerGetUrl`);
    if (qh)
      throw new Error("gateways locked");
    Lu[e] = n;
  }
  /**
   *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.
   *
   *  This method affects all requests globally.
   *
   *  If [[lockConfig]] has been called, no change is made and this
   *  throws.
   */
  static registerGetUrl(e) {
    if (qh)
      throw new Error("gateways locked");
    Xg = e;
  }
  /**
   *  Creates a getUrl function that fetches content from HTTP and
   *  HTTPS URLs.
   *
   *  The available %%options%% are dependent on the platform
   *  implementation of the default getUrl function.
   *
   *  This is not generally something that is needed, but is useful
   *  when trying to customize simple behaviour when fetching HTTP
   *  content.
   */
  static createGetUrlFunc(e) {
    return Py();
  }
  /**
   *  Creates a function that can "fetch" data URIs.
   *
   *  Note that this is automatically done internally to support
   *  data URIs, so it is not necessary to register it.
   *
   *  This is not generally something that is needed, but may
   *  be useful in a wrapper to perfom custom data URI functionality.
   */
  static createDataGateway() {
    return Ry;
  }
  /**
   *  Creates a function that will fetch IPFS (unvalidated) from
   *  a custom gateway baseUrl.
   *
   *  The default IPFS gateway used internally is
   *  ``"https:/\/gateway.ipfs.io/ipfs/"``.
   */
  static createIpfsGatewayFunc(e) {
    return By(e);
  }
};
$a = new WeakMap(), Ua = new WeakMap(), kr = new WeakMap(), Os = new WeakMap(), ja = new WeakMap(), Fa = new WeakMap(), tn = new WeakMap(), er = new WeakMap(), Ts = new WeakMap(), vo = new WeakMap(), _o = new WeakMap(), Ao = new WeakMap(), Vr = new WeakMap(), Sr = new WeakMap(), wi = new WeakMap(), Eo = new WeakSet(), Pc = async function(e, n, r, s, i) {
  var f, l, m;
  if (e >= O(this, Sr).maxAttempts)
    return i.makeServerError("exceeded maximum retry limit");
  K(e0() <= n, "timeout", "TIMEOUT", {
    operation: "request.send",
    reason: "timeout",
    request: s
  }), r > 0 && await $E(r);
  let o = this.clone();
  const a = (o.url.split(":")[0] || "").toLowerCase();
  if (a in Lu) {
    const p = await Lu[a](o.url, Mu(O(s, Vr)));
    if (p instanceof Di) {
      let d = p;
      if (this.processFunc) {
        Mu(O(s, Vr));
        try {
          d = await this.processFunc(o, d);
        } catch (h) {
          (h.throttle == null || typeof h.stall != "number") && d.makeServerError("error in post-processing function", h).assertOk();
        }
      }
      return d;
    }
    o = p;
  }
  this.preflightFunc && (o = await this.preflightFunc(o));
  const c = await this.getUrlFunc(o, Mu(O(s, Vr)));
  let u = new Di(c.statusCode, c.statusMessage, c.headers, c.body, s);
  if (u.statusCode === 301 || u.statusCode === 302) {
    try {
      const p = u.headers.location || "";
      return ne(f = o.redirect(p), Eo, Pc).call(f, e + 1, n, 0, s, u);
    } catch {
    }
    return u;
  } else if (u.statusCode === 429 && (this.retryFunc == null || await this.retryFunc(o, u, e))) {
    const p = u.headers["retry-after"];
    let d = O(this, Sr).slotInterval * Math.trunc(Math.random() * Math.pow(2, e));
    return typeof p == "string" && p.match(/^[1-9][0-9]*$/) && (d = parseInt(p)), ne(l = o.clone(), Eo, Pc).call(l, e + 1, n, d, s, u);
  }
  if (this.processFunc) {
    Mu(O(s, Vr));
    try {
      u = await this.processFunc(o, u);
    } catch (p) {
      (p.throttle == null || typeof p.stall != "number") && u.makeServerError("error in post-processing function", p).assertOk();
      let d = O(this, Sr).slotInterval * Math.trunc(Math.random() * Math.pow(2, e));
      return p.stall >= 0 && (d = p.stall), ne(m = o.clone(), Eo, Pc).call(m, e + 1, n, d, s, u);
    }
  }
  return u;
};
let zs = jf;
var au, lu, cu, tr, Ha, xo;
const mm = class mm {
  constructor(e, n, r, s, i) {
    z(this, au);
    z(this, lu);
    z(this, cu);
    z(this, tr);
    z(this, Ha);
    z(this, xo);
    R(this, au, e), R(this, lu, n), R(this, cu, Object.keys(r).reduce((o, a) => (o[a.toLowerCase()] = String(r[a]), o), {})), R(this, tr, s == null ? null : new Uint8Array(s)), R(this, Ha, i || null), R(this, xo, { message: "" });
  }
  toString() {
    return `<FetchResponse status=${this.statusCode} body=${O(this, tr) ? ye(O(this, tr)) : "null"}>`;
  }
  /**
   *  The response status code.
   */
  get statusCode() {
    return O(this, au);
  }
  /**
   *  The response status message.
   */
  get statusMessage() {
    return O(this, lu);
  }
  /**
   *  The response headers. All keys are lower-case.
   */
  get headers() {
    return Object.assign({}, O(this, cu));
  }
  /**
   *  The response body, or ``null`` if there was no body.
   */
  get body() {
    return O(this, tr) == null ? null : new Uint8Array(O(this, tr));
  }
  /**
   *  The response body as a UTF-8 encoded string, or the empty
   *  string (i.e. ``""``) if there was no body.
   *
   *  An error is thrown if the body is invalid UTF-8 data.
   */
  get bodyText() {
    try {
      return O(this, tr) == null ? "" : Of(O(this, tr));
    } catch {
      K(!1, "response body is not valid UTF-8 data", "UNSUPPORTED_OPERATION", {
        operation: "bodyText",
        info: { response: this }
      });
    }
  }
  /**
   *  The response body, decoded as JSON.
   *
   *  An error is thrown if the body is invalid JSON-encoded data
   *  or if there was no body.
   */
  get bodyJson() {
    try {
      return JSON.parse(this.bodyText);
    } catch {
      K(!1, "response body is not valid JSON", "UNSUPPORTED_OPERATION", {
        operation: "bodyJson",
        info: { response: this }
      });
    }
  }
  [Symbol.iterator]() {
    const e = this.headers, n = Object.keys(e);
    let r = 0;
    return {
      next: () => {
        if (r < n.length) {
          const s = n[r++];
          return {
            value: [s, e[s]],
            done: !1
          };
        }
        return { value: void 0, done: !0 };
      }
    };
  }
  /**
   *  Return a Response with matching headers and body, but with
   *  an error status code (i.e. 599) and %%message%% with an
   *  optional %%error%%.
   */
  makeServerError(e, n) {
    let r;
    e ? r = `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${e})` : (e = `${this.statusCode} ${this.statusMessage}`, r = `CLIENT ESCALATED SERVER ERROR (${e})`);
    const s = new mm(599, r, this.headers, this.body, O(this, Ha) || void 0);
    return R(s, xo, { message: e, error: n }), s;
  }
  /**
   *  If called within a [request.processFunc](FetchRequest-processFunc)
   *  call, causes the request to retry as if throttled for %%stall%%
   *  milliseconds.
   */
  throwThrottleError(e, n) {
    n == null ? n = -1 : D(Number.isInteger(n) && n >= 0, "invalid stall timeout", "stall", n);
    const r = new Error(e || "throttling requests");
    throw ke(r, { stall: n, throttle: !0 }), r;
  }
  /**
   *  Get the header value for %%key%%, ignoring case.
   */
  getHeader(e) {
    return this.headers[e.toLowerCase()];
  }
  /**
   *  Returns true if the response has a body.
   */
  hasBody() {
    return O(this, tr) != null;
  }
  /**
   *  The request made for this response.
   */
  get request() {
    return O(this, Ha);
  }
  /**
   *  Returns true if this response was a success statusCode.
   */
  ok() {
    return O(this, xo).message === "" && this.statusCode >= 200 && this.statusCode < 300;
  }
  /**
   *  Throws a ``SERVER_ERROR`` if this response is not ok.
   */
  assertOk() {
    if (this.ok())
      return;
    let { message: e, error: n } = O(this, xo);
    e === "" && (e = `server response ${this.statusCode} ${this.statusMessage}`);
    let r = null;
    this.request && (r = this.request.url);
    let s = null;
    try {
      O(this, tr) && (s = Of(O(this, tr)));
    } catch {
    }
    K(!1, e, "SERVER_ERROR", {
      request: this.request || "unknown request",
      response: this,
      error: n,
      info: {
        requestUrl: r,
        responseBody: s,
        responseStatus: `${this.statusCode} ${this.statusMessage}`
      }
    });
  }
};
au = new WeakMap(), lu = new WeakMap(), cu = new WeakMap(), tr = new WeakMap(), Ha = new WeakMap(), xo = new WeakMap();
let Di = mm;
function e0() {
  return (/* @__PURE__ */ new Date()).getTime();
}
function DE(t) {
  return Ws(t.replace(/%([0-9a-f][0-9a-f])/gi, (e, n) => String.fromCharCode(parseInt(n, 16))));
}
function $E(t) {
  return new Promise((e) => setTimeout(e, t));
}
const UE = BigInt(-1), Er = BigInt(0), Ca = BigInt(1), jE = BigInt(5), fa = {};
let Ba = "0000";
for (; Ba.length < 80; )
  Ba += Ba;
function ao(t) {
  let e = Ba;
  for (; e.length < t; )
    e += e;
  return BigInt("1" + e.substring(0, t));
}
function Ec(t, e, n) {
  const r = BigInt(e.width);
  if (e.signed) {
    const s = Ca << r - Ca;
    K(n == null || t >= -s && t < s, "overflow", "NUMERIC_FAULT", {
      operation: n,
      fault: "overflow",
      value: t
    }), t > Er ? t = Sf(go(t, r), r) : t = -Sf(go(-t, r), r);
  } else {
    const s = Ca << r;
    K(n == null || t >= 0 && t < s, "overflow", "NUMERIC_FAULT", {
      operation: n,
      fault: "overflow",
      value: t
    }), t = (t % s + s) % s & s - Ca;
  }
  return t;
}
function Qh(t) {
  typeof t == "number" && (t = `fixed128x${t}`);
  let e = !0, n = 128, r = 18;
  if (typeof t == "string") {
    if (t !== "fixed") if (t === "ufixed")
      e = !1;
    else {
      const i = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
      D(i, "invalid fixed format", "format", t), e = i[1] !== "u", n = parseInt(i[2]), r = parseInt(i[3]);
    }
  } else if (t) {
    const i = t, o = (a, c, u) => i[a] == null ? u : (D(typeof i[a] === c, "invalid fixed format (" + a + " not " + c + ")", "format." + a, i[a]), i[a]);
    e = o("signed", "boolean", e), n = o("width", "number", n), r = o("decimals", "number", r);
  }
  D(n % 8 === 0, "invalid FixedNumber width (not byte aligned)", "format.width", n), D(r <= 80, "invalid FixedNumber decimals (too large)", "format.decimals", r);
  const s = (e ? "" : "u") + "fixed" + String(n) + "x" + String(r);
  return { signed: e, width: n, decimals: r, name: s };
}
function FE(t, e) {
  let n = "";
  t < Er && (n = "-", t *= UE);
  let r = t.toString();
  if (e === 0)
    return n + r;
  for (; r.length <= e; )
    r = Ba + r;
  const s = r.length - e;
  for (r = r.substring(0, s) + "." + r.substring(s); r[0] === "0" && r[1] !== "."; )
    r = r.substring(1);
  for (; r[r.length - 1] === "0" && r[r.length - 2] !== "."; )
    r = r.substring(0, r.length - 1);
  return n + r;
}
var Or, pt, xn, ut, lo, Es, Pd, Rd, Bd, Ld;
const bi = class bi {
  // Use this when changing this file to get some typing info,
  // but then switch to any to mask the internal type
  //constructor(guard: any, value: bigint, format: _FixedFormat) {
  /**
   *  @private
   */
  constructor(e, n, r) {
    z(this, ut);
    /**
     *  The specific fixed-point arithmetic field for this value.
     */
    j(this, "format");
    z(this, Or);
    // The actual value (accounting for decimals)
    z(this, pt);
    // A base-10 value to multiple values by to maintain the magnitude
    z(this, xn);
    /**
     *  This is a property so console.log shows a human-meaningful value.
     *
     *  @private
     */
    j(this, "_value");
    Cu(e, fa, "FixedNumber"), R(this, pt, n), R(this, Or, r);
    const s = FE(n, r.decimals);
    ke(this, { format: r.name, _value: s }), R(this, xn, ao(r.decimals));
  }
  /**
   *  If true, negative values are permitted, otherwise only
   *  positive values and zero are allowed.
   */
  get signed() {
    return O(this, Or).signed;
  }
  /**
   *  The number of bits available to store the value.
   */
  get width() {
    return O(this, Or).width;
  }
  /**
   *  The number of decimal places in the fixed-point arithment field.
   */
  get decimals() {
    return O(this, Or).decimals;
  }
  /**
   *  The value as an integer, based on the smallest unit the
   *  [[decimals]] allow.
   */
  get value() {
    return O(this, pt);
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%this%% added
   *  to %%other%%, ignoring overflow.
   */
  addUnsafe(e) {
    return ne(this, ut, Pd).call(this, e);
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%this%% added
   *  to %%other%%. A [[NumericFaultError]] is thrown if overflow
   *  occurs.
   */
  add(e) {
    return ne(this, ut, Pd).call(this, e, "add");
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted
   *  from %%this%%, ignoring overflow.
   */
  subUnsafe(e) {
    return ne(this, ut, Rd).call(this, e);
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted
   *  from %%this%%. A [[NumericFaultError]] is thrown if overflow
   *  occurs.
   */
  sub(e) {
    return ne(this, ut, Rd).call(this, e, "sub");
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied
   *  by %%other%%, ignoring overflow and underflow (precision loss).
   */
  mulUnsafe(e) {
    return ne(this, ut, Bd).call(this, e);
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied
   *  by %%other%%. A [[NumericFaultError]] is thrown if overflow
   *  occurs.
   */
  mul(e) {
    return ne(this, ut, Bd).call(this, e, "mul");
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied
   *  by %%other%%. A [[NumericFaultError]] is thrown if overflow
   *  occurs or if underflow (precision loss) occurs.
   */
  mulSignal(e) {
    ne(this, ut, lo).call(this, e);
    const n = O(this, pt) * O(e, pt);
    return K(n % O(this, xn) === Er, "precision lost during signalling mul", "NUMERIC_FAULT", {
      operation: "mulSignal",
      fault: "underflow",
      value: this
    }), ne(this, ut, Es).call(this, n / O(this, xn), "mulSignal");
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%this%% divided
   *  by %%other%%, ignoring underflow (precision loss). A
   *  [[NumericFaultError]] is thrown if overflow occurs.
   */
  divUnsafe(e) {
    return ne(this, ut, Ld).call(this, e);
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%this%% divided
   *  by %%other%%, ignoring underflow (precision loss). A
   *  [[NumericFaultError]] is thrown if overflow occurs.
   */
  div(e) {
    return ne(this, ut, Ld).call(this, e, "div");
  }
  /**
   *  Returns a new [[FixedNumber]] with the result of %%this%% divided
   *  by %%other%%. A [[NumericFaultError]] is thrown if underflow
   *  (precision loss) occurs.
   */
  divSignal(e) {
    K(O(e, pt) !== Er, "division by zero", "NUMERIC_FAULT", {
      operation: "div",
      fault: "divide-by-zero",
      value: this
    }), ne(this, ut, lo).call(this, e);
    const n = O(this, pt) * O(this, xn);
    return K(n % O(e, pt) === Er, "precision lost during signalling div", "NUMERIC_FAULT", {
      operation: "divSignal",
      fault: "underflow",
      value: this
    }), ne(this, ut, Es).call(this, n / O(e, pt), "divSignal");
  }
  /**
   *  Returns a comparison result between %%this%% and %%other%%.
   *
   *  This is suitable for use in sorting, where ``-1`` implies %%this%%
   *  is smaller, ``1`` implies %%this%% is larger and ``0`` implies
   *  both are equal.
   */
  cmp(e) {
    let n = this.value, r = e.value;
    const s = this.decimals - e.decimals;
    return s > 0 ? r *= ao(s) : s < 0 && (n *= ao(-s)), n < r ? -1 : n > r ? 1 : 0;
  }
  /**
   *  Returns true if %%other%% is equal to %%this%%.
   */
  eq(e) {
    return this.cmp(e) === 0;
  }
  /**
   *  Returns true if %%other%% is less than to %%this%%.
   */
  lt(e) {
    return this.cmp(e) < 0;
  }
  /**
   *  Returns true if %%other%% is less than or equal to %%this%%.
   */
  lte(e) {
    return this.cmp(e) <= 0;
  }
  /**
   *  Returns true if %%other%% is greater than to %%this%%.
   */
  gt(e) {
    return this.cmp(e) > 0;
  }
  /**
   *  Returns true if %%other%% is greater than or equal to %%this%%.
   */
  gte(e) {
    return this.cmp(e) >= 0;
  }
  /**
   *  Returns a new [[FixedNumber]] which is the largest **integer**
   *  that is less than or equal to %%this%%.
   *
   *  The decimal component of the result will always be ``0``.
   */
  floor() {
    let e = O(this, pt);
    return O(this, pt) < Er && (e -= O(this, xn) - Ca), e = O(this, pt) / O(this, xn) * O(this, xn), ne(this, ut, Es).call(this, e, "floor");
  }
  /**
   *  Returns a new [[FixedNumber]] which is the smallest **integer**
   *  that is greater than or equal to %%this%%.
   *
   *  The decimal component of the result will always be ``0``.
   */
  ceiling() {
    let e = O(this, pt);
    return O(this, pt) > Er && (e += O(this, xn) - Ca), e = O(this, pt) / O(this, xn) * O(this, xn), ne(this, ut, Es).call(this, e, "ceiling");
  }
  /**
   *  Returns a new [[FixedNumber]] with the decimal component
   *  rounded up on ties at %%decimals%% places.
   */
  round(e) {
    if (e == null && (e = 0), e >= this.decimals)
      return this;
    const n = this.decimals - e, r = jE * ao(n - 1);
    let s = this.value + r;
    const i = ao(n);
    return s = s / i * i, Ec(s, O(this, Or), "round"), new bi(fa, s, O(this, Or));
  }
  /**
   *  Returns true if %%this%% is equal to ``0``.
   */
  isZero() {
    return O(this, pt) === Er;
  }
  /**
   *  Returns true if %%this%% is less than ``0``.
   */
  isNegative() {
    return O(this, pt) < Er;
  }
  /**
   *  Returns the string representation of %%this%%.
   */
  toString() {
    return this._value;
  }
  /**
   *  Returns a float approximation.
   *
   *  Due to IEEE 754 precission (or lack thereof), this function
   *  can only return an approximation and most values will contain
   *  rounding errors.
   */
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  /**
   *  Return a new [[FixedNumber]] with the same value but has had
   *  its field set to %%format%%.
   *
   *  This will throw if the value cannot fit into %%format%%.
   */
  toFormat(e) {
    return bi.fromString(this.toString(), e);
  }
  /**
   *  Creates a new [[FixedNumber]] for %%value%% divided by
   *  %%decimal%% places with %%format%%.
   *
   *  This will throw a [[NumericFaultError]] if %%value%% (once adjusted
   *  for %%decimals%%) cannot fit in %%format%%, either due to overflow
   *  or underflow (precision loss).
   */
  static fromValue(e, n, r) {
    const s = n == null ? 0 : Be(n), i = Qh(r);
    let o = _e(e, "value");
    const a = s - i.decimals;
    if (a > 0) {
      const c = ao(a);
      K(o % c === Er, "value loses precision for format", "NUMERIC_FAULT", {
        operation: "fromValue",
        fault: "underflow",
        value: e
      }), o /= c;
    } else a < 0 && (o *= ao(-a));
    return Ec(o, i, "fromValue"), new bi(fa, o, i);
  }
  /**
   *  Creates a new [[FixedNumber]] for %%value%% with %%format%%.
   *
   *  This will throw a [[NumericFaultError]] if %%value%% cannot fit
   *  in %%format%%, either due to overflow or underflow (precision loss).
   */
  static fromString(e, n) {
    const r = e.match(/^(-?)([0-9]*)\.?([0-9]*)$/);
    D(r && r[2].length + r[3].length > 0, "invalid FixedNumber string value", "value", e);
    const s = Qh(n);
    let i = r[2] || "0", o = r[3] || "";
    for (; o.length < s.decimals; )
      o += Ba;
    K(o.substring(s.decimals).match(/^0*$/), "too many decimals for format", "NUMERIC_FAULT", {
      operation: "fromString",
      fault: "underflow",
      value: e
    }), o = o.substring(0, s.decimals);
    const a = BigInt(r[1] + i + o);
    return Ec(a, s, "fromString"), new bi(fa, a, s);
  }
  /**
   *  Creates a new [[FixedNumber]] with the big-endian representation
   *  %%value%% with %%format%%.
   *
   *  This will throw a [[NumericFaultError]] if %%value%% cannot fit
   *  in %%format%% due to overflow.
   */
  static fromBytes(e, n) {
    let r = fh(st(e, "value"));
    const s = Qh(n);
    return s.signed && (r = Sf(r, s.width)), Ec(r, s, "fromBytes"), new bi(fa, r, s);
  }
};
Or = new WeakMap(), pt = new WeakMap(), xn = new WeakMap(), ut = new WeakSet(), lo = function(e) {
  D(this.format === e.format, "incompatible format; use fixedNumber.toFormat", "other", e);
}, Es = function(e, n) {
  return e = Ec(e, O(this, Or), n), new bi(fa, e, O(this, Or));
}, Pd = function(e, n) {
  return ne(this, ut, lo).call(this, e), ne(this, ut, Es).call(this, O(this, pt) + O(e, pt), n);
}, Rd = function(e, n) {
  return ne(this, ut, lo).call(this, e), ne(this, ut, Es).call(this, O(this, pt) - O(e, pt), n);
}, Bd = function(e, n) {
  return ne(this, ut, lo).call(this, e), ne(this, ut, Es).call(this, O(this, pt) * O(e, pt) / O(this, xn), n);
}, Ld = function(e, n) {
  return K(O(e, pt) !== Er, "division by zero", "NUMERIC_FAULT", {
    operation: "div",
    fault: "divide-by-zero",
    value: this
  }), ne(this, ut, lo).call(this, e), ne(this, ut, Es).call(this, O(this, pt) * O(this, xn) / O(e, pt), n);
};
let Tf = bi;
function HE(t) {
  let e = t.toString(16);
  for (; e.length < 2; )
    e = "0" + e;
  return "0x" + e;
}
function t0(t, e, n) {
  let r = 0;
  for (let s = 0; s < n; s++)
    r = r * 256 + t[e + s];
  return r;
}
function n0(t, e, n, r) {
  const s = [];
  for (; n < e + 1 + r; ) {
    const i = My(t, n);
    s.push(i.result), n += i.consumed, K(n <= e + 1 + r, "child data too short", "BUFFER_OVERRUN", {
      buffer: t,
      length: r,
      offset: e
    });
  }
  return { consumed: 1 + r, result: s };
}
function My(t, e) {
  K(t.length !== 0, "data too short", "BUFFER_OVERRUN", {
    buffer: t,
    length: 0,
    offset: 1
  });
  const n = (r) => {
    K(r <= t.length, "data short segment too short", "BUFFER_OVERRUN", {
      buffer: t,
      length: t.length,
      offset: r
    });
  };
  if (t[e] >= 248) {
    const r = t[e] - 247;
    n(e + 1 + r);
    const s = t0(t, e + 1, r);
    return n(e + 1 + r + s), n0(t, e, e + 1 + r, r + s);
  } else if (t[e] >= 192) {
    const r = t[e] - 192;
    return n(e + 1 + r), n0(t, e, e + 1, r);
  } else if (t[e] >= 184) {
    const r = t[e] - 183;
    n(e + 1 + r);
    const s = t0(t, e + 1, r);
    n(e + 1 + r + s);
    const i = ye(t.slice(e + 1 + r, e + 1 + r + s));
    return { consumed: 1 + r + s, result: i };
  } else if (t[e] >= 128) {
    const r = t[e] - 128;
    n(e + 1 + r);
    const s = ye(t.slice(e + 1, e + 1 + r));
    return { consumed: 1 + r, result: s };
  }
  return { consumed: 1, result: HE(t[e]) };
}
function hh(t) {
  const e = st(t, "data"), n = My(e, 0);
  return D(n.consumed === e.length, "unexpected junk after rlp payload", "data", t), n.result;
}
function r0(t) {
  const e = [];
  for (; t; )
    e.unshift(t & 255), t >>= 8;
  return e;
}
function Dy(t) {
  if (Array.isArray(t)) {
    let r = [];
    if (t.forEach(function(i) {
      r = r.concat(Dy(i));
    }), r.length <= 55)
      return r.unshift(192 + r.length), r;
    const s = r0(r.length);
    return s.unshift(247 + s.length), s.concat(r);
  }
  const e = Array.prototype.slice.call(st(t, "object"));
  if (e.length === 1 && e[0] <= 127)
    return e;
  if (e.length <= 55)
    return e.unshift(128 + e.length), e;
  const n = r0(e.length);
  return n.unshift(183 + n.length), n.concat(e);
}
const s0 = "0123456789abcdef";
function zo(t) {
  let e = "0x";
  for (const n of Dy(t))
    e += s0[n >> 4], e += s0[n & 15];
  return e;
}
const $y = [
  "wei",
  "kwei",
  "mwei",
  "gwei",
  "szabo",
  "finney",
  "ether"
];
function WE(t, e) {
  let n = 18;
  if (typeof e == "string") {
    const r = $y.indexOf(e);
    D(r >= 0, "invalid unit", "unit", e), n = 3 * r;
  } else e != null && (n = Be(e, "unit"));
  return Tf.fromValue(t, n, { decimals: n, width: 512 }).toString();
}
function GE(t, e) {
  D(typeof t == "string", "value must be a string", "value", t);
  let n = 18;
  if (typeof e == "string") {
    const r = $y.indexOf(e);
    D(r >= 0, "invalid unit", "unit", e), n = 3 * r;
  } else e != null && (n = Be(e, "unit"));
  return Tf.fromString(t, { decimals: n, width: 512 }).value;
}
const Nn = 32, Md = new Uint8Array(Nn), zE = ["then"], Du = {}, Uy = /* @__PURE__ */ new WeakMap();
function fo(t) {
  return Uy.get(t);
}
function i0(t, e) {
  Uy.set(t, e);
}
function xc(t, e) {
  const n = new Error(`deferred error during ABI decoding triggered accessing ${t}`);
  throw n.error = e, n;
}
function Dd(t, e, n) {
  return t.indexOf(null) >= 0 ? e.map((r, s) => r instanceof Ll ? Dd(fo(r), r, n) : r) : t.reduce((r, s, i) => {
    let o = e.getValue(s);
    return s in r || (n && o instanceof Ll && (o = Dd(fo(o), o, n)), r[s] = o), r;
  }, {});
}
var Wa;
const ka = class ka extends Array {
  /**
   *  @private
   */
  constructor(...n) {
    const r = n[0];
    let s = n[1], i = (n[2] || []).slice(), o = !0;
    r !== Du && (s = n, i = [], o = !1);
    super(s.length);
    // No longer used; but cannot be removed as it will remove the
    // #private field from the .d.ts which may break backwards
    // compatibility
    z(this, Wa);
    s.forEach((u, f) => {
      this[f] = u;
    });
    const a = i.reduce((u, f) => (typeof f == "string" && u.set(f, (u.get(f) || 0) + 1), u), /* @__PURE__ */ new Map());
    if (i0(this, Object.freeze(s.map((u, f) => {
      const l = i[f];
      return l != null && a.get(l) === 1 ? l : null;
    }))), R(this, Wa, []), O(this, Wa) == null && O(this, Wa), !o)
      return;
    Object.freeze(this);
    const c = new Proxy(this, {
      get: (u, f, l) => {
        if (typeof f == "string") {
          if (f.match(/^[0-9]+$/)) {
            const p = Be(f, "%index");
            if (p < 0 || p >= this.length)
              throw new RangeError("out of result range");
            const d = u[p];
            return d instanceof Error && xc(`index ${p}`, d), d;
          }
          if (zE.indexOf(f) >= 0)
            return Reflect.get(u, f, l);
          const m = u[f];
          if (m instanceof Function)
            return function(...p) {
              return m.apply(this === l ? u : this, p);
            };
          if (!(f in u))
            return u.getValue.apply(this === l ? u : this, [f]);
        }
        return Reflect.get(u, f, l);
      }
    });
    return i0(c, fo(this)), c;
  }
  /**
   *  Returns the Result as a normal Array. If %%deep%%, any children
   *  which are Result objects are also converted to a normal Array.
   *
   *  This will throw if there are any outstanding deferred
   *  errors.
   */
  toArray(n) {
    const r = [];
    return this.forEach((s, i) => {
      s instanceof Error && xc(`index ${i}`, s), n && s instanceof ka && (s = s.toArray(n)), r.push(s);
    }), r;
  }
  /**
   *  Returns the Result as an Object with each name-value pair. If
   *  %%deep%%, any children which are Result objects are also
   *  converted to an Object.
   *
   *  This will throw if any value is unnamed, or if there are
   *  any outstanding deferred errors.
   */
  toObject(n) {
    const r = fo(this);
    return r.reduce((s, i, o) => (K(i != null, `value at index ${o} unnamed`, "UNSUPPORTED_OPERATION", {
      operation: "toObject()"
    }), Dd(r, this, n)), {});
  }
  /**
   *  @_ignore
   */
  slice(n, r) {
    n == null && (n = 0), n < 0 && (n += this.length, n < 0 && (n = 0)), r == null && (r = this.length), r < 0 && (r += this.length, r < 0 && (r = 0)), r > this.length && (r = this.length);
    const s = fo(this), i = [], o = [];
    for (let a = n; a < r; a++)
      i.push(this[a]), o.push(s[a]);
    return new ka(Du, i, o);
  }
  /**
   *  @_ignore
   */
  filter(n, r) {
    const s = fo(this), i = [], o = [];
    for (let a = 0; a < this.length; a++) {
      const c = this[a];
      c instanceof Error && xc(`index ${a}`, c), n.call(r, c, a, this) && (i.push(c), o.push(s[a]));
    }
    return new ka(Du, i, o);
  }
  /**
   *  @_ignore
   */
  map(n, r) {
    const s = [];
    for (let i = 0; i < this.length; i++) {
      const o = this[i];
      o instanceof Error && xc(`index ${i}`, o), s.push(n.call(r, o, i, this));
    }
    return s;
  }
  /**
   *  Returns the value for %%name%%.
   *
   *  Since it is possible to have a key whose name conflicts with
   *  a method on a [[Result]] or its superclass Array, or any
   *  JavaScript keyword, this ensures all named values are still
   *  accessible by name.
   */
  getValue(n) {
    const r = fo(this).indexOf(n);
    if (r === -1)
      return;
    const s = this[r];
    return s instanceof Error && xc(`property ${JSON.stringify(n)}`, s.error), s;
  }
  /**
   *  Creates a new [[Result]] for %%items%% with each entry
   *  also accessible by its corresponding name in %%keys%%.
   */
  static fromItems(n, r) {
    return new ka(Du, n, r);
  }
};
Wa = new WeakMap();
let Ll = ka;
function o0(t) {
  let e = In(t);
  return K(e.length <= Nn, "value out-of-bounds", "BUFFER_OVERRUN", { buffer: e, length: Nn, offset: e.length }), e.length !== Nn && (e = On(jt([Md.slice(e.length % Nn), e]))), e;
}
class Zs {
  constructor(e, n, r, s) {
    // The coder name:
    //   - address, uint256, tuple, array, etc.
    j(this, "name");
    // The fully expanded type, including composite types:
    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.
    j(this, "type");
    // The localName bound in the signature, in this example it is "baz":
    //   - tuple(address foo, uint bar) baz
    j(this, "localName");
    // Whether this type is dynamic:
    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.
    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)
    j(this, "dynamic");
    ke(this, { name: e, type: n, localName: r, dynamic: s }, {
      name: "string",
      type: "string",
      localName: "string",
      dynamic: "boolean"
    });
  }
  _throwError(e, n) {
    D(!1, e, this.localName, n);
  }
}
var Is, Co, Ga, Ku;
class $d {
  constructor() {
    z(this, Ga);
    // An array of WordSize lengthed objects to concatenation
    z(this, Is);
    z(this, Co);
    R(this, Is, []), R(this, Co, 0);
  }
  get data() {
    return jt(O(this, Is));
  }
  get length() {
    return O(this, Co);
  }
  appendWriter(e) {
    return ne(this, Ga, Ku).call(this, On(e.data));
  }
  // Arrayish item; pad on the right to *nearest* WordSize
  writeBytes(e) {
    let n = On(e);
    const r = n.length % Nn;
    return r && (n = On(jt([n, Md.slice(r)]))), ne(this, Ga, Ku).call(this, n);
  }
  // Numeric item; pad on the left *to* WordSize
  writeValue(e) {
    return ne(this, Ga, Ku).call(this, o0(e));
  }
  // Inserts a numeric place-holder, returning a callback that can
  // be used to asjust the value later
  writeUpdatableValue() {
    const e = O(this, Is).length;
    return O(this, Is).push(Md), R(this, Co, O(this, Co) + Nn), (n) => {
      O(this, Is)[e] = o0(n);
    };
  }
}
Is = new WeakMap(), Co = new WeakMap(), Ga = new WeakSet(), Ku = function(e) {
  return O(this, Is).push(e), R(this, Co, O(this, Co) + e.length), e.length;
};
var $n, nr, ko, So, vi, Jo, jd, jy;
const gm = class gm {
  constructor(e, n, r) {
    z(this, Jo);
    // Allows incomplete unpadded data to be read; otherwise an error
    // is raised if attempting to overrun the buffer. This is required
    // to deal with an old Solidity bug, in which event data for
    // external (not public thoguh) was tightly packed.
    j(this, "allowLoose");
    z(this, $n);
    z(this, nr);
    z(this, ko);
    z(this, So);
    z(this, vi);
    ke(this, { allowLoose: !!n }), R(this, $n, On(e)), R(this, ko, 0), R(this, So, null), R(this, vi, r ?? 1024), R(this, nr, 0);
  }
  get data() {
    return ye(O(this, $n));
  }
  get dataLength() {
    return O(this, $n).length;
  }
  get consumed() {
    return O(this, nr);
  }
  get bytes() {
    return new Uint8Array(O(this, $n));
  }
  // Create a sub-reader with the same underlying data, but offset
  subReader(e) {
    const n = new gm(O(this, $n).slice(O(this, nr) + e), this.allowLoose, O(this, vi));
    return R(n, So, this), n;
  }
  // Read bytes
  readBytes(e, n) {
    let r = ne(this, Jo, jy).call(this, 0, e, !!n);
    return ne(this, Jo, jd).call(this, e), R(this, nr, O(this, nr) + r.length), r.slice(0, e);
  }
  // Read a numeric values
  readValue() {
    return fh(this.readBytes(Nn));
  }
  readIndex() {
    return EE(this.readBytes(Nn));
  }
};
$n = new WeakMap(), nr = new WeakMap(), ko = new WeakMap(), So = new WeakMap(), vi = new WeakMap(), Jo = new WeakSet(), jd = function(e) {
  var n;
  if (O(this, So))
    return ne(n = O(this, So), Jo, jd).call(n, e);
  R(this, ko, O(this, ko) + e), K(O(this, vi) < 1 || O(this, ko) <= O(this, vi) * this.dataLength, `compressed ABI data exceeds inflation ratio of ${O(this, vi)} ( see: https://github.com/ethers-io/ethers.js/issues/4537 )`, "BUFFER_OVERRUN", {
    buffer: On(O(this, $n)),
    offset: O(this, nr),
    length: e,
    info: {
      bytesRead: O(this, ko),
      dataLength: this.dataLength
    }
  });
}, jy = function(e, n, r) {
  let s = Math.ceil(n / Nn) * Nn;
  return O(this, nr) + s > O(this, $n).length && (this.allowLoose && r && O(this, nr) + n <= O(this, $n).length ? s = n : K(!1, "data out-of-bounds", "BUFFER_OVERRUN", {
    buffer: On(O(this, $n)),
    length: O(this, $n).length,
    offset: O(this, nr) + s
  })), O(this, $n).slice(O(this, nr), O(this, nr) + s);
};
let Ud = gm;
const [VE, qE] = De.split([
  "0x428a2f98d728ae22",
  "0x7137449123ef65cd",
  "0xb5c0fbcfec4d3b2f",
  "0xe9b5dba58189dbbc",
  "0x3956c25bf348b538",
  "0x59f111f1b605d019",
  "0x923f82a4af194f9b",
  "0xab1c5ed5da6d8118",
  "0xd807aa98a3030242",
  "0x12835b0145706fbe",
  "0x243185be4ee4b28c",
  "0x550c7dc3d5ffb4e2",
  "0x72be5d74f27b896f",
  "0x80deb1fe3b1696b1",
  "0x9bdc06a725c71235",
  "0xc19bf174cf692694",
  "0xe49b69c19ef14ad2",
  "0xefbe4786384f25e3",
  "0x0fc19dc68b8cd5b5",
  "0x240ca1cc77ac9c65",
  "0x2de92c6f592b0275",
  "0x4a7484aa6ea6e483",
  "0x5cb0a9dcbd41fbd4",
  "0x76f988da831153b5",
  "0x983e5152ee66dfab",
  "0xa831c66d2db43210",
  "0xb00327c898fb213f",
  "0xbf597fc7beef0ee4",
  "0xc6e00bf33da88fc2",
  "0xd5a79147930aa725",
  "0x06ca6351e003826f",
  "0x142929670a0e6e70",
  "0x27b70a8546d22ffc",
  "0x2e1b21385c26c926",
  "0x4d2c6dfc5ac42aed",
  "0x53380d139d95b3df",
  "0x650a73548baf63de",
  "0x766a0abb3c77b2a8",
  "0x81c2c92e47edaee6",
  "0x92722c851482353b",
  "0xa2bfe8a14cf10364",
  "0xa81a664bbc423001",
  "0xc24b8b70d0f89791",
  "0xc76c51a30654be30",
  "0xd192e819d6ef5218",
  "0xd69906245565a910",
  "0xf40e35855771202a",
  "0x106aa07032bbd1b8",
  "0x19a4c116b8d2d0c8",
  "0x1e376c085141ab53",
  "0x2748774cdf8eeb99",
  "0x34b0bcb5e19b48a8",
  "0x391c0cb3c5c95a63",
  "0x4ed8aa4ae3418acb",
  "0x5b9cca4f7763e373",
  "0x682e6ff3d6b2b8a3",
  "0x748f82ee5defb2fc",
  "0x78a5636f43172f60",
  "0x84c87814a1f0ab72",
  "0x8cc702081a6439ec",
  "0x90befffa23631e28",
  "0xa4506cebde82bde9",
  "0xbef9a3f7b2c67915",
  "0xc67178f2e372532b",
  "0xca273eceea26619c",
  "0xd186b8c721c0c207",
  "0xeada7dd6cde0eb1e",
  "0xf57d4f7fee6ed178",
  "0x06f067aa72176fba",
  "0x0a637dc5a2c898a6",
  "0x113f9804bef90dae",
  "0x1b710b35131c471b",
  "0x28db77f523047d84",
  "0x32caab7b40c72493",
  "0x3c9ebe0a15c9bebc",
  "0x431d67c49c100d4c",
  "0x4cc5d4becb3e42b6",
  "0x597f299cfc657e2a",
  "0x5fcb6fab3ad6faec",
  "0x6c44198c4a475817"
].map((t) => BigInt(t))), hi = /* @__PURE__ */ new Uint32Array(80), di = /* @__PURE__ */ new Uint32Array(80);
class QE extends db {
  constructor() {
    super(128, 64, 16, !1), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  // prettier-ignore
  get() {
    const { Ah: e, Al: n, Bh: r, Bl: s, Ch: i, Cl: o, Dh: a, Dl: c, Eh: u, El: f, Fh: l, Fl: m, Gh: p, Gl: d, Hh: h, Hl: b } = this;
    return [e, n, r, s, i, o, a, c, u, f, l, m, p, d, h, b];
  }
  // prettier-ignore
  set(e, n, r, s, i, o, a, c, u, f, l, m, p, d, h, b) {
    this.Ah = e | 0, this.Al = n | 0, this.Bh = r | 0, this.Bl = s | 0, this.Ch = i | 0, this.Cl = o | 0, this.Dh = a | 0, this.Dl = c | 0, this.Eh = u | 0, this.El = f | 0, this.Fh = l | 0, this.Fl = m | 0, this.Gh = p | 0, this.Gl = d | 0, this.Hh = h | 0, this.Hl = b | 0;
  }
  process(e, n) {
    for (let w = 0; w < 16; w++, n += 4)
      hi[w] = e.getUint32(n), di[w] = e.getUint32(n += 4);
    for (let w = 16; w < 80; w++) {
      const _ = hi[w - 15] | 0, E = di[w - 15] | 0, k = De.rotrSH(_, E, 1) ^ De.rotrSH(_, E, 8) ^ De.shrSH(_, E, 7), S = De.rotrSL(_, E, 1) ^ De.rotrSL(_, E, 8) ^ De.shrSL(_, E, 7), A = hi[w - 2] | 0, x = di[w - 2] | 0, T = De.rotrSH(A, x, 19) ^ De.rotrBH(A, x, 61) ^ De.shrSH(A, x, 6), N = De.rotrSL(A, x, 19) ^ De.rotrBL(A, x, 61) ^ De.shrSL(A, x, 6), F = De.add4L(S, N, di[w - 7], di[w - 16]), V = De.add4H(F, k, T, hi[w - 7], hi[w - 16]);
      hi[w] = V | 0, di[w] = F | 0;
    }
    let { Ah: r, Al: s, Bh: i, Bl: o, Ch: a, Cl: c, Dh: u, Dl: f, Eh: l, El: m, Fh: p, Fl: d, Gh: h, Gl: b, Hh: g, Hl: y } = this;
    for (let w = 0; w < 80; w++) {
      const _ = De.rotrSH(l, m, 14) ^ De.rotrSH(l, m, 18) ^ De.rotrBH(l, m, 41), E = De.rotrSL(l, m, 14) ^ De.rotrSL(l, m, 18) ^ De.rotrBL(l, m, 41), k = l & p ^ ~l & h, S = m & d ^ ~m & b, A = De.add5L(y, E, S, qE[w], di[w]), x = De.add5H(A, g, _, k, VE[w], hi[w]), T = A | 0, N = De.rotrSH(r, s, 28) ^ De.rotrBH(r, s, 34) ^ De.rotrBH(r, s, 39), F = De.rotrSL(r, s, 28) ^ De.rotrBL(r, s, 34) ^ De.rotrBL(r, s, 39), V = r & i ^ r & a ^ i & a, oe = s & o ^ s & c ^ o & c;
      g = h | 0, y = b | 0, h = p | 0, b = d | 0, p = l | 0, d = m | 0, { h: l, l: m } = De.add(u | 0, f | 0, x | 0, T | 0), u = a | 0, f = c | 0, a = i | 0, c = o | 0, i = r | 0, o = s | 0;
      const H = De.add3L(T, F, oe);
      r = De.add3H(H, x, N, V), s = H | 0;
    }
    ({ h: r, l: s } = De.add(this.Ah | 0, this.Al | 0, r | 0, s | 0)), { h: i, l: o } = De.add(this.Bh | 0, this.Bl | 0, i | 0, o | 0), { h: a, l: c } = De.add(this.Ch | 0, this.Cl | 0, a | 0, c | 0), { h: u, l: f } = De.add(this.Dh | 0, this.Dl | 0, u | 0, f | 0), { h: l, l: m } = De.add(this.Eh | 0, this.El | 0, l | 0, m | 0), { h: p, l: d } = De.add(this.Fh | 0, this.Fl | 0, p | 0, d | 0), { h, l: b } = De.add(this.Gh | 0, this.Gl | 0, h | 0, b | 0), { h: g, l: y } = De.add(this.Hh | 0, this.Hl | 0, g | 0, y | 0), this.set(r, s, i, o, a, c, u, f, l, m, p, d, h, b, g, y);
  }
  roundClean() {
    hi.fill(0), di.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
}
const ZE = /* @__PURE__ */ kp(() => new QE());
function JE() {
  if (typeof self < "u")
    return self;
  if (typeof window < "u")
    return window;
  if (typeof global < "u")
    return global;
  throw new Error("unable to locate global object");
}
const a0 = JE();
a0.crypto || a0.msCrypto;
function KE(t) {
  switch (t) {
    case "sha256":
      return pb.create();
    case "sha512":
      return ZE.create();
  }
  D(!1, "invalid hashing algorithm name", "algorithm", t);
}
let Fy = !1;
const Hy = function(t) {
  return M_(t);
};
let Wy = Hy;
function Wt(t) {
  const e = st(t, "data");
  return ye(Wy(e));
}
Wt._ = Hy;
Wt.lock = function() {
  Fy = !0;
};
Wt.register = function(t) {
  if (Fy)
    throw new TypeError("keccak256 is locked");
  Wy = t;
};
Object.freeze(Wt);
const Gy = function(t) {
  return KE("sha256").update(t).digest();
};
let zy = Gy, Vy = !1;
function Vl(t) {
  const e = st(t, "data");
  return ye(zy(e));
}
Vl._ = Gy;
Vl.lock = function() {
  Vy = !0;
};
Vl.register = function(t) {
  if (Vy)
    throw new Error("sha256 is locked");
  zy = t;
};
Object.freeze(Vl);
Object.freeze(Vl);
const Yc = "0x0000000000000000000000000000000000000000", l0 = "0x0000000000000000000000000000000000000000000000000000000000000000", c0 = BigInt(0), u0 = BigInt(1), f0 = BigInt(2), h0 = BigInt(27), d0 = BigInt(28), $u = BigInt(35), ha = {};
function p0(t) {
  return Go(In(t), 32);
}
var za, Va, qa, Oo;
const xr = class xr {
  /**
   *  @private
   */
  constructor(e, n, r, s) {
    z(this, za);
    z(this, Va);
    z(this, qa);
    z(this, Oo);
    Cu(e, ha, "Signature"), R(this, za, n), R(this, Va, r), R(this, qa, s), R(this, Oo, null);
  }
  /**
   *  The ``r`` value for a signautre.
   *
   *  This represents the ``x`` coordinate of a "reference" or
   *  challenge point, from which the ``y`` can be computed.
   */
  get r() {
    return O(this, za);
  }
  set r(e) {
    D(Ra(e) === 32, "invalid r", "value", e), R(this, za, ye(e));
  }
  /**
   *  The ``s`` value for a signature.
   */
  get s() {
    return O(this, Va);
  }
  set s(e) {
    D(Ra(e) === 32, "invalid s", "value", e);
    const n = ye(e);
    D(parseInt(n.substring(0, 3)) < 8, "non-canonical s", "value", n), R(this, Va, n);
  }
  /**
   *  The ``v`` value for a signature.
   *
   *  Since a given ``x`` value for ``r`` has two possible values for
   *  its correspondin ``y``, the ``v`` indicates which of the two ``y``
   *  values to use.
   *
   *  It is normalized to the values ``27`` or ``28`` for legacy
   *  purposes.
   */
  get v() {
    return O(this, qa);
  }
  set v(e) {
    const n = Be(e, "value");
    D(n === 27 || n === 28, "invalid v", "v", e), R(this, qa, n);
  }
  /**
   *  The EIP-155 ``v`` for legacy transactions. For non-legacy
   *  transactions, this value is ``null``.
   */
  get networkV() {
    return O(this, Oo);
  }
  /**
   *  The chain ID for EIP-155 legacy transactions. For non-legacy
   *  transactions, this value is ``null``.
   */
  get legacyChainId() {
    const e = this.networkV;
    return e == null ? null : xr.getChainId(e);
  }
  /**
   *  The ``yParity`` for the signature.
   *
   *  See ``v`` for more details on how this value is used.
   */
  get yParity() {
    return this.v === 27 ? 0 : 1;
  }
  /**
   *  The [[link-eip-2098]] compact representation of the ``yParity``
   *  and ``s`` compacted into a single ``bytes32``.
   */
  get yParityAndS() {
    const e = st(this.s);
    return this.yParity && (e[0] |= 128), ye(e);
  }
  /**
   *  The [[link-eip-2098]] compact representation.
   */
  get compactSerialized() {
    return jt([this.r, this.yParityAndS]);
  }
  /**
   *  The serialized representation.
   */
  get serialized() {
    return jt([this.r, this.s, this.yParity ? "0x1c" : "0x1b"]);
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return `Signature { r: "${this.r}", s: "${this.s}", yParity: ${this.yParity}, networkV: ${this.networkV} }`;
  }
  /**
   *  Returns a new identical [[Signature]].
   */
  clone() {
    const e = new xr(ha, this.r, this.s, this.v);
    return this.networkV && R(e, Oo, this.networkV), e;
  }
  /**
   *  Returns a representation that is compatible with ``JSON.stringify``.
   */
  toJSON() {
    const e = this.networkV;
    return {
      _type: "signature",
      networkV: e != null ? e.toString() : null,
      r: this.r,
      s: this.s,
      v: this.v
    };
  }
  /**
   *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.
   *
   *  @example:
   *    Signature.getChainId(45)
   *    //_result:
   *
   *    Signature.getChainId(46)
   *    //_result:
   */
  static getChainId(e) {
    const n = _e(e, "v");
    return n == h0 || n == d0 ? c0 : (D(n >= $u, "invalid EIP-155 v", "v", e), (n - $u) / f0);
  }
  /**
   *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.
   *
   *  Legacy transactions which use [[link-eip-155]] hijack the ``v``
   *  property to include the chain ID.
   *
   *  @example:
   *    Signature.getChainIdV(5, 27)
   *    //_result:
   *
   *    Signature.getChainIdV(5, 28)
   *    //_result:
   *
   */
  static getChainIdV(e, n) {
    return _e(e) * f0 + BigInt(35 + n - 27);
  }
  /**
   *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,
   *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.
   *
   *  @example:
   *    // The values 0 and 1 imply v is actually yParity
   *    Signature.getNormalizedV(0)
   *    //_result:
   *
   *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)
   *    Signature.getNormalizedV(27)
   *    //_result:
   *
   *    // Legacy EIP-155 transaction (i.e. >= 35)
   *    Signature.getNormalizedV(46)
   *    //_result:
   *
   *    // Invalid values throw
   *    Signature.getNormalizedV(5)
   *    //_error:
   */
  static getNormalizedV(e) {
    const n = _e(e);
    return n === c0 || n === h0 ? 27 : n === u0 || n === d0 ? 28 : (D(n >= $u, "invalid v", "v", e), n & u0 ? 27 : 28);
  }
  /**
   *  Creates a new [[Signature]].
   *
   *  If no %%sig%% is provided, a new [[Signature]] is created
   *  with default values.
   *
   *  If %%sig%% is a string, it is parsed.
   */
  static from(e) {
    function n(u, f) {
      D(u, f, "signature", e);
    }
    if (e == null)
      return new xr(ha, l0, l0, 27);
    if (typeof e == "string") {
      const u = st(e, "signature");
      if (u.length === 64) {
        const f = ye(u.slice(0, 32)), l = u.slice(32, 64), m = l[0] & 128 ? 28 : 27;
        return l[0] &= 127, new xr(ha, f, ye(l), m);
      }
      if (u.length === 65) {
        const f = ye(u.slice(0, 32)), l = u.slice(32, 64);
        n((l[0] & 128) === 0, "non-canonical s");
        const m = xr.getNormalizedV(u[64]);
        return new xr(ha, f, ye(l), m);
      }
      n(!1, "invalid raw signature length");
    }
    if (e instanceof xr)
      return e.clone();
    const r = e.r;
    n(r != null, "missing r");
    const s = p0(r), i = function(u, f) {
      if (u != null)
        return p0(u);
      if (f != null) {
        n(wt(f, 32), "invalid yParityAndS");
        const l = st(f);
        return l[0] &= 127, ye(l);
      }
      n(!1, "missing s");
    }(e.s, e.yParityAndS);
    n((st(i)[0] & 128) == 0, "non-canonical s");
    const { networkV: o, v: a } = function(u, f, l) {
      if (u != null) {
        const m = _e(u);
        return {
          networkV: m >= $u ? m : void 0,
          v: xr.getNormalizedV(m)
        };
      }
      if (f != null)
        return n(wt(f, 32), "invalid yParityAndS"), { v: st(f)[0] & 128 ? 28 : 27 };
      if (l != null) {
        switch (Be(l, "sig.yParity")) {
          case 0:
            return { v: 27 };
          case 1:
            return { v: 28 };
        }
        n(!1, "invalid yParity");
      }
      n(!1, "missing v");
    }(e.v, e.yParityAndS, e.yParity), c = new xr(ha, s, i, a);
    return o && R(c, Oo, o), n(e.yParity == null || Be(e.yParity, "sig.yParity") === c.yParity, "yParity mismatch"), n(e.yParityAndS == null || e.yParityAndS === c.yParityAndS, "yParityAndS mismatch"), c;
  }
};
za = new WeakMap(), Va = new WeakMap(), qa = new WeakMap(), Oo = new WeakMap();
let Br = xr;
var Ns;
const ho = class ho {
  /**
   *  Creates a new **SigningKey** for %%privateKey%%.
   */
  constructor(e) {
    z(this, Ns);
    D(Ra(e) === 32, "invalid private key", "privateKey", "[REDACTED]"), R(this, Ns, ye(e));
  }
  /**
   *  The private key.
   */
  get privateKey() {
    return O(this, Ns);
  }
  /**
   *  The uncompressed public key.
   *
   * This will always begin with the prefix ``0x04`` and be 132
   * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).
   */
  get publicKey() {
    return ho.computePublicKey(O(this, Ns));
  }
  /**
   *  The compressed public key.
   *
   *  This will always begin with either the prefix ``0x02`` or ``0x03``
   *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal
   *  nibbles)
   */
  get compressedPublicKey() {
    return ho.computePublicKey(O(this, Ns), !0);
  }
  /**
   *  Return the signature of the signed %%digest%%.
   */
  sign(e) {
    D(Ra(e) === 32, "invalid digest length", "digest", e);
    const n = mi.sign(On(e), On(O(this, Ns)), {
      lowS: !0
    });
    return Br.from({
      r: Hi(n.r, 32),
      s: Hi(n.s, 32),
      v: n.recovery ? 28 : 27
    });
  }
  /**
   *  Returns the [[link-wiki-ecdh]] shared secret between this
   *  private key and the %%other%% key.
   *
   *  The %%other%% key may be any type of key, a raw public key,
   *  a compressed/uncompressed pubic key or aprivate key.
   *
   *  Best practice is usually to use a cryptographic hash on the
   *  returned value before using it as a symetric secret.
   *
   *  @example:
   *    sign1 = new SigningKey(id("some-secret-1"))
   *    sign2 = new SigningKey(id("some-secret-2"))
   *
   *    // Notice that privA.computeSharedSecret(pubB)...
   *    sign1.computeSharedSecret(sign2.publicKey)
   *    //_result:
   *
   *    // ...is equal to privB.computeSharedSecret(pubA).
   *    sign2.computeSharedSecret(sign1.publicKey)
   *    //_result:
   */
  computeSharedSecret(e) {
    const n = ho.computePublicKey(e);
    return ye(mi.getSharedSecret(On(O(this, Ns)), st(n), !1));
  }
  /**
   *  Compute the public key for %%key%%, optionally %%compressed%%.
   *
   *  The %%key%% may be any type of key, a raw public key, a
   *  compressed/uncompressed public key or private key.
   *
   *  @example:
   *    sign = new SigningKey(id("some-secret"));
   *
   *    // Compute the uncompressed public key for a private key
   *    SigningKey.computePublicKey(sign.privateKey)
   *    //_result:
   *
   *    // Compute the compressed public key for a private key
   *    SigningKey.computePublicKey(sign.privateKey, true)
   *    //_result:
   *
   *    // Compute the uncompressed public key
   *    SigningKey.computePublicKey(sign.publicKey, false);
   *    //_result:
   *
   *    // Compute the Compressed a public key
   *    SigningKey.computePublicKey(sign.publicKey, true);
   *    //_result:
   */
  static computePublicKey(e, n) {
    let r = st(e, "key");
    if (r.length === 32) {
      const i = mi.getPublicKey(r, !!n);
      return ye(i);
    }
    if (r.length === 64) {
      const i = new Uint8Array(65);
      i[0] = 4, i.set(r, 1), r = i;
    }
    const s = mi.ProjectivePoint.fromHex(r);
    return ye(s.toRawBytes(n));
  }
  /**
   *  Returns the public key for the private key which produced the
   *  %%signature%% for the given %%digest%%.
   *
   *  @example:
   *    key = new SigningKey(id("some-secret"))
   *    digest = id("hello world")
   *    sig = key.sign(digest)
   *
   *    // Notice the signer public key...
   *    key.publicKey
   *    //_result:
   *
   *    // ...is equal to the recovered public key
   *    SigningKey.recoverPublicKey(digest, sig)
   *    //_result:
   *
   */
  static recoverPublicKey(e, n) {
    D(Ra(e) === 32, "invalid digest length", "digest", e);
    const r = Br.from(n);
    let s = mi.Signature.fromCompact(On(jt([r.r, r.s])));
    s = s.addRecoveryBit(r.yParity);
    const i = s.recoverPublicKey(On(e));
    return D(i != null, "invalid signautre for digest", "signature", n), "0x" + i.toHex(!1);
  }
  /**
   *  Returns the point resulting from adding the ellipic curve points
   *  %%p0%% and %%p1%%.
   *
   *  This is not a common function most developers should require, but
   *  can be useful for certain privacy-specific techniques.
   *
   *  For example, it is used by [[HDNodeWallet]] to compute child
   *  addresses from parent public keys and chain codes.
   */
  static addPoints(e, n, r) {
    const s = mi.ProjectivePoint.fromHex(ho.computePublicKey(e).substring(2)), i = mi.ProjectivePoint.fromHex(ho.computePublicKey(n).substring(2));
    return "0x" + s.add(i).toHex(!!r);
  }
};
Ns = new WeakMap();
let Xc = ho;
const YE = BigInt(0), XE = BigInt(36);
function m0(t) {
  t = t.toLowerCase();
  const e = t.substring(2).split(""), n = new Uint8Array(40);
  for (let s = 0; s < 40; s++)
    n[s] = e[s].charCodeAt(0);
  const r = st(Wt(n));
  for (let s = 0; s < 40; s += 2)
    r[s >> 1] >> 4 >= 8 && (e[s] = e[s].toUpperCase()), (r[s >> 1] & 15) >= 8 && (e[s + 1] = e[s + 1].toUpperCase());
  return "0x" + e.join("");
}
const rm = {};
for (let t = 0; t < 10; t++)
  rm[String(t)] = String(t);
for (let t = 0; t < 26; t++)
  rm[String.fromCharCode(65 + t)] = String(10 + t);
const g0 = 15;
function e9(t) {
  t = t.toUpperCase(), t = t.substring(4) + t.substring(0, 2) + "00";
  let e = t.split("").map((r) => rm[r]).join("");
  for (; e.length >= g0; ) {
    let r = e.substring(0, g0);
    e = parseInt(r, 10) % 97 + e.substring(r.length);
  }
  let n = String(98 - parseInt(e, 10) % 97);
  for (; n.length < 2; )
    n = "0" + n;
  return n;
}
const t9 = function() {
  const t = {};
  for (let e = 0; e < 36; e++) {
    const n = "0123456789abcdefghijklmnopqrstuvwxyz"[e];
    t[n] = BigInt(e);
  }
  return t;
}();
function n9(t) {
  t = t.toLowerCase();
  let e = YE;
  for (let n = 0; n < t.length; n++)
    e = e * XE + t9[t[n]];
  return e;
}
function gt(t) {
  if (D(typeof t == "string", "invalid address", "address", t), t.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
    t.startsWith("0x") || (t = "0x" + t);
    const e = m0(t);
    return D(!t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || e === t, "bad address checksum", "address", t), e;
  }
  if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    D(t.substring(2, 4) === e9(t), "bad icap checksum", "address", t);
    let e = n9(t.substring(4)).toString(16);
    for (; e.length < 40; )
      e = "0" + e;
    return m0("0x" + e);
  }
  D(!1, "invalid address", "address", t);
}
function r9(t) {
  const e = gt(t.from);
  let r = _e(t.nonce, "tx.nonce").toString(16);
  return r === "0" ? r = "0x" : r.length % 2 ? r = "0x0" + r : r = "0x" + r, gt(Bt(Wt(zo([e, r])), 12));
}
function qy(t) {
  return t && typeof t.getAddress == "function";
}
async function Zh(t, e) {
  const n = await e;
  return (n == null || n === "0x0000000000000000000000000000000000000000") && (K(typeof t != "string", "unconfigured name", "UNCONFIGURED_NAME", { value: t }), D(!1, "invalid AddressLike value; did not resolve to a value address", "target", t)), gt(n);
}
function Pn(t, e) {
  if (typeof t == "string")
    return t.match(/^0x[0-9a-f]{40}$/i) ? gt(t) : (K(e != null, "ENS resolution requires a provider", "UNSUPPORTED_OPERATION", { operation: "resolveName" }), Zh(t, e.resolveName(t)));
  if (qy(t))
    return Zh(t, t.getAddress());
  if (t && typeof t.then == "function")
    return Zh(t, t);
  D(!1, "unsupported addressable value", "target", t);
}
const xs = {};
function be(t, e) {
  let n = !1;
  return e < 0 && (n = !0, e *= -1), new gn(xs, `${n ? "" : "u"}int${e}`, t, { signed: n, width: e });
}
function ot(t, e) {
  return new gn(xs, `bytes${e || ""}`, t, { size: e });
}
const b0 = Symbol.for("_ethers_typed");
var To;
const Cs = class Cs {
  /**
   *  @_ignore:
   */
  constructor(e, n, r, s) {
    /**
     *  The type, as a Solidity-compatible type.
     */
    j(this, "type");
    /**
     *  The actual value.
     */
    j(this, "value");
    z(this, To);
    /**
     *  @_ignore:
     */
    j(this, "_typedSymbol");
    s == null && (s = null), Cu(xs, e, "Typed"), ke(this, { _typedSymbol: b0, type: n, value: r }), R(this, To, s), this.format();
  }
  /**
   *  Format the type as a Human-Readable type.
   */
  format() {
    if (this.type === "array")
      throw new Error("");
    if (this.type === "dynamicArray")
      throw new Error("");
    return this.type === "tuple" ? `tuple(${this.value.map((e) => e.format()).join(",")})` : this.type;
  }
  /**
   *  The default value returned by this type.
   */
  defaultValue() {
    return 0;
  }
  /**
   *  The minimum value for numeric types.
   */
  minValue() {
    return 0;
  }
  /**
   *  The maximum value for numeric types.
   */
  maxValue() {
    return 0;
  }
  /**
   *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].
   */
  isBigInt() {
    return !!this.type.match(/^u?int[0-9]+$/);
  }
  /**
   *  Returns ``true`` and provides a type guard is this is a [[TypedData]].
   */
  isData() {
    return this.type.startsWith("bytes");
  }
  /**
   *  Returns ``true`` and provides a type guard is this is a [[TypedString]].
   */
  isString() {
    return this.type === "string";
  }
  /**
   *  Returns the tuple name, if this is a tuple. Throws otherwise.
   */
  get tupleName() {
    if (this.type !== "tuple")
      throw TypeError("not a tuple");
    return O(this, To);
  }
  // Returns the length of this type as an array
  // - `null` indicates the length is unforced, it could be dynamic
  // - `-1` indicates the length is dynamic
  // - any other value indicates it is a static array and is its length
  /**
   *  Returns the length of the array type or ``-1`` if it is dynamic.
   *
   *  Throws if the type is not an array.
   */
  get arrayLength() {
    if (this.type !== "array")
      throw TypeError("not an array");
    return O(this, To) === !0 ? -1 : O(this, To) === !1 ? this.value.length : null;
  }
  /**
   *  Returns a new **Typed** of %%type%% with the %%value%%.
   */
  static from(e, n) {
    return new Cs(xs, e, n);
  }
  /**
   *  Return a new ``uint8`` type for %%v%%.
   */
  static uint8(e) {
    return be(e, 8);
  }
  /**
   *  Return a new ``uint16`` type for %%v%%.
   */
  static uint16(e) {
    return be(e, 16);
  }
  /**
   *  Return a new ``uint24`` type for %%v%%.
   */
  static uint24(e) {
    return be(e, 24);
  }
  /**
   *  Return a new ``uint32`` type for %%v%%.
   */
  static uint32(e) {
    return be(e, 32);
  }
  /**
   *  Return a new ``uint40`` type for %%v%%.
   */
  static uint40(e) {
    return be(e, 40);
  }
  /**
   *  Return a new ``uint48`` type for %%v%%.
   */
  static uint48(e) {
    return be(e, 48);
  }
  /**
   *  Return a new ``uint56`` type for %%v%%.
   */
  static uint56(e) {
    return be(e, 56);
  }
  /**
   *  Return a new ``uint64`` type for %%v%%.
   */
  static uint64(e) {
    return be(e, 64);
  }
  /**
   *  Return a new ``uint72`` type for %%v%%.
   */
  static uint72(e) {
    return be(e, 72);
  }
  /**
   *  Return a new ``uint80`` type for %%v%%.
   */
  static uint80(e) {
    return be(e, 80);
  }
  /**
   *  Return a new ``uint88`` type for %%v%%.
   */
  static uint88(e) {
    return be(e, 88);
  }
  /**
   *  Return a new ``uint96`` type for %%v%%.
   */
  static uint96(e) {
    return be(e, 96);
  }
  /**
   *  Return a new ``uint104`` type for %%v%%.
   */
  static uint104(e) {
    return be(e, 104);
  }
  /**
   *  Return a new ``uint112`` type for %%v%%.
   */
  static uint112(e) {
    return be(e, 112);
  }
  /**
   *  Return a new ``uint120`` type for %%v%%.
   */
  static uint120(e) {
    return be(e, 120);
  }
  /**
   *  Return a new ``uint128`` type for %%v%%.
   */
  static uint128(e) {
    return be(e, 128);
  }
  /**
   *  Return a new ``uint136`` type for %%v%%.
   */
  static uint136(e) {
    return be(e, 136);
  }
  /**
   *  Return a new ``uint144`` type for %%v%%.
   */
  static uint144(e) {
    return be(e, 144);
  }
  /**
   *  Return a new ``uint152`` type for %%v%%.
   */
  static uint152(e) {
    return be(e, 152);
  }
  /**
   *  Return a new ``uint160`` type for %%v%%.
   */
  static uint160(e) {
    return be(e, 160);
  }
  /**
   *  Return a new ``uint168`` type for %%v%%.
   */
  static uint168(e) {
    return be(e, 168);
  }
  /**
   *  Return a new ``uint176`` type for %%v%%.
   */
  static uint176(e) {
    return be(e, 176);
  }
  /**
   *  Return a new ``uint184`` type for %%v%%.
   */
  static uint184(e) {
    return be(e, 184);
  }
  /**
   *  Return a new ``uint192`` type for %%v%%.
   */
  static uint192(e) {
    return be(e, 192);
  }
  /**
   *  Return a new ``uint200`` type for %%v%%.
   */
  static uint200(e) {
    return be(e, 200);
  }
  /**
   *  Return a new ``uint208`` type for %%v%%.
   */
  static uint208(e) {
    return be(e, 208);
  }
  /**
   *  Return a new ``uint216`` type for %%v%%.
   */
  static uint216(e) {
    return be(e, 216);
  }
  /**
   *  Return a new ``uint224`` type for %%v%%.
   */
  static uint224(e) {
    return be(e, 224);
  }
  /**
   *  Return a new ``uint232`` type for %%v%%.
   */
  static uint232(e) {
    return be(e, 232);
  }
  /**
   *  Return a new ``uint240`` type for %%v%%.
   */
  static uint240(e) {
    return be(e, 240);
  }
  /**
   *  Return a new ``uint248`` type for %%v%%.
   */
  static uint248(e) {
    return be(e, 248);
  }
  /**
   *  Return a new ``uint256`` type for %%v%%.
   */
  static uint256(e) {
    return be(e, 256);
  }
  /**
   *  Return a new ``uint256`` type for %%v%%.
   */
  static uint(e) {
    return be(e, 256);
  }
  /**
   *  Return a new ``int8`` type for %%v%%.
   */
  static int8(e) {
    return be(e, -8);
  }
  /**
   *  Return a new ``int16`` type for %%v%%.
   */
  static int16(e) {
    return be(e, -16);
  }
  /**
   *  Return a new ``int24`` type for %%v%%.
   */
  static int24(e) {
    return be(e, -24);
  }
  /**
   *  Return a new ``int32`` type for %%v%%.
   */
  static int32(e) {
    return be(e, -32);
  }
  /**
   *  Return a new ``int40`` type for %%v%%.
   */
  static int40(e) {
    return be(e, -40);
  }
  /**
   *  Return a new ``int48`` type for %%v%%.
   */
  static int48(e) {
    return be(e, -48);
  }
  /**
   *  Return a new ``int56`` type for %%v%%.
   */
  static int56(e) {
    return be(e, -56);
  }
  /**
   *  Return a new ``int64`` type for %%v%%.
   */
  static int64(e) {
    return be(e, -64);
  }
  /**
   *  Return a new ``int72`` type for %%v%%.
   */
  static int72(e) {
    return be(e, -72);
  }
  /**
   *  Return a new ``int80`` type for %%v%%.
   */
  static int80(e) {
    return be(e, -80);
  }
  /**
   *  Return a new ``int88`` type for %%v%%.
   */
  static int88(e) {
    return be(e, -88);
  }
  /**
   *  Return a new ``int96`` type for %%v%%.
   */
  static int96(e) {
    return be(e, -96);
  }
  /**
   *  Return a new ``int104`` type for %%v%%.
   */
  static int104(e) {
    return be(e, -104);
  }
  /**
   *  Return a new ``int112`` type for %%v%%.
   */
  static int112(e) {
    return be(e, -112);
  }
  /**
   *  Return a new ``int120`` type for %%v%%.
   */
  static int120(e) {
    return be(e, -120);
  }
  /**
   *  Return a new ``int128`` type for %%v%%.
   */
  static int128(e) {
    return be(e, -128);
  }
  /**
   *  Return a new ``int136`` type for %%v%%.
   */
  static int136(e) {
    return be(e, -136);
  }
  /**
   *  Return a new ``int144`` type for %%v%%.
   */
  static int144(e) {
    return be(e, -144);
  }
  /**
   *  Return a new ``int52`` type for %%v%%.
   */
  static int152(e) {
    return be(e, -152);
  }
  /**
   *  Return a new ``int160`` type for %%v%%.
   */
  static int160(e) {
    return be(e, -160);
  }
  /**
   *  Return a new ``int168`` type for %%v%%.
   */
  static int168(e) {
    return be(e, -168);
  }
  /**
   *  Return a new ``int176`` type for %%v%%.
   */
  static int176(e) {
    return be(e, -176);
  }
  /**
   *  Return a new ``int184`` type for %%v%%.
   */
  static int184(e) {
    return be(e, -184);
  }
  /**
   *  Return a new ``int92`` type for %%v%%.
   */
  static int192(e) {
    return be(e, -192);
  }
  /**
   *  Return a new ``int200`` type for %%v%%.
   */
  static int200(e) {
    return be(e, -200);
  }
  /**
   *  Return a new ``int208`` type for %%v%%.
   */
  static int208(e) {
    return be(e, -208);
  }
  /**
   *  Return a new ``int216`` type for %%v%%.
   */
  static int216(e) {
    return be(e, -216);
  }
  /**
   *  Return a new ``int224`` type for %%v%%.
   */
  static int224(e) {
    return be(e, -224);
  }
  /**
   *  Return a new ``int232`` type for %%v%%.
   */
  static int232(e) {
    return be(e, -232);
  }
  /**
   *  Return a new ``int240`` type for %%v%%.
   */
  static int240(e) {
    return be(e, -240);
  }
  /**
   *  Return a new ``int248`` type for %%v%%.
   */
  static int248(e) {
    return be(e, -248);
  }
  /**
   *  Return a new ``int256`` type for %%v%%.
   */
  static int256(e) {
    return be(e, -256);
  }
  /**
   *  Return a new ``int256`` type for %%v%%.
   */
  static int(e) {
    return be(e, -256);
  }
  /**
   *  Return a new ``bytes1`` type for %%v%%.
   */
  static bytes1(e) {
    return ot(e, 1);
  }
  /**
   *  Return a new ``bytes2`` type for %%v%%.
   */
  static bytes2(e) {
    return ot(e, 2);
  }
  /**
   *  Return a new ``bytes3`` type for %%v%%.
   */
  static bytes3(e) {
    return ot(e, 3);
  }
  /**
   *  Return a new ``bytes4`` type for %%v%%.
   */
  static bytes4(e) {
    return ot(e, 4);
  }
  /**
   *  Return a new ``bytes5`` type for %%v%%.
   */
  static bytes5(e) {
    return ot(e, 5);
  }
  /**
   *  Return a new ``bytes6`` type for %%v%%.
   */
  static bytes6(e) {
    return ot(e, 6);
  }
  /**
   *  Return a new ``bytes7`` type for %%v%%.
   */
  static bytes7(e) {
    return ot(e, 7);
  }
  /**
   *  Return a new ``bytes8`` type for %%v%%.
   */
  static bytes8(e) {
    return ot(e, 8);
  }
  /**
   *  Return a new ``bytes9`` type for %%v%%.
   */
  static bytes9(e) {
    return ot(e, 9);
  }
  /**
   *  Return a new ``bytes10`` type for %%v%%.
   */
  static bytes10(e) {
    return ot(e, 10);
  }
  /**
   *  Return a new ``bytes11`` type for %%v%%.
   */
  static bytes11(e) {
    return ot(e, 11);
  }
  /**
   *  Return a new ``bytes12`` type for %%v%%.
   */
  static bytes12(e) {
    return ot(e, 12);
  }
  /**
   *  Return a new ``bytes13`` type for %%v%%.
   */
  static bytes13(e) {
    return ot(e, 13);
  }
  /**
   *  Return a new ``bytes14`` type for %%v%%.
   */
  static bytes14(e) {
    return ot(e, 14);
  }
  /**
   *  Return a new ``bytes15`` type for %%v%%.
   */
  static bytes15(e) {
    return ot(e, 15);
  }
  /**
   *  Return a new ``bytes16`` type for %%v%%.
   */
  static bytes16(e) {
    return ot(e, 16);
  }
  /**
   *  Return a new ``bytes17`` type for %%v%%.
   */
  static bytes17(e) {
    return ot(e, 17);
  }
  /**
   *  Return a new ``bytes18`` type for %%v%%.
   */
  static bytes18(e) {
    return ot(e, 18);
  }
  /**
   *  Return a new ``bytes19`` type for %%v%%.
   */
  static bytes19(e) {
    return ot(e, 19);
  }
  /**
   *  Return a new ``bytes20`` type for %%v%%.
   */
  static bytes20(e) {
    return ot(e, 20);
  }
  /**
   *  Return a new ``bytes21`` type for %%v%%.
   */
  static bytes21(e) {
    return ot(e, 21);
  }
  /**
   *  Return a new ``bytes22`` type for %%v%%.
   */
  static bytes22(e) {
    return ot(e, 22);
  }
  /**
   *  Return a new ``bytes23`` type for %%v%%.
   */
  static bytes23(e) {
    return ot(e, 23);
  }
  /**
   *  Return a new ``bytes24`` type for %%v%%.
   */
  static bytes24(e) {
    return ot(e, 24);
  }
  /**
   *  Return a new ``bytes25`` type for %%v%%.
   */
  static bytes25(e) {
    return ot(e, 25);
  }
  /**
   *  Return a new ``bytes26`` type for %%v%%.
   */
  static bytes26(e) {
    return ot(e, 26);
  }
  /**
   *  Return a new ``bytes27`` type for %%v%%.
   */
  static bytes27(e) {
    return ot(e, 27);
  }
  /**
   *  Return a new ``bytes28`` type for %%v%%.
   */
  static bytes28(e) {
    return ot(e, 28);
  }
  /**
   *  Return a new ``bytes29`` type for %%v%%.
   */
  static bytes29(e) {
    return ot(e, 29);
  }
  /**
   *  Return a new ``bytes30`` type for %%v%%.
   */
  static bytes30(e) {
    return ot(e, 30);
  }
  /**
   *  Return a new ``bytes31`` type for %%v%%.
   */
  static bytes31(e) {
    return ot(e, 31);
  }
  /**
   *  Return a new ``bytes32`` type for %%v%%.
   */
  static bytes32(e) {
    return ot(e, 32);
  }
  /**
   *  Return a new ``address`` type for %%v%%.
   */
  static address(e) {
    return new Cs(xs, "address", e);
  }
  /**
   *  Return a new ``bool`` type for %%v%%.
   */
  static bool(e) {
    return new Cs(xs, "bool", !!e);
  }
  /**
   *  Return a new ``bytes`` type for %%v%%.
   */
  static bytes(e) {
    return new Cs(xs, "bytes", e);
  }
  /**
   *  Return a new ``string`` type for %%v%%.
   */
  static string(e) {
    return new Cs(xs, "string", e);
  }
  /**
   *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.
   */
  static array(e, n) {
    throw new Error("not implemented yet");
  }
  /**
   *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.
   */
  static tuple(e, n) {
    throw new Error("not implemented yet");
  }
  /**
   *  Return a new ``uint8`` type for %%v%%.
   */
  static overrides(e) {
    return new Cs(xs, "overrides", Object.assign({}, e));
  }
  /**
   *  Returns true only if %%value%% is a [[Typed]] instance.
   */
  static isTyped(e) {
    return e && typeof e == "object" && "_typedSymbol" in e && e._typedSymbol === b0;
  }
  /**
   *  If the value is a [[Typed]] instance, validates the underlying value
   *  and returns it, otherwise returns value directly.
   *
   *  This is useful for functions that with to accept either a [[Typed]]
   *  object or values.
   */
  static dereference(e, n) {
    if (Cs.isTyped(e)) {
      if (e.type !== n)
        throw new Error(`invalid type: expecetd ${n}, got ${e.type}`);
      return e.value;
    }
    return e;
  }
};
To = new WeakMap();
let gn = Cs;
class s9 extends Zs {
  constructor(e) {
    super("address", "address", e, !1);
  }
  defaultValue() {
    return "0x0000000000000000000000000000000000000000";
  }
  encode(e, n) {
    let r = gn.dereference(n, "string");
    try {
      r = gt(r);
    } catch (s) {
      return this._throwError(s.message, n);
    }
    return e.writeValue(r);
  }
  decode(e) {
    return gt(Hi(e.readValue(), 20));
  }
}
class i9 extends Zs {
  constructor(n) {
    super(n.name, n.type, "_", n.dynamic);
    j(this, "coder");
    this.coder = n;
  }
  defaultValue() {
    return this.coder.defaultValue();
  }
  encode(n, r) {
    return this.coder.encode(n, r);
  }
  decode(n) {
    return this.coder.decode(n);
  }
}
function Qy(t, e, n) {
  let r = [];
  if (Array.isArray(n))
    r = n;
  else if (n && typeof n == "object") {
    let c = {};
    r = e.map((u) => {
      const f = u.localName;
      return K(f, "cannot encode object for signature with missing names", "INVALID_ARGUMENT", { argument: "values", info: { coder: u }, value: n }), K(!c[f], "cannot encode object for signature with duplicate names", "INVALID_ARGUMENT", { argument: "values", info: { coder: u }, value: n }), c[f] = !0, n[f];
    });
  } else
    D(!1, "invalid tuple value", "tuple", n);
  D(e.length === r.length, "types/value length mismatch", "tuple", n);
  let s = new $d(), i = new $d(), o = [];
  e.forEach((c, u) => {
    let f = r[u];
    if (c.dynamic) {
      let l = i.length;
      c.encode(i, f);
      let m = s.writeUpdatableValue();
      o.push((p) => {
        m(p + l);
      });
    } else
      c.encode(s, f);
  }), o.forEach((c) => {
    c(s.length);
  });
  let a = t.appendWriter(s);
  return a += t.appendWriter(i), a;
}
function Zy(t, e) {
  let n = [], r = [], s = t.subReader(0);
  return e.forEach((i) => {
    let o = null;
    if (i.dynamic) {
      let a = t.readIndex(), c = s.subReader(a);
      try {
        o = i.decode(c);
      } catch (u) {
        if (un(u, "BUFFER_OVERRUN"))
          throw u;
        o = u, o.baseType = i.name, o.name = i.localName, o.type = i.type;
      }
    } else
      try {
        o = i.decode(t);
      } catch (a) {
        if (un(a, "BUFFER_OVERRUN"))
          throw a;
        o = a, o.baseType = i.name, o.name = i.localName, o.type = i.type;
      }
    if (o == null)
      throw new Error("investigate");
    n.push(o), r.push(i.localName || null);
  }), Ll.fromItems(n, r);
}
class o9 extends Zs {
  constructor(n, r, s) {
    const i = n.type + "[" + (r >= 0 ? r : "") + "]", o = r === -1 || n.dynamic;
    super("array", i, s, o);
    j(this, "coder");
    j(this, "length");
    ke(this, { coder: n, length: r });
  }
  defaultValue() {
    const n = this.coder.defaultValue(), r = [];
    for (let s = 0; s < this.length; s++)
      r.push(n);
    return r;
  }
  encode(n, r) {
    const s = gn.dereference(r, "array");
    Array.isArray(s) || this._throwError("expected array value", s);
    let i = this.length;
    i === -1 && (i = s.length, n.writeValue(s.length)), ky(s.length, i, "coder array" + (this.localName ? " " + this.localName : ""));
    let o = [];
    for (let a = 0; a < s.length; a++)
      o.push(this.coder);
    return Qy(n, o, s);
  }
  decode(n) {
    let r = this.length;
    r === -1 && (r = n.readIndex(), K(r * Nn <= n.dataLength, "insufficient data length", "BUFFER_OVERRUN", { buffer: n.bytes, offset: r * Nn, length: n.dataLength }));
    let s = [];
    for (let i = 0; i < r; i++)
      s.push(new i9(this.coder));
    return Zy(n, s);
  }
}
class a9 extends Zs {
  constructor(e) {
    super("bool", "bool", e, !1);
  }
  defaultValue() {
    return !1;
  }
  encode(e, n) {
    const r = gn.dereference(n, "bool");
    return e.writeValue(r ? 1 : 0);
  }
  decode(e) {
    return !!e.readValue();
  }
}
class Jy extends Zs {
  constructor(e, n) {
    super(e, e, n, !0);
  }
  defaultValue() {
    return "0x";
  }
  encode(e, n) {
    n = On(n);
    let r = e.writeValue(n.length);
    return r += e.writeBytes(n), r;
  }
  decode(e) {
    return e.readBytes(e.readIndex(), !0);
  }
}
class l9 extends Jy {
  constructor(e) {
    super("bytes", e);
  }
  decode(e) {
    return ye(super.decode(e));
  }
}
class c9 extends Zs {
  constructor(n, r) {
    let s = "bytes" + String(n);
    super(s, s, r, !1);
    j(this, "size");
    ke(this, { size: n }, { size: "number" });
  }
  defaultValue() {
    return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + this.size * 2);
  }
  encode(n, r) {
    let s = On(gn.dereference(r, this.type));
    return s.length !== this.size && this._throwError("incorrect data length", r), n.writeBytes(s);
  }
  decode(n) {
    return ye(n.readBytes(this.size));
  }
}
const u9 = new Uint8Array([]);
class f9 extends Zs {
  constructor(e) {
    super("null", "", e, !1);
  }
  defaultValue() {
    return null;
  }
  encode(e, n) {
    return n != null && this._throwError("not null", n), e.writeBytes(u9);
  }
  decode(e) {
    return e.readBytes(0), null;
  }
}
const h9 = BigInt(0), d9 = BigInt(1), p9 = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
class m9 extends Zs {
  constructor(n, r, s) {
    const i = (r ? "int" : "uint") + n * 8;
    super(i, i, s, !1);
    j(this, "size");
    j(this, "signed");
    ke(this, { size: n, signed: r }, { size: "number", signed: "boolean" });
  }
  defaultValue() {
    return 0;
  }
  encode(n, r) {
    let s = _e(gn.dereference(r, this.type)), i = go(p9, Nn * 8);
    if (this.signed) {
      let o = go(i, this.size * 8 - 1);
      (s > o || s < -(o + d9)) && this._throwError("value out-of-bounds", r), s = Ty(s, 8 * Nn);
    } else (s < h9 || s > go(i, this.size * 8)) && this._throwError("value out-of-bounds", r);
    return n.writeValue(s);
  }
  decode(n) {
    let r = go(n.readValue(), this.size * 8);
    return this.signed && (r = Sf(r, this.size * 8)), r;
  }
}
class g9 extends Jy {
  constructor(e) {
    super("string", e);
  }
  defaultValue() {
    return "";
  }
  encode(e, n) {
    return super.encode(e, Ws(gn.dereference(n, "string")));
  }
  decode(e) {
    return Of(super.decode(e));
  }
}
class Uu extends Zs {
  constructor(n, r) {
    let s = !1;
    const i = [];
    n.forEach((a) => {
      a.dynamic && (s = !0), i.push(a.type);
    });
    const o = "tuple(" + i.join(",") + ")";
    super("tuple", o, r, s);
    j(this, "coders");
    ke(this, { coders: Object.freeze(n.slice()) });
  }
  defaultValue() {
    const n = [];
    this.coders.forEach((s) => {
      n.push(s.defaultValue());
    });
    const r = this.coders.reduce((s, i) => {
      const o = i.localName;
      return o && (s[o] || (s[o] = 0), s[o]++), s;
    }, {});
    return this.coders.forEach((s, i) => {
      let o = s.localName;
      !o || r[o] !== 1 || (o === "length" && (o = "_length"), n[o] == null && (n[o] = n[i]));
    }), Object.freeze(n);
  }
  encode(n, r) {
    const s = gn.dereference(r, "tuple");
    return Qy(n, this.coders, s);
  }
  decode(n) {
    return Zy(n, this.coders);
  }
}
function Vo(t) {
  return Wt(Ws(t));
}
var b9 = "";
const y0 = /* @__PURE__ */ new Map([[8217, "apostrophe"], [8260, "fraction slash"], [12539, "middle dot"]]), w0 = 4;
function y9(t) {
  let e = 0;
  function n() {
    return t[e++] << 8 | t[e++];
  }
  let r = n(), s = 1, i = [0, 1];
  for (let E = 1; E < r; E++)
    i.push(s += n());
  let o = n(), a = e;
  e += o;
  let c = 0, u = 0;
  function f() {
    return c == 0 && (u = u << 8 | t[e++], c = 8), u >> --c & 1;
  }
  const l = 31, m = 2 ** l, p = m >>> 1, d = p >> 1, h = m - 1;
  let b = 0;
  for (let E = 0; E < l; E++) b = b << 1 | f();
  let g = [], y = 0, w = m;
  for (; ; ) {
    let E = Math.floor(((b - y + 1) * s - 1) / w), k = 0, S = r;
    for (; S - k > 1; ) {
      let T = k + S >>> 1;
      E < i[T] ? S = T : k = T;
    }
    if (k == 0) break;
    g.push(k);
    let A = y + Math.floor(w * i[k] / s), x = y + Math.floor(w * i[k + 1] / s) - 1;
    for (; !((A ^ x) & p); )
      b = b << 1 & h | f(), A = A << 1 & h, x = x << 1 & h | 1;
    for (; A & ~x & d; )
      b = b & p | b << 1 & h >>> 1 | f(), A = A << 1 ^ p, x = (x ^ p) << 1 | p | 1;
    y = A, w = 1 + x - A;
  }
  let _ = r - 4;
  return g.map((E) => {
    switch (E - _) {
      case 3:
        return _ + 65792 + (t[a++] << 16 | t[a++] << 8 | t[a++]);
      case 2:
        return _ + 256 + (t[a++] << 8 | t[a++]);
      case 1:
        return _ + t[a++];
      default:
        return E - 1;
    }
  });
}
function w9(t) {
  let e = 0;
  return () => t[e++];
}
function Ky(t) {
  return w9(y9(v9(t)));
}
function v9(t) {
  let e = [];
  [..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach((s, i) => e[s.charCodeAt(0)] = i);
  let n = t.length, r = new Uint8Array(6 * n >> 3);
  for (let s = 0, i = 0, o = 0, a = 0; s < n; s++)
    a = a << 6 | e[t.charCodeAt(s)], o += 6, o >= 8 && (r[i++] = a >> (o -= 8));
  return r;
}
function _9(t) {
  return t & 1 ? ~t >> 1 : t >> 1;
}
function A9(t, e) {
  let n = Array(t);
  for (let r = 0, s = 0; r < t; r++) n[r] = s += _9(e());
  return n;
}
function eu(t, e = 0) {
  let n = [];
  for (; ; ) {
    let r = t(), s = t();
    if (!s) break;
    e += r;
    for (let i = 0; i < s; i++)
      n.push(e + i);
    e += s + 1;
  }
  return n;
}
function Yy(t) {
  return tu(() => {
    let e = eu(t);
    if (e.length) return e;
  });
}
function Xy(t) {
  let e = [];
  for (; ; ) {
    let n = t();
    if (n == 0) break;
    e.push(E9(n, t));
  }
  for (; ; ) {
    let n = t() - 1;
    if (n < 0) break;
    e.push(x9(n, t));
  }
  return e.flat();
}
function tu(t) {
  let e = [];
  for (; ; ) {
    let n = t(e.length);
    if (!n) break;
    e.push(n);
  }
  return e;
}
function ew(t, e, n) {
  let r = Array(t).fill().map(() => []);
  for (let s = 0; s < e; s++)
    A9(t, n).forEach((i, o) => r[o].push(i));
  return r;
}
function E9(t, e) {
  let n = 1 + e(), r = e(), s = tu(e);
  return ew(s.length, 1 + t, e).flatMap((o, a) => {
    let [c, ...u] = o;
    return Array(s[a]).fill().map((f, l) => {
      let m = l * r;
      return [c + l * n, u.map((p) => p + m)];
    });
  });
}
function x9(t, e) {
  let n = 1 + e();
  return ew(n, 1 + t, e).map((s) => [s[0], s.slice(1)]);
}
function C9(t) {
  let e = [], n = eu(t);
  return s(r([]), []), e;
  function r(i) {
    let o = t(), a = tu(() => {
      let c = eu(t).map((u) => n[u]);
      if (c.length) return r(c);
    });
    return { S: o, B: a, Q: i };
  }
  function s({ S: i, B: o }, a, c) {
    if (!(i & 4 && c === a[a.length - 1])) {
      i & 2 && (c = a[a.length - 1]), i & 1 && e.push(a);
      for (let u of o)
        for (let f of u.Q)
          s(u, [...a, f], c);
    }
  }
}
function k9(t) {
  return t.toString(16).toUpperCase().padStart(2, "0");
}
function tw(t) {
  return `{${k9(t)}}`;
}
function S9(t) {
  let e = [];
  for (let n = 0, r = t.length; n < r; ) {
    let s = t.codePointAt(n);
    n += s < 65536 ? 1 : 2, e.push(s);
  }
  return e;
}
function Ml(t) {
  let n = t.length;
  if (n < 4096) return String.fromCodePoint(...t);
  let r = [];
  for (let s = 0; s < n; )
    r.push(String.fromCodePoint(...t.slice(s, s += 4096)));
  return r.join("");
}
function O9(t, e) {
  let n = t.length, r = n - e.length;
  for (let s = 0; r == 0 && s < n; s++) r = t[s] - e[s];
  return r;
}
var T9 = "AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g";
const nu = 44032, If = 4352, Nf = 4449, Pf = 4519, nw = 19, rw = 21, Dl = 28, Rf = rw * Dl, I9 = nw * Rf, N9 = nu + I9, P9 = If + nw, R9 = Nf + rw, B9 = Pf + Dl;
function Rc(t) {
  return t >> 24 & 255;
}
function sw(t) {
  return t & 16777215;
}
let Fd, v0, Hd, Yu;
function L9() {
  let t = Ky(T9);
  Fd = new Map(Yy(t).flatMap((e, n) => e.map((r) => [r, n + 1 << 24]))), v0 = new Set(eu(t)), Hd = /* @__PURE__ */ new Map(), Yu = /* @__PURE__ */ new Map();
  for (let [e, n] of Xy(t)) {
    if (!v0.has(e) && n.length == 2) {
      let [r, s] = n, i = Yu.get(r);
      i || (i = /* @__PURE__ */ new Map(), Yu.set(r, i)), i.set(s, e);
    }
    Hd.set(e, n.reverse());
  }
}
function iw(t) {
  return t >= nu && t < N9;
}
function M9(t, e) {
  if (t >= If && t < P9 && e >= Nf && e < R9)
    return nu + (t - If) * Rf + (e - Nf) * Dl;
  if (iw(t) && e > Pf && e < B9 && (t - nu) % Dl == 0)
    return t + (e - Pf);
  {
    let n = Yu.get(t);
    return n && (n = n.get(e), n) ? n : -1;
  }
}
function ow(t) {
  Fd || L9();
  let e = [], n = [], r = !1;
  function s(i) {
    let o = Fd.get(i);
    o && (r = !0, i |= o), e.push(i);
  }
  for (let i of t)
    for (; ; ) {
      if (i < 128)
        e.push(i);
      else if (iw(i)) {
        let o = i - nu, a = o / Rf | 0, c = o % Rf / Dl | 0, u = o % Dl;
        s(If + a), s(Nf + c), u > 0 && s(Pf + u);
      } else {
        let o = Hd.get(i);
        o ? n.push(...o) : s(i);
      }
      if (!n.length) break;
      i = n.pop();
    }
  if (r && e.length > 1) {
    let i = Rc(e[0]);
    for (let o = 1; o < e.length; o++) {
      let a = Rc(e[o]);
      if (a == 0 || i <= a) {
        i = a;
        continue;
      }
      let c = o - 1;
      for (; ; ) {
        let u = e[c + 1];
        if (e[c + 1] = e[c], e[c] = u, !c || (i = Rc(e[--c]), i <= a)) break;
      }
      i = Rc(e[o]);
    }
  }
  return e;
}
function D9(t) {
  let e = [], n = [], r = -1, s = 0;
  for (let i of t) {
    let o = Rc(i), a = sw(i);
    if (r == -1)
      o == 0 ? r = a : e.push(a);
    else if (s > 0 && s >= o)
      o == 0 ? (e.push(r, ...n), n.length = 0, r = a) : n.push(a), s = o;
    else {
      let c = M9(r, a);
      c >= 0 ? r = c : s == 0 && o == 0 ? (e.push(r), r = a) : (n.push(a), s = o);
    }
  }
  return r >= 0 && e.push(r, ...n), e;
}
function aw(t) {
  return ow(t).map(sw);
}
function $9(t) {
  return D9(ow(t));
}
const _0 = 45, lw = ".", cw = 65039, uw = 1, Bf = (t) => Array.from(t);
function ru(t, e) {
  return t.P.has(e) || t.Q.has(e);
}
class U9 extends Array {
  get is_emoji() {
    return !0;
  }
  // free tagging system
}
let Wd, fw, bo, Gd, hw, La, Jh, ya, co, A0, zd;
function sm() {
  if (Wd) return;
  let t = Ky(b9);
  const e = () => eu(t), n = () => new Set(e()), r = (f, l) => l.forEach((m) => f.add(m));
  Wd = new Map(Xy(t)), fw = n(), bo = e(), Gd = new Set(e().map((f) => bo[f])), bo = new Set(bo), hw = n(), n();
  let s = Yy(t), i = t();
  const o = () => {
    let f = /* @__PURE__ */ new Set();
    return e().forEach((l) => r(f, s[l])), r(f, e()), f;
  };
  La = tu((f) => {
    let l = tu(t).map((m) => m + 96);
    if (l.length) {
      let m = f >= i;
      l[0] -= 32, l = Ml(l), m && (l = `Restricted[${l}]`);
      let p = o(), d = o(), h = !t();
      return { N: l, P: p, Q: d, M: h, R: m };
    }
  }), Jh = n(), ya = /* @__PURE__ */ new Map();
  let a = e().concat(Bf(Jh)).sort((f, l) => f - l);
  a.forEach((f, l) => {
    let m = t(), p = a[l] = m ? a[l - m] : { V: [], M: /* @__PURE__ */ new Map() };
    p.V.push(f), Jh.has(f) || ya.set(f, p);
  });
  for (let { V: f, M: l } of new Set(ya.values())) {
    let m = [];
    for (let d of f) {
      let h = La.filter((g) => ru(g, d)), b = m.find(({ G: g }) => h.some((y) => g.has(y)));
      b || (b = { G: /* @__PURE__ */ new Set(), V: [] }, m.push(b)), b.V.push(d), r(b.G, h);
    }
    let p = m.flatMap((d) => Bf(d.G));
    for (let { G: d, V: h } of m) {
      let b = new Set(p.filter((g) => !d.has(g)));
      for (let g of h)
        l.set(g, b);
    }
  }
  co = /* @__PURE__ */ new Set();
  let c = /* @__PURE__ */ new Set();
  const u = (f) => co.has(f) ? c.add(f) : co.add(f);
  for (let f of La) {
    for (let l of f.P) u(l);
    for (let l of f.Q) u(l);
  }
  for (let f of co)
    !ya.has(f) && !c.has(f) && ya.set(f, uw);
  r(co, aw(co)), A0 = C9(t).map((f) => U9.from(f)).sort(O9), zd = /* @__PURE__ */ new Map();
  for (let f of A0) {
    let l = [zd];
    for (let m of f) {
      let p = l.map((d) => {
        let h = d.get(m);
        return h || (h = /* @__PURE__ */ new Map(), d.set(m, h)), h;
      });
      m === cw ? l.push(...p) : l = p;
    }
    for (let m of l)
      m.V = f;
  }
}
function im(t) {
  return (dw(t) ? "" : `${om(dh([t]))} `) + tw(t);
}
function om(t) {
  return `"${t}"‎`;
}
function j9(t) {
  if (t.length >= 4 && t[2] == _0 && t[3] == _0)
    throw new Error(`invalid label extension: "${Ml(t.slice(0, 4))}"`);
}
function F9(t) {
  for (let n = t.lastIndexOf(95); n > 0; )
    if (t[--n] !== 95)
      throw new Error("underscore allowed only at start");
}
function H9(t) {
  let e = t[0], n = y0.get(e);
  if (n) throw jc(`leading ${n}`);
  let r = t.length, s = -1;
  for (let i = 1; i < r; i++) {
    e = t[i];
    let o = y0.get(e);
    if (o) {
      if (s == i) throw jc(`${n} + ${o}`);
      s = i + 1, n = o;
    }
  }
  if (s == r) throw jc(`trailing ${n}`);
}
function dh(t, e = 1 / 0, n = tw) {
  let r = [];
  W9(t[0]) && r.push("◌"), t.length > e && (e >>= 1, t = [...t.slice(0, e), 8230, ...t.slice(-e)]);
  let s = 0, i = t.length;
  for (let o = 0; o < i; o++) {
    let a = t[o];
    dw(a) && (r.push(Ml(t.slice(s, o))), r.push(n(a)), s = o + 1);
  }
  return r.push(Ml(t.slice(s, i))), r.join("");
}
function W9(t) {
  return sm(), bo.has(t);
}
function dw(t) {
  return sm(), hw.has(t);
}
function G9(t) {
  return Q9(z9(t, $9, K9));
}
function z9(t, e, n) {
  if (!t) return [];
  sm();
  let r = 0;
  return t.split(lw).map((s) => {
    let i = S9(s), o = {
      input: i,
      offset: r
      // codepoint, not substring!
    };
    r += i.length + 1;
    try {
      let a = o.tokens = J9(i, e, n), c = a.length, u;
      if (!c)
        throw new Error("empty label");
      let f = o.output = a.flat();
      if (F9(f), !(o.emoji = c > 1 || a[0].is_emoji) && f.every((m) => m < 128))
        j9(f), u = "ASCII";
      else {
        let m = a.flatMap((p) => p.is_emoji ? [] : p);
        if (!m.length)
          u = "Emoji";
        else {
          if (bo.has(f[0])) throw jc("leading combining mark");
          for (let h = 1; h < c; h++) {
            let b = a[h];
            if (!b.is_emoji && bo.has(b[0]))
              throw jc(`emoji + combining mark: "${Ml(a[h - 1])} + ${dh([b[0]])}"`);
          }
          H9(f);
          let p = Bf(new Set(m)), [d] = q9(p);
          Z9(d, m), V9(d, p), u = d.N;
        }
      }
      o.type = u;
    } catch (a) {
      o.error = a;
    }
    return o;
  });
}
function V9(t, e) {
  let n, r = [];
  for (let s of e) {
    let i = ya.get(s);
    if (i === uw) return;
    if (i) {
      let o = i.M.get(s);
      if (n = n ? n.filter((a) => o.has(a)) : Bf(o), !n.length) return;
    } else
      r.push(s);
  }
  if (n) {
    for (let s of n)
      if (r.every((i) => ru(s, i)))
        throw new Error(`whole-script confusable: ${t.N}/${s.N}`);
  }
}
function q9(t) {
  let e = La;
  for (let n of t) {
    let r = e.filter((s) => ru(s, n));
    if (!r.length)
      throw La.some((s) => ru(s, n)) ? mw(e[0], n) : pw(n);
    if (e = r, r.length == 1) break;
  }
  return e;
}
function Q9(t) {
  return t.map(({ input: e, error: n, output: r }) => {
    if (n) {
      let s = n.message;
      throw new Error(t.length == 1 ? s : `Invalid label ${om(dh(e, 63))}: ${s}`);
    }
    return Ml(r);
  }).join(lw);
}
function pw(t) {
  return new Error(`disallowed character: ${im(t)}`);
}
function mw(t, e) {
  let n = im(e), r = La.find((s) => s.P.has(e));
  return r && (n = `${r.N} ${n}`), new Error(`illegal mixture: ${t.N} + ${n}`);
}
function jc(t) {
  return new Error(`illegal placement: ${t}`);
}
function Z9(t, e) {
  for (let n of e)
    if (!ru(t, n))
      throw mw(t, n);
  if (t.M) {
    let n = aw(e);
    for (let r = 1, s = n.length; r < s; r++)
      if (Gd.has(n[r])) {
        let i = r + 1;
        for (let o; i < s && Gd.has(o = n[i]); i++)
          for (let a = r; a < i; a++)
            if (n[a] == o)
              throw new Error(`duplicate non-spacing marks: ${im(o)}`);
        if (i - r > w0)
          throw new Error(`excessive non-spacing marks: ${om(dh(n.slice(r - 1, i)))} (${i - r}/${w0})`);
        r = i;
      }
  }
}
function J9(t, e, n) {
  let r = [], s = [];
  for (t = t.slice().reverse(); t.length; ) {
    let i = Y9(t);
    if (i)
      s.length && (r.push(e(s)), s = []), r.push(n(i));
    else {
      let o = t.pop();
      if (co.has(o))
        s.push(o);
      else {
        let a = Wd.get(o);
        if (a)
          s.push(...a);
        else if (!fw.has(o))
          throw pw(o);
      }
    }
  }
  return s.length && r.push(e(s)), r;
}
function K9(t) {
  return t.filter((e) => e != cw);
}
function Y9(t, e) {
  let n = zd, r, s = t.length;
  for (; s && (n = n.get(t[--s]), !!n); ) {
    let { V: i } = n;
    i && (r = i, t.length = s);
  }
  return r;
}
const gw = new Uint8Array(32);
gw.fill(0);
function E0(t) {
  return D(t.length !== 0, "invalid ENS name; empty component", "comp", t), t;
}
function bw(t) {
  const e = Ws(X9(t)), n = [];
  if (t.length === 0)
    return n;
  let r = 0;
  for (let s = 0; s < e.length; s++)
    e[s] === 46 && (n.push(E0(e.slice(r, s))), r = s + 1);
  return D(r < e.length, "invalid ENS name; empty component", "name", t), n.push(E0(e.slice(r))), n;
}
function X9(t) {
  try {
    if (t.length === 0)
      throw new Error("empty label");
    return G9(t);
  } catch (e) {
    D(!1, `invalid ENS name (${e.message})`, "name", t);
  }
}
function Vd(t) {
  D(typeof t == "string", "invalid ENS name; not a string", "name", t), D(t.length, "invalid ENS name (empty label)", "name", t);
  let e = gw;
  const n = bw(t);
  for (; n.length; )
    e = Wt(jt([e, Wt(n.pop())]));
  return ye(e);
}
function e7(t, e) {
  const n = e;
  return D(n <= 255, "DNS encoded label cannot exceed 255", "length", n), ye(jt(bw(t).map((r) => {
    D(r.length <= n, `label ${JSON.stringify(t)} exceeds ${n} bytes`, "name", t);
    const s = new Uint8Array(r.length + 1);
    return s.set(r, 1), s[0] = s.length - 1, s;
  }))) + "00";
}
function Kh(t, e) {
  return {
    address: gt(t),
    storageKeys: e.map((n, r) => (D(wt(n, 32), "invalid slot", `storageKeys[${r}]`, n), n.toLowerCase()))
  };
}
function Yo(t) {
  if (Array.isArray(t))
    return t.map((n, r) => Array.isArray(n) ? (D(n.length === 2, "invalid slot set", `value[${r}]`, n), Kh(n[0], n[1])) : (D(n != null && typeof n == "object", "invalid address-slot set", "value", t), Kh(n.address, n.storageKeys)));
  D(t != null && typeof t == "object", "invalid access list", "value", t);
  const e = Object.keys(t).map((n) => {
    const r = t[n].reduce((s, i) => (s[i] = !0, s), {});
    return Kh(n, Object.keys(r).sort());
  });
  return e.sort((n, r) => n.address.localeCompare(r.address)), e;
}
function t7(t) {
  let e;
  return typeof t == "string" ? e = Xc.computePublicKey(t, !1) : e = t.publicKey, gt(Wt("0x" + e.substring(4)).substring(26));
}
function n7(t, e) {
  return t7(Xc.recoverPublicKey(t, e));
}
const nn = BigInt(0), r7 = BigInt(2), s7 = BigInt(27), i7 = BigInt(28), o7 = BigInt(35), a7 = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), Yh = 4096 * 32;
function x0(t, e) {
  let n = t.toString(16);
  for (; n.length < 2; )
    n = "0" + n;
  return n += Vl(e).substring(4), "0x" + n;
}
function ph(t) {
  return t === "0x" ? null : gt(t);
}
function am(t, e) {
  try {
    return Yo(t);
  } catch (n) {
    D(!1, n.message, e, t);
  }
}
function ku(t, e) {
  return t === "0x" ? 0 : Be(t, e);
}
function Ut(t, e) {
  if (t === "0x")
    return nn;
  const n = _e(t, e);
  return D(n <= a7, "value exceeds uint size", e, n), n;
}
function Et(t, e) {
  const n = _e(t, "value"), r = In(n);
  return D(r.length <= 32, "value too large", `tx.${e}`, n), r;
}
function lm(t) {
  return Yo(t).map((e) => [e.address, e.storageKeys]);
}
function l7(t, e) {
  D(Array.isArray(t), `invalid ${e}`, "value", t);
  for (let n = 0; n < t.length; n++)
    D(wt(t[n], 32), "invalid ${ param } hash", `value[${n}]`, t[n]);
  return t;
}
function c7(t) {
  const e = hh(t);
  D(Array.isArray(e) && (e.length === 9 || e.length === 6), "invalid field count for legacy transaction", "data", t);
  const n = {
    type: 0,
    nonce: ku(e[0], "nonce"),
    gasPrice: Ut(e[1], "gasPrice"),
    gasLimit: Ut(e[2], "gasLimit"),
    to: ph(e[3]),
    value: Ut(e[4], "value"),
    data: ye(e[5]),
    chainId: nn
  };
  if (e.length === 6)
    return n;
  const r = Ut(e[6], "v"), s = Ut(e[7], "r"), i = Ut(e[8], "s");
  if (s === nn && i === nn)
    n.chainId = r;
  else {
    let o = (r - o7) / r7;
    o < nn && (o = nn), n.chainId = o, D(o !== nn || r === s7 || r === i7, "non-canonical legacy v", "v", e[6]), n.signature = Br.from({
      r: Go(e[7], 32),
      s: Go(e[8], 32),
      v: r
    });
  }
  return n;
}
function u7(t, e) {
  const n = [
    Et(t.nonce, "nonce"),
    Et(t.gasPrice || 0, "gasPrice"),
    Et(t.gasLimit, "gasLimit"),
    t.to || "0x",
    Et(t.value, "value"),
    t.data
  ];
  let r = nn;
  if (t.chainId != nn)
    r = _e(t.chainId, "tx.chainId"), D(!e || e.networkV == null || e.legacyChainId === r, "tx.chainId/sig.v mismatch", "sig", e);
  else if (t.signature) {
    const i = t.signature.legacyChainId;
    i != null && (r = i);
  }
  if (!e)
    return r !== nn && (n.push(In(r)), n.push("0x"), n.push("0x")), zo(n);
  let s = BigInt(27 + e.yParity);
  return r !== nn ? s = Br.getChainIdV(r, e.v) : BigInt(e.v) !== s && D(!1, "tx.chainId/sig.v mismatch", "sig", e), n.push(In(s)), n.push(In(e.r)), n.push(In(e.s)), zo(n);
}
function cm(t, e) {
  let n;
  try {
    if (n = ku(e[0], "yParity"), n !== 0 && n !== 1)
      throw new Error("bad yParity");
  } catch {
    D(!1, "invalid yParity", "yParity", e[0]);
  }
  const r = Go(e[1], 32), s = Go(e[2], 32), i = Br.from({ r, s, yParity: n });
  t.signature = i;
}
function f7(t) {
  const e = hh(st(t).slice(1));
  D(Array.isArray(e) && (e.length === 9 || e.length === 12), "invalid field count for transaction type: 2", "data", ye(t));
  const n = {
    type: 2,
    chainId: Ut(e[0], "chainId"),
    nonce: ku(e[1], "nonce"),
    maxPriorityFeePerGas: Ut(e[2], "maxPriorityFeePerGas"),
    maxFeePerGas: Ut(e[3], "maxFeePerGas"),
    gasPrice: null,
    gasLimit: Ut(e[4], "gasLimit"),
    to: ph(e[5]),
    value: Ut(e[6], "value"),
    data: ye(e[7]),
    accessList: am(e[8], "accessList")
  };
  return e.length === 9 || cm(n, e.slice(9)), n;
}
function h7(t, e) {
  const n = [
    Et(t.chainId, "chainId"),
    Et(t.nonce, "nonce"),
    Et(t.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
    Et(t.maxFeePerGas || 0, "maxFeePerGas"),
    Et(t.gasLimit, "gasLimit"),
    t.to || "0x",
    Et(t.value, "value"),
    t.data,
    lm(t.accessList || [])
  ];
  return e && (n.push(Et(e.yParity, "yParity")), n.push(In(e.r)), n.push(In(e.s))), jt(["0x02", zo(n)]);
}
function d7(t) {
  const e = hh(st(t).slice(1));
  D(Array.isArray(e) && (e.length === 8 || e.length === 11), "invalid field count for transaction type: 1", "data", ye(t));
  const n = {
    type: 1,
    chainId: Ut(e[0], "chainId"),
    nonce: ku(e[1], "nonce"),
    gasPrice: Ut(e[2], "gasPrice"),
    gasLimit: Ut(e[3], "gasLimit"),
    to: ph(e[4]),
    value: Ut(e[5], "value"),
    data: ye(e[6]),
    accessList: am(e[7], "accessList")
  };
  return e.length === 8 || cm(n, e.slice(8)), n;
}
function p7(t, e) {
  const n = [
    Et(t.chainId, "chainId"),
    Et(t.nonce, "nonce"),
    Et(t.gasPrice || 0, "gasPrice"),
    Et(t.gasLimit, "gasLimit"),
    t.to || "0x",
    Et(t.value, "value"),
    t.data,
    lm(t.accessList || [])
  ];
  return e && (n.push(Et(e.yParity, "recoveryParam")), n.push(In(e.r)), n.push(In(e.s))), jt(["0x01", zo(n)]);
}
function m7(t) {
  let e = hh(st(t).slice(1)), n = "3", r = null;
  if (e.length === 4 && Array.isArray(e[0])) {
    n = "3 (network format)";
    const i = e[1], o = e[2], a = e[3];
    D(Array.isArray(i), "invalid network format: blobs not an array", "fields[1]", i), D(Array.isArray(o), "invalid network format: commitments not an array", "fields[2]", o), D(Array.isArray(a), "invalid network format: proofs not an array", "fields[3]", a), D(i.length === o.length, "invalid network format: blobs/commitments length mismatch", "fields", e), D(i.length === a.length, "invalid network format: blobs/proofs length mismatch", "fields", e), r = [];
    for (let c = 0; c < e[1].length; c++)
      r.push({
        data: i[c],
        commitment: o[c],
        proof: a[c]
      });
    e = e[0];
  }
  D(Array.isArray(e) && (e.length === 11 || e.length === 14), `invalid field count for transaction type: ${n}`, "data", ye(t));
  const s = {
    type: 3,
    chainId: Ut(e[0], "chainId"),
    nonce: ku(e[1], "nonce"),
    maxPriorityFeePerGas: Ut(e[2], "maxPriorityFeePerGas"),
    maxFeePerGas: Ut(e[3], "maxFeePerGas"),
    gasPrice: null,
    gasLimit: Ut(e[4], "gasLimit"),
    to: ph(e[5]),
    value: Ut(e[6], "value"),
    data: ye(e[7]),
    accessList: am(e[8], "accessList"),
    maxFeePerBlobGas: Ut(e[9], "maxFeePerBlobGas"),
    blobVersionedHashes: e[10]
  };
  r && (s.blobs = r), D(s.to != null, `invalid address for transaction type: ${n}`, "data", t), D(Array.isArray(s.blobVersionedHashes), "invalid blobVersionedHashes: must be an array", "data", t);
  for (let i = 0; i < s.blobVersionedHashes.length; i++)
    D(wt(s.blobVersionedHashes[i], 32), `invalid blobVersionedHash at index ${i}: must be length 32`, "data", t);
  return e.length === 11 || cm(s, e.slice(11)), s;
}
function g7(t, e, n) {
  const r = [
    Et(t.chainId, "chainId"),
    Et(t.nonce, "nonce"),
    Et(t.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
    Et(t.maxFeePerGas || 0, "maxFeePerGas"),
    Et(t.gasLimit, "gasLimit"),
    t.to || Yc,
    Et(t.value, "value"),
    t.data,
    lm(t.accessList || []),
    Et(t.maxFeePerBlobGas || 0, "maxFeePerBlobGas"),
    l7(t.blobVersionedHashes || [], "blobVersionedHashes")
  ];
  return e && (r.push(Et(e.yParity, "yParity")), r.push(In(e.r)), r.push(In(e.s)), n) ? jt([
    "0x03",
    zo([
      r,
      n.map((s) => s.data),
      n.map((s) => s.commitment),
      n.map((s) => s.proof)
    ])
  ]) : jt(["0x03", zo(r)]);
}
var qr, Qa, Za, Ja, Ka, Ya, Xa, el, tl, nl, rl, sl, Io, _i, Ps, Ai, il, Xu;
const ks = class ks {
  /**
   *  Creates a new Transaction with default values.
   */
  constructor() {
    z(this, il);
    z(this, qr);
    z(this, Qa);
    z(this, Za);
    z(this, Ja);
    z(this, Ka);
    z(this, Ya);
    z(this, Xa);
    z(this, el);
    z(this, tl);
    z(this, nl);
    z(this, rl);
    z(this, sl);
    z(this, Io);
    z(this, _i);
    z(this, Ps);
    z(this, Ai);
    R(this, qr, null), R(this, Qa, null), R(this, Ja, 0), R(this, Ka, nn), R(this, Ya, null), R(this, Xa, null), R(this, el, null), R(this, Za, "0x"), R(this, tl, nn), R(this, nl, nn), R(this, rl, null), R(this, sl, null), R(this, Io, null), R(this, _i, null), R(this, Ai, null), R(this, Ps, null);
  }
  /**
   *  The transaction type.
   *
   *  If null, the type will be automatically inferred based on
   *  explicit properties.
   */
  get type() {
    return O(this, qr);
  }
  set type(e) {
    switch (e) {
      case null:
        R(this, qr, null);
        break;
      case 0:
      case "legacy":
        R(this, qr, 0);
        break;
      case 1:
      case "berlin":
      case "eip-2930":
        R(this, qr, 1);
        break;
      case 2:
      case "london":
      case "eip-1559":
        R(this, qr, 2);
        break;
      case 3:
      case "cancun":
      case "eip-4844":
        R(this, qr, 3);
        break;
      default:
        D(!1, "unsupported transaction type", "type", e);
    }
  }
  /**
   *  The name of the transaction type.
   */
  get typeName() {
    switch (this.type) {
      case 0:
        return "legacy";
      case 1:
        return "eip-2930";
      case 2:
        return "eip-1559";
      case 3:
        return "eip-4844";
    }
    return null;
  }
  /**
   *  The ``to`` address for the transaction or ``null`` if the
   *  transaction is an ``init`` transaction.
   */
  get to() {
    const e = O(this, Qa);
    return e == null && this.type === 3 ? Yc : e;
  }
  set to(e) {
    R(this, Qa, e == null ? null : gt(e));
  }
  /**
   *  The transaction nonce.
   */
  get nonce() {
    return O(this, Ja);
  }
  set nonce(e) {
    R(this, Ja, Be(e, "value"));
  }
  /**
   *  The gas limit.
   */
  get gasLimit() {
    return O(this, Ka);
  }
  set gasLimit(e) {
    R(this, Ka, _e(e));
  }
  /**
   *  The gas price.
   *
   *  On legacy networks this defines the fee that will be paid. On
   *  EIP-1559 networks, this should be ``null``.
   */
  get gasPrice() {
    const e = O(this, Ya);
    return e == null && (this.type === 0 || this.type === 1) ? nn : e;
  }
  set gasPrice(e) {
    R(this, Ya, e == null ? null : _e(e, "gasPrice"));
  }
  /**
   *  The maximum priority fee per unit of gas to pay. On legacy
   *  networks this should be ``null``.
   */
  get maxPriorityFeePerGas() {
    const e = O(this, Xa);
    return e ?? (this.type === 2 || this.type === 3 ? nn : null);
  }
  set maxPriorityFeePerGas(e) {
    R(this, Xa, e == null ? null : _e(e, "maxPriorityFeePerGas"));
  }
  /**
   *  The maximum total fee per unit of gas to pay. On legacy
   *  networks this should be ``null``.
   */
  get maxFeePerGas() {
    const e = O(this, el);
    return e ?? (this.type === 2 || this.type === 3 ? nn : null);
  }
  set maxFeePerGas(e) {
    R(this, el, e == null ? null : _e(e, "maxFeePerGas"));
  }
  /**
   *  The transaction data. For ``init`` transactions this is the
   *  deployment code.
   */
  get data() {
    return O(this, Za);
  }
  set data(e) {
    R(this, Za, ye(e));
  }
  /**
   *  The amount of ether (in wei) to send in this transactions.
   */
  get value() {
    return O(this, tl);
  }
  set value(e) {
    R(this, tl, _e(e, "value"));
  }
  /**
   *  The chain ID this transaction is valid on.
   */
  get chainId() {
    return O(this, nl);
  }
  set chainId(e) {
    R(this, nl, _e(e));
  }
  /**
   *  If signed, the signature for this transaction.
   */
  get signature() {
    return O(this, rl) || null;
  }
  set signature(e) {
    R(this, rl, e == null ? null : Br.from(e));
  }
  /**
   *  The access list.
   *
   *  An access list permits discounted (but pre-paid) access to
   *  bytecode and state variable access within contract execution.
   */
  get accessList() {
    const e = O(this, sl) || null;
    return e ?? (this.type === 1 || this.type === 2 || this.type === 3 ? [] : null);
  }
  set accessList(e) {
    R(this, sl, e == null ? null : Yo(e));
  }
  /**
   *  The max fee per blob gas for Cancun transactions.
   */
  get maxFeePerBlobGas() {
    const e = O(this, Io);
    return e == null && this.type === 3 ? nn : e;
  }
  set maxFeePerBlobGas(e) {
    R(this, Io, e == null ? null : _e(e, "maxFeePerBlobGas"));
  }
  /**
   *  The BLOb versioned hashes for Cancun transactions.
   */
  get blobVersionedHashes() {
    let e = O(this, _i);
    return e == null && this.type === 3 ? [] : e;
  }
  set blobVersionedHashes(e) {
    if (e != null) {
      D(Array.isArray(e), "blobVersionedHashes must be an Array", "value", e), e = e.slice();
      for (let n = 0; n < e.length; n++)
        D(wt(e[n], 32), "invalid blobVersionedHash", `value[${n}]`, e[n]);
    }
    R(this, _i, e);
  }
  /**
   *  The BLObs for the Transaction, if any.
   *
   *  If ``blobs`` is non-``null``, then the [[seriailized]]
   *  will return the network formatted sidecar, otherwise it
   *  will return the standard [[link-eip-2718]] payload. The
   *  [[unsignedSerialized]] is unaffected regardless.
   *
   *  When setting ``blobs``, either fully valid [[Blob]] objects
   *  may be specified (i.e. correctly padded, with correct
   *  committments and proofs) or a raw [[BytesLike]] may
   *  be provided.
   *
   *  If raw [[BytesLike]] are provided, the [[kzg]] property **must**
   *  be already set. The blob will be correctly padded and the
   *  [[KzgLibrary]] will be used to compute the committment and
   *  proof for the blob.
   *
   *  A BLOb is a sequence of field elements, each of which must
   *  be within the BLS field modulo, so some additional processing
   *  may be required to encode arbitrary data to ensure each 32 byte
   *  field is within the valid range.
   *
   *  Setting this automatically populates [[blobVersionedHashes]],
   *  overwriting any existing values. Setting this to ``null``
   *  does **not** remove the [[blobVersionedHashes]], leaving them
   *  present.
   */
  get blobs() {
    return O(this, Ai) == null ? null : O(this, Ai).map((e) => Object.assign({}, e));
  }
  set blobs(e) {
    if (e == null) {
      R(this, Ai, null);
      return;
    }
    const n = [], r = [];
    for (let s = 0; s < e.length; s++) {
      const i = e[s];
      if (nm(i)) {
        K(O(this, Ps), "adding a raw blob requires a KZG library", "UNSUPPORTED_OPERATION", {
          operation: "set blobs()"
        });
        let o = st(i);
        if (D(o.length <= Yh, "blob is too large", `blobs[${s}]`, i), o.length !== Yh) {
          const u = new Uint8Array(Yh);
          u.set(o), o = u;
        }
        const a = O(this, Ps).blobToKzgCommitment(o), c = ye(O(this, Ps).computeBlobKzgProof(o, a));
        n.push({
          data: ye(o),
          commitment: ye(a),
          proof: c
        }), r.push(x0(1, a));
      } else {
        const o = ye(i.commitment);
        n.push({
          data: ye(i.data),
          commitment: o,
          proof: ye(i.proof)
        }), r.push(x0(1, o));
      }
    }
    R(this, Ai, n), R(this, _i, r);
  }
  get kzg() {
    return O(this, Ps);
  }
  set kzg(e) {
    R(this, Ps, e);
  }
  /**
   *  The transaction hash, if signed. Otherwise, ``null``.
   */
  get hash() {
    return this.signature == null ? null : Wt(ne(this, il, Xu).call(this, !0, !1));
  }
  /**
   *  The pre-image hash of this transaction.
   *
   *  This is the digest that a [[Signer]] must sign to authorize
   *  this transaction.
   */
  get unsignedHash() {
    return Wt(this.unsignedSerialized);
  }
  /**
   *  The sending address, if signed. Otherwise, ``null``.
   */
  get from() {
    return this.signature == null ? null : n7(this.unsignedHash, this.signature);
  }
  /**
   *  The public key of the sender, if signed. Otherwise, ``null``.
   */
  get fromPublicKey() {
    return this.signature == null ? null : Xc.recoverPublicKey(this.unsignedHash, this.signature);
  }
  /**
   *  Returns true if signed.
   *
   *  This provides a Type Guard that properties requiring a signed
   *  transaction are non-null.
   */
  isSigned() {
    return this.signature != null;
  }
  /**
   *  The serialized transaction.
   *
   *  This throws if the transaction is unsigned. For the pre-image,
   *  use [[unsignedSerialized]].
   */
  get serialized() {
    return ne(this, il, Xu).call(this, !0, !0);
  }
  /**
   *  The transaction pre-image.
   *
   *  The hash of this is the digest which needs to be signed to
   *  authorize this transaction.
   */
  get unsignedSerialized() {
    return ne(this, il, Xu).call(this, !1, !1);
  }
  /**
   *  Return the most "likely" type; currently the highest
   *  supported transaction type.
   */
  inferType() {
    const e = this.inferTypes();
    return e.indexOf(2) >= 0 ? 2 : e.pop();
  }
  /**
   *  Validates the explicit properties and returns a list of compatible
   *  transaction types.
   */
  inferTypes() {
    const e = this.gasPrice != null, n = this.maxFeePerGas != null || this.maxPriorityFeePerGas != null, r = this.accessList != null, s = O(this, Io) != null || O(this, _i);
    this.maxFeePerGas != null && this.maxPriorityFeePerGas != null && K(this.maxFeePerGas >= this.maxPriorityFeePerGas, "priorityFee cannot be more than maxFee", "BAD_DATA", { value: this }), K(!n || this.type !== 0 && this.type !== 1, "transaction type cannot have maxFeePerGas or maxPriorityFeePerGas", "BAD_DATA", { value: this }), K(this.type !== 0 || !r, "legacy transaction cannot have accessList", "BAD_DATA", { value: this });
    const i = [];
    return this.type != null ? i.push(this.type) : n ? i.push(2) : e ? (i.push(1), r || i.push(0)) : r ? (i.push(1), i.push(2)) : (s && this.to || (i.push(0), i.push(1), i.push(2)), i.push(3)), i.sort(), i;
  }
  /**
   *  Returns true if this transaction is a legacy transaction (i.e.
   *  ``type === 0``).
   *
   *  This provides a Type Guard that the related properties are
   *  non-null.
   */
  isLegacy() {
    return this.type === 0;
  }
  /**
   *  Returns true if this transaction is berlin hardform transaction (i.e.
   *  ``type === 1``).
   *
   *  This provides a Type Guard that the related properties are
   *  non-null.
   */
  isBerlin() {
    return this.type === 1;
  }
  /**
   *  Returns true if this transaction is london hardform transaction (i.e.
   *  ``type === 2``).
   *
   *  This provides a Type Guard that the related properties are
   *  non-null.
   */
  isLondon() {
    return this.type === 2;
  }
  /**
   *  Returns true if this transaction is an [[link-eip-4844]] BLOB
   *  transaction.
   *
   *  This provides a Type Guard that the related properties are
   *  non-null.
   */
  isCancun() {
    return this.type === 3;
  }
  /**
   *  Create a copy of this transaciton.
   */
  clone() {
    return ks.from(this);
  }
  /**
   *  Return a JSON-friendly object.
   */
  toJSON() {
    const e = (n) => n == null ? null : n.toString();
    return {
      type: this.type,
      to: this.to,
      //            from: this.from,
      data: this.data,
      nonce: this.nonce,
      gasLimit: e(this.gasLimit),
      gasPrice: e(this.gasPrice),
      maxPriorityFeePerGas: e(this.maxPriorityFeePerGas),
      maxFeePerGas: e(this.maxFeePerGas),
      value: e(this.value),
      chainId: e(this.chainId),
      sig: this.signature ? this.signature.toJSON() : null,
      accessList: this.accessList
    };
  }
  /**
   *  Create a **Transaction** from a serialized transaction or a
   *  Transaction-like object.
   */
  static from(e) {
    if (e == null)
      return new ks();
    if (typeof e == "string") {
      const r = st(e);
      if (r[0] >= 127)
        return ks.from(c7(r));
      switch (r[0]) {
        case 1:
          return ks.from(d7(r));
        case 2:
          return ks.from(f7(r));
        case 3:
          return ks.from(m7(r));
      }
      K(!1, "unsupported transaction type", "UNSUPPORTED_OPERATION", { operation: "from" });
    }
    const n = new ks();
    return e.type != null && (n.type = e.type), e.to != null && (n.to = e.to), e.nonce != null && (n.nonce = e.nonce), e.gasLimit != null && (n.gasLimit = e.gasLimit), e.gasPrice != null && (n.gasPrice = e.gasPrice), e.maxPriorityFeePerGas != null && (n.maxPriorityFeePerGas = e.maxPriorityFeePerGas), e.maxFeePerGas != null && (n.maxFeePerGas = e.maxFeePerGas), e.maxFeePerBlobGas != null && (n.maxFeePerBlobGas = e.maxFeePerBlobGas), e.data != null && (n.data = e.data), e.value != null && (n.value = e.value), e.chainId != null && (n.chainId = e.chainId), e.signature != null && (n.signature = Br.from(e.signature)), e.accessList != null && (n.accessList = e.accessList), e.blobVersionedHashes != null && (n.blobVersionedHashes = e.blobVersionedHashes), e.kzg != null && (n.kzg = e.kzg), e.blobs != null && (n.blobs = e.blobs), e.hash != null && (D(n.isSigned(), "unsigned transaction cannot define '.hash'", "tx", e), D(n.hash === e.hash, "hash mismatch", "tx", e)), e.from != null && (D(n.isSigned(), "unsigned transaction cannot define '.from'", "tx", e), D(n.from.toLowerCase() === (e.from || "").toLowerCase(), "from mismatch", "tx", e)), n;
  }
};
qr = new WeakMap(), Qa = new WeakMap(), Za = new WeakMap(), Ja = new WeakMap(), Ka = new WeakMap(), Ya = new WeakMap(), Xa = new WeakMap(), el = new WeakMap(), tl = new WeakMap(), nl = new WeakMap(), rl = new WeakMap(), sl = new WeakMap(), Io = new WeakMap(), _i = new WeakMap(), Ps = new WeakMap(), Ai = new WeakMap(), il = new WeakSet(), Xu = function(e, n) {
  K(!e || this.signature != null, "cannot serialize unsigned transaction; maybe you meant .unsignedSerialized", "UNSUPPORTED_OPERATION", { operation: ".serialized" });
  const r = e ? this.signature : null;
  switch (this.inferType()) {
    case 0:
      return u7(this, r);
    case 1:
      return p7(this, r);
    case 2:
      return h7(this, r);
    case 3:
      return g7(this, r, n ? this.blobs : null);
  }
  K(!1, "unsupported transaction type", "UNSUPPORTED_OPERATION", { operation: ".serialized" });
};
let Lf = ks;
const yw = new Uint8Array(32);
yw.fill(0);
const b7 = BigInt(-1), ww = BigInt(0), vw = BigInt(1), y7 = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function w7(t) {
  const e = st(t), n = e.length % 32;
  return n ? jt([e, yw.slice(n)]) : ye(e);
}
const v7 = Hi(vw, 32), _7 = Hi(ww, 32), C0 = {
  name: "string",
  version: "string",
  chainId: "uint256",
  verifyingContract: "address",
  salt: "bytes32"
}, Xh = [
  "name",
  "version",
  "chainId",
  "verifyingContract",
  "salt"
];
function k0(t) {
  return function(e) {
    return D(typeof e == "string", `invalid domain value for ${JSON.stringify(t)}`, `domain.${t}`, e), e;
  };
}
const A7 = {
  name: k0("name"),
  version: k0("version"),
  chainId: function(t) {
    const e = _e(t, "domain.chainId");
    return D(e >= 0, "invalid chain ID", "domain.chainId", t), Number.isSafeInteger(e) ? Number(e) : xa(e);
  },
  verifyingContract: function(t) {
    try {
      return gt(t).toLowerCase();
    } catch {
    }
    D(!1, 'invalid domain value "verifyingContract"', "domain.verifyingContract", t);
  },
  salt: function(t) {
    const e = st(t, "domain.salt");
    return D(e.length === 32, 'invalid domain value "salt"', "domain.salt", t), ye(e);
  }
};
function ed(t) {
  {
    const e = t.match(/^(u?)int(\d+)$/);
    if (e) {
      const n = e[1] === "", r = parseInt(e[2]);
      D(r % 8 === 0 && r !== 0 && r <= 256 && e[2] === String(r), "invalid numeric width", "type", t);
      const s = go(y7, n ? r - 1 : r), i = n ? (s + vw) * b7 : ww;
      return function(o) {
        const a = _e(o, "value");
        return D(a >= i && a <= s, `value out-of-bounds for ${t}`, "value", a), Hi(n ? Ty(a, 256) : a, 32);
      };
    }
  }
  {
    const e = t.match(/^bytes(\d+)$/);
    if (e) {
      const n = parseInt(e[1]);
      return D(n !== 0 && n <= 32 && e[1] === String(n), "invalid bytes width", "type", t), function(r) {
        const s = st(r);
        return D(s.length === n, `invalid length for ${t}`, "value", r), w7(r);
      };
    }
  }
  switch (t) {
    case "address":
      return function(e) {
        return Go(gt(e), 32);
      };
    case "bool":
      return function(e) {
        return e ? v7 : _7;
      };
    case "bytes":
      return function(e) {
        return Wt(e);
      };
    case "string":
      return function(e) {
        return Vo(e);
      };
  }
  return null;
}
function S0(t, e) {
  return `${t}(${e.map(({ name: n, type: r }) => r + " " + n).join(",")})`;
}
function ju(t) {
  const e = t.match(/^([^\x5b]*)((\x5b\d*\x5d)*)(\x5b(\d*)\x5d)$/);
  return e ? {
    base: e[1],
    index: e[2] + e[4],
    array: {
      base: e[1],
      prefix: e[1] + e[2],
      count: e[5] ? parseInt(e[5]) : -1
    }
  } : { base: t };
}
var uu, Rs, ol, Ff, _w;
const lr = class lr {
  /**
   *  Create a new **TypedDataEncoder** for %%types%%.
   *
   *  This performs all necessary checking that types are valid and
   *  do not violate the [[link-eip-712]] structural constraints as
   *  well as computes the [[primaryType]].
   */
  constructor(e) {
    z(this, Ff);
    /**
     *  The primary type for the structured [[types]].
     *
     *  This is derived automatically from the [[types]], since no
     *  recursion is possible, once the DAG for the types is consturcted
     *  internally, the primary type must be the only remaining type with
     *  no parent nodes.
     */
    j(this, "primaryType");
    z(this, uu);
    z(this, Rs);
    z(this, ol);
    R(this, Rs, /* @__PURE__ */ new Map()), R(this, ol, /* @__PURE__ */ new Map());
    const n = /* @__PURE__ */ new Map(), r = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Map(), i = {};
    Object.keys(e).forEach((c) => {
      i[c] = e[c].map(({ name: u, type: f }) => {
        let { base: l, index: m } = ju(f);
        return l === "int" && !e.int && (l = "int256"), l === "uint" && !e.uint && (l = "uint256"), { name: u, type: l + (m || "") };
      }), n.set(c, /* @__PURE__ */ new Set()), r.set(c, []), s.set(c, /* @__PURE__ */ new Set());
    }), R(this, uu, JSON.stringify(i));
    for (const c in i) {
      const u = /* @__PURE__ */ new Set();
      for (const f of i[c]) {
        D(!u.has(f.name), `duplicate variable name ${JSON.stringify(f.name)} in ${JSON.stringify(c)}`, "types", e), u.add(f.name);
        const l = ju(f.type).base;
        D(l !== c, `circular type reference to ${JSON.stringify(l)}`, "types", e), !ed(l) && (D(r.has(l), `unknown type ${JSON.stringify(l)}`, "types", e), r.get(l).push(c), n.get(c).add(l));
      }
    }
    const o = Array.from(r.keys()).filter((c) => r.get(c).length === 0);
    D(o.length !== 0, "missing primary type", "types", e), D(o.length === 1, `ambiguous primary types or unused types: ${o.map((c) => JSON.stringify(c)).join(", ")}`, "types", e), ke(this, { primaryType: o[0] });
    function a(c, u) {
      D(!u.has(c), `circular type reference to ${JSON.stringify(c)}`, "types", e), u.add(c);
      for (const f of n.get(c))
        if (r.has(f)) {
          a(f, u);
          for (const l of u)
            s.get(l).add(f);
        }
      u.delete(c);
    }
    a(this.primaryType, /* @__PURE__ */ new Set());
    for (const [c, u] of s) {
      const f = Array.from(u);
      f.sort(), O(this, Rs).set(c, S0(c, i[c]) + f.map((l) => S0(l, i[l])).join(""));
    }
  }
  /**
   *  The types.
   */
  get types() {
    return JSON.parse(O(this, uu));
  }
  /**
   *  Returnthe encoder for the specific %%type%%.
   */
  getEncoder(e) {
    let n = O(this, ol).get(e);
    return n || (n = ne(this, Ff, _w).call(this, e), O(this, ol).set(e, n)), n;
  }
  /**
   *  Return the full type for %%name%%.
   */
  encodeType(e) {
    const n = O(this, Rs).get(e);
    return D(n, `unknown type: ${JSON.stringify(e)}`, "name", e), n;
  }
  /**
   *  Return the encoded %%value%% for the %%type%%.
   */
  encodeData(e, n) {
    return this.getEncoder(e)(n);
  }
  /**
   *  Returns the hash of %%value%% for the type of %%name%%.
   */
  hashStruct(e, n) {
    return Wt(this.encodeData(e, n));
  }
  /**
   *  Return the fulled encoded %%value%% for the [[types]].
   */
  encode(e) {
    return this.encodeData(this.primaryType, e);
  }
  /**
   *  Return the hash of the fully encoded %%value%% for the [[types]].
   */
  hash(e) {
    return this.hashStruct(this.primaryType, e);
  }
  /**
   *  @_ignore:
   */
  _visit(e, n, r) {
    if (ed(e))
      return r(e, n);
    const s = ju(e).array;
    if (s)
      return D(s.count === -1 || s.count === n.length, `array length mismatch; expected length ${s.count}`, "value", n), n.map((o) => this._visit(s.prefix, o, r));
    const i = this.types[e];
    if (i)
      return i.reduce((o, { name: a, type: c }) => (o[a] = this._visit(c, n[a], r), o), {});
    D(!1, `unknown type: ${e}`, "type", e);
  }
  /**
   *  Call %%calback%% for each value in %%value%%, passing the type and
   *  component within %%value%%.
   *
   *  This is useful for replacing addresses or other transformation that
   *  may be desired on each component, based on its type.
   */
  visit(e, n) {
    return this._visit(this.primaryType, e, n);
  }
  /**
   *  Create a new **TypedDataEncoder** for %%types%%.
   */
  static from(e) {
    return new lr(e);
  }
  /**
   *  Return the primary type for %%types%%.
   */
  static getPrimaryType(e) {
    return lr.from(e).primaryType;
  }
  /**
   *  Return the hashed struct for %%value%% using %%types%% and %%name%%.
   */
  static hashStruct(e, n, r) {
    return lr.from(n).hashStruct(e, r);
  }
  /**
   *  Return the domain hash for %%domain%%.
   */
  static hashDomain(e) {
    const n = [];
    for (const r in e) {
      if (e[r] == null)
        continue;
      const s = C0[r];
      D(s, `invalid typed-data domain key: ${JSON.stringify(r)}`, "domain", e), n.push({ name: r, type: s });
    }
    return n.sort((r, s) => Xh.indexOf(r.name) - Xh.indexOf(s.name)), lr.hashStruct("EIP712Domain", { EIP712Domain: n }, e);
  }
  /**
   *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.
   */
  static encode(e, n, r) {
    return jt([
      "0x1901",
      lr.hashDomain(e),
      lr.from(n).hash(r)
    ]);
  }
  /**
   *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.
   */
  static hash(e, n, r) {
    return Wt(lr.encode(e, n, r));
  }
  // Replaces all address types with ENS names with their looked up address
  /**
   * Resolves to the value from resolving all addresses in %%value%% for
   * %%types%% and the %%domain%%.
   */
  static async resolveNames(e, n, r, s) {
    e = Object.assign({}, e);
    for (const a in e)
      e[a] == null && delete e[a];
    const i = {};
    e.verifyingContract && !wt(e.verifyingContract, 20) && (i[e.verifyingContract] = "0x");
    const o = lr.from(n);
    o.visit(r, (a, c) => (a === "address" && !wt(c, 20) && (i[c] = "0x"), c));
    for (const a in i)
      i[a] = await s(a);
    return e.verifyingContract && i[e.verifyingContract] && (e.verifyingContract = i[e.verifyingContract]), r = o.visit(r, (a, c) => a === "address" && i[c] ? i[c] : c), { domain: e, value: r };
  }
  /**
   *  Returns the JSON-encoded payload expected by nodes which implement
   *  the JSON-RPC [[link-eip-712]] method.
   */
  static getPayload(e, n, r) {
    lr.hashDomain(e);
    const s = {}, i = [];
    Xh.forEach((c) => {
      const u = e[c];
      u != null && (s[c] = A7[c](u), i.push({ name: c, type: C0[c] }));
    });
    const o = lr.from(n);
    n = o.types;
    const a = Object.assign({}, n);
    return D(a.EIP712Domain == null, "types must not contain EIP712Domain type", "types.EIP712Domain", n), a.EIP712Domain = i, o.encode(r), {
      types: a,
      domain: s,
      primaryType: o.primaryType,
      message: o.visit(r, (c, u) => {
        if (c.match(/^bytes(\d*)/))
          return ye(st(u));
        if (c.match(/^u?int/))
          return _e(u).toString();
        switch (c) {
          case "address":
            return u.toLowerCase();
          case "bool":
            return !!u;
          case "string":
            return D(typeof u == "string", "invalid string", "value", u), u;
        }
        D(!1, "unsupported type", "type", c);
      })
    };
  }
};
uu = new WeakMap(), Rs = new WeakMap(), ol = new WeakMap(), Ff = new WeakSet(), _w = function(e) {
  {
    const s = ed(e);
    if (s)
      return s;
  }
  const n = ju(e).array;
  if (n) {
    const s = n.prefix, i = this.getEncoder(s);
    return (o) => {
      D(n.count === -1 || n.count === o.length, `array length mismatch; expected length ${n.count}`, "value", o);
      let a = o.map(i);
      return O(this, Rs).has(s) && (a = a.map(Wt)), Wt(jt(a));
    };
  }
  const r = this.types[e];
  if (r) {
    const s = Vo(O(this, Rs).get(e));
    return (i) => {
      const o = r.map(({ name: a, type: c }) => {
        const u = this.getEncoder(c)(i[a]);
        return O(this, Rs).has(c) ? Wt(u) : u;
      });
      return o.unshift(s), jt(o);
    };
  }
  D(!1, `unknown type: ${e}`, "type", e);
};
let Mf = lr;
function Rn(t) {
  const e = /* @__PURE__ */ new Set();
  return t.forEach((n) => e.add(n)), Object.freeze(e);
}
const E7 = "external public payable override", x7 = Rn(E7.split(" ")), Aw = "constant external internal payable private public pure view override", C7 = Rn(Aw.split(" ")), Ew = "constructor error event fallback function receive struct", xw = Rn(Ew.split(" ")), Cw = "calldata memory storage payable indexed", k7 = Rn(Cw.split(" ")), S7 = "tuple returns", O7 = [Ew, Cw, S7, Aw].join(" "), T7 = Rn(O7.split(" ")), I7 = {
  "(": "OPEN_PAREN",
  ")": "CLOSE_PAREN",
  "[": "OPEN_BRACKET",
  "]": "CLOSE_BRACKET",
  ",": "COMMA",
  "@": "AT"
}, N7 = new RegExp("^(\\s*)"), P7 = new RegExp("^([0-9]+)"), R7 = new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)"), kw = new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)$"), Sw = new RegExp("^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$");
var ln, Tr, fu, qd;
const Hf = class Hf {
  constructor(e) {
    z(this, fu);
    z(this, ln);
    z(this, Tr);
    R(this, ln, 0), R(this, Tr, e.slice());
  }
  get offset() {
    return O(this, ln);
  }
  get length() {
    return O(this, Tr).length - O(this, ln);
  }
  clone() {
    return new Hf(O(this, Tr));
  }
  reset() {
    R(this, ln, 0);
  }
  // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens
  popKeyword(e) {
    const n = this.peek();
    if (n.type !== "KEYWORD" || !e.has(n.text))
      throw new Error(`expected keyword ${n.text}`);
    return this.pop().text;
  }
  // Pops and returns the value of the next token if it is `type`; throws if out of tokens
  popType(e) {
    if (this.peek().type !== e) {
      const n = this.peek();
      throw new Error(`expected ${e}; got ${n.type} ${JSON.stringify(n.text)}`);
    }
    return this.pop().text;
  }
  // Pops and returns a "(" TOKENS ")"
  popParen() {
    const e = this.peek();
    if (e.type !== "OPEN_PAREN")
      throw new Error("bad start");
    const n = ne(this, fu, qd).call(this, O(this, ln) + 1, e.match + 1);
    return R(this, ln, e.match + 1), n;
  }
  // Pops and returns the items within "(" ITEM1 "," ITEM2 "," ... ")"
  popParams() {
    const e = this.peek();
    if (e.type !== "OPEN_PAREN")
      throw new Error("bad start");
    const n = [];
    for (; O(this, ln) < e.match - 1; ) {
      const r = this.peek().linkNext;
      n.push(ne(this, fu, qd).call(this, O(this, ln) + 1, r)), R(this, ln, r);
    }
    return R(this, ln, e.match + 1), n;
  }
  // Returns the top Token, throwing if out of tokens
  peek() {
    if (O(this, ln) >= O(this, Tr).length)
      throw new Error("out-of-bounds");
    return O(this, Tr)[O(this, ln)];
  }
  // Returns the next value, if it is a keyword in `allowed`
  peekKeyword(e) {
    const n = this.peekType("KEYWORD");
    return n != null && e.has(n) ? n : null;
  }
  // Returns the value of the next token if it is `type`
  peekType(e) {
    if (this.length === 0)
      return null;
    const n = this.peek();
    return n.type === e ? n.text : null;
  }
  // Returns the next token; throws if out of tokens
  pop() {
    const e = this.peek();
    return wc(this, ln)._++, e;
  }
  toString() {
    const e = [];
    for (let n = O(this, ln); n < O(this, Tr).length; n++) {
      const r = O(this, Tr)[n];
      e.push(`${r.type}:${r.text}`);
    }
    return `<TokenString ${e.join(" ")}>`;
  }
};
ln = new WeakMap(), Tr = new WeakMap(), fu = new WeakSet(), qd = function(e = 0, n = 0) {
  return new Hf(O(this, Tr).slice(e, n).map((r) => Object.freeze(Object.assign({}, r, {
    match: r.match - e,
    linkBack: r.linkBack - e,
    linkNext: r.linkNext - e
  }))));
};
let Lr = Hf;
function qi(t) {
  const e = [], n = (o) => {
    const a = i < t.length ? JSON.stringify(t[i]) : "$EOI";
    throw new Error(`invalid token ${a} at ${i}: ${o}`);
  };
  let r = [], s = [], i = 0;
  for (; i < t.length; ) {
    let o = t.substring(i), a = o.match(N7);
    a && (i += a[1].length, o = t.substring(i));
    const c = { depth: r.length, linkBack: -1, linkNext: -1, match: -1, type: "", text: "", offset: i, value: -1 };
    e.push(c);
    let u = I7[o[0]] || "";
    if (u) {
      if (c.type = u, c.text = o[0], i++, u === "OPEN_PAREN")
        r.push(e.length - 1), s.push(e.length - 1);
      else if (u == "CLOSE_PAREN")
        r.length === 0 && n("no matching open bracket"), c.match = r.pop(), e[c.match].match = e.length - 1, c.depth--, c.linkBack = s.pop(), e[c.linkBack].linkNext = e.length - 1;
      else if (u === "COMMA")
        c.linkBack = s.pop(), e[c.linkBack].linkNext = e.length - 1, s.push(e.length - 1);
      else if (u === "OPEN_BRACKET")
        c.type = "BRACKET";
      else if (u === "CLOSE_BRACKET") {
        let f = e.pop().text;
        if (e.length > 0 && e[e.length - 1].type === "NUMBER") {
          const l = e.pop().text;
          f = l + f, e[e.length - 1].value = Be(l);
        }
        if (e.length === 0 || e[e.length - 1].type !== "BRACKET")
          throw new Error("missing opening bracket");
        e[e.length - 1].text += f;
      }
      continue;
    }
    if (a = o.match(R7), a) {
      if (c.text = a[1], i += c.text.length, T7.has(c.text)) {
        c.type = "KEYWORD";
        continue;
      }
      if (c.text.match(Sw)) {
        c.type = "TYPE";
        continue;
      }
      c.type = "ID";
      continue;
    }
    if (a = o.match(P7), a) {
      c.text = a[1], c.type = "NUMBER", i += c.text.length;
      continue;
    }
    throw new Error(`unexpected token ${JSON.stringify(o[0])} at position ${i}`);
  }
  return new Lr(e.map((o) => Object.freeze(o)));
}
function O0(t, e) {
  let n = [];
  for (const r in e.keys())
    t.has(r) && n.push(r);
  if (n.length > 1)
    throw new Error(`conflicting types: ${n.join(", ")}`);
}
function mh(t, e) {
  if (e.peekKeyword(xw)) {
    const n = e.pop().text;
    if (n !== t)
      throw new Error(`expected ${t}, got ${n}`);
  }
  return e.popType("ID");
}
function Vs(t, e) {
  const n = /* @__PURE__ */ new Set();
  for (; ; ) {
    const r = t.peekType("KEYWORD");
    if (r == null || e && !e.has(r))
      break;
    if (t.pop(), n.has(r))
      throw new Error(`duplicate keywords: ${JSON.stringify(r)}`);
    n.add(r);
  }
  return Object.freeze(n);
}
function Ow(t) {
  let e = Vs(t, C7);
  return O0(e, Rn("constant payable nonpayable".split(" "))), O0(e, Rn("pure view payable nonpayable".split(" "))), e.has("view") ? "view" : e.has("pure") ? "pure" : e.has("payable") ? "payable" : e.has("nonpayable") ? "nonpayable" : e.has("constant") ? "view" : "nonpayable";
}
function Gs(t, e) {
  return t.popParams().map((n) => fn.from(n, e));
}
function Tw(t) {
  if (t.peekType("AT")) {
    if (t.pop(), t.peekType("NUMBER"))
      return _e(t.pop().text);
    throw new Error("invalid gas");
  }
  return null;
}
function qo(t) {
  if (t.length)
    throw new Error(`unexpected tokens at offset ${t.offset}: ${t.toString()}`);
}
const B7 = new RegExp(/^(.*)\[([0-9]*)\]$/);
function T0(t) {
  const e = t.match(Sw);
  if (D(e, "invalid type", "type", t), t === "uint")
    return "uint256";
  if (t === "int")
    return "int256";
  if (e[2]) {
    const n = parseInt(e[2]);
    D(n !== 0 && n <= 32, "invalid bytes length", "type", t);
  } else if (e[3]) {
    const n = parseInt(e[3]);
    D(n !== 0 && n <= 256 && n % 8 === 0, "invalid numeric width", "type", t);
  }
  return t;
}
const Nt = {}, Wn = Symbol.for("_ethers_internal"), I0 = "_ParamTypeInternal", N0 = "_ErrorInternal", P0 = "_EventInternal", R0 = "_ConstructorInternal", B0 = "_FallbackInternal", L0 = "_FunctionInternal", M0 = "_StructInternal";
var al, ef;
const cr = class cr {
  /**
   *  @private
   */
  constructor(e, n, r, s, i, o, a, c) {
    z(this, al);
    /**
     *  The local name of the parameter (or ``""`` if unbound)
     */
    j(this, "name");
    /**
     *  The fully qualified type (e.g. ``"address"``, ``"tuple(address)"``,
     *  ``"uint256[3][]"``)
     */
    j(this, "type");
    /**
     *  The base type (e.g. ``"address"``, ``"tuple"``, ``"array"``)
     */
    j(this, "baseType");
    /**
     *  True if the parameters is indexed.
     *
     *  For non-indexable types this is ``null``.
     */
    j(this, "indexed");
    /**
     *  The components for the tuple.
     *
     *  For non-tuple types this is ``null``.
     */
    j(this, "components");
    /**
     *  The array length, or ``-1`` for dynamic-lengthed arrays.
     *
     *  For non-array types this is ``null``.
     */
    j(this, "arrayLength");
    /**
     *  The type of each child in the array.
     *
     *  For non-array types this is ``null``.
     */
    j(this, "arrayChildren");
    if (Cu(e, Nt, "ParamType"), Object.defineProperty(this, Wn, { value: I0 }), o && (o = Object.freeze(o.slice())), s === "array") {
      if (a == null || c == null)
        throw new Error("");
    } else if (a != null || c != null)
      throw new Error("");
    if (s === "tuple") {
      if (o == null)
        throw new Error("");
    } else if (o != null)
      throw new Error("");
    ke(this, {
      name: n,
      type: r,
      baseType: s,
      indexed: i,
      components: o,
      arrayLength: a,
      arrayChildren: c
    });
  }
  /**
   *  Return a string representation of this type.
   *
   *  For example,
   *
   *  ``sighash" => "(uint256,address)"``
   *
   *  ``"minimal" => "tuple(uint256,address) indexed"``
   *
   *  ``"full" => "tuple(uint256 foo, address bar) indexed baz"``
   */
  format(e) {
    if (e == null && (e = "sighash"), e === "json") {
      const r = this.name || "";
      if (this.isArray()) {
        const i = JSON.parse(this.arrayChildren.format("json"));
        return i.name = r, i.type += `[${this.arrayLength < 0 ? "" : String(this.arrayLength)}]`, JSON.stringify(i);
      }
      const s = {
        type: this.baseType === "tuple" ? "tuple" : this.type,
        name: r
      };
      return typeof this.indexed == "boolean" && (s.indexed = this.indexed), this.isTuple() && (s.components = this.components.map((i) => JSON.parse(i.format(e)))), JSON.stringify(s);
    }
    let n = "";
    return this.isArray() ? (n += this.arrayChildren.format(e), n += `[${this.arrayLength < 0 ? "" : String(this.arrayLength)}]`) : this.isTuple() ? n += "(" + this.components.map((r) => r.format(e)).join(e === "full" ? ", " : ",") + ")" : n += this.type, e !== "sighash" && (this.indexed === !0 && (n += " indexed"), e === "full" && this.name && (n += " " + this.name)), n;
  }
  /**
   *  Returns true if %%this%% is an Array type.
   *
   *  This provides a type gaurd ensuring that [[arrayChildren]]
   *  and [[arrayLength]] are non-null.
   */
  isArray() {
    return this.baseType === "array";
  }
  /**
   *  Returns true if %%this%% is a Tuple type.
   *
   *  This provides a type gaurd ensuring that [[components]]
   *  is non-null.
   */
  isTuple() {
    return this.baseType === "tuple";
  }
  /**
   *  Returns true if %%this%% is an Indexable type.
   *
   *  This provides a type gaurd ensuring that [[indexed]]
   *  is non-null.
   */
  isIndexable() {
    return this.indexed != null;
  }
  /**
   *  Walks the **ParamType** with %%value%%, calling %%process%%
   *  on each type, destructing the %%value%% recursively.
   */
  walk(e, n) {
    if (this.isArray()) {
      if (!Array.isArray(e))
        throw new Error("invalid array value");
      if (this.arrayLength !== -1 && e.length !== this.arrayLength)
        throw new Error("array is wrong length");
      const r = this;
      return e.map((s) => r.arrayChildren.walk(s, n));
    }
    if (this.isTuple()) {
      if (!Array.isArray(e))
        throw new Error("invalid tuple value");
      if (e.length !== this.components.length)
        throw new Error("array is wrong length");
      const r = this;
      return e.map((s, i) => r.components[i].walk(s, n));
    }
    return n(this.type, e);
  }
  /**
   *  Walks the **ParamType** with %%value%%, asynchronously calling
   *  %%process%% on each type, destructing the %%value%% recursively.
   *
   *  This can be used to resolve ENS names by walking and resolving each
   *  ``"address"`` type.
   */
  async walkAsync(e, n) {
    const r = [], s = [e];
    return ne(this, al, ef).call(this, r, e, n, (i) => {
      s[0] = i;
    }), r.length && await Promise.all(r), s[0];
  }
  /**
   *  Creates a new **ParamType** for %%obj%%.
   *
   *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,
   *  otherwise the ``indexed`` keyword will throw an error.
   */
  static from(e, n) {
    if (cr.isParamType(e))
      return e;
    if (typeof e == "string")
      try {
        return cr.from(qi(e), n);
      } catch {
        D(!1, "invalid param type", "obj", e);
      }
    else if (e instanceof Lr) {
      let a = "", c = "", u = null;
      Vs(e, Rn(["tuple"])).has("tuple") || e.peekType("OPEN_PAREN") ? (c = "tuple", u = e.popParams().map((h) => cr.from(h)), a = `tuple(${u.map((h) => h.format()).join(",")})`) : (a = T0(e.popType("TYPE")), c = a);
      let f = null, l = null;
      for (; e.length && e.peekType("BRACKET"); ) {
        const h = e.pop();
        f = new cr(Nt, "", a, c, null, u, l, f), l = h.value, a += h.text, c = "array", u = null;
      }
      let m = null;
      if (Vs(e, k7).has("indexed")) {
        if (!n)
          throw new Error("");
        m = !0;
      }
      const d = e.peekType("ID") ? e.pop().text : "";
      if (e.length)
        throw new Error("leftover tokens");
      return new cr(Nt, d, a, c, m, u, l, f);
    }
    const r = e.name;
    D(!r || typeof r == "string" && r.match(kw), "invalid name", "obj.name", r);
    let s = e.indexed;
    s != null && (D(n, "parameter cannot be indexed", "obj.indexed", e.indexed), s = !!s);
    let i = e.type, o = i.match(B7);
    if (o) {
      const a = parseInt(o[2] || "-1"), c = cr.from({
        type: o[1],
        components: e.components
      });
      return new cr(Nt, r || "", i, "array", s, null, a, c);
    }
    if (i === "tuple" || i.startsWith(
      "tuple("
      /* fix: ) */
    ) || i.startsWith(
      "("
      /* fix: ) */
    )) {
      const a = e.components != null ? e.components.map((u) => cr.from(u)) : null;
      return new cr(Nt, r || "", i, "tuple", s, a, null, null);
    }
    return i = T0(e.type), new cr(Nt, r || "", i, i, s, null, null, null);
  }
  /**
   *  Returns true if %%value%% is a **ParamType**.
   */
  static isParamType(e) {
    return e && e[Wn] === I0;
  }
};
al = new WeakSet(), ef = function(e, n, r, s) {
  if (this.isArray()) {
    if (!Array.isArray(n))
      throw new Error("invalid array value");
    if (this.arrayLength !== -1 && n.length !== this.arrayLength)
      throw new Error("array is wrong length");
    const o = this.arrayChildren, a = n.slice();
    a.forEach((c, u) => {
      var f;
      ne(f = o, al, ef).call(f, e, c, r, (l) => {
        a[u] = l;
      });
    }), s(a);
    return;
  }
  if (this.isTuple()) {
    const o = this.components;
    let a;
    if (Array.isArray(n))
      a = n.slice();
    else {
      if (n == null || typeof n != "object")
        throw new Error("invalid tuple value");
      a = o.map((c) => {
        if (!c.name)
          throw new Error("cannot use object value with unnamed components");
        if (!(c.name in n))
          throw new Error(`missing value for component ${c.name}`);
        return n[c.name];
      });
    }
    if (a.length !== this.components.length)
      throw new Error("array is wrong length");
    a.forEach((c, u) => {
      var f;
      ne(f = o[u], al, ef).call(f, e, c, r, (l) => {
        a[u] = l;
      });
    }), s(a);
    return;
  }
  const i = r(this.type, n);
  i.then ? e.push(async function() {
    s(await i);
  }()) : s(i);
};
let fn = cr;
class Qo {
  /**
   *  @private
   */
  constructor(e, n, r) {
    /**
     *  The type of the fragment.
     */
    j(this, "type");
    /**
     *  The inputs for the fragment.
     */
    j(this, "inputs");
    Cu(e, Nt, "Fragment"), r = Object.freeze(r.slice()), ke(this, { type: n, inputs: r });
  }
  /**
   *  Creates a new **Fragment** for %%obj%%, wich can be any supported
   *  ABI frgament type.
   */
  static from(e) {
    if (typeof e == "string") {
      try {
        Qo.from(JSON.parse(e));
      } catch {
      }
      return Qo.from(qi(e));
    }
    if (e instanceof Lr)
      switch (e.peekKeyword(xw)) {
        case "constructor":
          return Hs.from(e);
        case "error":
          return Fn.from(e);
        case "event":
          return es.from(e);
        case "fallback":
        case "receive":
          return Ss.from(e);
        case "function":
          return ts.from(e);
        case "struct":
          return Ho.from(e);
      }
    else if (typeof e == "object") {
      switch (e.type) {
        case "constructor":
          return Hs.from(e);
        case "error":
          return Fn.from(e);
        case "event":
          return es.from(e);
        case "fallback":
        case "receive":
          return Ss.from(e);
        case "function":
          return ts.from(e);
        case "struct":
          return Ho.from(e);
      }
      K(!1, `unsupported type: ${e.type}`, "UNSUPPORTED_OPERATION", {
        operation: "Fragment.from"
      });
    }
    D(!1, "unsupported frgament object", "obj", e);
  }
  /**
   *  Returns true if %%value%% is a [[ConstructorFragment]].
   */
  static isConstructor(e) {
    return Hs.isFragment(e);
  }
  /**
   *  Returns true if %%value%% is an [[ErrorFragment]].
   */
  static isError(e) {
    return Fn.isFragment(e);
  }
  /**
   *  Returns true if %%value%% is an [[EventFragment]].
   */
  static isEvent(e) {
    return es.isFragment(e);
  }
  /**
   *  Returns true if %%value%% is a [[FunctionFragment]].
   */
  static isFunction(e) {
    return ts.isFragment(e);
  }
  /**
   *  Returns true if %%value%% is a [[StructFragment]].
   */
  static isStruct(e) {
    return Ho.isFragment(e);
  }
}
class gh extends Qo {
  /**
   *  @private
   */
  constructor(n, r, s, i) {
    super(n, r, i);
    /**
     *  The name of the fragment.
     */
    j(this, "name");
    D(typeof s == "string" && s.match(kw), "invalid identifier", "name", s), i = Object.freeze(i.slice()), ke(this, { name: s });
  }
}
function su(t, e) {
  return "(" + e.map((n) => n.format(t)).join(t === "full" ? ", " : ",") + ")";
}
class Fn extends gh {
  /**
   *  @private
   */
  constructor(e, n, r) {
    super(e, "error", n, r), Object.defineProperty(this, Wn, { value: N0 });
  }
  /**
   *  The Custom Error selector.
   */
  get selector() {
    return Vo(this.format("sighash")).substring(0, 10);
  }
  /**
   *  Returns a string representation of this fragment as %%format%%.
   */
  format(e) {
    if (e == null && (e = "sighash"), e === "json")
      return JSON.stringify({
        type: "error",
        name: this.name,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e)))
      });
    const n = [];
    return e !== "sighash" && n.push("error"), n.push(this.name + su(e, this.inputs)), n.join(" ");
  }
  /**
   *  Returns a new **ErrorFragment** for %%obj%%.
   */
  static from(e) {
    if (Fn.isFragment(e))
      return e;
    if (typeof e == "string")
      return Fn.from(qi(e));
    if (e instanceof Lr) {
      const n = mh("error", e), r = Gs(e);
      return qo(e), new Fn(Nt, n, r);
    }
    return new Fn(Nt, e.name, e.inputs ? e.inputs.map(fn.from) : []);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is an
   *  **ErrorFragment**.
   */
  static isFragment(e) {
    return e && e[Wn] === N0;
  }
}
class es extends gh {
  /**
   *  @private
   */
  constructor(n, r, s, i) {
    super(n, "event", r, s);
    /**
     *  Whether this event is anonymous.
     */
    j(this, "anonymous");
    Object.defineProperty(this, Wn, { value: P0 }), ke(this, { anonymous: i });
  }
  /**
   *  The Event topic hash.
   */
  get topicHash() {
    return Vo(this.format("sighash"));
  }
  /**
   *  Returns a string representation of this event as %%format%%.
   */
  format(n) {
    if (n == null && (n = "sighash"), n === "json")
      return JSON.stringify({
        type: "event",
        anonymous: this.anonymous,
        name: this.name,
        inputs: this.inputs.map((s) => JSON.parse(s.format(n)))
      });
    const r = [];
    return n !== "sighash" && r.push("event"), r.push(this.name + su(n, this.inputs)), n !== "sighash" && this.anonymous && r.push("anonymous"), r.join(" ");
  }
  /**
   *  Return the topic hash for an event with %%name%% and %%params%%.
   */
  static getTopicHash(n, r) {
    return r = (r || []).map((i) => fn.from(i)), new es(Nt, n, r, !1).topicHash;
  }
  /**
   *  Returns a new **EventFragment** for %%obj%%.
   */
  static from(n) {
    if (es.isFragment(n))
      return n;
    if (typeof n == "string")
      try {
        return es.from(qi(n));
      } catch {
        D(!1, "invalid event fragment", "obj", n);
      }
    else if (n instanceof Lr) {
      const r = mh("event", n), s = Gs(n, !0), i = !!Vs(n, Rn(["anonymous"])).has("anonymous");
      return qo(n), new es(Nt, r, s, i);
    }
    return new es(Nt, n.name, n.inputs ? n.inputs.map((r) => fn.from(r, !0)) : [], !!n.anonymous);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is an
   *  **EventFragment**.
   */
  static isFragment(n) {
    return n && n[Wn] === P0;
  }
}
class Hs extends Qo {
  /**
   *  @private
   */
  constructor(n, r, s, i, o) {
    super(n, r, s);
    /**
     *  Whether the constructor can receive an endowment.
     */
    j(this, "payable");
    /**
     *  The recommended gas limit for deployment or ``null``.
     */
    j(this, "gas");
    Object.defineProperty(this, Wn, { value: R0 }), ke(this, { payable: i, gas: o });
  }
  /**
   *  Returns a string representation of this constructor as %%format%%.
   */
  format(n) {
    if (K(n != null && n !== "sighash", "cannot format a constructor for sighash", "UNSUPPORTED_OPERATION", { operation: "format(sighash)" }), n === "json")
      return JSON.stringify({
        type: "constructor",
        stateMutability: this.payable ? "payable" : "undefined",
        payable: this.payable,
        gas: this.gas != null ? this.gas : void 0,
        inputs: this.inputs.map((s) => JSON.parse(s.format(n)))
      });
    const r = [`constructor${su(n, this.inputs)}`];
    return this.payable && r.push("payable"), this.gas != null && r.push(`@${this.gas.toString()}`), r.join(" ");
  }
  /**
   *  Returns a new **ConstructorFragment** for %%obj%%.
   */
  static from(n) {
    if (Hs.isFragment(n))
      return n;
    if (typeof n == "string")
      try {
        return Hs.from(qi(n));
      } catch {
        D(!1, "invalid constuctor fragment", "obj", n);
      }
    else if (n instanceof Lr) {
      Vs(n, Rn(["constructor"]));
      const r = Gs(n), s = !!Vs(n, x7).has("payable"), i = Tw(n);
      return qo(n), new Hs(Nt, "constructor", r, s, i);
    }
    return new Hs(Nt, "constructor", n.inputs ? n.inputs.map(fn.from) : [], !!n.payable, n.gas != null ? n.gas : null);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is a
   *  **ConstructorFragment**.
   */
  static isFragment(n) {
    return n && n[Wn] === R0;
  }
}
class Ss extends Qo {
  constructor(n, r, s) {
    super(n, "fallback", r);
    /**
     *  If the function can be sent value during invocation.
     */
    j(this, "payable");
    Object.defineProperty(this, Wn, { value: B0 }), ke(this, { payable: s });
  }
  /**
   *  Returns a string representation of this fallback as %%format%%.
   */
  format(n) {
    const r = this.inputs.length === 0 ? "receive" : "fallback";
    if (n === "json") {
      const s = this.payable ? "payable" : "nonpayable";
      return JSON.stringify({ type: r, stateMutability: s });
    }
    return `${r}()${this.payable ? " payable" : ""}`;
  }
  /**
   *  Returns a new **FallbackFragment** for %%obj%%.
   */
  static from(n) {
    if (Ss.isFragment(n))
      return n;
    if (typeof n == "string")
      try {
        return Ss.from(qi(n));
      } catch {
        D(!1, "invalid fallback fragment", "obj", n);
      }
    else if (n instanceof Lr) {
      const r = n.toString(), s = n.peekKeyword(Rn(["fallback", "receive"]));
      if (D(s, "type must be fallback or receive", "obj", r), n.popKeyword(Rn(["fallback", "receive"])) === "receive") {
        const c = Gs(n);
        return D(c.length === 0, "receive cannot have arguments", "obj.inputs", c), Vs(n, Rn(["payable"])), qo(n), new Ss(Nt, [], !0);
      }
      let o = Gs(n);
      o.length ? D(o.length === 1 && o[0].type === "bytes", "invalid fallback inputs", "obj.inputs", o.map((c) => c.format("minimal")).join(", ")) : o = [fn.from("bytes")];
      const a = Ow(n);
      if (D(a === "nonpayable" || a === "payable", "fallback cannot be constants", "obj.stateMutability", a), Vs(n, Rn(["returns"])).has("returns")) {
        const c = Gs(n);
        D(c.length === 1 && c[0].type === "bytes", "invalid fallback outputs", "obj.outputs", c.map((u) => u.format("minimal")).join(", "));
      }
      return qo(n), new Ss(Nt, o, a === "payable");
    }
    if (n.type === "receive")
      return new Ss(Nt, [], !0);
    if (n.type === "fallback") {
      const r = [fn.from("bytes")], s = n.stateMutability === "payable";
      return new Ss(Nt, r, s);
    }
    D(!1, "invalid fallback description", "obj", n);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is a
   *  **FallbackFragment**.
   */
  static isFragment(n) {
    return n && n[Wn] === B0;
  }
}
class ts extends gh {
  /**
   *  @private
   */
  constructor(n, r, s, i, o, a) {
    super(n, "function", r, i);
    /**
     *  If the function is constant (e.g. ``pure`` or ``view`` functions).
     */
    j(this, "constant");
    /**
     *  The returned types for the result of calling this function.
     */
    j(this, "outputs");
    /**
     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``
     *  or ``pure``)
     */
    j(this, "stateMutability");
    /**
     *  If the function can be sent value during invocation.
     */
    j(this, "payable");
    /**
     *  The recommended gas limit to send when calling this function.
     */
    j(this, "gas");
    Object.defineProperty(this, Wn, { value: L0 }), o = Object.freeze(o.slice()), ke(this, { constant: s === "view" || s === "pure", gas: a, outputs: o, payable: s === "payable", stateMutability: s });
  }
  /**
   *  The Function selector.
   */
  get selector() {
    return Vo(this.format("sighash")).substring(0, 10);
  }
  /**
   *  Returns a string representation of this function as %%format%%.
   */
  format(n) {
    if (n == null && (n = "sighash"), n === "json")
      return JSON.stringify({
        type: "function",
        name: this.name,
        constant: this.constant,
        stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : void 0,
        payable: this.payable,
        gas: this.gas != null ? this.gas : void 0,
        inputs: this.inputs.map((s) => JSON.parse(s.format(n))),
        outputs: this.outputs.map((s) => JSON.parse(s.format(n)))
      });
    const r = [];
    return n !== "sighash" && r.push("function"), r.push(this.name + su(n, this.inputs)), n !== "sighash" && (this.stateMutability !== "nonpayable" && r.push(this.stateMutability), this.outputs && this.outputs.length && (r.push("returns"), r.push(su(n, this.outputs))), this.gas != null && r.push(`@${this.gas.toString()}`)), r.join(" ");
  }
  /**
   *  Return the selector for a function with %%name%% and %%params%%.
   */
  static getSelector(n, r) {
    return r = (r || []).map((i) => fn.from(i)), new ts(Nt, n, "view", r, [], null).selector;
  }
  /**
   *  Returns a new **FunctionFragment** for %%obj%%.
   */
  static from(n) {
    if (ts.isFragment(n))
      return n;
    if (typeof n == "string")
      try {
        return ts.from(qi(n));
      } catch {
        D(!1, "invalid function fragment", "obj", n);
      }
    else if (n instanceof Lr) {
      const s = mh("function", n), i = Gs(n), o = Ow(n);
      let a = [];
      Vs(n, Rn(["returns"])).has("returns") && (a = Gs(n));
      const c = Tw(n);
      return qo(n), new ts(Nt, s, o, i, a, c);
    }
    let r = n.stateMutability;
    return r == null && (r = "payable", typeof n.constant == "boolean" ? (r = "view", n.constant || (r = "payable", typeof n.payable == "boolean" && !n.payable && (r = "nonpayable"))) : typeof n.payable == "boolean" && !n.payable && (r = "nonpayable")), new ts(Nt, n.name, r, n.inputs ? n.inputs.map(fn.from) : [], n.outputs ? n.outputs.map(fn.from) : [], n.gas != null ? n.gas : null);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is a
   *  **FunctionFragment**.
   */
  static isFragment(n) {
    return n && n[Wn] === L0;
  }
}
class Ho extends gh {
  /**
   *  @private
   */
  constructor(e, n, r) {
    super(e, "struct", n, r), Object.defineProperty(this, Wn, { value: M0 });
  }
  /**
   *  Returns a string representation of this struct as %%format%%.
   */
  format() {
    throw new Error("@TODO");
  }
  /**
   *  Returns a new **StructFragment** for %%obj%%.
   */
  static from(e) {
    if (typeof e == "string")
      try {
        return Ho.from(qi(e));
      } catch {
        D(!1, "invalid struct fragment", "obj", e);
      }
    else if (e instanceof Lr) {
      const n = mh("struct", e), r = Gs(e);
      return qo(e), new Ho(Nt, n, r);
    }
    return new Ho(Nt, e.name, e.inputs ? e.inputs.map(fn.from) : []);
  }
  // @TODO: fix this return type
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is a
   *  **StructFragment**.
   */
  static isFragment(e) {
    return e && e[Wn] === M0;
  }
}
const Dr = /* @__PURE__ */ new Map();
Dr.set(0, "GENERIC_PANIC");
Dr.set(1, "ASSERT_FALSE");
Dr.set(17, "OVERFLOW");
Dr.set(18, "DIVIDE_BY_ZERO");
Dr.set(33, "ENUM_RANGE_ERROR");
Dr.set(34, "BAD_STORAGE_DATA");
Dr.set(49, "STACK_UNDERFLOW");
Dr.set(50, "ARRAY_RANGE_ERROR");
Dr.set(65, "OUT_OF_MEMORY");
Dr.set(81, "UNINITIALIZED_FUNCTION_CALL");
const L7 = new RegExp(/^bytes([0-9]*)$/), M7 = new RegExp(/^(u?int)([0-9]*)$/);
let td = null, D0 = 1024;
function D7(t, e, n, r) {
  let s = "missing revert data", i = null;
  const o = null;
  let a = null;
  if (n) {
    s = "execution reverted";
    const u = st(n);
    if (n = ye(n), u.length === 0)
      s += " (no data present; likely require(false) occurred", i = "require(false)";
    else if (u.length % 32 !== 4)
      s += " (could not decode reason; invalid data length)";
    else if (ye(u.slice(0, 4)) === "0x08c379a0")
      try {
        i = r.decode(["string"], u.slice(4))[0], a = {
          signature: "Error(string)",
          name: "Error",
          args: [i]
        }, s += `: ${JSON.stringify(i)}`;
      } catch {
        s += " (could not decode reason; invalid string data)";
      }
    else if (ye(u.slice(0, 4)) === "0x4e487b71")
      try {
        const f = Number(r.decode(["uint256"], u.slice(4))[0]);
        a = {
          signature: "Panic(uint256)",
          name: "Panic",
          args: [f]
        }, i = `Panic due to ${Dr.get(f) || "UNKNOWN"}(${f})`, s += `: ${i}`;
      } catch {
        s += " (could not decode panic code)";
      }
    else
      s += " (unknown custom error)";
  }
  const c = {
    to: e.to ? gt(e.to) : null,
    data: e.data || "0x"
  };
  return e.from && (c.from = gt(e.from)), Rt(s, "CALL_EXCEPTION", {
    action: t,
    data: n,
    reason: i,
    transaction: c,
    invocation: o,
    revert: a
  });
}
var Ei, wa;
const Wf = class Wf {
  constructor() {
    z(this, Ei);
  }
  /**
   *  Get the default values for the given %%types%%.
   *
   *  For example, a ``uint`` is by default ``0`` and ``bool``
   *  is by default ``false``.
   */
  getDefaultValue(e) {
    const n = e.map((s) => ne(this, Ei, wa).call(this, fn.from(s)));
    return new Uu(n, "_").defaultValue();
  }
  /**
   *  Encode the %%values%% as the %%types%% into ABI data.
   *
   *  @returns DataHexstring
   */
  encode(e, n) {
    ky(n.length, e.length, "types/values length mismatch");
    const r = e.map((o) => ne(this, Ei, wa).call(this, fn.from(o))), s = new Uu(r, "_"), i = new $d();
    return s.encode(i, n), i.data;
  }
  /**
   *  Decode the ABI %%data%% as the %%types%% into values.
   *
   *  If %%loose%% decoding is enabled, then strict padding is
   *  not enforced. Some older versions of Solidity incorrectly
   *  padded event data emitted from ``external`` functions.
   */
  decode(e, n, r) {
    const s = e.map((o) => ne(this, Ei, wa).call(this, fn.from(o)));
    return new Uu(s, "_").decode(new Ud(n, r, D0));
  }
  static _setDefaultMaxInflation(e) {
    D(typeof e == "number" && Number.isInteger(e), "invalid defaultMaxInflation factor", "value", e), D0 = e;
  }
  /**
   *  Returns the shared singleton instance of a default [[AbiCoder]].
   *
   *  On the first call, the instance is created internally.
   */
  static defaultAbiCoder() {
    return td == null && (td = new Wf()), td;
  }
  /**
   *  Returns an ethers-compatible [[CallExceptionError]] Error for the given
   *  result %%data%% for the [[CallExceptionAction]] %%action%% against
   *  the Transaction %%tx%%.
   */
  static getBuiltinCallException(e, n, r) {
    return D7(e, n, r, Wf.defaultAbiCoder());
  }
};
Ei = new WeakSet(), wa = function(e) {
  if (e.isArray())
    return new o9(ne(this, Ei, wa).call(this, e.arrayChildren), e.arrayLength, e.name);
  if (e.isTuple())
    return new Uu(e.components.map((r) => ne(this, Ei, wa).call(this, r)), e.name);
  switch (e.baseType) {
    case "address":
      return new s9(e.name);
    case "bool":
      return new a9(e.name);
    case "string":
      return new g9(e.name);
    case "bytes":
      return new l9(e.name);
    case "":
      return new f9(e.name);
  }
  let n = e.type.match(M7);
  if (n) {
    let r = parseInt(n[2] || "256");
    return D(r !== 0 && r <= 256 && r % 8 === 0, "invalid " + n[1] + " bit length", "param", e), new m9(r / 8, n[1] === "int", e.name);
  }
  if (n = e.type.match(L7), n) {
    let r = parseInt(n[1]);
    return D(r !== 0 && r <= 32, "invalid bytes length", "param", e), new c9(r, e.name);
  }
  D(!1, "invalid type", "type", e.type);
};
let iu = Wf;
class $7 {
  /**
   *  @_ignore:
   */
  constructor(e, n, r) {
    /**
     *  The matching fragment for the ``topic0``.
     */
    j(this, "fragment");
    /**
     *  The name of the Event.
     */
    j(this, "name");
    /**
     *  The full Event signature.
     */
    j(this, "signature");
    /**
     *  The topic hash for the Event.
     */
    j(this, "topic");
    /**
     *  The arguments passed into the Event with ``emit``.
     */
    j(this, "args");
    const s = e.name, i = e.format();
    ke(this, {
      fragment: e,
      name: s,
      signature: i,
      topic: n,
      args: r
    });
  }
}
class U7 {
  /**
   *  @_ignore:
   */
  constructor(e, n, r, s) {
    /**
     *  The matching fragment from the transaction ``data``.
     */
    j(this, "fragment");
    /**
     *  The name of the Function from the transaction ``data``.
     */
    j(this, "name");
    /**
     *  The arguments passed to the Function from the transaction ``data``.
     */
    j(this, "args");
    /**
     *  The full Function signature from the transaction ``data``.
     */
    j(this, "signature");
    /**
     *  The selector for the Function from the transaction ``data``.
     */
    j(this, "selector");
    /**
     *  The ``value`` (in wei) from the transaction.
     */
    j(this, "value");
    const i = e.name, o = e.format();
    ke(this, {
      fragment: e,
      name: i,
      args: r,
      signature: o,
      selector: n,
      value: s
    });
  }
}
class j7 {
  /**
   *  @_ignore:
   */
  constructor(e, n, r) {
    /**
     *  The matching fragment.
     */
    j(this, "fragment");
    /**
     *  The name of the Error.
     */
    j(this, "name");
    /**
     *  The arguments passed to the Error with ``revert``.
     */
    j(this, "args");
    /**
     *  The full Error signature.
     */
    j(this, "signature");
    /**
     *  The selector for the Error.
     */
    j(this, "selector");
    const s = e.name, i = e.format();
    ke(this, {
      fragment: e,
      name: s,
      args: r,
      signature: i,
      selector: n
    });
  }
}
class $0 {
  /**
   *  @_ignore:
   */
  constructor(e) {
    /**
     *  The ``keccak256`` of the value logged.
     */
    j(this, "hash");
    /**
     *  @_ignore:
     */
    j(this, "_isIndexed");
    ke(this, { hash: e, _isIndexed: !0 });
  }
  /**
   *  Returns ``true`` if %%value%% is an **Indexed**.
   *
   *  This provides a Type Guard for property access.
   */
  static isIndexed(e) {
    return !!(e && e._isIndexed);
  }
}
const U0 = {
  0: "generic panic",
  1: "assert(false)",
  17: "arithmetic overflow",
  18: "division or modulo by zero",
  33: "enum overflow",
  34: "invalid encoded storage byte array accessed",
  49: "out-of-bounds array access; popping on an empty array",
  50: "out-of-bounds access of an array or bytesN",
  65: "out of memory",
  81: "uninitialized function"
}, j0 = {
  "0x08c379a0": {
    signature: "Error(string)",
    name: "Error",
    inputs: ["string"],
    reason: (t) => `reverted with reason string ${JSON.stringify(t)}`
  },
  "0x4e487b71": {
    signature: "Panic(uint256)",
    name: "Panic",
    inputs: ["uint256"],
    reason: (t) => {
      let e = "unknown panic code";
      return t >= 0 && t <= 255 && U0[t.toString()] && (e = U0[t.toString()]), `reverted with panic code 0x${t.toString(16)} (${e})`;
    }
  }
};
var Qr, Zr, Jr, dn, as, tf, nf;
const po = class po {
  /**
   *  Create a new Interface for the %%fragments%%.
   */
  constructor(e) {
    z(this, as);
    /**
     *  All the Contract ABI members (i.e. methods, events, errors, etc).
     */
    j(this, "fragments");
    /**
     *  The Contract constructor.
     */
    j(this, "deploy");
    /**
     *  The Fallback method, if any.
     */
    j(this, "fallback");
    /**
     *  If receiving ether is supported.
     */
    j(this, "receive");
    z(this, Qr);
    z(this, Zr);
    z(this, Jr);
    //    #structs: Map<string, StructFragment>;
    z(this, dn);
    let n = [];
    typeof e == "string" ? n = JSON.parse(e) : n = e, R(this, Jr, /* @__PURE__ */ new Map()), R(this, Qr, /* @__PURE__ */ new Map()), R(this, Zr, /* @__PURE__ */ new Map());
    const r = [];
    for (const o of n)
      try {
        r.push(Qo.from(o));
      } catch (a) {
        console.log(`[Warning] Invalid Fragment ${JSON.stringify(o)}:`, a.message);
      }
    ke(this, {
      fragments: Object.freeze(r)
    });
    let s = null, i = !1;
    R(this, dn, this.getAbiCoder()), this.fragments.forEach((o, a) => {
      let c;
      switch (o.type) {
        case "constructor":
          if (this.deploy) {
            console.log("duplicate definition - constructor");
            return;
          }
          ke(this, { deploy: o });
          return;
        case "fallback":
          o.inputs.length === 0 ? i = !0 : (D(!s || o.payable !== s.payable, "conflicting fallback fragments", `fragments[${a}]`, o), s = o, i = s.payable);
          return;
        case "function":
          c = O(this, Jr);
          break;
        case "event":
          c = O(this, Zr);
          break;
        case "error":
          c = O(this, Qr);
          break;
        default:
          return;
      }
      const u = o.format();
      c.has(u) || c.set(u, o);
    }), this.deploy || ke(this, {
      deploy: Hs.from("constructor()")
    }), ke(this, { fallback: s, receive: i });
  }
  /**
   *  Returns the entire Human-Readable ABI, as an array of
   *  signatures, optionally as %%minimal%% strings, which
   *  removes parameter names and unneceesary spaces.
   */
  format(e) {
    const n = e ? "minimal" : "full";
    return this.fragments.map((s) => s.format(n));
  }
  /**
   *  Return the JSON-encoded ABI. This is the format Solidiy
   *  returns.
   */
  formatJson() {
    const e = this.fragments.map((n) => n.format("json"));
    return JSON.stringify(e.map((n) => JSON.parse(n)));
  }
  /**
   *  The ABI coder that will be used to encode and decode binary
   *  data.
   */
  getAbiCoder() {
    return iu.defaultAbiCoder();
  }
  /**
   *  Get the function name for %%key%%, which may be a function selector,
   *  function name or function signature that belongs to the ABI.
   */
  getFunctionName(e) {
    const n = ne(this, as, tf).call(this, e, null, !1);
    return D(n, "no matching function", "key", e), n.name;
  }
  /**
   *  Returns true if %%key%% (a function selector, function name or
   *  function signature) is present in the ABI.
   *
   *  In the case of a function name, the name may be ambiguous, so
   *  accessing the [[FunctionFragment]] may require refinement.
   */
  hasFunction(e) {
    return !!ne(this, as, tf).call(this, e, null, !1);
  }
  /**
   *  Get the [[FunctionFragment]] for %%key%%, which may be a function
   *  selector, function name or function signature that belongs to the ABI.
   *
   *  If %%values%% is provided, it will use the Typed API to handle
   *  ambiguous cases where multiple functions match by name.
   *
   *  If the %%key%% and %%values%% do not refine to a single function in
   *  the ABI, this will throw.
   */
  getFunction(e, n) {
    return ne(this, as, tf).call(this, e, n || null, !0);
  }
  /**
   *  Iterate over all functions, calling %%callback%%, sorted by their name.
   */
  forEachFunction(e) {
    const n = Array.from(O(this, Jr).keys());
    n.sort((r, s) => r.localeCompare(s));
    for (let r = 0; r < n.length; r++) {
      const s = n[r];
      e(O(this, Jr).get(s), r);
    }
  }
  /**
   *  Get the event name for %%key%%, which may be a topic hash,
   *  event name or event signature that belongs to the ABI.
   */
  getEventName(e) {
    const n = ne(this, as, nf).call(this, e, null, !1);
    return D(n, "no matching event", "key", e), n.name;
  }
  /**
   *  Returns true if %%key%% (an event topic hash, event name or
   *  event signature) is present in the ABI.
   *
   *  In the case of an event name, the name may be ambiguous, so
   *  accessing the [[EventFragment]] may require refinement.
   */
  hasEvent(e) {
    return !!ne(this, as, nf).call(this, e, null, !1);
  }
  /**
   *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,
   *  event name or event signature that belongs to the ABI.
   *
   *  If %%values%% is provided, it will use the Typed API to handle
   *  ambiguous cases where multiple events match by name.
   *
   *  If the %%key%% and %%values%% do not refine to a single event in
   *  the ABI, this will throw.
   */
  getEvent(e, n) {
    return ne(this, as, nf).call(this, e, n || null, !0);
  }
  /**
   *  Iterate over all events, calling %%callback%%, sorted by their name.
   */
  forEachEvent(e) {
    const n = Array.from(O(this, Zr).keys());
    n.sort((r, s) => r.localeCompare(s));
    for (let r = 0; r < n.length; r++) {
      const s = n[r];
      e(O(this, Zr).get(s), r);
    }
  }
  /**
   *  Get the [[ErrorFragment]] for %%key%%, which may be an error
   *  selector, error name or error signature that belongs to the ABI.
   *
   *  If %%values%% is provided, it will use the Typed API to handle
   *  ambiguous cases where multiple errors match by name.
   *
   *  If the %%key%% and %%values%% do not refine to a single error in
   *  the ABI, this will throw.
   */
  getError(e, n) {
    if (wt(e)) {
      const s = e.toLowerCase();
      if (j0[s])
        return Fn.from(j0[s].signature);
      for (const i of O(this, Qr).values())
        if (s === i.selector)
          return i;
      return null;
    }
    if (e.indexOf("(") === -1) {
      const s = [];
      for (const [i, o] of O(this, Qr))
        i.split(
          "("
          /* fix:) */
        )[0] === e && s.push(o);
      if (s.length === 0)
        return e === "Error" ? Fn.from("error Error(string)") : e === "Panic" ? Fn.from("error Panic(uint256)") : null;
      if (s.length > 1) {
        const i = s.map((o) => JSON.stringify(o.format())).join(", ");
        D(!1, `ambiguous error description (i.e. ${i})`, "name", e);
      }
      return s[0];
    }
    if (e = Fn.from(e).format(), e === "Error(string)")
      return Fn.from("error Error(string)");
    if (e === "Panic(uint256)")
      return Fn.from("error Panic(uint256)");
    const r = O(this, Qr).get(e);
    return r || null;
  }
  /**
   *  Iterate over all errors, calling %%callback%%, sorted by their name.
   */
  forEachError(e) {
    const n = Array.from(O(this, Qr).keys());
    n.sort((r, s) => r.localeCompare(s));
    for (let r = 0; r < n.length; r++) {
      const s = n[r];
      e(O(this, Qr).get(s), r);
    }
  }
  // Get the 4-byte selector used by Solidity to identify a function
  /*
  getSelector(fragment: ErrorFragment | FunctionFragment): string {
      if (typeof(fragment) === "string") {
          const matches: Array<Fragment> = [ ];
  
          try { matches.push(this.getFunction(fragment)); } catch (error) { }
          try { matches.push(this.getError(<string>fragment)); } catch (_) { }
  
          if (matches.length === 0) {
              logger.throwArgumentError("unknown fragment", "key", fragment);
          } else if (matches.length > 1) {
              logger.throwArgumentError("ambiguous fragment matches function and error", "key", fragment);
          }
  
          fragment = matches[0];
      }
  
      return dataSlice(id(fragment.format()), 0, 4);
  }
      */
  // Get the 32-byte topic hash used by Solidity to identify an event
  /*
  getEventTopic(fragment: EventFragment): string {
      //if (typeof(fragment) === "string") { fragment = this.getEvent(eventFragment); }
      return id(fragment.format());
  }
  */
  _decodeParams(e, n) {
    return O(this, dn).decode(e, n);
  }
  _encodeParams(e, n) {
    return O(this, dn).encode(e, n);
  }
  /**
   *  Encodes a ``tx.data`` object for deploying the Contract with
   *  the %%values%% as the constructor arguments.
   */
  encodeDeploy(e) {
    return this._encodeParams(this.deploy.inputs, e || []);
  }
  /**
   *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the
   *  specified error (see [[getError]] for valid values for
   *  %%key%%).
   *
   *  Most developers should prefer the [[parseCallResult]] method instead,
   *  which will automatically detect a ``CALL_EXCEPTION`` and throw the
   *  corresponding error.
   */
  decodeErrorResult(e, n) {
    if (typeof e == "string") {
      const r = this.getError(e);
      D(r, "unknown error", "fragment", e), e = r;
    }
    return D(Bt(n, 0, 4) === e.selector, `data signature does not match error ${e.name}.`, "data", n), this._decodeParams(e.inputs, Bt(n, 4));
  }
  /**
   *  Encodes the transaction revert data for a call result that
   *  reverted from the the Contract with the sepcified %%error%%
   *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.
   *
   *  This is generally not used by most developers, unless trying to mock
   *  a result from a Contract.
   */
  encodeErrorResult(e, n) {
    if (typeof e == "string") {
      const r = this.getError(e);
      D(r, "unknown error", "fragment", e), e = r;
    }
    return jt([
      e.selector,
      this._encodeParams(e.inputs, n || [])
    ]);
  }
  /**
   *  Decodes the %%data%% from a transaction ``tx.data`` for
   *  the function specified (see [[getFunction]] for valid values
   *  for %%fragment%%).
   *
   *  Most developers should prefer the [[parseTransaction]] method
   *  instead, which will automatically detect the fragment.
   */
  decodeFunctionData(e, n) {
    if (typeof e == "string") {
      const r = this.getFunction(e);
      D(r, "unknown function", "fragment", e), e = r;
    }
    return D(Bt(n, 0, 4) === e.selector, `data signature does not match function ${e.name}.`, "data", n), this._decodeParams(e.inputs, Bt(n, 4));
  }
  /**
   *  Encodes the ``tx.data`` for a transaction that calls the function
   *  specified (see [[getFunction]] for valid values for %%fragment%%) with
   *  the %%values%%.
   */
  encodeFunctionData(e, n) {
    if (typeof e == "string") {
      const r = this.getFunction(e);
      D(r, "unknown function", "fragment", e), e = r;
    }
    return jt([
      e.selector,
      this._encodeParams(e.inputs, n || [])
    ]);
  }
  /**
   *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the
   *  specified function (see [[getFunction]] for valid values for
   *  %%key%%).
   *
   *  Most developers should prefer the [[parseCallResult]] method instead,
   *  which will automatically detect a ``CALL_EXCEPTION`` and throw the
   *  corresponding error.
   */
  decodeFunctionResult(e, n) {
    if (typeof e == "string") {
      const i = this.getFunction(e);
      D(i, "unknown function", "fragment", e), e = i;
    }
    let r = "invalid length for result data";
    const s = On(n);
    if (s.length % 32 === 0)
      try {
        return O(this, dn).decode(e.outputs, s);
      } catch {
        r = "could not decode result data";
      }
    K(!1, r, "BAD_DATA", {
      value: ye(s),
      info: { method: e.name, signature: e.format() }
    });
  }
  makeError(e, n) {
    const r = st(e, "data"), s = iu.getBuiltinCallException("call", n, r);
    if (s.message.startsWith("execution reverted (unknown custom error)")) {
      const a = ye(r.slice(0, 4)), c = this.getError(a);
      if (c)
        try {
          const u = O(this, dn).decode(c.inputs, r.slice(4));
          s.revert = {
            name: c.name,
            signature: c.format(),
            args: u
          }, s.reason = s.revert.signature, s.message = `execution reverted: ${s.reason}`;
        } catch {
          s.message = "execution reverted (coult not decode custom error)";
        }
    }
    const o = this.parseTransaction(n);
    return o && (s.invocation = {
      method: o.name,
      signature: o.signature,
      args: o.args
    }), s;
  }
  /**
   *  Encodes the result data (e.g. from an ``eth_call``) for the
   *  specified function (see [[getFunction]] for valid values
   *  for %%fragment%%) with %%values%%.
   *
   *  This is generally not used by most developers, unless trying to mock
   *  a result from a Contract.
   */
  encodeFunctionResult(e, n) {
    if (typeof e == "string") {
      const r = this.getFunction(e);
      D(r, "unknown function", "fragment", e), e = r;
    }
    return ye(O(this, dn).encode(e.outputs, n || []));
  }
  /*
      spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {
          const promises: Array<Promise<>> = [ ];
          const process = function(type: ParamType, value: any): any {
              if (type.baseType === "array") {
                  return descend(type.child
              }
              if (type. === "address") {
              }
          };
  
          const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {
              if (inputs.length !== values.length) { throw new Error("length mismatch"); }
              
          };
  
          const result: Array<any> = [ ];
          values.forEach((value, index) => {
              if (value == null) {
                  topics.push(null);
              } else if (param.baseType === "array" || param.baseType === "tuple") {
                  logger.throwArgumentError("filtering with tuples or arrays not supported", ("contract." + param.name), value);
              } else if (Array.isArray(value)) {
                  topics.push(value.map((value) => encodeTopic(param, value)));
              } else {
                  topics.push(encodeTopic(param, value));
              }
          });
      }
  */
  // Create the filter for the event with search criteria (e.g. for eth_filterLog)
  encodeFilterTopics(e, n) {
    if (typeof e == "string") {
      const i = this.getEvent(e);
      D(i, "unknown event", "eventFragment", e), e = i;
    }
    K(n.length <= e.inputs.length, `too many arguments for ${e.format()}`, "UNEXPECTED_ARGUMENT", { count: n.length, expectedCount: e.inputs.length });
    const r = [];
    e.anonymous || r.push(e.topicHash);
    const s = (i, o) => i.type === "string" ? Vo(o) : i.type === "bytes" ? Wt(ye(o)) : (i.type === "bool" && typeof o == "boolean" ? o = o ? "0x01" : "0x00" : i.type.match(/^u?int/) ? o = Hi(o) : i.type.match(/^bytes/) ? o = AE(o, 32) : i.type === "address" && O(this, dn).encode(["address"], [o]), Go(ye(o), 32));
    for (n.forEach((i, o) => {
      const a = e.inputs[o];
      if (!a.indexed) {
        D(i == null, "cannot filter non-indexed parameters; must be null", "contract." + a.name, i);
        return;
      }
      i == null ? r.push(null) : a.baseType === "array" || a.baseType === "tuple" ? D(!1, "filtering with tuples or arrays not supported", "contract." + a.name, i) : Array.isArray(i) ? r.push(i.map((c) => s(a, c))) : r.push(s(a, i));
    }); r.length && r[r.length - 1] === null; )
      r.pop();
    return r;
  }
  encodeEventLog(e, n) {
    if (typeof e == "string") {
      const o = this.getEvent(e);
      D(o, "unknown event", "eventFragment", e), e = o;
    }
    const r = [], s = [], i = [];
    return e.anonymous || r.push(e.topicHash), D(n.length === e.inputs.length, "event arguments/values mismatch", "values", n), e.inputs.forEach((o, a) => {
      const c = n[a];
      if (o.indexed)
        if (o.type === "string")
          r.push(Vo(c));
        else if (o.type === "bytes")
          r.push(Wt(c));
        else {
          if (o.baseType === "tuple" || o.baseType === "array")
            throw new Error("not implemented");
          r.push(O(this, dn).encode([o.type], [c]));
        }
      else
        s.push(o), i.push(c);
    }), {
      data: O(this, dn).encode(s, i),
      topics: r
    };
  }
  // Decode a filter for the event and the search criteria
  decodeEventLog(e, n, r) {
    if (typeof e == "string") {
      const p = this.getEvent(e);
      D(p, "unknown event", "eventFragment", e), e = p;
    }
    if (r != null && !e.anonymous) {
      const p = e.topicHash;
      D(wt(r[0], 32) && r[0].toLowerCase() === p, "fragment/topic mismatch", "topics[0]", r[0]), r = r.slice(1);
    }
    const s = [], i = [], o = [];
    e.inputs.forEach((p, d) => {
      p.indexed ? p.type === "string" || p.type === "bytes" || p.baseType === "tuple" || p.baseType === "array" ? (s.push(fn.from({ type: "bytes32", name: p.name })), o.push(!0)) : (s.push(p), o.push(!1)) : (i.push(p), o.push(!1));
    });
    const a = r != null ? O(this, dn).decode(s, jt(r)) : null, c = O(this, dn).decode(i, n, !0), u = [], f = [];
    let l = 0, m = 0;
    return e.inputs.forEach((p, d) => {
      let h = null;
      if (p.indexed)
        if (a == null)
          h = new $0(null);
        else if (o[d])
          h = new $0(a[m++]);
        else
          try {
            h = a[m++];
          } catch (b) {
            h = b;
          }
      else
        try {
          h = c[l++];
        } catch (b) {
          h = b;
        }
      u.push(h), f.push(p.name || null);
    }), Ll.fromItems(u, f);
  }
  /**
   *  Parses a transaction, finding the matching function and extracts
   *  the parameter values along with other useful function details.
   *
   *  If the matching function cannot be found, return null.
   */
  parseTransaction(e) {
    const n = st(e.data, "tx.data"), r = _e(e.value != null ? e.value : 0, "tx.value"), s = this.getFunction(ye(n.slice(0, 4)));
    if (!s)
      return null;
    const i = O(this, dn).decode(s.inputs, n.slice(4));
    return new U7(s, s.selector, i, r);
  }
  parseCallResult(e) {
    throw new Error("@TODO");
  }
  /**
   *  Parses a receipt log, finding the matching event and extracts
   *  the parameter values along with other useful event details.
   *
   *  If the matching event cannot be found, returns null.
   */
  parseLog(e) {
    const n = this.getEvent(e.topics[0]);
    return !n || n.anonymous ? null : new $7(n, n.topicHash, this.decodeEventLog(n, e.data, e.topics));
  }
  /**
   *  Parses a revert data, finding the matching error and extracts
   *  the parameter values along with other useful error details.
   *
   *  If the matching error cannot be found, returns null.
   */
  parseError(e) {
    const n = ye(e), r = this.getError(Bt(n, 0, 4));
    if (!r)
      return null;
    const s = O(this, dn).decode(r.inputs, Bt(n, 4));
    return new j7(r, r.selector, s);
  }
  /**
   *  Creates a new [[Interface]] from the ABI %%value%%.
   *
   *  The %%value%% may be provided as an existing [[Interface]] object,
   *  a JSON-encoded ABI or any Human-Readable ABI format.
   */
  static from(e) {
    return e instanceof po ? e : typeof e == "string" ? new po(JSON.parse(e)) : typeof e.formatJson == "function" ? new po(e.formatJson()) : typeof e.format == "function" ? new po(e.format("json")) : new po(e);
  }
};
Qr = new WeakMap(), Zr = new WeakMap(), Jr = new WeakMap(), dn = new WeakMap(), as = new WeakSet(), // Find a function definition by any means necessary (unless it is ambiguous)
tf = function(e, n, r) {
  if (wt(e)) {
    const i = e.toLowerCase();
    for (const o of O(this, Jr).values())
      if (i === o.selector)
        return o;
    return null;
  }
  if (e.indexOf("(") === -1) {
    const i = [];
    for (const [o, a] of O(this, Jr))
      o.split(
        "("
        /* fix:) */
      )[0] === e && i.push(a);
    if (n) {
      const o = n.length > 0 ? n[n.length - 1] : null;
      let a = n.length, c = !0;
      gn.isTyped(o) && o.type === "overrides" && (c = !1, a--);
      for (let u = i.length - 1; u >= 0; u--) {
        const f = i[u].inputs.length;
        f !== a && (!c || f !== a - 1) && i.splice(u, 1);
      }
      for (let u = i.length - 1; u >= 0; u--) {
        const f = i[u].inputs;
        for (let l = 0; l < n.length; l++)
          if (gn.isTyped(n[l])) {
            if (l >= f.length) {
              if (n[l].type === "overrides")
                continue;
              i.splice(u, 1);
              break;
            }
            if (n[l].type !== f[l].baseType) {
              i.splice(u, 1);
              break;
            }
          }
      }
    }
    if (i.length === 1 && n && n.length !== i[0].inputs.length) {
      const o = n[n.length - 1];
      (o == null || Array.isArray(o) || typeof o != "object") && i.splice(0, 1);
    }
    if (i.length === 0)
      return null;
    if (i.length > 1 && r) {
      const o = i.map((a) => JSON.stringify(a.format())).join(", ");
      D(!1, `ambiguous function description (i.e. matches ${o})`, "key", e);
    }
    return i[0];
  }
  const s = O(this, Jr).get(ts.from(e).format());
  return s || null;
}, // Find an event definition by any means necessary (unless it is ambiguous)
nf = function(e, n, r) {
  if (wt(e)) {
    const i = e.toLowerCase();
    for (const o of O(this, Zr).values())
      if (i === o.topicHash)
        return o;
    return null;
  }
  if (e.indexOf("(") === -1) {
    const i = [];
    for (const [o, a] of O(this, Zr))
      o.split(
        "("
        /* fix:) */
      )[0] === e && i.push(a);
    if (n) {
      for (let o = i.length - 1; o >= 0; o--)
        i[o].inputs.length < n.length && i.splice(o, 1);
      for (let o = i.length - 1; o >= 0; o--) {
        const a = i[o].inputs;
        for (let c = 0; c < n.length; c++)
          if (gn.isTyped(n[c]) && n[c].type !== a[c].baseType) {
            i.splice(o, 1);
            break;
          }
      }
    }
    if (i.length === 0)
      return null;
    if (i.length > 1 && r) {
      const o = i.map((a) => JSON.stringify(a.format())).join(", ");
      D(!1, `ambiguous event description (i.e. matches ${o})`, "key", e);
    }
    return i[0];
  }
  const s = O(this, Zr).get(es.from(e).format());
  return s || null;
};
let Qd = po;
const Iw = BigInt(0);
function Ma(t) {
  return t ?? null;
}
function Dt(t) {
  return t == null ? null : t.toString();
}
class F0 {
  /**
   *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and
   *  %%maxPriorityFeePerGas%%.
   */
  constructor(e, n, r) {
    /**
     *  The gas price for legacy networks.
     */
    j(this, "gasPrice");
    /**
     *  The maximum fee to pay per gas.
     *
     *  The base fee per gas is defined by the network and based on
     *  congestion, increasing the cost during times of heavy load
     *  and lowering when less busy.
     *
     *  The actual fee per gas will be the base fee for the block
     *  and the priority fee, up to the max fee per gas.
     *
     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))
     */
    j(this, "maxFeePerGas");
    /**
     *  The additional amout to pay per gas to encourage a validator
     *  to include the transaction.
     *
     *  The purpose of this is to compensate the validator for the
     *  adjusted risk for including a given transaction.
     *
     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))
     */
    j(this, "maxPriorityFeePerGas");
    ke(this, {
      gasPrice: Ma(e),
      maxFeePerGas: Ma(n),
      maxPriorityFeePerGas: Ma(r)
    });
  }
  /**
   *  Returns a JSON-friendly value.
   */
  toJSON() {
    const { gasPrice: e, maxFeePerGas: n, maxPriorityFeePerGas: r } = this;
    return {
      _type: "FeeData",
      gasPrice: Dt(e),
      maxFeePerGas: Dt(n),
      maxPriorityFeePerGas: Dt(r)
    };
  }
}
function Df(t) {
  const e = {};
  t.to && (e.to = t.to), t.from && (e.from = t.from), t.data && (e.data = ye(t.data));
  const n = "chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value".split(/,/);
  for (const s of n)
    !(s in t) || t[s] == null || (e[s] = _e(t[s], `request.${s}`));
  const r = "type,nonce".split(/,/);
  for (const s of r)
    !(s in t) || t[s] == null || (e[s] = Be(t[s], `request.${s}`));
  return t.accessList && (e.accessList = Yo(t.accessList)), "blockTag" in t && (e.blockTag = t.blockTag), "enableCcipRead" in t && (e.enableCcipRead = !!t.enableCcipRead), "customData" in t && (e.customData = t.customData), "blobVersionedHashes" in t && t.blobVersionedHashes && (e.blobVersionedHashes = t.blobVersionedHashes.slice()), "kzg" in t && (e.kzg = t.kzg), "blobs" in t && t.blobs && (e.blobs = t.blobs.map((s) => nm(s) ? ye(s) : Object.assign({}, s))), e;
}
var Bs;
class F7 {
  /**
   *  Create a new **Block** object.
   *
   *  This should generally not be necessary as the unless implementing a
   *  low-level library.
   */
  constructor(e, n) {
    /**
     *  The provider connected to the block used to fetch additional details
     *  if necessary.
     */
    j(this, "provider");
    /**
     *  The block number, sometimes called the block height. This is a
     *  sequential number that is one higher than the parent block.
     */
    j(this, "number");
    /**
     *  The block hash.
     *
     *  This hash includes all properties, so can be safely used to identify
     *  an exact set of block properties.
     */
    j(this, "hash");
    /**
     *  The timestamp for this block, which is the number of seconds since
     *  epoch that this block was included.
     */
    j(this, "timestamp");
    /**
     *  The block hash of the parent block.
     */
    j(this, "parentHash");
    /**
     *  The hash tree root of the parent beacon block for the given
     *  execution block. See [[link-eip-4788]].
     */
    j(this, "parentBeaconBlockRoot");
    /**
     *  The nonce.
     *
     *  On legacy networks, this is the random number inserted which
     *  permitted the difficulty target to be reached.
     */
    j(this, "nonce");
    /**
     *  The difficulty target.
     *
     *  On legacy networks, this is the proof-of-work target required
     *  for a block to meet the protocol rules to be included.
     *
     *  On modern networks, this is a random number arrived at using
     *  randao.  @TODO: Find links?
     */
    j(this, "difficulty");
    /**
     *  The total gas limit for this block.
     */
    j(this, "gasLimit");
    /**
     *  The total gas used in this block.
     */
    j(this, "gasUsed");
    /**
     *  The root hash for the global state after applying changes
     *  in this block.
     */
    j(this, "stateRoot");
    /**
     *  The hash of the transaction receipts trie.
     */
    j(this, "receiptsRoot");
    /**
     *  The total amount of blob gas consumed by the transactions
     *  within the block. See [[link-eip-4844]].
     */
    j(this, "blobGasUsed");
    /**
     *  The running total of blob gas consumed in excess of the
     *  target, prior to the block. See [[link-eip-4844]].
     */
    j(this, "excessBlobGas");
    /**
     *  The miner coinbase address, wihch receives any subsidies for
     *  including this block.
     */
    j(this, "miner");
    /**
     *  The latest RANDAO mix of the post beacon state of
     *  the previous block.
     */
    j(this, "prevRandao");
    /**
     *  Any extra data the validator wished to include.
     */
    j(this, "extraData");
    /**
     *  The base fee per gas that all transactions in this block were
     *  charged.
     *
     *  This adjusts after each block, depending on how congested the network
     *  is.
     */
    j(this, "baseFeePerGas");
    z(this, Bs);
    R(this, Bs, e.transactions.map((r) => typeof r != "string" ? new ou(r, n) : r)), ke(this, {
      provider: n,
      hash: Ma(e.hash),
      number: e.number,
      timestamp: e.timestamp,
      parentHash: e.parentHash,
      parentBeaconBlockRoot: e.parentBeaconBlockRoot,
      nonce: e.nonce,
      difficulty: e.difficulty,
      gasLimit: e.gasLimit,
      gasUsed: e.gasUsed,
      blobGasUsed: e.blobGasUsed,
      excessBlobGas: e.excessBlobGas,
      miner: e.miner,
      prevRandao: Ma(e.prevRandao),
      extraData: e.extraData,
      baseFeePerGas: Ma(e.baseFeePerGas),
      stateRoot: e.stateRoot,
      receiptsRoot: e.receiptsRoot
    });
  }
  /**
   *  Returns the list of transaction hashes, in the order
   *  they were executed within the block.
   */
  get transactions() {
    return O(this, Bs).map((e) => typeof e == "string" ? e : e.hash);
  }
  /**
   *  Returns the complete transactions, in the order they
   *  were executed within the block.
   *
   *  This is only available for blocks which prefetched
   *  transactions, by passing ``true`` to %%prefetchTxs%%
   *  into [[Provider-getBlock]].
   */
  get prefetchedTransactions() {
    const e = O(this, Bs).slice();
    return e.length === 0 ? [] : (K(typeof e[0] == "object", "transactions were not prefetched with block request", "UNSUPPORTED_OPERATION", {
      operation: "transactionResponses()"
    }), e);
  }
  /**
   *  Returns a JSON-friendly value.
   */
  toJSON() {
    const { baseFeePerGas: e, difficulty: n, extraData: r, gasLimit: s, gasUsed: i, hash: o, miner: a, prevRandao: c, nonce: u, number: f, parentHash: l, parentBeaconBlockRoot: m, stateRoot: p, receiptsRoot: d, timestamp: h, transactions: b } = this;
    return {
      _type: "Block",
      baseFeePerGas: Dt(e),
      difficulty: Dt(n),
      extraData: r,
      gasLimit: Dt(s),
      gasUsed: Dt(i),
      blobGasUsed: Dt(this.blobGasUsed),
      excessBlobGas: Dt(this.excessBlobGas),
      hash: o,
      miner: a,
      prevRandao: c,
      nonce: u,
      number: f,
      parentHash: l,
      timestamp: h,
      parentBeaconBlockRoot: m,
      stateRoot: p,
      receiptsRoot: d,
      transactions: b
    };
  }
  [Symbol.iterator]() {
    let e = 0;
    const n = this.transactions;
    return {
      next: () => e < this.length ? {
        value: n[e++],
        done: !1
      } : { value: void 0, done: !0 }
    };
  }
  /**
   *  The number of transactions in this block.
   */
  get length() {
    return O(this, Bs).length;
  }
  /**
   *  The [[link-js-date]] this block was included at.
   */
  get date() {
    return this.timestamp == null ? null : new Date(this.timestamp * 1e3);
  }
  /**
   *  Get the transaction at %%indexe%% within this block.
   */
  async getTransaction(e) {
    let n;
    if (typeof e == "number")
      n = O(this, Bs)[e];
    else {
      const r = e.toLowerCase();
      for (const s of O(this, Bs))
        if (typeof s == "string") {
          if (s !== r)
            continue;
          n = s;
          break;
        } else {
          if (s.hash === r)
            continue;
          n = s;
          break;
        }
    }
    if (n == null)
      throw new Error("no such tx");
    return typeof n == "string" ? await this.provider.getTransaction(n) : n;
  }
  /**
   *  If a **Block** was fetched with a request to include the transactions
   *  this will allow synchronous access to those transactions.
   *
   *  If the transactions were not prefetched, this will throw.
   */
  getPrefetchedTransaction(e) {
    const n = this.prefetchedTransactions;
    if (typeof e == "number")
      return n[e];
    e = e.toLowerCase();
    for (const r of n)
      if (r.hash === e)
        return r;
    D(!1, "no matching transaction", "indexOrHash", e);
  }
  /**
   *  Returns true if this block been mined. This provides a type guard
   *  for all properties on a [[MinedBlock]].
   */
  isMined() {
    return !!this.hash;
  }
  /**
   *  Returns true if this block is an [[link-eip-2930]] block.
   */
  isLondon() {
    return !!this.baseFeePerGas;
  }
  /**
   *  @_ignore:
   */
  orphanedEvent() {
    if (!this.isMined())
      throw new Error("");
    return H7(this);
  }
}
Bs = new WeakMap();
class Su {
  /**
   *  @_ignore:
   */
  constructor(e, n) {
    /**
     *  The provider connected to the log used to fetch additional details
     *  if necessary.
     */
    j(this, "provider");
    /**
     *  The transaction hash of the transaction this log occurred in. Use the
     *  [[Log-getTransaction]] to get the [[TransactionResponse]].
     */
    j(this, "transactionHash");
    /**
     *  The block hash of the block this log occurred in. Use the
     *  [[Log-getBlock]] to get the [[Block]].
     */
    j(this, "blockHash");
    /**
     *  The block number of the block this log occurred in. It is preferred
     *  to use the [[Block-hash]] when fetching the related [[Block]],
     *  since in the case of an orphaned block, the block at that height may
     *  have changed.
     */
    j(this, "blockNumber");
    /**
     *  If the **Log** represents a block that was removed due to an orphaned
     *  block, this will be true.
     *
     *  This can only happen within an orphan event listener.
     */
    j(this, "removed");
    /**
     *  The address of the contract that emitted this log.
     */
    j(this, "address");
    /**
     *  The data included in this log when it was emitted.
     */
    j(this, "data");
    /**
     *  The indexed topics included in this log when it was emitted.
     *
     *  All topics are included in the bloom filters, so they can be
     *  efficiently filtered using the [[Provider-getLogs]] method.
     */
    j(this, "topics");
    /**
     *  The index within the block this log occurred at. This is generally
     *  not useful to developers, but can be used with the various roots
     *  to proof inclusion within a block.
     */
    j(this, "index");
    /**
     *  The index within the transaction of this log.
     */
    j(this, "transactionIndex");
    this.provider = n;
    const r = Object.freeze(e.topics.slice());
    ke(this, {
      transactionHash: e.transactionHash,
      blockHash: e.blockHash,
      blockNumber: e.blockNumber,
      removed: e.removed,
      address: e.address,
      data: e.data,
      topics: r,
      index: e.index,
      transactionIndex: e.transactionIndex
    });
  }
  /**
   *  Returns a JSON-compatible object.
   */
  toJSON() {
    const { address: e, blockHash: n, blockNumber: r, data: s, index: i, removed: o, topics: a, transactionHash: c, transactionIndex: u } = this;
    return {
      _type: "log",
      address: e,
      blockHash: n,
      blockNumber: r,
      data: s,
      index: i,
      removed: o,
      topics: a,
      transactionHash: c,
      transactionIndex: u
    };
  }
  /**
   *  Returns the block that this log occurred in.
   */
  async getBlock() {
    const e = await this.provider.getBlock(this.blockHash);
    return K(!!e, "failed to find transaction", "UNKNOWN_ERROR", {}), e;
  }
  /**
   *  Returns the transaction that this log occurred in.
   */
  async getTransaction() {
    const e = await this.provider.getTransaction(this.transactionHash);
    return K(!!e, "failed to find transaction", "UNKNOWN_ERROR", {}), e;
  }
  /**
   *  Returns the transaction receipt fot the transaction that this
   *  log occurred in.
   */
  async getTransactionReceipt() {
    const e = await this.provider.getTransactionReceipt(this.transactionHash);
    return K(!!e, "failed to find transaction receipt", "UNKNOWN_ERROR", {}), e;
  }
  /**
   *  @_ignore:
   */
  removedEvent() {
    return W7(this);
  }
}
var hu;
class Nw {
  /**
   *  @_ignore:
   */
  constructor(e, n) {
    /**
     *  The provider connected to the log used to fetch additional details
     *  if necessary.
     */
    j(this, "provider");
    /**
     *  The address the transaction was sent to.
     */
    j(this, "to");
    /**
     *  The sender of the transaction.
     */
    j(this, "from");
    /**
     *  The address of the contract if the transaction was directly
     *  responsible for deploying one.
     *
     *  This is non-null **only** if the ``to`` is empty and the ``data``
     *  was successfully executed as initcode.
     */
    j(this, "contractAddress");
    /**
     *  The transaction hash.
     */
    j(this, "hash");
    /**
     *  The index of this transaction within the block transactions.
     */
    j(this, "index");
    /**
     *  The block hash of the [[Block]] this transaction was included in.
     */
    j(this, "blockHash");
    /**
     *  The block number of the [[Block]] this transaction was included in.
     */
    j(this, "blockNumber");
    /**
     *  The bloom filter bytes that represent all logs that occurred within
     *  this transaction. This is generally not useful for most developers,
     *  but can be used to validate the included logs.
     */
    j(this, "logsBloom");
    /**
     *  The actual amount of gas used by this transaction.
     *
     *  When creating a transaction, the amount of gas that will be used can
     *  only be approximated, but the sender must pay the gas fee for the
     *  entire gas limit. After the transaction, the difference is refunded.
     */
    j(this, "gasUsed");
    /**
     *  The gas used for BLObs. See [[link-eip-4844]].
     */
    j(this, "blobGasUsed");
    /**
     *  The amount of gas used by all transactions within the block for this
     *  and all transactions with a lower ``index``.
     *
     *  This is generally not useful for developers but can be used to
     *  validate certain aspects of execution.
     */
    j(this, "cumulativeGasUsed");
    /**
     *  The actual gas price used during execution.
     *
     *  Due to the complexity of [[link-eip-1559]] this value can only
     *  be caluclated after the transaction has been mined, snce the base
     *  fee is protocol-enforced.
     */
    j(this, "gasPrice");
    /**
     *  The price paid per BLOB in gas. See [[link-eip-4844]].
     */
    j(this, "blobGasPrice");
    /**
     *  The [[link-eip-2718]] transaction type.
     */
    j(this, "type");
    //readonly byzantium!: boolean;
    /**
     *  The status of this transaction, indicating success (i.e. ``1``) or
     *  a revert (i.e. ``0``).
     *
     *  This is available in post-byzantium blocks, but some backends may
     *  backfill this value.
     */
    j(this, "status");
    /**
     *  The root hash of this transaction.
     *
     *  This is no present and was only included in pre-byzantium blocks, but
     *  could be used to validate certain parts of the receipt.
     */
    j(this, "root");
    z(this, hu);
    R(this, hu, Object.freeze(e.logs.map((s) => new Su(s, n))));
    let r = Iw;
    e.effectiveGasPrice != null ? r = e.effectiveGasPrice : e.gasPrice != null && (r = e.gasPrice), ke(this, {
      provider: n,
      to: e.to,
      from: e.from,
      contractAddress: e.contractAddress,
      hash: e.hash,
      index: e.index,
      blockHash: e.blockHash,
      blockNumber: e.blockNumber,
      logsBloom: e.logsBloom,
      gasUsed: e.gasUsed,
      cumulativeGasUsed: e.cumulativeGasUsed,
      blobGasUsed: e.blobGasUsed,
      gasPrice: r,
      blobGasPrice: e.blobGasPrice,
      type: e.type,
      //byzantium: tx.byzantium,
      status: e.status,
      root: e.root
    });
  }
  /**
   *  The logs for this transaction.
   */
  get logs() {
    return O(this, hu);
  }
  /**
   *  Returns a JSON-compatible representation.
   */
  toJSON() {
    const {
      to: e,
      from: n,
      contractAddress: r,
      hash: s,
      index: i,
      blockHash: o,
      blockNumber: a,
      logsBloom: c,
      logs: u,
      //byzantium, 
      status: f,
      root: l
    } = this;
    return {
      _type: "TransactionReceipt",
      blockHash: o,
      blockNumber: a,
      //byzantium, 
      contractAddress: r,
      cumulativeGasUsed: Dt(this.cumulativeGasUsed),
      from: n,
      gasPrice: Dt(this.gasPrice),
      blobGasUsed: Dt(this.blobGasUsed),
      blobGasPrice: Dt(this.blobGasPrice),
      gasUsed: Dt(this.gasUsed),
      hash: s,
      index: i,
      logs: u,
      logsBloom: c,
      root: l,
      status: f,
      to: e
    };
  }
  /**
   *  @_ignore:
   */
  get length() {
    return this.logs.length;
  }
  [Symbol.iterator]() {
    let e = 0;
    return {
      next: () => e < this.length ? { value: this.logs[e++], done: !1 } : { value: void 0, done: !0 }
    };
  }
  /**
   *  The total fee for this transaction, in wei.
   */
  get fee() {
    return this.gasUsed * this.gasPrice;
  }
  /**
   *  Resolves to the block this transaction occurred in.
   */
  async getBlock() {
    const e = await this.provider.getBlock(this.blockHash);
    if (e == null)
      throw new Error("TODO");
    return e;
  }
  /**
   *  Resolves to the transaction this transaction occurred in.
   */
  async getTransaction() {
    const e = await this.provider.getTransaction(this.hash);
    if (e == null)
      throw new Error("TODO");
    return e;
  }
  /**
   *  Resolves to the return value of the execution of this transaction.
   *
   *  Support for this feature is limited, as it requires an archive node
   *  with the ``debug_`` or ``trace_`` API enabled.
   */
  async getResult() {
    return await this.provider.getTransactionResult(this.hash);
  }
  /**
   *  Resolves to the number of confirmations this transaction has.
   */
  async confirmations() {
    return await this.provider.getBlockNumber() - this.blockNumber + 1;
  }
  /**
   *  @_ignore:
   */
  removedEvent() {
    return Rw(this);
  }
  /**
   *  @_ignore:
   */
  reorderedEvent(e) {
    return K(!e || e.isMined(), "unmined 'other' transction cannot be orphaned", "UNSUPPORTED_OPERATION", { operation: "reorderedEvent(other)" }), Pw(this, e);
  }
}
hu = new WeakMap();
var xi;
const bm = class bm {
  /**
   *  @_ignore:
   */
  constructor(e, n) {
    /**
     *  The provider this is connected to, which will influence how its
     *  methods will resolve its async inspection methods.
     */
    j(this, "provider");
    /**
     *  The block number of the block that this transaction was included in.
     *
     *  This is ``null`` for pending transactions.
     */
    j(this, "blockNumber");
    /**
     *  The blockHash of the block that this transaction was included in.
     *
     *  This is ``null`` for pending transactions.
     */
    j(this, "blockHash");
    /**
     *  The index within the block that this transaction resides at.
     */
    j(this, "index");
    /**
     *  The transaction hash.
     */
    j(this, "hash");
    /**
     *  The [[link-eip-2718]] transaction envelope type. This is
     *  ``0`` for legacy transactions types.
     */
    j(this, "type");
    /**
     *  The receiver of this transaction.
     *
     *  If ``null``, then the transaction is an initcode transaction.
     *  This means the result of executing the [[data]] will be deployed
     *  as a new contract on chain (assuming it does not revert) and the
     *  address may be computed using [[getCreateAddress]].
     */
    j(this, "to");
    /**
     *  The sender of this transaction. It is implicitly computed
     *  from the transaction pre-image hash (as the digest) and the
     *  [[signature]] using ecrecover.
     */
    j(this, "from");
    /**
     *  The nonce, which is used to prevent replay attacks and offer
     *  a method to ensure transactions from a given sender are explicitly
     *  ordered.
     *
     *  When sending a transaction, this must be equal to the number of
     *  transactions ever sent by [[from]].
     */
    j(this, "nonce");
    /**
     *  The maximum units of gas this transaction can consume. If execution
     *  exceeds this, the entries transaction is reverted and the sender
     *  is charged for the full amount, despite not state changes being made.
     */
    j(this, "gasLimit");
    /**
     *  The gas price can have various values, depending on the network.
     *
     *  In modern networks, for transactions that are included this is
     *  the //effective gas price// (the fee per gas that was actually
     *  charged), while for transactions that have not been included yet
     *  is the [[maxFeePerGas]].
     *
     *  For legacy transactions, or transactions on legacy networks, this
     *  is the fee that will be charged per unit of gas the transaction
     *  consumes.
     */
    j(this, "gasPrice");
    /**
     *  The maximum priority fee (per unit of gas) to allow a
     *  validator to charge the sender. This is inclusive of the
     *  [[maxFeeFeePerGas]].
     */
    j(this, "maxPriorityFeePerGas");
    /**
     *  The maximum fee (per unit of gas) to allow this transaction
     *  to charge the sender.
     */
    j(this, "maxFeePerGas");
    /**
     *  The [[link-eip-4844]] max fee per BLOb gas.
     */
    j(this, "maxFeePerBlobGas");
    /**
     *  The data.
     */
    j(this, "data");
    /**
     *  The value, in wei. Use [[formatEther]] to format this value
     *  as ether.
     */
    j(this, "value");
    /**
     *  The chain ID.
     */
    j(this, "chainId");
    /**
     *  The signature.
     */
    j(this, "signature");
    /**
     *  The [[link-eip-2930]] access list for transaction types that
     *  support it, otherwise ``null``.
     */
    j(this, "accessList");
    /**
     *  The [[link-eip-4844]] BLOb versioned hashes.
     */
    j(this, "blobVersionedHashes");
    z(this, xi);
    this.provider = n, this.blockNumber = e.blockNumber != null ? e.blockNumber : null, this.blockHash = e.blockHash != null ? e.blockHash : null, this.hash = e.hash, this.index = e.index, this.type = e.type, this.from = e.from, this.to = e.to || null, this.gasLimit = e.gasLimit, this.nonce = e.nonce, this.data = e.data, this.value = e.value, this.gasPrice = e.gasPrice, this.maxPriorityFeePerGas = e.maxPriorityFeePerGas != null ? e.maxPriorityFeePerGas : null, this.maxFeePerGas = e.maxFeePerGas != null ? e.maxFeePerGas : null, this.maxFeePerBlobGas = e.maxFeePerBlobGas != null ? e.maxFeePerBlobGas : null, this.chainId = e.chainId, this.signature = e.signature, this.accessList = e.accessList != null ? e.accessList : null, this.blobVersionedHashes = e.blobVersionedHashes != null ? e.blobVersionedHashes : null, R(this, xi, -1);
  }
  /**
   *  Returns a JSON-compatible representation of this transaction.
   */
  toJSON() {
    const { blockNumber: e, blockHash: n, index: r, hash: s, type: i, to: o, from: a, nonce: c, data: u, signature: f, accessList: l, blobVersionedHashes: m } = this;
    return {
      _type: "TransactionResponse",
      accessList: l,
      blockNumber: e,
      blockHash: n,
      blobVersionedHashes: m,
      chainId: Dt(this.chainId),
      data: u,
      from: a,
      gasLimit: Dt(this.gasLimit),
      gasPrice: Dt(this.gasPrice),
      hash: s,
      maxFeePerGas: Dt(this.maxFeePerGas),
      maxPriorityFeePerGas: Dt(this.maxPriorityFeePerGas),
      maxFeePerBlobGas: Dt(this.maxFeePerBlobGas),
      nonce: c,
      signature: f,
      to: o,
      index: r,
      type: i,
      value: Dt(this.value)
    };
  }
  /**
   *  Resolves to the Block that this transaction was included in.
   *
   *  This will return null if the transaction has not been included yet.
   */
  async getBlock() {
    let e = this.blockNumber;
    if (e == null) {
      const r = await this.getTransaction();
      r && (e = r.blockNumber);
    }
    if (e == null)
      return null;
    const n = this.provider.getBlock(e);
    if (n == null)
      throw new Error("TODO");
    return n;
  }
  /**
   *  Resolves to this transaction being re-requested from the
   *  provider. This can be used if you have an unmined transaction
   *  and wish to get an up-to-date populated instance.
   */
  async getTransaction() {
    return this.provider.getTransaction(this.hash);
  }
  /**
   *  Resolve to the number of confirmations this transaction has.
   */
  async confirmations() {
    if (this.blockNumber == null) {
      const { tx: n, blockNumber: r } = await Sn({
        tx: this.getTransaction(),
        blockNumber: this.provider.getBlockNumber()
      });
      return n == null || n.blockNumber == null ? 0 : r - n.blockNumber + 1;
    }
    return await this.provider.getBlockNumber() - this.blockNumber + 1;
  }
  /**
   *  Resolves once this transaction has been mined and has
   *  %%confirms%% blocks including it (default: ``1``) with an
   *  optional %%timeout%%.
   *
   *  This can resolve to ``null`` only if %%confirms%% is ``0``
   *  and the transaction has not been mined, otherwise this will
   *  wait until enough confirmations have completed.
   */
  async wait(e, n) {
    const r = e ?? 1, s = n ?? 0;
    let i = O(this, xi), o = -1, a = i === -1;
    const c = async () => {
      if (a)
        return null;
      const { blockNumber: m, nonce: p } = await Sn({
        blockNumber: this.provider.getBlockNumber(),
        nonce: this.provider.getTransactionCount(this.from)
      });
      if (p < this.nonce) {
        i = m;
        return;
      }
      if (a)
        return null;
      const d = await this.getTransaction();
      if (!(d && d.blockNumber != null))
        for (o === -1 && (o = i - 3, o < O(this, xi) && (o = O(this, xi))); o <= m; ) {
          if (a)
            return null;
          const h = await this.provider.getBlock(o, !0);
          if (h == null)
            return;
          for (const b of h)
            if (b === this.hash)
              return;
          for (let b = 0; b < h.length; b++) {
            const g = await h.getTransaction(b);
            if (g.from === this.from && g.nonce === this.nonce) {
              if (a)
                return null;
              const y = await this.provider.getTransactionReceipt(g.hash);
              if (y == null || m - y.blockNumber + 1 < r)
                return;
              let w = "replaced";
              g.data === this.data && g.to === this.to && g.value === this.value ? w = "repriced" : g.data === "0x" && g.from === g.to && g.value === Iw && (w = "cancelled"), K(!1, "transaction was replaced", "TRANSACTION_REPLACED", {
                cancelled: w === "replaced" || w === "cancelled",
                reason: w,
                replacement: g.replaceableTransaction(i),
                hash: g.hash,
                receipt: y
              });
            }
          }
          o++;
        }
    }, u = (m) => {
      if (m == null || m.status !== 0)
        return m;
      K(!1, "transaction execution reverted", "CALL_EXCEPTION", {
        action: "sendTransaction",
        data: null,
        reason: null,
        invocation: null,
        revert: null,
        transaction: {
          to: m.to,
          from: m.from,
          data: ""
          // @TODO: in v7, split out sendTransaction properties
        },
        receipt: m
      });
    }, f = await this.provider.getTransactionReceipt(this.hash);
    if (r === 0)
      return u(f);
    if (f) {
      if (await f.confirmations() >= r)
        return u(f);
    } else if (await c(), r === 0)
      return null;
    return await new Promise((m, p) => {
      const d = [], h = () => {
        d.forEach((g) => g());
      };
      if (d.push(() => {
        a = !0;
      }), s > 0) {
        const g = setTimeout(() => {
          h(), p(Rt("wait for transaction timeout", "TIMEOUT"));
        }, s);
        d.push(() => {
          clearTimeout(g);
        });
      }
      const b = async (g) => {
        if (await g.confirmations() >= r) {
          h();
          try {
            m(u(g));
          } catch (y) {
            p(y);
          }
        }
      };
      if (d.push(() => {
        this.provider.off(this.hash, b);
      }), this.provider.on(this.hash, b), i >= 0) {
        const g = async () => {
          try {
            await c();
          } catch (y) {
            if (un(y, "TRANSACTION_REPLACED")) {
              h(), p(y);
              return;
            }
          }
          a || this.provider.once("block", g);
        };
        d.push(() => {
          this.provider.off("block", g);
        }), this.provider.once("block", g);
      }
    });
  }
  /**
   *  Returns ``true`` if this transaction has been included.
   *
   *  This is effective only as of the time the TransactionResponse
   *  was instantiated. To get up-to-date information, use
   *  [[getTransaction]].
   *
   *  This provides a Type Guard that this transaction will have
   *  non-null property values for properties that are null for
   *  unmined transactions.
   */
  isMined() {
    return this.blockHash != null;
  }
  /**
   *  Returns true if the transaction is a legacy (i.e. ``type == 0``)
   *  transaction.
   *
   *  This provides a Type Guard that this transaction will have
   *  the ``null``-ness for hardfork-specific properties set correctly.
   */
  isLegacy() {
    return this.type === 0;
  }
  /**
   *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)
   *  transaction. See [[link-eip-2070]].
   *
   *  This provides a Type Guard that this transaction will have
   *  the ``null``-ness for hardfork-specific properties set correctly.
   */
  isBerlin() {
    return this.type === 1;
  }
  /**
   *  Returns true if the transaction is a London (i.e. ``type == 2``)
   *  transaction. See [[link-eip-1559]].
   *
   *  This provides a Type Guard that this transaction will have
   *  the ``null``-ness for hardfork-specific properties set correctly.
   */
  isLondon() {
    return this.type === 2;
  }
  /**
   *  Returns true if hte transaction is a Cancun (i.e. ``type == 3``)
   *  transaction. See [[link-eip-4844]].
   */
  isCancun() {
    return this.type === 3;
  }
  /**
   *  Returns a filter which can be used to listen for orphan events
   *  that evict this transaction.
   */
  removedEvent() {
    return K(this.isMined(), "unmined transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" }), Rw(this);
  }
  /**
   *  Returns a filter which can be used to listen for orphan events
   *  that re-order this event against %%other%%.
   */
  reorderedEvent(e) {
    return K(this.isMined(), "unmined transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" }), K(!e || e.isMined(), "unmined 'other' transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" }), Pw(this, e);
  }
  /**
   *  Returns a new TransactionResponse instance which has the ability to
   *  detect (and throw an error) if the transaction is replaced, which
   *  will begin scanning at %%startBlock%%.
   *
   *  This should generally not be used by developers and is intended
   *  primarily for internal use. Setting an incorrect %%startBlock%% can
   *  have devastating performance consequences if used incorrectly.
   */
  replaceableTransaction(e) {
    D(Number.isInteger(e) && e >= 0, "invalid startBlock", "startBlock", e);
    const n = new bm(this, this.provider);
    return R(n, xi, e), n;
  }
};
xi = new WeakMap();
let ou = bm;
function H7(t) {
  return { orphan: "drop-block", hash: t.hash, number: t.number };
}
function Pw(t, e) {
  return { orphan: "reorder-transaction", tx: t, other: e };
}
function Rw(t) {
  return { orphan: "drop-transaction", tx: t };
}
function W7(t) {
  return { orphan: "drop-log", log: {
    transactionHash: t.transactionHash,
    blockHash: t.blockHash,
    blockNumber: t.blockNumber,
    address: t.address,
    data: t.data,
    topics: Object.freeze(t.topics.slice()),
    index: t.index
  } };
}
class um extends Su {
  /**
   * @_ignore:
   */
  constructor(n, r, s) {
    super(n, n.provider);
    /**
     *  The Contract Interface.
     */
    j(this, "interface");
    /**
     *  The matching event.
     */
    j(this, "fragment");
    /**
     *  The parsed arguments passed to the event by ``emit``.
     */
    j(this, "args");
    const i = r.decodeEventLog(s, n.data, n.topics);
    ke(this, { args: i, fragment: s, interface: r });
  }
  /**
   *  The name of the event.
   */
  get eventName() {
    return this.fragment.name;
  }
  /**
   *  The signature of the event.
   */
  get eventSignature() {
    return this.fragment.format();
  }
}
class Bw extends Su {
  /**
   * @_ignore:
   */
  constructor(n, r) {
    super(n, n.provider);
    /**
     *  The error encounted when trying to decode the log.
     */
    j(this, "error");
    ke(this, { error: r });
  }
}
var ll;
class G7 extends Nw {
  /**
   *  @_ignore:
   */
  constructor(n, r, s) {
    super(s, r);
    z(this, ll);
    R(this, ll, n);
  }
  /**
   *  The parsed logs for any [[Log]] which has a matching event in the
   *  Contract ABI.
   */
  get logs() {
    return super.logs.map((n) => {
      const r = n.topics.length ? O(this, ll).getEvent(n.topics[0]) : null;
      if (r)
        try {
          return new um(n, O(this, ll), r);
        } catch (s) {
          return new Bw(n, s);
        }
      return n;
    });
  }
}
ll = new WeakMap();
var du;
class fm extends ou {
  /**
   *  @_ignore:
   */
  constructor(n, r, s) {
    super(s, r);
    z(this, du);
    R(this, du, n);
  }
  /**
   *  Resolves once this transaction has been mined and has
   *  %%confirms%% blocks including it (default: ``1``) with an
   *  optional %%timeout%%.
   *
   *  This can resolve to ``null`` only if %%confirms%% is ``0``
   *  and the transaction has not been mined, otherwise this will
   *  wait until enough confirmations have completed.
   */
  async wait(n, r) {
    const s = await super.wait(n, r);
    return s == null ? null : new G7(O(this, du), this.provider, s);
  }
}
du = new WeakMap();
class Lw extends Iy {
  /**
   *  @_event:
   */
  constructor(n, r, s, i) {
    super(n, r, s);
    /**
     *  The log with no matching events.
     */
    j(this, "log");
    ke(this, { log: i });
  }
  /**
   *  Resolves to the block the event occured in.
   */
  async getBlock() {
    return await this.log.getBlock();
  }
  /**
   *  Resolves to the transaction the event occured in.
   */
  async getTransaction() {
    return await this.log.getTransaction();
  }
  /**
   *  Resolves to the transaction receipt the event occured in.
   */
  async getTransactionReceipt() {
    return await this.log.getTransactionReceipt();
  }
}
class z7 extends Lw {
  /**
   *  @_ignore:
   */
  constructor(e, n, r, s, i) {
    super(e, n, r, new um(i, e.interface, s));
    const o = e.interface.decodeEventLog(s, this.log.data, this.log.topics);
    ke(this, { args: o, fragment: s });
  }
  /**
   *  The event name.
   */
  get eventName() {
    return this.fragment.name;
  }
  /**
   *  The event signature.
   */
  get eventSignature() {
    return this.fragment.format();
  }
}
const H0 = BigInt(0);
function Mw(t) {
  return t && typeof t.call == "function";
}
function Dw(t) {
  return t && typeof t.estimateGas == "function";
}
function bh(t) {
  return t && typeof t.resolveName == "function";
}
function $w(t) {
  return t && typeof t.sendTransaction == "function";
}
function Uw(t) {
  if (t != null) {
    if (bh(t))
      return t;
    if (t.provider)
      return t.provider;
  }
}
var pu;
class V7 {
  constructor(e, n, r) {
    z(this, pu);
    j(this, "fragment");
    if (ke(this, { fragment: n }), n.inputs.length < r.length)
      throw new Error("too many arguments");
    const s = Zo(e.runner, "resolveName"), i = bh(s) ? s : null;
    R(this, pu, async function() {
      const o = await Promise.all(n.inputs.map((a, c) => r[c] == null ? null : a.walkAsync(r[c], (f, l) => f === "address" ? Array.isArray(l) ? Promise.all(l.map((m) => Pn(m, i))) : Pn(l, i) : l)));
      return e.interface.encodeFilterTopics(n, o);
    }());
  }
  getTopicFilter() {
    return O(this, pu);
  }
}
pu = new WeakMap();
function Zo(t, e) {
  return t == null ? null : typeof t[e] == "function" ? t : t.provider && typeof t.provider[e] == "function" ? t.provider : null;
}
function yo(t) {
  return t == null ? null : t.provider || null;
}
async function jw(t, e) {
  const n = gn.dereference(t, "overrides");
  D(typeof n == "object", "invalid overrides parameter", "overrides", t);
  const r = Df(n);
  return D(r.to == null || (e || []).indexOf("to") >= 0, "cannot override to", "overrides.to", r.to), D(r.data == null || (e || []).indexOf("data") >= 0, "cannot override data", "overrides.data", r.data), r.from && (r.from = r.from), r;
}
async function q7(t, e, n) {
  const r = Zo(t, "resolveName"), s = bh(r) ? r : null;
  return await Promise.all(e.map((i, o) => i.walkAsync(n[o], (a, c) => (c = gn.dereference(c, a), a === "address" ? Pn(c, s) : c))));
}
function Q7(t) {
  const e = async function(o) {
    const a = await jw(o, ["data"]);
    a.to = await t.getAddress(), a.from && (a.from = await Pn(a.from, Uw(t.runner)));
    const c = t.interface, u = _e(a.value || H0, "overrides.value") === H0, f = (a.data || "0x") === "0x";
    c.fallback && !c.fallback.payable && c.receive && !f && !u && D(!1, "cannot send data to receive or send value to non-payable fallback", "overrides", o), D(c.fallback || f, "cannot send data to receive-only contract", "overrides.data", a.data);
    const l = c.receive || c.fallback && c.fallback.payable;
    return D(l || u, "cannot send value to non-payable fallback", "overrides.value", a.value), D(c.fallback || f, "cannot send data to receive-only contract", "overrides.data", a.data), a;
  }, n = async function(o) {
    const a = Zo(t.runner, "call");
    K(Mw(a), "contract runner does not support calling", "UNSUPPORTED_OPERATION", { operation: "call" });
    const c = await e(o);
    try {
      return await a.call(c);
    } catch (u) {
      throw tm(u) && u.data ? t.interface.makeError(u.data, c) : u;
    }
  }, r = async function(o) {
    const a = t.runner;
    K($w(a), "contract runner does not support sending transactions", "UNSUPPORTED_OPERATION", { operation: "sendTransaction" });
    const c = await a.sendTransaction(await e(o)), u = yo(t.runner);
    return new fm(t.interface, u, c);
  }, s = async function(o) {
    const a = Zo(t.runner, "estimateGas");
    return K(Dw(a), "contract runner does not support gas estimation", "UNSUPPORTED_OPERATION", { operation: "estimateGas" }), await a.estimateGas(await e(o));
  }, i = async (o) => await r(o);
  return ke(i, {
    _contract: t,
    estimateGas: s,
    populateTransaction: e,
    send: r,
    staticCall: n
  }), i;
}
function Z7(t, e) {
  const n = function(...u) {
    const f = t.interface.getFunction(e, u);
    return K(f, "no matching fragment", "UNSUPPORTED_OPERATION", {
      operation: "fragment",
      info: { key: e, args: u }
    }), f;
  }, r = async function(...u) {
    const f = n(...u);
    let l = {};
    if (f.inputs.length + 1 === u.length && (l = await jw(u.pop()), l.from && (l.from = await Pn(l.from, Uw(t.runner)))), f.inputs.length !== u.length)
      throw new Error("internal error: fragment inputs doesn't match arguments; should not happen");
    const m = await q7(t.runner, f.inputs, u);
    return Object.assign({}, l, await Sn({
      to: t.getAddress(),
      data: t.interface.encodeFunctionData(f, m)
    }));
  }, s = async function(...u) {
    const f = await a(...u);
    return f.length === 1 ? f[0] : f;
  }, i = async function(...u) {
    const f = t.runner;
    K($w(f), "contract runner does not support sending transactions", "UNSUPPORTED_OPERATION", { operation: "sendTransaction" });
    const l = await f.sendTransaction(await r(...u)), m = yo(t.runner);
    return new fm(t.interface, m, l);
  }, o = async function(...u) {
    const f = Zo(t.runner, "estimateGas");
    return K(Dw(f), "contract runner does not support gas estimation", "UNSUPPORTED_OPERATION", { operation: "estimateGas" }), await f.estimateGas(await r(...u));
  }, a = async function(...u) {
    const f = Zo(t.runner, "call");
    K(Mw(f), "contract runner does not support calling", "UNSUPPORTED_OPERATION", { operation: "call" });
    const l = await r(...u);
    let m = "0x";
    try {
      m = await f.call(l);
    } catch (d) {
      throw tm(d) && d.data ? t.interface.makeError(d.data, l) : d;
    }
    const p = n(...u);
    return t.interface.decodeFunctionResult(p, m);
  }, c = async (...u) => n(...u).constant ? await s(...u) : await i(...u);
  return ke(c, {
    name: t.interface.getFunctionName(e),
    _contract: t,
    _key: e,
    getFragment: n,
    estimateGas: o,
    populateTransaction: r,
    send: i,
    staticCall: s,
    staticCallResult: a
  }), Object.defineProperty(c, "fragment", {
    configurable: !1,
    enumerable: !0,
    get: () => {
      const u = t.interface.getFunction(e);
      return K(u, "no matching fragment", "UNSUPPORTED_OPERATION", {
        operation: "fragment",
        info: { key: e }
      }), u;
    }
  }), c;
}
function J7(t, e) {
  const n = function(...s) {
    const i = t.interface.getEvent(e, s);
    return K(i, "no matching fragment", "UNSUPPORTED_OPERATION", {
      operation: "fragment",
      info: { key: e, args: s }
    }), i;
  }, r = function(...s) {
    return new V7(t, n(...s), s);
  };
  return ke(r, {
    name: t.interface.getEventName(e),
    _contract: t,
    _key: e,
    getFragment: n
  }), Object.defineProperty(r, "fragment", {
    configurable: !1,
    enumerable: !0,
    get: () => {
      const s = t.interface.getEvent(e);
      return K(s, "no matching fragment", "UNSUPPORTED_OPERATION", {
        operation: "fragment",
        info: { key: e }
      }), s;
    }
  }), r;
}
const $f = Symbol.for("_ethersInternal_contract"), Fw = /* @__PURE__ */ new WeakMap();
function K7(t, e) {
  Fw.set(t[$f], e);
}
function Xn(t) {
  return Fw.get(t[$f]);
}
function Y7(t) {
  return t && typeof t == "object" && "getTopicFilter" in t && typeof t.getTopicFilter == "function" && t.fragment;
}
async function hm(t, e) {
  let n, r = null;
  if (Array.isArray(e)) {
    const i = function(o) {
      if (wt(o, 32))
        return o;
      const a = t.interface.getEvent(o);
      return D(a, "unknown fragment", "name", o), a.topicHash;
    };
    n = e.map((o) => o == null ? null : Array.isArray(o) ? o.map(i) : i(o));
  } else e === "*" ? n = [null] : typeof e == "string" ? wt(e, 32) ? n = [e] : (r = t.interface.getEvent(e), D(r, "unknown fragment", "event", e), n = [r.topicHash]) : Y7(e) ? n = await e.getTopicFilter() : "fragment" in e ? (r = e.fragment, n = [r.topicHash]) : D(!1, "unknown event name", "event", e);
  n = n.map((i) => {
    if (i == null)
      return null;
    if (Array.isArray(i)) {
      const o = Array.from(new Set(i.map((a) => a.toLowerCase())).values());
      return o.length === 1 ? o[0] : (o.sort(), o);
    }
    return i.toLowerCase();
  });
  const s = n.map((i) => i == null ? "null" : Array.isArray(i) ? i.join("|") : i).join("&");
  return { fragment: r, tag: s, topics: n };
}
async function Bc(t, e) {
  const { subs: n } = Xn(t);
  return n.get((await hm(t, e)).tag) || null;
}
async function W0(t, e, n) {
  const r = yo(t.runner);
  K(r, "contract runner does not support subscribing", "UNSUPPORTED_OPERATION", { operation: e });
  const { fragment: s, tag: i, topics: o } = await hm(t, n), { addr: a, subs: c } = Xn(t);
  let u = c.get(i);
  if (!u) {
    const l = { address: a || t, topics: o }, m = (b) => {
      let g = s;
      if (g == null)
        try {
          g = t.interface.getEvent(b.topics[0]);
        } catch {
        }
      if (g) {
        const y = g, w = s ? t.interface.decodeEventLog(s, b.data, b.topics) : [];
        Jd(t, n, w, (_) => new z7(t, _, n, y, b));
      } else
        Jd(t, n, [], (y) => new Lw(t, y, n, b));
    };
    let p = [];
    u = { tag: i, listeners: [], start: () => {
      p.length || p.push(r.on(l, m));
    }, stop: async () => {
      if (p.length == 0)
        return;
      let b = p;
      p = [], await Promise.all(b), r.off(l, m);
    } }, c.set(i, u);
  }
  return u;
}
let Zd = Promise.resolve();
async function X7(t, e, n, r) {
  await Zd;
  const s = await Bc(t, e);
  if (!s)
    return !1;
  const i = s.listeners.length;
  return s.listeners = s.listeners.filter(({ listener: o, once: a }) => {
    const c = Array.from(n);
    r && c.push(r(a ? null : o));
    try {
      o.call(t, ...c);
    } catch {
    }
    return !a;
  }), s.listeners.length === 0 && (s.stop(), Xn(t).subs.delete(s.tag)), i > 0;
}
async function Jd(t, e, n, r) {
  try {
    await Zd;
  } catch {
  }
  const s = X7(t, e, n, r);
  return Zd = s, await s;
}
const Fu = ["then"];
var i1;
i1 = $f;
const Hc = class Hc {
  /**
   *  Creates a new contract connected to %%target%% with the %%abi%% and
   *  optionally connected to a %%runner%% to perform operations on behalf
   *  of.
   */
  constructor(e, n, r, s) {
    /**
     *  The target to connect to.
     *
     *  This can be an address, ENS name or any [[Addressable]], such as
     *  another contract. To get the resovled address, use the ``getAddress``
     *  method.
     */
    j(this, "target");
    /**
     *  The contract Interface.
     */
    j(this, "interface");
    /**
     *  The connected runner. This is generally a [[Provider]] or a
     *  [[Signer]], which dictates what operations are supported.
     *
     *  For example, a **Contract** connected to a [[Provider]] may
     *  only execute read-only operations.
     */
    j(this, "runner");
    /**
     *  All the Events available on this contract.
     */
    j(this, "filters");
    /**
     *  @_ignore:
     */
    j(this, i1);
    /**
     *  The fallback or receive function if any.
     */
    j(this, "fallback");
    D(typeof e == "string" || qy(e), "invalid value for Contract target", "target", e), r == null && (r = null);
    const i = Qd.from(n);
    ke(this, { target: e, runner: r, interface: i }), Object.defineProperty(this, $f, { value: {} });
    let o, a = null, c = null;
    if (s) {
      const l = yo(r);
      c = new fm(this.interface, l, s);
    }
    let u = /* @__PURE__ */ new Map();
    if (typeof e == "string")
      if (wt(e))
        a = e, o = Promise.resolve(e);
      else {
        const l = Zo(r, "resolveName");
        if (!bh(l))
          throw Rt("contract runner does not support name resolution", "UNSUPPORTED_OPERATION", {
            operation: "resolveName"
          });
        o = l.resolveName(e).then((m) => {
          if (m == null)
            throw Rt("an ENS name used for a contract target must be correctly configured", "UNCONFIGURED_NAME", {
              value: e
            });
          return Xn(this).addr = m, m;
        });
      }
    else
      o = e.getAddress().then((l) => {
        if (l == null)
          throw new Error("TODO");
        return Xn(this).addr = l, l;
      });
    K7(this, { addrPromise: o, addr: a, deployTx: c, subs: u });
    const f = new Proxy({}, {
      get: (l, m, p) => {
        if (typeof m == "symbol" || Fu.indexOf(m) >= 0)
          return Reflect.get(l, m, p);
        try {
          return this.getEvent(m);
        } catch (d) {
          if (!un(d, "INVALID_ARGUMENT") || d.argument !== "key")
            throw d;
        }
      },
      has: (l, m) => Fu.indexOf(m) >= 0 ? Reflect.has(l, m) : Reflect.has(l, m) || this.interface.hasEvent(String(m))
    });
    return ke(this, { filters: f }), ke(this, {
      fallback: i.receive || i.fallback ? Q7(this) : null
    }), new Proxy(this, {
      get: (l, m, p) => {
        if (typeof m == "symbol" || m in l || Fu.indexOf(m) >= 0)
          return Reflect.get(l, m, p);
        try {
          return l.getFunction(m);
        } catch (d) {
          if (!un(d, "INVALID_ARGUMENT") || d.argument !== "key")
            throw d;
        }
      },
      has: (l, m) => typeof m == "symbol" || m in l || Fu.indexOf(m) >= 0 ? Reflect.has(l, m) : l.interface.hasFunction(m)
    });
  }
  /**
   *  Return a new Contract instance with the same target and ABI, but
   *  a different %%runner%%.
   */
  connect(e) {
    return new Hc(this.target, this.interface, e);
  }
  /**
   *  Return a new Contract instance with the same ABI and runner, but
   *  a different %%target%%.
   */
  attach(e) {
    return new Hc(e, this.interface, this.runner);
  }
  /**
   *  Return the resolved address of this Contract.
   */
  async getAddress() {
    return await Xn(this).addrPromise;
  }
  /**
   *  Return the deployed bytecode or null if no bytecode is found.
   */
  async getDeployedCode() {
    const e = yo(this.runner);
    K(e, "runner does not support .provider", "UNSUPPORTED_OPERATION", { operation: "getDeployedCode" });
    const n = await e.getCode(await this.getAddress());
    return n === "0x" ? null : n;
  }
  /**
   *  Resolve to this Contract once the bytecode has been deployed, or
   *  resolve immediately if already deployed.
   */
  async waitForDeployment() {
    const e = this.deploymentTransaction();
    if (e)
      return await e.wait(), this;
    if (await this.getDeployedCode() != null)
      return this;
    const r = yo(this.runner);
    return K(r != null, "contract runner does not support .provider", "UNSUPPORTED_OPERATION", { operation: "waitForDeployment" }), new Promise((s, i) => {
      const o = async () => {
        try {
          if (await this.getDeployedCode() != null)
            return s(this);
          r.once("block", o);
        } catch (a) {
          i(a);
        }
      };
      o();
    });
  }
  /**
   *  Return the transaction used to deploy this contract.
   *
   *  This is only available if this instance was returned from a
   *  [[ContractFactory]].
   */
  deploymentTransaction() {
    return Xn(this).deployTx;
  }
  /**
   *  Return the function for a given name. This is useful when a contract
   *  method name conflicts with a JavaScript name such as ``prototype`` or
   *  when using a Contract programatically.
   */
  getFunction(e) {
    return typeof e != "string" && (e = e.format()), Z7(this, e);
  }
  /**
   *  Return the event for a given name. This is useful when a contract
   *  event name conflicts with a JavaScript name such as ``prototype`` or
   *  when using a Contract programatically.
   */
  getEvent(e) {
    return typeof e != "string" && (e = e.format()), J7(this, e);
  }
  /**
   *  @_ignore:
   */
  async queryTransaction(e) {
    throw new Error("@TODO");
  }
  /*
      // @TODO: this is a non-backwards compatible change, but will be added
      //        in v7 and in a potential SmartContract class in an upcoming
      //        v6 release
      async getTransactionReceipt(hash: string): Promise<null | ContractTransactionReceipt> {
          const provider = getProvider(this.runner);
          assert(provider, "contract runner does not have a provider",
              "UNSUPPORTED_OPERATION", { operation: "queryTransaction" });
  
          const receipt = await provider.getTransactionReceipt(hash);
          if (receipt == null) { return null; }
  
          return new ContractTransactionReceipt(this.interface, provider, receipt);
      }
      */
  /**
   *  Provide historic access to event data for %%event%% in the range
   *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``"latest"``)
   *  inclusive.
   */
  async queryFilter(e, n, r) {
    n == null && (n = 0), r == null && (r = "latest");
    const { addr: s, addrPromise: i } = Xn(this), o = s || await i, { fragment: a, topics: c } = await hm(this, e), u = { address: o, topics: c, fromBlock: n, toBlock: r }, f = yo(this.runner);
    return K(f, "contract runner does not have a provider", "UNSUPPORTED_OPERATION", { operation: "queryFilter" }), (await f.getLogs(u)).map((l) => {
      let m = a;
      if (m == null)
        try {
          m = this.interface.getEvent(l.topics[0]);
        } catch {
        }
      if (m)
        try {
          return new um(l, this.interface, m);
        } catch (p) {
          return new Bw(l, p);
        }
      return new Su(l, f);
    });
  }
  /**
   *  Add an event %%listener%% for the %%event%%.
   */
  async on(e, n) {
    const r = await W0(this, "on", e);
    return r.listeners.push({ listener: n, once: !1 }), r.start(), this;
  }
  /**
   *  Add an event %%listener%% for the %%event%%, but remove the listener
   *  after it is fired once.
   */
  async once(e, n) {
    const r = await W0(this, "once", e);
    return r.listeners.push({ listener: n, once: !0 }), r.start(), this;
  }
  /**
   *  Emit an %%event%% calling all listeners with %%args%%.
   *
   *  Resolves to ``true`` if any listeners were called.
   */
  async emit(e, ...n) {
    return await Jd(this, e, n, null);
  }
  /**
   *  Resolves to the number of listeners of %%event%% or the total number
   *  of listeners if unspecified.
   */
  async listenerCount(e) {
    if (e) {
      const s = await Bc(this, e);
      return s ? s.listeners.length : 0;
    }
    const { subs: n } = Xn(this);
    let r = 0;
    for (const { listeners: s } of n.values())
      r += s.length;
    return r;
  }
  /**
   *  Resolves to the listeners subscribed to %%event%% or all listeners
   *  if unspecified.
   */
  async listeners(e) {
    if (e) {
      const s = await Bc(this, e);
      return s ? s.listeners.map(({ listener: i }) => i) : [];
    }
    const { subs: n } = Xn(this);
    let r = [];
    for (const { listeners: s } of n.values())
      r = r.concat(s.map(({ listener: i }) => i));
    return r;
  }
  /**
   *  Remove the %%listener%% from the listeners for %%event%% or remove
   *  all listeners if unspecified.
   */
  async off(e, n) {
    const r = await Bc(this, e);
    if (!r)
      return this;
    if (n) {
      const s = r.listeners.map(({ listener: i }) => i).indexOf(n);
      s >= 0 && r.listeners.splice(s, 1);
    }
    return (n == null || r.listeners.length === 0) && (r.stop(), Xn(this).subs.delete(r.tag)), this;
  }
  /**
   *  Remove all the listeners for %%event%% or remove all listeners if
   *  unspecified.
   */
  async removeAllListeners(e) {
    if (e) {
      const n = await Bc(this, e);
      if (!n)
        return this;
      n.stop(), Xn(this).subs.delete(n.tag);
    } else {
      const { subs: n } = Xn(this);
      for (const { tag: r, stop: s } of n.values())
        s(), n.delete(r);
    }
    return this;
  }
  /**
   *  Alias for [on].
   */
  async addListener(e, n) {
    return await this.on(e, n);
  }
  /**
   *  Alias for [off].
   */
  async removeListener(e, n) {
    return await this.off(e, n);
  }
  /**
   *  Create a new Class for the %%abi%%.
   */
  static buildClass(e) {
    class n extends Hc {
      constructor(s, i = null) {
        super(s, e, i);
      }
    }
    return n;
  }
  /**
   *  Create a new BaseContract with a specified Interface.
   */
  static from(e, n, r) {
    return r == null && (r = null), new this(e, n, r);
  }
};
let Kd = Hc;
function ex() {
  return Kd;
}
class $i extends ex() {
}
function nd(t) {
  return t.match(/^ipfs:\/\/ipfs\//i) ? t = t.substring(12) : t.match(/^ipfs:\/\//i) ? t = t.substring(7) : D(!1, "unsupported IPFS format", "link", t), `https://gateway.ipfs.io/ipfs/${t}`;
}
class tx {
  /**
   *  Creates a new **MulticoinProviderPluing** for %%name%%.
   */
  constructor(e) {
    /**
     *  The name.
     */
    j(this, "name");
    ke(this, { name: e });
  }
  connect(e) {
    return this;
  }
  /**
   *  Returns ``true`` if %%coinType%% is supported by this plugin.
   */
  supportsCoinType(e) {
    return !1;
  }
  /**
   *  Resolves to the encoded %%address%% for %%coinType%%.
   */
  async encodeAddress(e, n) {
    throw new Error("unsupported coin");
  }
  /**
   *  Resolves to the decoded %%data%% for %%coinType%%.
   */
  async decodeAddress(e, n) {
    throw new Error("unsupported coin");
  }
}
const Hw = new RegExp("^(ipfs)://(.*)$", "i"), G0 = [
  new RegExp("^(https)://(.*)$", "i"),
  new RegExp("^(data):(.*)$", "i"),
  Hw,
  new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")
];
var Ci, No, ki, va, Gf, Ww;
const Sa = class Sa {
  constructor(e, n, r) {
    z(this, ki);
    /**
     *  The connected provider.
     */
    j(this, "provider");
    /**
     *  The address of the resolver.
     */
    j(this, "address");
    /**
     *  The name this resolver was resolved against.
     */
    j(this, "name");
    // For EIP-2544 names, the ancestor that provided the resolver
    z(this, Ci);
    z(this, No);
    ke(this, { provider: e, address: n, name: r }), R(this, Ci, null), R(this, No, new $i(n, [
      "function supportsInterface(bytes4) view returns (bool)",
      "function resolve(bytes, bytes) view returns (bytes)",
      "function addr(bytes32) view returns (address)",
      "function addr(bytes32, uint) view returns (bytes)",
      "function text(bytes32, string) view returns (string)",
      "function contenthash(bytes32) view returns (bytes)"
    ], e));
  }
  /**
   *  Resolves to true if the resolver supports wildcard resolution.
   */
  async supportsWildcard() {
    return O(this, Ci) == null && R(this, Ci, (async () => {
      try {
        return await O(this, No).supportsInterface("0x9061b923");
      } catch (e) {
        if (un(e, "CALL_EXCEPTION"))
          return !1;
        throw R(this, Ci, null), e;
      }
    })()), await O(this, Ci);
  }
  /**
   *  Resolves to the address for %%coinType%% or null if the
   *  provided %%coinType%% has not been configured.
   */
  async getAddress(e) {
    if (e == null && (e = 60), e === 60)
      try {
        const i = await ne(this, ki, va).call(this, "addr(bytes32)");
        return i == null || i === Yc ? null : i;
      } catch (i) {
        if (un(i, "CALL_EXCEPTION"))
          return null;
        throw i;
      }
    if (e >= 0 && e < 2147483648) {
      let i = e + 2147483648;
      const o = await ne(this, ki, va).call(this, "addr(bytes32,uint)", [i]);
      if (wt(o, 20))
        return gt(o);
    }
    let n = null;
    for (const i of this.provider.plugins)
      if (i instanceof tx && i.supportsCoinType(e)) {
        n = i;
        break;
      }
    if (n == null)
      return null;
    const r = await ne(this, ki, va).call(this, "addr(bytes32,uint)", [e]);
    if (r == null || r === "0x")
      return null;
    const s = await n.decodeAddress(e, r);
    if (s != null)
      return s;
    K(!1, "invalid coin data", "UNSUPPORTED_OPERATION", {
      operation: `getAddress(${e})`,
      info: { coinType: e, data: r }
    });
  }
  /**
   *  Resolves to the EIP-634 text record for %%key%%, or ``null``
   *  if unconfigured.
   */
  async getText(e) {
    const n = await ne(this, ki, va).call(this, "text(bytes32,string)", [e]);
    return n == null || n === "0x" ? null : n;
  }
  /**
   *  Rsolves to the content-hash or ``null`` if unconfigured.
   */
  async getContentHash() {
    const e = await ne(this, ki, va).call(this, "contenthash(bytes32)");
    if (e == null || e === "0x")
      return null;
    const n = e.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
    if (n) {
      const s = n[1] === "e3010170" ? "ipfs" : "ipns", i = parseInt(n[4], 16);
      if (n[5].length === i * 2)
        return `${s}://${xE("0x" + n[2])}`;
    }
    const r = e.match(/^0xe40101fa011b20([0-9a-f]*)$/);
    if (r && r[1].length === 64)
      return `bzz://${r[1]}`;
    K(!1, "invalid or unsupported content hash data", "UNSUPPORTED_OPERATION", {
      operation: "getContentHash()",
      info: { data: e }
    });
  }
  /**
   *  Resolves to the avatar url or ``null`` if the avatar is either
   *  unconfigured or incorrectly configured (e.g. references an NFT
   *  not owned by the address).
   *
   *  If diagnosing issues with configurations, the [[_getAvatar]]
   *  method may be useful.
   */
  async getAvatar() {
    return (await this._getAvatar()).url;
  }
  /**
   *  When resolving an avatar, there are many steps involved, such
   *  fetching metadata and possibly validating ownership of an
   *  NFT.
   *
   *  This method can be used to examine each step and the value it
   *  was working from.
   */
  async _getAvatar() {
    const e = [{ type: "name", value: this.name }];
    try {
      const n = await this.getText("avatar");
      if (n == null)
        return e.push({ type: "!avatar", value: "" }), { url: null, linkage: e };
      e.push({ type: "avatar", value: n });
      for (let r = 0; r < G0.length; r++) {
        const s = n.match(G0[r]);
        if (s == null)
          continue;
        const i = s[1].toLowerCase();
        switch (i) {
          case "https":
          case "data":
            return e.push({ type: "url", value: n }), { linkage: e, url: n };
          case "ipfs": {
            const o = nd(n);
            return e.push({ type: "ipfs", value: n }), e.push({ type: "url", value: o }), { linkage: e, url: o };
          }
          case "erc721":
          case "erc1155": {
            const o = i === "erc721" ? "tokenURI(uint256)" : "uri(uint256)";
            e.push({ type: i, value: n });
            const a = await this.getAddress();
            if (a == null)
              return e.push({ type: "!owner", value: "" }), { url: null, linkage: e };
            const c = (s[2] || "").split("/");
            if (c.length !== 2)
              return e.push({ type: `!${i}caip`, value: s[2] || "" }), { url: null, linkage: e };
            const u = c[1], f = new $i(c[0], [
              // ERC-721
              "function tokenURI(uint) view returns (string)",
              "function ownerOf(uint) view returns (address)",
              // ERC-1155
              "function uri(uint) view returns (string)",
              "function balanceOf(address, uint256) view returns (uint)"
            ], this.provider);
            if (i === "erc721") {
              const h = await f.ownerOf(u);
              if (a !== h)
                return e.push({ type: "!owner", value: h }), { url: null, linkage: e };
              e.push({ type: "owner", value: h });
            } else if (i === "erc1155") {
              const h = await f.balanceOf(a, u);
              if (!h)
                return e.push({ type: "!balance", value: "0" }), { url: null, linkage: e };
              e.push({ type: "balance", value: h.toString() });
            }
            let l = await f[o](u);
            if (l == null || l === "0x")
              return e.push({ type: "!metadata-url", value: "" }), { url: null, linkage: e };
            e.push({ type: "metadata-url-base", value: l }), i === "erc1155" && (l = l.replace("{id}", Hi(u, 32).substring(2)), e.push({ type: "metadata-url-expanded", value: l })), l.match(/^ipfs:/i) && (l = nd(l)), e.push({ type: "metadata-url", value: l });
            let m = {};
            const p = await new zs(l).send();
            p.assertOk();
            try {
              m = p.bodyJson;
            } catch {
              try {
                e.push({ type: "!metadata", value: p.bodyText });
              } catch {
                const g = p.body;
                return g && e.push({ type: "!metadata", value: ye(g) }), { url: null, linkage: e };
              }
              return { url: null, linkage: e };
            }
            if (!m)
              return e.push({ type: "!metadata", value: "" }), { url: null, linkage: e };
            e.push({ type: "metadata", value: JSON.stringify(m) });
            let d = m.image;
            if (typeof d != "string")
              return e.push({ type: "!imageUrl", value: "" }), { url: null, linkage: e };
            if (!d.match(/^(https:\/\/|data:)/i)) {
              if (d.match(Hw) == null)
                return e.push({ type: "!imageUrl-ipfs", value: d }), { url: null, linkage: e };
              e.push({ type: "imageUrl-ipfs", value: d }), d = nd(d);
            }
            return e.push({ type: "url", value: d }), { linkage: e, url: d };
          }
        }
      }
    } catch {
    }
    return { linkage: e, url: null };
  }
  static async getEnsAddress(e) {
    const n = await e.getNetwork(), r = n.getPlugin("org.ethers.plugins.network.Ens");
    return K(r, "network does not support ENS", "UNSUPPORTED_OPERATION", {
      operation: "getEnsAddress",
      info: { network: n }
    }), r.address;
  }
  /**
   *  Resolve to the ENS resolver for %%name%% using %%provider%% or
   *  ``null`` if unconfigured.
   */
  static async fromName(e, n) {
    var s;
    let r = n;
    for (; ; ) {
      if (r === "" || r === "." || n !== "eth" && r === "eth")
        return null;
      const i = await ne(s = Sa, Gf, Ww).call(s, e, r);
      if (i != null) {
        const o = new Sa(e, i, n);
        return r !== n && !await o.supportsWildcard() ? null : o;
      }
      r = r.split(".").slice(1).join(".");
    }
  }
};
Ci = new WeakMap(), No = new WeakMap(), ki = new WeakSet(), va = async function(e, n) {
  n = (n || []).slice();
  const r = O(this, No).interface;
  n.unshift(Vd(this.name));
  let s = null;
  await this.supportsWildcard() && (s = r.getFunction(e), K(s, "missing fragment", "UNKNOWN_ERROR", {
    info: { funcName: e }
  }), n = [
    e7(this.name, 255),
    r.encodeFunctionData(s, n)
  ], e = "resolve(bytes,bytes)"), n.push({
    enableCcipRead: !0
  });
  try {
    const i = await O(this, No)[e](...n);
    return s ? r.decodeFunctionResult(s, i)[0] : i;
  } catch (i) {
    if (!un(i, "CALL_EXCEPTION"))
      throw i;
  }
  return null;
}, Gf = new WeakSet(), Ww = async function(e, n) {
  const r = await Sa.getEnsAddress(e);
  try {
    const i = await new $i(r, [
      "function resolver(bytes32) view returns (address)"
    ], e).resolver(Vd(n), {
      enableCcipRead: !0
    });
    return i === Yc ? null : i;
  } catch (s) {
    throw s;
  }
  return null;
}, z(Sa, Gf);
let Uf = Sa;
const z0 = BigInt(0);
function rt(t, e) {
  return function(n) {
    return n == null ? e : t(n);
  };
}
function yh(t, e) {
  return (n) => {
    if (e && n == null)
      return null;
    if (!Array.isArray(n))
      throw new Error("not an array");
    return n.map((r) => t(r));
  };
}
function Ou(t, e) {
  return (n) => {
    const r = {};
    for (const s in t) {
      let i = s;
      if (e && s in e && !(i in n)) {
        for (const o of e[s])
          if (o in n) {
            i = o;
            break;
          }
      }
      try {
        const o = t[s](n[i]);
        o !== void 0 && (r[s] = o);
      } catch (o) {
        const a = o instanceof Error ? o.message : "not-an-error";
        K(!1, `invalid value for value.${s} (${a})`, "BAD_DATA", { value: n });
      }
    }
    return r;
  };
}
function nx(t) {
  switch (t) {
    case !0:
    case "true":
      return !0;
    case !1:
    case "false":
      return !1;
  }
  D(!1, `invalid boolean; ${JSON.stringify(t)}`, "value", t);
}
function $l(t) {
  return D(wt(t, !0), "invalid data", "value", t), t;
}
function cn(t) {
  return D(wt(t, 32), "invalid hash", "value", t), t;
}
const rx = Ou({
  address: gt,
  blockHash: cn,
  blockNumber: Be,
  data: $l,
  index: Be,
  removed: rt(nx, !1),
  topics: yh(cn),
  transactionHash: cn,
  transactionIndex: Be
}, {
  index: ["logIndex"]
});
function sx(t) {
  return rx(t);
}
const ix = Ou({
  hash: rt(cn),
  parentHash: cn,
  parentBeaconBlockRoot: rt(cn, null),
  number: Be,
  timestamp: Be,
  nonce: rt($l),
  difficulty: _e,
  gasLimit: _e,
  gasUsed: _e,
  stateRoot: rt(cn, null),
  receiptsRoot: rt(cn, null),
  blobGasUsed: rt(_e, null),
  excessBlobGas: rt(_e, null),
  miner: rt(gt),
  prevRandao: rt(cn, null),
  extraData: $l,
  baseFeePerGas: rt(_e)
}, {
  prevRandao: ["mixHash"]
});
function ox(t) {
  const e = ix(t);
  return e.transactions = t.transactions.map((n) => typeof n == "string" ? n : Gw(n)), e;
}
const ax = Ou({
  transactionIndex: Be,
  blockNumber: Be,
  transactionHash: cn,
  address: gt,
  topics: yh(cn),
  data: $l,
  index: Be,
  blockHash: cn
}, {
  index: ["logIndex"]
});
function lx(t) {
  return ax(t);
}
const cx = Ou({
  to: rt(gt, null),
  from: rt(gt, null),
  contractAddress: rt(gt, null),
  // should be allowNull(hash), but broken-EIP-658 support is handled in receipt
  index: Be,
  root: rt(ye),
  gasUsed: _e,
  blobGasUsed: rt(_e, null),
  logsBloom: rt($l),
  blockHash: cn,
  hash: cn,
  logs: yh(lx),
  blockNumber: Be,
  //confirmations: allowNull(getNumber, null),
  cumulativeGasUsed: _e,
  effectiveGasPrice: rt(_e),
  blobGasPrice: rt(_e, null),
  status: rt(Be),
  type: rt(Be, 0)
}, {
  effectiveGasPrice: ["gasPrice"],
  hash: ["transactionHash"],
  index: ["transactionIndex"]
});
function ux(t) {
  return cx(t);
}
function Gw(t) {
  t.to && _e(t.to) === z0 && (t.to = "0x0000000000000000000000000000000000000000");
  const e = Ou({
    hash: cn,
    // Some nodes do not return this, usually test nodes (like Ganache)
    index: rt(Be, void 0),
    type: (n) => n === "0x" || n == null ? 0 : Be(n),
    accessList: rt(Yo, null),
    blobVersionedHashes: rt(yh(cn, !0), null),
    blockHash: rt(cn, null),
    blockNumber: rt(Be, null),
    transactionIndex: rt(Be, null),
    from: gt,
    // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas) must be set
    gasPrice: rt(_e),
    maxPriorityFeePerGas: rt(_e),
    maxFeePerGas: rt(_e),
    maxFeePerBlobGas: rt(_e, null),
    gasLimit: _e,
    to: rt(gt, null),
    value: _e,
    nonce: Be,
    data: $l,
    creates: rt(gt, null),
    chainId: rt(_e, null)
  }, {
    data: ["input"],
    gasLimit: ["gas"],
    index: ["transactionIndex"]
  })(t);
  if (e.to == null && e.creates == null && (e.creates = r9(e)), (t.type === 1 || t.type === 2) && t.accessList == null && (e.accessList = []), t.signature ? e.signature = Br.from(t.signature) : e.signature = Br.from(t), e.chainId == null) {
    const n = e.signature.legacyChainId;
    n != null && (e.chainId = n);
  }
  return e.blockHash && _e(e.blockHash) === z0 && (e.blockHash = null), e;
}
const fx = "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
class Tu {
  /**
   *  Creates a new **NetworkPlugin**.
   */
  constructor(e) {
    /**
     *  The name of the plugin.
     *
     *  It is recommended to use reverse-domain-notation, which permits
     *  unique names with a known authority as well as hierarchal entries.
     */
    j(this, "name");
    ke(this, { name: e });
  }
  /**
   *  Creates a copy of this plugin.
   */
  clone() {
    return new Tu(this.name);
  }
}
class wh extends Tu {
  /**
   *  Creates a new GasCostPlugin from %%effectiveBlock%% until the
   *  latest block or another GasCostPlugin supercedes that block number,
   *  with the associated %%costs%%.
   */
  constructor(n, r) {
    n == null && (n = 0);
    super(`org.ethers.network.plugins.GasCost#${n || 0}`);
    /**
     *  The block number to treat these values as valid from.
     *
     *  This allows a hardfork to have updated values included as well as
     *  mulutiple hardforks to be supported.
     */
    j(this, "effectiveBlock");
    /**
     *  The transactions base fee.
     */
    j(this, "txBase");
    /**
     *  The fee for creating a new account.
     */
    j(this, "txCreate");
    /**
     *  The fee per zero-byte in the data.
     */
    j(this, "txDataZero");
    /**
     *  The fee per non-zero-byte in the data.
     */
    j(this, "txDataNonzero");
    /**
     *  The fee per storage key in the [[link-eip-2930]] access list.
     */
    j(this, "txAccessListStorageKey");
    /**
     *  The fee per address in the [[link-eip-2930]] access list.
     */
    j(this, "txAccessListAddress");
    const s = { effectiveBlock: n };
    function i(o, a) {
      let c = (r || {})[o];
      c == null && (c = a), D(typeof c == "number", `invalud value for ${o}`, "costs", r), s[o] = c;
    }
    i("txBase", 21e3), i("txCreate", 32e3), i("txDataZero", 4), i("txDataNonzero", 16), i("txAccessListStorageKey", 1900), i("txAccessListAddress", 2400), ke(this, s);
  }
  clone() {
    return new wh(this.effectiveBlock, this);
  }
}
class vh extends Tu {
  /**
   *  Creates a new **EnsPlugin** connected to %%address%% on the
   *  %%targetNetwork%%. The default ENS address and mainnet is used
   *  if unspecified.
   */
  constructor(n, r) {
    super("org.ethers.plugins.network.Ens");
    /**
     *  The ENS Registrty Contract address.
     */
    j(this, "address");
    /**
     *  The chain ID that the ENS contract lives on.
     */
    j(this, "targetNetwork");
    ke(this, {
      address: n || fx,
      targetNetwork: r ?? 1
    });
  }
  clone() {
    return new vh(this.address, this.targetNetwork);
  }
}
var mu, gu;
class hx extends Tu {
  /**
   *  Creates a new **FetchUrlFeeDataNetworkPlugin** which will
   *  be used when computing the fee data for the network.
   */
  constructor(n, r) {
    super("org.ethers.plugins.network.FetchUrlFeeDataPlugin");
    z(this, mu);
    z(this, gu);
    R(this, mu, n), R(this, gu, r);
  }
  /**
   *  The URL to initialize the FetchRequest with in %%processFunc%%.
   */
  get url() {
    return O(this, mu);
  }
  /**
   *  The callback to use when computing the FeeData.
   */
  get processFunc() {
    return O(this, gu);
  }
  // We are immutable, so we can serve as our own clone
  clone() {
    return this;
  }
}
mu = new WeakMap(), gu = new WeakMap();
const rd = /* @__PURE__ */ new Map();
var cl, ul, Si;
const Oa = class Oa {
  /**
   *  Creates a new **Network** for %%name%% and %%chainId%%.
   */
  constructor(e, n) {
    z(this, cl);
    z(this, ul);
    z(this, Si);
    R(this, cl, e), R(this, ul, _e(n)), R(this, Si, /* @__PURE__ */ new Map());
  }
  /**
   *  Returns a JSON-compatible representation of a Network.
   */
  toJSON() {
    return { name: this.name, chainId: String(this.chainId) };
  }
  /**
   *  The network common name.
   *
   *  This is the canonical name, as networks migh have multiple
   *  names.
   */
  get name() {
    return O(this, cl);
  }
  set name(e) {
    R(this, cl, e);
  }
  /**
   *  The network chain ID.
   */
  get chainId() {
    return O(this, ul);
  }
  set chainId(e) {
    R(this, ul, _e(e, "chainId"));
  }
  /**
   *  Returns true if %%other%% matches this network. Any chain ID
   *  must match, and if no chain ID is present, the name must match.
   *
   *  This method does not currently check for additional properties,
   *  such as ENS address or plug-in compatibility.
   */
  matches(e) {
    if (e == null)
      return !1;
    if (typeof e == "string") {
      try {
        return this.chainId === _e(e);
      } catch {
      }
      return this.name === e;
    }
    if (typeof e == "number" || typeof e == "bigint") {
      try {
        return this.chainId === _e(e);
      } catch {
      }
      return !1;
    }
    if (typeof e == "object") {
      if (e.chainId != null) {
        try {
          return this.chainId === _e(e.chainId);
        } catch {
        }
        return !1;
      }
      return e.name != null ? this.name === e.name : !1;
    }
    return !1;
  }
  /**
   *  Returns the list of plugins currently attached to this Network.
   */
  get plugins() {
    return Array.from(O(this, Si).values());
  }
  /**
   *  Attach a new %%plugin%% to this Network. The network name
   *  must be unique, excluding any fragment.
   */
  attachPlugin(e) {
    if (O(this, Si).get(e.name))
      throw new Error(`cannot replace existing plugin: ${e.name} `);
    return O(this, Si).set(e.name, e.clone()), this;
  }
  /**
   *  Return the plugin, if any, matching %%name%% exactly. Plugins
   *  with fragments will not be returned unless %%name%% includes
   *  a fragment.
   */
  getPlugin(e) {
    return O(this, Si).get(e) || null;
  }
  /**
   *  Gets a list of all plugins that match %%name%%, with otr without
   *  a fragment.
   */
  getPlugins(e) {
    return this.plugins.filter((n) => n.name.split("#")[0] === e);
  }
  /**
   *  Create a copy of this Network.
   */
  clone() {
    const e = new Oa(this.name, this.chainId);
    return this.plugins.forEach((n) => {
      e.attachPlugin(n.clone());
    }), e;
  }
  /**
   *  Compute the intrinsic gas required for a transaction.
   *
   *  A GasCostPlugin can be attached to override the default
   *  values.
   */
  computeIntrinsicGas(e) {
    const n = this.getPlugin("org.ethers.plugins.network.GasCost") || new wh();
    let r = n.txBase;
    if (e.to == null && (r += n.txCreate), e.data)
      for (let s = 2; s < e.data.length; s += 2)
        e.data.substring(s, s + 2) === "00" ? r += n.txDataZero : r += n.txDataNonzero;
    if (e.accessList) {
      const s = Yo(e.accessList);
      for (const i in s)
        r += n.txAccessListAddress + n.txAccessListStorageKey * s[i].storageKeys.length;
    }
    return r;
  }
  /**
   *  Returns a new Network for the %%network%% name or chainId.
   */
  static from(e) {
    if (dx(), e == null)
      return Oa.from("mainnet");
    if (typeof e == "number" && (e = BigInt(e)), typeof e == "string" || typeof e == "bigint") {
      const n = rd.get(e);
      if (n)
        return n();
      if (typeof e == "bigint")
        return new Oa("unknown", e);
      D(!1, "unknown network", "network", e);
    }
    if (typeof e.clone == "function")
      return e.clone();
    if (typeof e == "object") {
      D(typeof e.name == "string" && typeof e.chainId == "number", "invalid network object name or chainId", "network", e);
      const n = new Oa(e.name, e.chainId);
      return (e.ensAddress || e.ensNetwork != null) && n.attachPlugin(new vh(e.ensAddress, e.ensNetwork)), n;
    }
    D(!1, "invalid network", "network", e);
  }
  /**
   *  Register %%nameOrChainId%% with a function which returns
   *  an instance of a Network representing that chain.
   */
  static register(e, n) {
    typeof e == "number" && (e = BigInt(e));
    const r = rd.get(e);
    r && D(!1, `conflicting network for ${JSON.stringify(r.name)}`, "nameOrChainId", e), rd.set(e, n);
  }
};
cl = new WeakMap(), ul = new WeakMap(), Si = new WeakMap();
let rs = Oa;
function V0(t, e) {
  const n = String(t);
  if (!n.match(/^[0-9.]+$/))
    throw new Error(`invalid gwei value: ${t}`);
  const r = n.split(".");
  if (r.length === 1 && r.push(""), r.length !== 2)
    throw new Error(`invalid gwei value: ${t}`);
  for (; r[1].length < e; )
    r[1] += "0";
  if (r[1].length > 9) {
    let s = BigInt(r[1].substring(0, 9));
    r[1].substring(9).match(/^0+$/) || s++, r[1] = s.toString();
  }
  return BigInt(r[0] + r[1]);
}
function q0(t) {
  return new hx(t, async (e, n, r) => {
    r.setHeader("User-Agent", "ethers");
    let s;
    try {
      const [i, o] = await Promise.all([
        r.send(),
        e()
      ]);
      s = i;
      const a = s.bodyJson.standard;
      return {
        gasPrice: o.gasPrice,
        maxFeePerGas: V0(a.maxFee, 9),
        maxPriorityFeePerGas: V0(a.maxPriorityFee, 9)
      };
    } catch (i) {
      K(!1, `error encountered with polygon gas station (${JSON.stringify(r.url)})`, "SERVER_ERROR", { request: r, response: s, error: i });
    }
  });
}
let Q0 = !1;
function dx() {
  if (Q0)
    return;
  Q0 = !0;
  function t(e, n, r) {
    const s = function() {
      const i = new rs(e, n);
      return r.ensNetwork != null && i.attachPlugin(new vh(null, r.ensNetwork)), i.attachPlugin(new wh()), (r.plugins || []).forEach((o) => {
        i.attachPlugin(o);
      }), i;
    };
    rs.register(e, s), rs.register(n, s), r.altNames && r.altNames.forEach((i) => {
      rs.register(i, s);
    });
  }
  t("mainnet", 1, { ensNetwork: 1, altNames: ["homestead"] }), t("ropsten", 3, { ensNetwork: 3 }), t("rinkeby", 4, { ensNetwork: 4 }), t("goerli", 5, { ensNetwork: 5 }), t("kovan", 42, { ensNetwork: 42 }), t("sepolia", 11155111, { ensNetwork: 11155111 }), t("holesky", 17e3, { ensNetwork: 17e3 }), t("classic", 61, {}), t("classicKotti", 6, {}), t("arbitrum", 42161, {
    ensNetwork: 1
  }), t("arbitrum-goerli", 421613, {}), t("arbitrum-sepolia", 421614, {}), t("base", 8453, { ensNetwork: 1 }), t("base-goerli", 84531, {}), t("base-sepolia", 84532, {}), t("bnb", 56, { ensNetwork: 1 }), t("bnbt", 97, {}), t("linea", 59144, { ensNetwork: 1 }), t("linea-goerli", 59140, {}), t("linea-sepolia", 59141, {}), t("matic", 137, {
    ensNetwork: 1,
    plugins: [
      q0("https://gasstation.polygon.technology/v2")
    ]
  }), t("matic-amoy", 80002, {}), t("matic-mumbai", 80001, {
    altNames: ["maticMumbai", "maticmum"],
    plugins: [
      q0("https://gasstation-testnet.polygon.technology/v2")
    ]
  }), t("optimism", 10, {
    ensNetwork: 1,
    plugins: []
  }), t("optimism-goerli", 420, {}), t("optimism-sepolia", 11155420, {}), t("xdai", 100, { ensNetwork: 1 });
}
function Yd(t) {
  return JSON.parse(JSON.stringify(t));
}
var Ls, ur, Oi, Kr, fl, rf;
class px {
  /**
   *  Create a new **PollingBlockSubscriber** attached to %%provider%%.
   */
  constructor(e) {
    z(this, fl);
    z(this, Ls);
    z(this, ur);
    z(this, Oi);
    // The most recent block we have scanned for events. The value -2
    // indicates we still need to fetch an initial block number
    z(this, Kr);
    R(this, Ls, e), R(this, ur, null), R(this, Oi, 4e3), R(this, Kr, -2);
  }
  /**
   *  The polling interval.
   */
  get pollingInterval() {
    return O(this, Oi);
  }
  set pollingInterval(e) {
    R(this, Oi, e);
  }
  start() {
    O(this, ur) || (R(this, ur, O(this, Ls)._setTimeout(ne(this, fl, rf).bind(this), O(this, Oi))), ne(this, fl, rf).call(this));
  }
  stop() {
    O(this, ur) && (O(this, Ls)._clearTimeout(O(this, ur)), R(this, ur, null));
  }
  pause(e) {
    this.stop(), e && R(this, Kr, -2);
  }
  resume() {
    this.start();
  }
}
Ls = new WeakMap(), ur = new WeakMap(), Oi = new WeakMap(), Kr = new WeakMap(), fl = new WeakSet(), rf = async function() {
  try {
    const e = await O(this, Ls).getBlockNumber();
    if (O(this, Kr) === -2) {
      R(this, Kr, e);
      return;
    }
    if (e !== O(this, Kr)) {
      for (let n = O(this, Kr) + 1; n <= e; n++) {
        if (O(this, ur) == null)
          return;
        await O(this, Ls).emit("block", n);
      }
      R(this, Kr, e);
    }
  } catch {
  }
  O(this, ur) != null && R(this, ur, O(this, Ls)._setTimeout(ne(this, fl, rf).bind(this), O(this, Oi)));
};
var Po, Ro, Ti;
class dm {
  /**
   *  Create a new **OnBlockSubscriber** attached to %%provider%%.
   */
  constructor(e) {
    z(this, Po);
    z(this, Ro);
    z(this, Ti);
    R(this, Po, e), R(this, Ti, !1), R(this, Ro, (n) => {
      this._poll(n, O(this, Po));
    });
  }
  /**
   *  Called on every new block.
   */
  async _poll(e, n) {
    throw new Error("sub-classes must override this");
  }
  start() {
    O(this, Ti) || (R(this, Ti, !0), O(this, Ro).call(this, -2), O(this, Po).on("block", O(this, Ro)));
  }
  stop() {
    O(this, Ti) && (R(this, Ti, !1), O(this, Po).off("block", O(this, Ro)));
  }
  pause(e) {
    this.stop();
  }
  resume() {
    this.start();
  }
}
Po = new WeakMap(), Ro = new WeakMap(), Ti = new WeakMap();
var hl, Ms;
class mx extends dm {
  constructor(n, r) {
    super(n);
    z(this, hl);
    z(this, Ms);
    R(this, hl, r), R(this, Ms, -2);
  }
  pause(n) {
    n && R(this, Ms, -2), super.pause(n);
  }
  async _poll(n, r) {
    const s = await r.getBlock(O(this, hl));
    s != null && (O(this, Ms) === -2 ? R(this, Ms, s.number) : s.number > O(this, Ms) && (r.emit(O(this, hl), s.number), R(this, Ms, s.number)));
  }
}
hl = new WeakMap(), Ms = new WeakMap();
var zf;
class gx extends dm {
  constructor(n, r) {
    super(n);
    z(this, zf);
    R(this, zf, Yd(r));
  }
  async _poll(n, r) {
    throw new Error("@TODO");
  }
}
zf = new WeakMap();
var dl;
class bx extends dm {
  /**
   *  Create a new **PollingTransactionSubscriber** attached to
   *  %%provider%%, listening for %%hash%%.
   */
  constructor(n, r) {
    super(n);
    z(this, dl);
    R(this, dl, r);
  }
  async _poll(n, r) {
    const s = await r.getTransactionReceipt(O(this, dl));
    s && r.emit(O(this, dl), s);
  }
}
dl = new WeakMap();
var Ds, pl, ml, Ii, fr, Vf, zw;
class pm {
  /**
   *  Create a new **PollingTransactionSubscriber** attached to
   *  %%provider%%, listening for %%filter%%.
   */
  constructor(e, n) {
    z(this, Vf);
    z(this, Ds);
    z(this, pl);
    z(this, ml);
    z(this, Ii);
    // The most recent block we have scanned for events. The value -2
    // indicates we still need to fetch an initial block number
    z(this, fr);
    R(this, Ds, e), R(this, pl, Yd(n)), R(this, ml, ne(this, Vf, zw).bind(this)), R(this, Ii, !1), R(this, fr, -2);
  }
  start() {
    O(this, Ii) || (R(this, Ii, !0), O(this, fr) === -2 && O(this, Ds).getBlockNumber().then((e) => {
      R(this, fr, e);
    }), O(this, Ds).on("block", O(this, ml)));
  }
  stop() {
    O(this, Ii) && (R(this, Ii, !1), O(this, Ds).off("block", O(this, ml)));
  }
  pause(e) {
    this.stop(), e && R(this, fr, -2);
  }
  resume() {
    this.start();
  }
}
Ds = new WeakMap(), pl = new WeakMap(), ml = new WeakMap(), Ii = new WeakMap(), fr = new WeakMap(), Vf = new WeakSet(), zw = async function(e) {
  if (O(this, fr) === -2)
    return;
  const n = Yd(O(this, pl));
  n.fromBlock = O(this, fr) + 1, n.toBlock = e;
  const r = await O(this, Ds).getLogs(n);
  if (r.length === 0) {
    O(this, fr) < e - 60 && R(this, fr, e - 60);
    return;
  }
  for (const s of r)
    O(this, Ds).emit(O(this, pl), s), R(this, fr, s.blockNumber);
};
const yx = BigInt(2), wx = 10;
function Hu(t) {
  return t && typeof t.then == "function";
}
function sf(t, e) {
  return t + ":" + JSON.stringify(e, (n, r) => {
    if (r == null)
      return "null";
    if (typeof r == "bigint")
      return `bigint:${r.toString()}`;
    if (typeof r == "string")
      return r.toLowerCase();
    if (typeof r == "object" && !Array.isArray(r)) {
      const s = Object.keys(r);
      return s.sort(), s.reduce((i, o) => (i[o] = r[o], i), {});
    }
    return r;
  });
}
class Vw {
  /**
   *  Create a new UnmanagedSubscriber with %%name%%.
   */
  constructor(e) {
    /**
     *  The name fof the event.
     */
    j(this, "name");
    ke(this, { name: e });
  }
  start() {
  }
  stop() {
  }
  pause(e) {
  }
  resume() {
  }
}
function vx(t) {
  return JSON.parse(JSON.stringify(t));
}
function Xd(t) {
  return t = Array.from(new Set(t).values()), t.sort(), t;
}
async function sd(t, e) {
  if (t == null)
    throw new Error("invalid event");
  if (Array.isArray(t) && (t = { topics: t }), typeof t == "string")
    switch (t) {
      case "block":
      case "debug":
      case "error":
      case "finalized":
      case "network":
      case "pending":
      case "safe":
        return { type: t, tag: t };
    }
  if (wt(t, 32)) {
    const n = t.toLowerCase();
    return { type: "transaction", tag: sf("tx", { hash: n }), hash: n };
  }
  if (t.orphan) {
    const n = t;
    return { type: "orphan", tag: sf("orphan", n), filter: vx(n) };
  }
  if (t.address || t.topics) {
    const n = t, r = {
      topics: (n.topics || []).map((s) => s == null ? null : Array.isArray(s) ? Xd(s.map((i) => i.toLowerCase())) : s.toLowerCase())
    };
    if (n.address) {
      const s = [], i = [], o = (a) => {
        wt(a) ? s.push(a) : i.push((async () => {
          s.push(await Pn(a, e));
        })());
      };
      Array.isArray(n.address) ? n.address.forEach(o) : o(n.address), i.length && await Promise.all(i), r.address = Xd(s.map((a) => a.toLowerCase()));
    }
    return { filter: r, tag: sf("event", r), type: "event" };
  }
  D(!1, "unknown ProviderEvent", "event", t);
}
function id() {
  return (/* @__PURE__ */ new Date()).getTime();
}
const _x = {
  cacheTimeout: 250,
  pollingInterval: 4e3
};
var pn, Ni, mn, gl, rr, Bo, Pi, $s, bu, hr, bl, yl, We, Yn, ep, tp, Lc, np, Mc, of;
class Ax {
  /**
   *  Create a new **AbstractProvider** connected to %%network%%, or
   *  use the various network detection capabilities to discover the
   *  [[Network]] if necessary.
   */
  constructor(e, n) {
    z(this, We);
    z(this, pn);
    z(this, Ni);
    // null=unpaused, true=paused+dropWhilePaused, false=paused
    z(this, mn);
    z(this, gl);
    z(this, rr);
    z(this, Bo);
    z(this, Pi);
    // The most recent block number if running an event or -1 if no "block" event
    z(this, $s);
    z(this, bu);
    z(this, hr);
    z(this, bl);
    z(this, yl);
    if (R(this, yl, Object.assign({}, _x, n || {})), e === "any")
      R(this, Bo, !0), R(this, rr, null);
    else if (e) {
      const r = rs.from(e);
      R(this, Bo, !1), R(this, rr, Promise.resolve(r)), setTimeout(() => {
        this.emit("network", r, null);
      }, 0);
    } else
      R(this, Bo, !1), R(this, rr, null);
    R(this, $s, -1), R(this, Pi, /* @__PURE__ */ new Map()), R(this, pn, /* @__PURE__ */ new Map()), R(this, Ni, /* @__PURE__ */ new Map()), R(this, mn, null), R(this, gl, !1), R(this, bu, 1), R(this, hr, /* @__PURE__ */ new Map()), R(this, bl, !1);
  }
  get pollingInterval() {
    return O(this, yl).pollingInterval;
  }
  /**
   *  Returns ``this``, to allow an **AbstractProvider** to implement
   *  the [[ContractRunner]] interface.
   */
  get provider() {
    return this;
  }
  /**
   *  Returns all the registered plug-ins.
   */
  get plugins() {
    return Array.from(O(this, Ni).values());
  }
  /**
   *  Attach a new plug-in.
   */
  attachPlugin(e) {
    if (O(this, Ni).get(e.name))
      throw new Error(`cannot replace existing plugin: ${e.name} `);
    return O(this, Ni).set(e.name, e.connect(this)), this;
  }
  /**
   *  Get a plugin by name.
   */
  getPlugin(e) {
    return O(this, Ni).get(e) || null;
  }
  /**
   *  Prevent any CCIP-read operation, regardless of whether requested
   *  in a [[call]] using ``enableCcipRead``.
   */
  get disableCcipRead() {
    return O(this, bl);
  }
  set disableCcipRead(e) {
    R(this, bl, !!e);
  }
  /**
   *  Resolves to the data for executing the CCIP-read operations.
   */
  async ccipReadFetch(e, n, r) {
    if (this.disableCcipRead || r.length === 0 || e.to == null)
      return null;
    const s = e.to.toLowerCase(), i = n.toLowerCase(), o = [];
    for (let a = 0; a < r.length; a++) {
      const c = r[a], u = c.replace("{sender}", s).replace("{data}", i), f = new zs(u);
      c.indexOf("{data}") === -1 && (f.body = { data: i, sender: s }), this.emit("debug", { action: "sendCcipReadFetchRequest", request: f, index: a, urls: r });
      let l = "unknown error", m;
      try {
        m = await f.send();
      } catch (p) {
        o.push(p.message), this.emit("debug", { action: "receiveCcipReadFetchError", request: f, result: { error: p } });
        continue;
      }
      try {
        const p = m.bodyJson;
        if (p.data)
          return this.emit("debug", { action: "receiveCcipReadFetchResult", request: f, result: p }), p.data;
        p.message && (l = p.message), this.emit("debug", { action: "receiveCcipReadFetchError", request: f, result: p });
      } catch {
      }
      K(m.statusCode < 400 || m.statusCode >= 500, `response not found during CCIP fetch: ${l}`, "OFFCHAIN_FAULT", { reason: "404_MISSING_RESOURCE", transaction: e, info: { url: c, errorMessage: l } }), o.push(l);
    }
    K(!1, `error encountered during CCIP fetch: ${o.map((a) => JSON.stringify(a)).join(", ")}`, "OFFCHAIN_FAULT", {
      reason: "500_SERVER_ERROR",
      transaction: e,
      info: { urls: r, errorMessages: o }
    });
  }
  /**
   *  Provides the opportunity for a sub-class to wrap a block before
   *  returning it, to add additional properties or an alternate
   *  sub-class of [[Block]].
   */
  _wrapBlock(e, n) {
    return new F7(ox(e), this);
  }
  /**
   *  Provides the opportunity for a sub-class to wrap a log before
   *  returning it, to add additional properties or an alternate
   *  sub-class of [[Log]].
   */
  _wrapLog(e, n) {
    return new Su(sx(e), this);
  }
  /**
   *  Provides the opportunity for a sub-class to wrap a transaction
   *  receipt before returning it, to add additional properties or an
   *  alternate sub-class of [[TransactionReceipt]].
   */
  _wrapTransactionReceipt(e, n) {
    return new Nw(ux(e), this);
  }
  /**
   *  Provides the opportunity for a sub-class to wrap a transaction
   *  response before returning it, to add additional properties or an
   *  alternate sub-class of [[TransactionResponse]].
   */
  _wrapTransactionResponse(e, n) {
    return new ou(Gw(e), this);
  }
  /**
   *  Resolves to the Network, forcing a network detection using whatever
   *  technique the sub-class requires.
   *
   *  Sub-classes **must** override this.
   */
  _detectNetwork() {
    K(!1, "sub-classes must implement this", "UNSUPPORTED_OPERATION", {
      operation: "_detectNetwork"
    });
  }
  /**
   *  Sub-classes should use this to perform all built-in operations. All
   *  methods sanitizes and normalizes the values passed into this.
   *
   *  Sub-classes **must** override this.
   */
  async _perform(e) {
    K(!1, `unsupported method: ${e.method}`, "UNSUPPORTED_OPERATION", {
      operation: e.method,
      info: e
    });
  }
  // State
  async getBlockNumber() {
    const e = Be(await ne(this, We, Yn).call(this, { method: "getBlockNumber" }), "%response");
    return O(this, $s) >= 0 && R(this, $s, e), e;
  }
  /**
   *  Returns or resolves to the address for %%address%%, resolving ENS
   *  names and [[Addressable]] objects and returning if already an
   *  address.
   */
  _getAddress(e) {
    return Pn(e, this);
  }
  /**
   *  Returns or resolves to a valid block tag for %%blockTag%%, resolving
   *  negative values and returning if already a valid block tag.
   */
  _getBlockTag(e) {
    if (e == null)
      return "latest";
    switch (e) {
      case "earliest":
        return "0x0";
      case "finalized":
      case "latest":
      case "pending":
      case "safe":
        return e;
    }
    if (wt(e))
      return wt(e, 32) ? e : xa(e);
    if (typeof e == "bigint" && (e = Be(e, "blockTag")), typeof e == "number")
      return e >= 0 ? xa(e) : O(this, $s) >= 0 ? xa(O(this, $s) + e) : this.getBlockNumber().then((n) => xa(n + e));
    D(!1, "invalid blockTag", "blockTag", e);
  }
  /**
   *  Returns or resolves to a filter for %%filter%%, resolving any ENS
   *  names or [[Addressable]] object and returning if already a valid
   *  filter.
   */
  _getFilter(e) {
    const n = (e.topics || []).map((c) => c == null ? null : Array.isArray(c) ? Xd(c.map((u) => u.toLowerCase())) : c.toLowerCase()), r = "blockHash" in e ? e.blockHash : void 0, s = (c, u, f) => {
      let l;
      switch (c.length) {
        case 0:
          break;
        case 1:
          l = c[0];
          break;
        default:
          c.sort(), l = c;
      }
      if (r && (u != null || f != null))
        throw new Error("invalid filter");
      const m = {};
      return l && (m.address = l), n.length && (m.topics = n), u && (m.fromBlock = u), f && (m.toBlock = f), r && (m.blockHash = r), m;
    };
    let i = [];
    if (e.address)
      if (Array.isArray(e.address))
        for (const c of e.address)
          i.push(this._getAddress(c));
      else
        i.push(this._getAddress(e.address));
    let o;
    "fromBlock" in e && (o = this._getBlockTag(e.fromBlock));
    let a;
    return "toBlock" in e && (a = this._getBlockTag(e.toBlock)), i.filter((c) => typeof c != "string").length || o != null && typeof o != "string" || a != null && typeof a != "string" ? Promise.all([Promise.all(i), o, a]).then((c) => s(c[0], c[1], c[2])) : s(i, o, a);
  }
  /**
   *  Returns or resolves to a transaction for %%request%%, resolving
   *  any ENS names or [[Addressable]] and returning if already a valid
   *  transaction.
   */
  _getTransactionRequest(e) {
    const n = Df(e), r = [];
    if (["to", "from"].forEach((s) => {
      if (n[s] == null)
        return;
      const i = Pn(n[s], this);
      Hu(i) ? r.push(async function() {
        n[s] = await i;
      }()) : n[s] = i;
    }), n.blockTag != null) {
      const s = this._getBlockTag(n.blockTag);
      Hu(s) ? r.push(async function() {
        n.blockTag = await s;
      }()) : n.blockTag = s;
    }
    return r.length ? async function() {
      return await Promise.all(r), n;
    }() : n;
  }
  async getNetwork() {
    if (O(this, rr) == null) {
      const s = (async () => {
        try {
          const i = await this._detectNetwork();
          return this.emit("network", i, null), i;
        } catch (i) {
          throw O(this, rr) === s && R(this, rr, null), i;
        }
      })();
      return R(this, rr, s), (await s).clone();
    }
    const e = O(this, rr), [n, r] = await Promise.all([
      e,
      this._detectNetwork()
      // The actual connected network
    ]);
    return n.chainId !== r.chainId && (O(this, Bo) ? (this.emit("network", r, n), O(this, rr) === e && R(this, rr, Promise.resolve(r))) : K(!1, `network changed: ${n.chainId} => ${r.chainId} `, "NETWORK_ERROR", {
      event: "changed"
    })), n.clone();
  }
  async getFeeData() {
    const e = await this.getNetwork(), n = async () => {
      const { _block: s, gasPrice: i, priorityFee: o } = await Sn({
        _block: ne(this, We, np).call(this, "latest", !1),
        gasPrice: (async () => {
          try {
            const f = await ne(this, We, Yn).call(this, { method: "getGasPrice" });
            return _e(f, "%response");
          } catch {
          }
          return null;
        })(),
        priorityFee: (async () => {
          try {
            const f = await ne(this, We, Yn).call(this, { method: "getPriorityFee" });
            return _e(f, "%response");
          } catch {
          }
          return null;
        })()
      });
      let a = null, c = null;
      const u = this._wrapBlock(s, e);
      return u && u.baseFeePerGas && (c = o ?? BigInt("1000000000"), a = u.baseFeePerGas * yx + c), new F0(i, a, c);
    }, r = e.getPlugin("org.ethers.plugins.network.FetchUrlFeeDataPlugin");
    if (r) {
      const s = new zs(r.url), i = await r.processFunc(n, this, s);
      return new F0(i.gasPrice, i.maxFeePerGas, i.maxPriorityFeePerGas);
    }
    return await n();
  }
  async estimateGas(e) {
    let n = this._getTransactionRequest(e);
    return Hu(n) && (n = await n), _e(await ne(this, We, Yn).call(this, {
      method: "estimateGas",
      transaction: n
    }), "%response");
  }
  async call(e) {
    const { tx: n, blockTag: r } = await Sn({
      tx: this._getTransactionRequest(e),
      blockTag: this._getBlockTag(e.blockTag)
    });
    return await ne(this, We, tp).call(this, ne(this, We, ep).call(this, n, r, e.enableCcipRead ? 0 : -1));
  }
  async getBalance(e, n) {
    return _e(await ne(this, We, Lc).call(this, { method: "getBalance" }, e, n), "%response");
  }
  async getTransactionCount(e, n) {
    return Be(await ne(this, We, Lc).call(this, { method: "getTransactionCount" }, e, n), "%response");
  }
  async getCode(e, n) {
    return ye(await ne(this, We, Lc).call(this, { method: "getCode" }, e, n));
  }
  async getStorage(e, n, r) {
    const s = _e(n, "position");
    return ye(await ne(this, We, Lc).call(this, { method: "getStorage", position: s }, e, r));
  }
  // Write
  async broadcastTransaction(e) {
    const { blockNumber: n, hash: r, network: s } = await Sn({
      blockNumber: this.getBlockNumber(),
      hash: this._perform({
        method: "broadcastTransaction",
        signedTransaction: e
      }),
      network: this.getNetwork()
    }), i = Lf.from(e);
    if (i.hash !== r)
      throw new Error("@TODO: the returned hash did not match");
    return this._wrapTransactionResponse(i, s).replaceableTransaction(n);
  }
  // Queries
  async getBlock(e, n) {
    const { network: r, params: s } = await Sn({
      network: this.getNetwork(),
      params: ne(this, We, np).call(this, e, !!n)
    });
    return s == null ? null : this._wrapBlock(s, r);
  }
  async getTransaction(e) {
    const { network: n, params: r } = await Sn({
      network: this.getNetwork(),
      params: ne(this, We, Yn).call(this, { method: "getTransaction", hash: e })
    });
    return r == null ? null : this._wrapTransactionResponse(r, n);
  }
  async getTransactionReceipt(e) {
    const { network: n, params: r } = await Sn({
      network: this.getNetwork(),
      params: ne(this, We, Yn).call(this, { method: "getTransactionReceipt", hash: e })
    });
    if (r == null)
      return null;
    if (r.gasPrice == null && r.effectiveGasPrice == null) {
      const s = await ne(this, We, Yn).call(this, { method: "getTransaction", hash: e });
      if (s == null)
        throw new Error("report this; could not find tx or effectiveGasPrice");
      r.effectiveGasPrice = s.gasPrice;
    }
    return this._wrapTransactionReceipt(r, n);
  }
  async getTransactionResult(e) {
    const { result: n } = await Sn({
      network: this.getNetwork(),
      result: ne(this, We, Yn).call(this, { method: "getTransactionResult", hash: e })
    });
    return n == null ? null : ye(n);
  }
  // Bloom-filter Queries
  async getLogs(e) {
    let n = this._getFilter(e);
    Hu(n) && (n = await n);
    const { network: r, params: s } = await Sn({
      network: this.getNetwork(),
      params: ne(this, We, Yn).call(this, { method: "getLogs", filter: n })
    });
    return s.map((i) => this._wrapLog(i, r));
  }
  // ENS
  _getProvider(e) {
    K(!1, "provider cannot connect to target network", "UNSUPPORTED_OPERATION", {
      operation: "_getProvider()"
    });
  }
  async getResolver(e) {
    return await Uf.fromName(this, e);
  }
  async getAvatar(e) {
    const n = await this.getResolver(e);
    return n ? await n.getAvatar() : null;
  }
  async resolveName(e) {
    const n = await this.getResolver(e);
    return n ? await n.getAddress() : null;
  }
  async lookupAddress(e) {
    e = gt(e);
    const n = Vd(e.substring(2).toLowerCase() + ".addr.reverse");
    try {
      const r = await Uf.getEnsAddress(this), i = await new $i(r, [
        "function resolver(bytes32) view returns (address)"
      ], this).resolver(n);
      if (i == null || i === Yc)
        return null;
      const a = await new $i(i, [
        "function name(bytes32) view returns (string)"
      ], this).name(n);
      return await this.resolveName(a) !== e ? null : a;
    } catch (r) {
      if (un(r, "BAD_DATA") && r.value === "0x" || un(r, "CALL_EXCEPTION"))
        return null;
      throw r;
    }
    return null;
  }
  async waitForTransaction(e, n, r) {
    const s = n ?? 1;
    return s === 0 ? this.getTransactionReceipt(e) : new Promise(async (i, o) => {
      let a = null;
      const c = async (u) => {
        try {
          const f = await this.getTransactionReceipt(e);
          if (f != null && u - f.blockNumber + 1 >= s) {
            i(f), a && (clearTimeout(a), a = null);
            return;
          }
        } catch (f) {
          console.log("EEE", f);
        }
        this.once("block", c);
      };
      r != null && (a = setTimeout(() => {
        a != null && (a = null, this.off("block", c), o(Rt("timeout", "TIMEOUT", { reason: "timeout" })));
      }, r)), c(await this.getBlockNumber());
    });
  }
  async waitForBlock(e) {
    K(!1, "not implemented yet", "NOT_IMPLEMENTED", {
      operation: "waitForBlock"
    });
  }
  /**
   *  Clear a timer created using the [[_setTimeout]] method.
   */
  _clearTimeout(e) {
    const n = O(this, hr).get(e);
    n && (n.timer && clearTimeout(n.timer), O(this, hr).delete(e));
  }
  /**
   *  Create a timer that will execute %%func%% after at least %%timeout%%
   *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute
   *  in the next event loop.
   *
   *  [Pausing](AbstractProvider-paused) the provider will pause any
   *  associated timers.
   */
  _setTimeout(e, n) {
    n == null && (n = 0);
    const r = wc(this, bu)._++, s = () => {
      O(this, hr).delete(r), e();
    };
    if (this.paused)
      O(this, hr).set(r, { timer: null, func: s, time: n });
    else {
      const i = setTimeout(s, n);
      O(this, hr).set(r, { timer: i, func: s, time: id() });
    }
    return r;
  }
  /**
   *  Perform %%func%% on each subscriber.
   */
  _forEachSubscriber(e) {
    for (const n of O(this, pn).values())
      e(n.subscriber);
  }
  /**
   *  Sub-classes may override this to customize subscription
   *  implementations.
   */
  _getSubscriber(e) {
    switch (e.type) {
      case "debug":
      case "error":
      case "network":
        return new Vw(e.type);
      case "block": {
        const n = new px(this);
        return n.pollingInterval = this.pollingInterval, n;
      }
      case "safe":
      case "finalized":
        return new mx(this, e.type);
      case "event":
        return new pm(this, e.filter);
      case "transaction":
        return new bx(this, e.hash);
      case "orphan":
        return new gx(this, e.filter);
    }
    throw new Error(`unsupported event: ${e.type}`);
  }
  /**
   *  If a [[Subscriber]] fails and needs to replace itself, this
   *  method may be used.
   *
   *  For example, this is used for providers when using the
   *  ``eth_getFilterChanges`` method, which can return null if state
   *  filters are not supported by the backend, allowing the Subscriber
   *  to swap in a [[PollingEventSubscriber]].
   */
  _recoverSubscriber(e, n) {
    for (const r of O(this, pn).values())
      if (r.subscriber === e) {
        r.started && r.subscriber.stop(), r.subscriber = n, r.started && n.start(), O(this, mn) != null && n.pause(O(this, mn));
        break;
      }
  }
  async on(e, n) {
    const r = await ne(this, We, of).call(this, e);
    return r.listeners.push({ listener: n, once: !1 }), r.started || (r.subscriber.start(), r.started = !0, O(this, mn) != null && r.subscriber.pause(O(this, mn))), this;
  }
  async once(e, n) {
    const r = await ne(this, We, of).call(this, e);
    return r.listeners.push({ listener: n, once: !0 }), r.started || (r.subscriber.start(), r.started = !0, O(this, mn) != null && r.subscriber.pause(O(this, mn))), this;
  }
  async emit(e, ...n) {
    const r = await ne(this, We, Mc).call(this, e, n);
    if (!r || r.listeners.length === 0)
      return !1;
    const s = r.listeners.length;
    return r.listeners = r.listeners.filter(({ listener: i, once: o }) => {
      const a = new Iy(this, o ? null : i, e);
      try {
        i.call(this, ...n, a);
      } catch {
      }
      return !o;
    }), r.listeners.length === 0 && (r.started && r.subscriber.stop(), O(this, pn).delete(r.tag)), s > 0;
  }
  async listenerCount(e) {
    if (e) {
      const r = await ne(this, We, Mc).call(this, e);
      return r ? r.listeners.length : 0;
    }
    let n = 0;
    for (const { listeners: r } of O(this, pn).values())
      n += r.length;
    return n;
  }
  async listeners(e) {
    if (e) {
      const r = await ne(this, We, Mc).call(this, e);
      return r ? r.listeners.map(({ listener: s }) => s) : [];
    }
    let n = [];
    for (const { listeners: r } of O(this, pn).values())
      n = n.concat(r.map(({ listener: s }) => s));
    return n;
  }
  async off(e, n) {
    const r = await ne(this, We, Mc).call(this, e);
    if (!r)
      return this;
    if (n) {
      const s = r.listeners.map(({ listener: i }) => i).indexOf(n);
      s >= 0 && r.listeners.splice(s, 1);
    }
    return (!n || r.listeners.length === 0) && (r.started && r.subscriber.stop(), O(this, pn).delete(r.tag)), this;
  }
  async removeAllListeners(e) {
    if (e) {
      const { tag: n, started: r, subscriber: s } = await ne(this, We, of).call(this, e);
      r && s.stop(), O(this, pn).delete(n);
    } else
      for (const [n, { started: r, subscriber: s }] of O(this, pn))
        r && s.stop(), O(this, pn).delete(n);
    return this;
  }
  // Alias for "on"
  async addListener(e, n) {
    return await this.on(e, n);
  }
  // Alias for "off"
  async removeListener(e, n) {
    return this.off(e, n);
  }
  /**
   *  If this provider has been destroyed using the [[destroy]] method.
   *
   *  Once destroyed, all resources are reclaimed, internal event loops
   *  and timers are cleaned up and no further requests may be sent to
   *  the provider.
   */
  get destroyed() {
    return O(this, gl);
  }
  /**
   *  Sub-classes may use this to shutdown any sockets or release their
   *  resources and reject any pending requests.
   *
   *  Sub-classes **must** call ``super.destroy()``.
   */
  destroy() {
    this.removeAllListeners();
    for (const e of O(this, hr).keys())
      this._clearTimeout(e);
    R(this, gl, !0);
  }
  /**
   *  Whether the provider is currently paused.
   *
   *  A paused provider will not emit any events, and generally should
   *  not make any requests to the network, but that is up to sub-classes
   *  to manage.
   *
   *  Setting ``paused = true`` is identical to calling ``.pause(false)``,
   *  which will buffer any events that occur while paused until the
   *  provider is unpaused.
   */
  get paused() {
    return O(this, mn) != null;
  }
  set paused(e) {
    !!e !== this.paused && (this.paused ? this.resume() : this.pause(!1));
  }
  /**
   *  Pause the provider. If %%dropWhilePaused%%, any events that occur
   *  while paused are dropped, otherwise all events will be emitted once
   *  the provider is unpaused.
   */
  pause(e) {
    if (R(this, $s, -1), O(this, mn) != null) {
      if (O(this, mn) == !!e)
        return;
      K(!1, "cannot change pause type; resume first", "UNSUPPORTED_OPERATION", {
        operation: "pause"
      });
    }
    this._forEachSubscriber((n) => n.pause(e)), R(this, mn, !!e);
    for (const n of O(this, hr).values())
      n.timer && clearTimeout(n.timer), n.time = id() - n.time;
  }
  /**
   *  Resume the provider.
   */
  resume() {
    if (O(this, mn) != null) {
      this._forEachSubscriber((e) => e.resume()), R(this, mn, null);
      for (const e of O(this, hr).values()) {
        let n = e.time;
        n < 0 && (n = 0), e.time = id(), setTimeout(e.func, n);
      }
    }
  }
}
pn = new WeakMap(), Ni = new WeakMap(), mn = new WeakMap(), gl = new WeakMap(), rr = new WeakMap(), Bo = new WeakMap(), Pi = new WeakMap(), $s = new WeakMap(), bu = new WeakMap(), hr = new WeakMap(), bl = new WeakMap(), yl = new WeakMap(), We = new WeakSet(), Yn = async function(e) {
  const n = O(this, yl).cacheTimeout;
  if (n < 0)
    return await this._perform(e);
  const r = sf(e.method, e);
  let s = O(this, Pi).get(r);
  return s || (s = this._perform(e), O(this, Pi).set(r, s), setTimeout(() => {
    O(this, Pi).get(r) === s && O(this, Pi).delete(r);
  }, n)), await s;
}, ep = async function(e, n, r) {
  K(r < wx, "CCIP read exceeded maximum redirections", "OFFCHAIN_FAULT", {
    reason: "TOO_MANY_REDIRECTS",
    transaction: Object.assign({}, e, { blockTag: n, enableCcipRead: !0 })
  });
  const s = Df(e);
  try {
    return ye(await this._perform({ method: "call", transaction: s, blockTag: n }));
  } catch (i) {
    if (!this.disableCcipRead && tm(i) && i.data && r >= 0 && n === "latest" && s.to != null && Bt(i.data, 0, 4) === "0x556f1830") {
      const o = i.data, a = await Pn(s.to, this);
      let c;
      try {
        c = Sx(Bt(i.data, 4));
      } catch (l) {
        K(!1, l.message, "OFFCHAIN_FAULT", {
          reason: "BAD_DATA",
          transaction: s,
          info: { data: o }
        });
      }
      K(c.sender.toLowerCase() === a.toLowerCase(), "CCIP Read sender mismatch", "CALL_EXCEPTION", {
        action: "call",
        data: o,
        reason: "OffchainLookup",
        transaction: s,
        invocation: null,
        revert: {
          signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
          name: "OffchainLookup",
          args: c.errorArgs
        }
      });
      const u = await this.ccipReadFetch(s, c.calldata, c.urls);
      K(u != null, "CCIP Read failed to fetch data", "OFFCHAIN_FAULT", {
        reason: "FETCH_FAILED",
        transaction: s,
        info: { data: i.data, errorArgs: c.errorArgs }
      });
      const f = {
        to: a,
        data: jt([c.selector, kx([u, c.extraData])])
      };
      this.emit("debug", { action: "sendCcipReadCall", transaction: f });
      try {
        const l = await ne(this, We, ep).call(this, f, n, r + 1);
        return this.emit("debug", { action: "receiveCcipReadCallResult", transaction: Object.assign({}, f), result: l }), l;
      } catch (l) {
        throw this.emit("debug", { action: "receiveCcipReadCallError", transaction: Object.assign({}, f), error: l }), l;
      }
    }
    throw i;
  }
}, tp = async function(e) {
  const { value: n } = await Sn({
    network: this.getNetwork(),
    value: e
  });
  return n;
}, Lc = async function(e, n, r) {
  let s = this._getAddress(n), i = this._getBlockTag(r);
  return (typeof s != "string" || typeof i != "string") && ([s, i] = await Promise.all([s, i])), await ne(this, We, tp).call(this, ne(this, We, Yn).call(this, Object.assign(e, { address: s, blockTag: i })));
}, np = async function(e, n) {
  if (wt(e, 32))
    return await ne(this, We, Yn).call(this, {
      method: "getBlock",
      blockHash: e,
      includeTransactions: n
    });
  let r = this._getBlockTag(e);
  return typeof r != "string" && (r = await r), await ne(this, We, Yn).call(this, {
    method: "getBlock",
    blockTag: r,
    includeTransactions: n
  });
}, Mc = async function(e, n) {
  let r = await sd(e, this);
  return r.type === "event" && n && n.length > 0 && n[0].removed === !0 && (r = await sd({ orphan: "drop-log", log: n[0] }, this)), O(this, pn).get(r.tag) || null;
}, of = async function(e) {
  const n = await sd(e, this), r = n.tag;
  let s = O(this, pn).get(r);
  return s || (s = { subscriber: this._getSubscriber(n), tag: r, addressableMap: /* @__PURE__ */ new WeakMap(), nameMap: /* @__PURE__ */ new Map(), started: !1, listeners: [] }, O(this, pn).set(r, s)), s;
};
function Ex(t, e) {
  try {
    const n = rp(t, e);
    if (n)
      return Of(n);
  } catch {
  }
  return null;
}
function rp(t, e) {
  if (t === "0x")
    return null;
  try {
    const n = Be(Bt(t, e, e + 32)), r = Be(Bt(t, n, n + 32));
    return Bt(t, n + 32, n + 32 + r);
  } catch {
  }
  return null;
}
function Z0(t) {
  const e = In(t);
  if (e.length > 32)
    throw new Error("internal; should not happen");
  const n = new Uint8Array(32);
  return n.set(e, 32 - e.length), n;
}
function xx(t) {
  if (t.length % 32 === 0)
    return t;
  const e = new Uint8Array(Math.ceil(t.length / 32) * 32);
  return e.set(t), e;
}
const Cx = new Uint8Array([]);
function kx(t) {
  const e = [];
  let n = 0;
  for (let r = 0; r < t.length; r++)
    e.push(Cx), n += 32;
  for (let r = 0; r < t.length; r++) {
    const s = st(t[r]);
    e[r] = Z0(n), e.push(Z0(s.length)), e.push(xx(s)), n += 32 + Math.ceil(s.length / 32) * 32;
  }
  return jt(e);
}
const J0 = "0x0000000000000000000000000000000000000000000000000000000000000000";
function Sx(t) {
  const e = {
    sender: "",
    urls: [],
    calldata: "",
    selector: "",
    extraData: "",
    errorArgs: []
  };
  K(Ra(t) >= 5 * 32, "insufficient OffchainLookup data", "OFFCHAIN_FAULT", {
    reason: "insufficient OffchainLookup data"
  });
  const n = Bt(t, 0, 32);
  K(Bt(n, 0, 12) === Bt(J0, 0, 12), "corrupt OffchainLookup sender", "OFFCHAIN_FAULT", {
    reason: "corrupt OffchainLookup sender"
  }), e.sender = Bt(n, 12);
  try {
    const r = [], s = Be(Bt(t, 32, 64)), i = Be(Bt(t, s, s + 32)), o = Bt(t, s + 32);
    for (let a = 0; a < i; a++) {
      const c = Ex(o, a * 32);
      if (c == null)
        throw new Error("abort");
      r.push(c);
    }
    e.urls = r;
  } catch {
    K(!1, "corrupt OffchainLookup urls", "OFFCHAIN_FAULT", {
      reason: "corrupt OffchainLookup urls"
    });
  }
  try {
    const r = rp(t, 64);
    if (r == null)
      throw new Error("abort");
    e.calldata = r;
  } catch {
    K(!1, "corrupt OffchainLookup calldata", "OFFCHAIN_FAULT", {
      reason: "corrupt OffchainLookup calldata"
    });
  }
  K(Bt(t, 100, 128) === Bt(J0, 0, 28), "corrupt OffchainLookup callbaackSelector", "OFFCHAIN_FAULT", {
    reason: "corrupt OffchainLookup callbaackSelector"
  }), e.selector = Bt(t, 96, 100);
  try {
    const r = rp(t, 128);
    if (r == null)
      throw new Error("abort");
    e.extraData = r;
  } catch {
    K(!1, "corrupt OffchainLookup extraData", "OFFCHAIN_FAULT", {
      reason: "corrupt OffchainLookup extraData"
    });
  }
  return e.errorArgs = "sender,urls,calldata,selector,extraData".split(/,/).map((r) => e[r]), e;
}
function da(t, e) {
  if (t.provider)
    return t.provider;
  K(!1, "missing provider", "UNSUPPORTED_OPERATION", { operation: e });
}
async function K0(t, e) {
  let n = Df(e);
  if (n.to != null && (n.to = Pn(n.to, t)), n.from != null) {
    const r = n.from;
    n.from = Promise.all([
      t.getAddress(),
      Pn(r, t)
    ]).then(([s, i]) => (D(s.toLowerCase() === i.toLowerCase(), "transaction from mismatch", "tx.from", i), s));
  } else
    n.from = t.getAddress();
  return await Sn(n);
}
class Ox {
  /**
   *  Creates a new Signer connected to %%provider%%.
   */
  constructor(e) {
    /**
     *  The provider this signer is connected to.
     */
    j(this, "provider");
    ke(this, { provider: e || null });
  }
  async getNonce(e) {
    return da(this, "getTransactionCount").getTransactionCount(await this.getAddress(), e);
  }
  async populateCall(e) {
    return await K0(this, e);
  }
  async populateTransaction(e) {
    const n = da(this, "populateTransaction"), r = await K0(this, e);
    r.nonce == null && (r.nonce = await this.getNonce("pending")), r.gasLimit == null && (r.gasLimit = await this.estimateGas(r));
    const s = await this.provider.getNetwork();
    if (r.chainId != null) {
      const o = _e(r.chainId);
      D(o === s.chainId, "transaction chainId mismatch", "tx.chainId", e.chainId);
    } else
      r.chainId = s.chainId;
    const i = r.maxFeePerGas != null || r.maxPriorityFeePerGas != null;
    if (r.gasPrice != null && (r.type === 2 || i) ? D(!1, "eip-1559 transaction do not support gasPrice", "tx", e) : (r.type === 0 || r.type === 1) && i && D(!1, "pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "tx", e), (r.type === 2 || r.type == null) && r.maxFeePerGas != null && r.maxPriorityFeePerGas != null)
      r.type = 2;
    else if (r.type === 0 || r.type === 1) {
      const o = await n.getFeeData();
      K(o.gasPrice != null, "network does not support gasPrice", "UNSUPPORTED_OPERATION", {
        operation: "getGasPrice"
      }), r.gasPrice == null && (r.gasPrice = o.gasPrice);
    } else {
      const o = await n.getFeeData();
      if (r.type == null)
        if (o.maxFeePerGas != null && o.maxPriorityFeePerGas != null)
          if (r.type = 2, r.gasPrice != null) {
            const a = r.gasPrice;
            delete r.gasPrice, r.maxFeePerGas = a, r.maxPriorityFeePerGas = a;
          } else
            r.maxFeePerGas == null && (r.maxFeePerGas = o.maxFeePerGas), r.maxPriorityFeePerGas == null && (r.maxPriorityFeePerGas = o.maxPriorityFeePerGas);
        else o.gasPrice != null ? (K(!i, "network does not support EIP-1559", "UNSUPPORTED_OPERATION", {
          operation: "populateTransaction"
        }), r.gasPrice == null && (r.gasPrice = o.gasPrice), r.type = 0) : K(!1, "failed to get consistent fee data", "UNSUPPORTED_OPERATION", {
          operation: "signer.getFeeData"
        });
      else (r.type === 2 || r.type === 3) && (r.maxFeePerGas == null && (r.maxFeePerGas = o.maxFeePerGas), r.maxPriorityFeePerGas == null && (r.maxPriorityFeePerGas = o.maxPriorityFeePerGas));
    }
    return await Sn(r);
  }
  async estimateGas(e) {
    return da(this, "estimateGas").estimateGas(await this.populateCall(e));
  }
  async call(e) {
    return da(this, "call").call(await this.populateCall(e));
  }
  async resolveName(e) {
    return await da(this, "resolveName").resolveName(e);
  }
  async sendTransaction(e) {
    const n = da(this, "sendTransaction"), r = await this.populateTransaction(e);
    delete r.from;
    const s = Lf.from(r);
    return await n.broadcastTransaction(await this.signTransaction(s));
  }
}
function Tx(t) {
  return JSON.parse(JSON.stringify(t));
}
var Cn, Yr, Lo, Ri, Mo, wl, Wi, sp, ip;
class qw {
  /**
   *  Creates a new **FilterIdSubscriber** which will used [[_subscribe]]
   *  and [[_emitResults]] to setup the subscription and provide the event
   *  to the %%provider%%.
   */
  constructor(e) {
    z(this, Wi);
    z(this, Cn);
    z(this, Yr);
    z(this, Lo);
    z(this, Ri);
    z(this, Mo);
    z(this, wl);
    R(this, Cn, e), R(this, Yr, null), R(this, Lo, ne(this, Wi, sp).bind(this)), R(this, Ri, !1), R(this, Mo, null), R(this, wl, !1);
  }
  /**
   *  Sub-classes **must** override this to begin the subscription.
   */
  _subscribe(e) {
    throw new Error("subclasses must override this");
  }
  /**
   *  Sub-classes **must** override this handle the events.
   */
  _emitResults(e, n) {
    throw new Error("subclasses must override this");
  }
  /**
   *  Sub-classes **must** override this handle recovery on errors.
   */
  _recover(e) {
    throw new Error("subclasses must override this");
  }
  start() {
    O(this, Ri) || (R(this, Ri, !0), ne(this, Wi, sp).call(this, -2));
  }
  stop() {
    O(this, Ri) && (R(this, Ri, !1), R(this, wl, !0), ne(this, Wi, ip).call(this), O(this, Cn).off("block", O(this, Lo)));
  }
  pause(e) {
    e && ne(this, Wi, ip).call(this), O(this, Cn).off("block", O(this, Lo));
  }
  resume() {
    this.start();
  }
}
Cn = new WeakMap(), Yr = new WeakMap(), Lo = new WeakMap(), Ri = new WeakMap(), Mo = new WeakMap(), wl = new WeakMap(), Wi = new WeakSet(), sp = async function(e) {
  try {
    O(this, Yr) == null && R(this, Yr, this._subscribe(O(this, Cn)));
    let n = null;
    try {
      n = await O(this, Yr);
    } catch (i) {
      if (!un(i, "UNSUPPORTED_OPERATION") || i.operation !== "eth_newFilter")
        throw i;
    }
    if (n == null) {
      R(this, Yr, null), O(this, Cn)._recoverSubscriber(this, this._recover(O(this, Cn)));
      return;
    }
    const r = await O(this, Cn).getNetwork();
    if (O(this, Mo) || R(this, Mo, r), O(this, Mo).chainId !== r.chainId)
      throw new Error("chaid changed");
    if (O(this, wl))
      return;
    const s = await O(this, Cn).send("eth_getFilterChanges", [n]);
    await this._emitResults(O(this, Cn), s);
  } catch (n) {
    console.log("@TODO", n);
  }
  O(this, Cn).once("block", O(this, Lo));
}, ip = function() {
  const e = O(this, Yr);
  e && (R(this, Yr, null), e.then((n) => {
    O(this, Cn).destroyed || O(this, Cn).send("eth_uninstallFilter", [n]);
  }));
};
var Do;
class Ix extends qw {
  /**
   *  Creates a new **FilterIdEventSubscriber** attached to %%provider%%
   *  listening for %%filter%%.
   */
  constructor(n, r) {
    super(n);
    z(this, Do);
    R(this, Do, Tx(r));
  }
  _recover(n) {
    return new pm(n, O(this, Do));
  }
  async _subscribe(n) {
    return await n.send("eth_newFilter", [O(this, Do)]);
  }
  async _emitResults(n, r) {
    for (const s of r)
      n.emit(O(this, Do), n._wrapLog(s, n._network));
  }
}
Do = new WeakMap();
class Nx extends qw {
  async _subscribe(e) {
    return await e.send("eth_newPendingTransactionFilter", []);
  }
  async _emitResults(e, n) {
    for (const r of n)
      e.emit("pending", r);
  }
}
const Px = "bigint,boolean,function,number,string,symbol".split(/,/g);
function af(t) {
  if (t == null || Px.indexOf(typeof t) >= 0 || typeof t.getAddress == "function")
    return t;
  if (Array.isArray(t))
    return t.map(af);
  if (typeof t == "object")
    return Object.keys(t).reduce((e, n) => (e[n] = t[n], e), {});
  throw new Error(`should not happen: ${t} (${typeof t})`);
}
function Rx(t) {
  return new Promise((e) => {
    setTimeout(e, t);
  });
}
function pa(t) {
  return t && t.toLowerCase();
}
function Y0(t) {
  return t && typeof t.pollingInterval == "number";
}
const Qw = {
  polling: !1,
  staticNetwork: null,
  batchStallTime: 10,
  batchMaxSize: 1 << 20,
  batchMaxCount: 100,
  cacheTimeout: 250,
  pollingInterval: 4e3
};
class od extends Ox {
  constructor(n, r) {
    super(n);
    j(this, "address");
    r = gt(r), ke(this, { address: r });
  }
  connect(n) {
    K(!1, "cannot reconnect JsonRpcSigner", "UNSUPPORTED_OPERATION", {
      operation: "signer.connect"
    });
  }
  async getAddress() {
    return this.address;
  }
  // JSON-RPC will automatially fill in nonce, etc. so we just check from
  async populateTransaction(n) {
    return await this.populateCall(n);
  }
  // Returns just the hash of the transaction after sent, which is what
  // the bare JSON-RPC API does;
  async sendUncheckedTransaction(n) {
    const r = af(n), s = [];
    if (r.from) {
      const o = r.from;
      s.push((async () => {
        const a = await Pn(o, this.provider);
        D(a != null && a.toLowerCase() === this.address.toLowerCase(), "from address mismatch", "transaction", n), r.from = a;
      })());
    } else
      r.from = this.address;
    if (r.gasLimit == null && s.push((async () => {
      r.gasLimit = await this.provider.estimateGas({ ...r, from: this.address });
    })()), r.to != null) {
      const o = r.to;
      s.push((async () => {
        r.to = await Pn(o, this.provider);
      })());
    }
    s.length && await Promise.all(s);
    const i = this.provider.getRpcTransaction(r);
    return this.provider.send("eth_sendTransaction", [i]);
  }
  async sendTransaction(n) {
    const r = await this.provider.getBlockNumber(), s = await this.sendUncheckedTransaction(n);
    return await new Promise((i, o) => {
      const a = [1e3, 100];
      let c = 0;
      const u = async () => {
        try {
          const f = await this.provider.getTransaction(s);
          if (f != null) {
            i(f.replaceableTransaction(r));
            return;
          }
        } catch (f) {
          if (un(f, "CANCELLED") || un(f, "BAD_DATA") || un(f, "NETWORK_ERROR") || un(f, "UNSUPPORTED_OPERATION")) {
            f.info == null && (f.info = {}), f.info.sendTransactionHash = s, o(f);
            return;
          }
          if (un(f, "INVALID_ARGUMENT") && (c++, f.info == null && (f.info = {}), f.info.sendTransactionHash = s, c > 10)) {
            o(f);
            return;
          }
          this.provider.emit("error", Rt("failed to fetch transation after sending (will try again)", "UNKNOWN_ERROR", { error: f }));
        }
        this.provider._setTimeout(() => {
          u();
        }, a.pop() || 4e3);
      };
      u();
    });
  }
  async signTransaction(n) {
    const r = af(n);
    if (r.from) {
      const i = await Pn(r.from, this.provider);
      D(i != null && i.toLowerCase() === this.address.toLowerCase(), "from address mismatch", "transaction", n), r.from = i;
    } else
      r.from = this.address;
    const s = this.provider.getRpcTransaction(r);
    return await this.provider.send("eth_signTransaction", [s]);
  }
  async signMessage(n) {
    const r = typeof n == "string" ? Ws(n) : n;
    return await this.provider.send("personal_sign", [
      ye(r),
      this.address.toLowerCase()
    ]);
  }
  async signTypedData(n, r, s) {
    const i = af(s), o = await Mf.resolveNames(n, r, i, async (a) => {
      const c = await Pn(a);
      return D(c != null, "TypedData does not support null address", "value", a), c;
    });
    return await this.provider.send("eth_signTypedData_v4", [
      this.address.toLowerCase(),
      JSON.stringify(Mf.getPayload(o.domain, r, o.value))
    ]);
  }
  async unlock(n) {
    return this.provider.send("personal_unlockAccount", [
      this.address.toLowerCase(),
      n,
      null
    ]);
  }
  // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign
  async _legacySignMessage(n) {
    const r = typeof n == "string" ? Ws(n) : n;
    return await this.provider.send("eth_sign", [
      this.address.toLowerCase(),
      ye(r)
    ]);
  }
}
var $o, vl, Us, Xr, Ir, dr, Un, yu, op;
class Bx extends Ax {
  constructor(n, r) {
    super(n, r);
    z(this, yu);
    z(this, $o);
    // The next ID to use for the JSON-RPC ID field
    z(this, vl);
    // Payloads are queued and triggered in batches using the drainTimer
    z(this, Us);
    z(this, Xr);
    z(this, Ir);
    z(this, dr);
    z(this, Un);
    R(this, vl, 1), R(this, $o, Object.assign({}, Qw, r || {})), R(this, Us, []), R(this, Xr, null), R(this, dr, null), R(this, Un, null);
    {
      let i = null;
      const o = new Promise((a) => {
        i = a;
      });
      R(this, Ir, { promise: o, resolve: i });
    }
    const s = this._getOption("staticNetwork");
    typeof s == "boolean" ? (D(!s || n !== "any", "staticNetwork cannot be used on special network 'any'", "options", r), s && n != null && R(this, dr, rs.from(n))) : s && (D(n == null || s.matches(n), "staticNetwork MUST match network object", "options", r), R(this, dr, s));
  }
  /**
   *  Returns the value associated with the option %%key%%.
   *
   *  Sub-classes can use this to inquire about configuration options.
   */
  _getOption(n) {
    return O(this, $o)[n];
  }
  /**
   *  Gets the [[Network]] this provider has committed to. On each call, the network
   *  is detected, and if it has changed, the call will reject.
   */
  get _network() {
    return K(O(this, dr), "network is not available yet", "NETWORK_ERROR"), O(this, dr);
  }
  /**
   *  Resolves to the non-normalized value by performing %%req%%.
   *
   *  Sub-classes may override this to modify behavior of actions,
   *  and should generally call ``super._perform`` as a fallback.
   */
  async _perform(n) {
    if (n.method === "call" || n.method === "estimateGas") {
      let s = n.transaction;
      if (s && s.type != null && _e(s.type) && s.maxFeePerGas == null && s.maxPriorityFeePerGas == null) {
        const i = await this.getFeeData();
        i.maxFeePerGas == null && i.maxPriorityFeePerGas == null && (n = Object.assign({}, n, {
          transaction: Object.assign({}, s, { type: void 0 })
        }));
      }
    }
    const r = this.getRpcRequest(n);
    return r != null ? await this.send(r.method, r.args) : super._perform(n);
  }
  /**
   *  Sub-classes may override this; it detects the *actual* network that
   *  we are **currently** connected to.
   *
   *  Keep in mind that [[send]] may only be used once [[ready]], otherwise the
   *  _send primitive must be used instead.
   */
  async _detectNetwork() {
    const n = this._getOption("staticNetwork");
    if (n)
      if (n === !0) {
        if (O(this, dr))
          return O(this, dr);
      } else
        return n;
    return O(this, Un) ? await O(this, Un) : this.ready ? (R(this, Un, (async () => {
      try {
        const r = rs.from(_e(await this.send("eth_chainId", [])));
        return R(this, Un, null), r;
      } catch (r) {
        throw R(this, Un, null), r;
      }
    })()), await O(this, Un)) : (R(this, Un, (async () => {
      const r = {
        id: wc(this, vl)._++,
        method: "eth_chainId",
        params: [],
        jsonrpc: "2.0"
      };
      this.emit("debug", { action: "sendRpcPayload", payload: r });
      let s;
      try {
        s = (await this._send(r))[0], R(this, Un, null);
      } catch (i) {
        throw R(this, Un, null), this.emit("debug", { action: "receiveRpcError", error: i }), i;
      }
      if (this.emit("debug", { action: "receiveRpcResult", result: s }), "result" in s)
        return rs.from(_e(s.result));
      throw this.getRpcError(r, s);
    })()), await O(this, Un));
  }
  /**
   *  Sub-classes **MUST** call this. Until [[_start]] has been called, no calls
   *  will be passed to [[_send]] from [[send]]. If it is overridden, then
   *  ``super._start()`` **MUST** be called.
   *
   *  Calling it multiple times is safe and has no effect.
   */
  _start() {
    O(this, Ir) == null || O(this, Ir).resolve == null || (O(this, Ir).resolve(), R(this, Ir, null), (async () => {
      for (; O(this, dr) == null && !this.destroyed; )
        try {
          R(this, dr, await this._detectNetwork());
        } catch (n) {
          if (this.destroyed)
            break;
          console.log("JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)"), this.emit("error", Rt("failed to bootstrap network detection", "NETWORK_ERROR", { event: "initial-network-discovery", info: { error: n } })), await Rx(1e3);
        }
      ne(this, yu, op).call(this);
    })());
  }
  /**
   *  Resolves once the [[_start]] has been called. This can be used in
   *  sub-classes to defer sending data until the connection has been
   *  established.
   */
  async _waitUntilReady() {
    if (O(this, Ir) != null)
      return await O(this, Ir).promise;
  }
  /**
   *  Return a Subscriber that will manage the %%sub%%.
   *
   *  Sub-classes may override this to modify the behavior of
   *  subscription management.
   */
  _getSubscriber(n) {
    return n.type === "pending" ? new Nx(this) : n.type === "event" ? this._getOption("polling") ? new pm(this, n.filter) : new Ix(this, n.filter) : n.type === "orphan" && n.filter.orphan === "drop-log" ? new Vw("orphan") : super._getSubscriber(n);
  }
  /**
   *  Returns true only if the [[_start]] has been called.
   */
  get ready() {
    return O(this, Ir) == null;
  }
  /**
   *  Returns %%tx%% as a normalized JSON-RPC transaction request,
   *  which has all values hexlified and any numeric values converted
   *  to Quantity values.
   */
  getRpcTransaction(n) {
    const r = {};
    return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach((s) => {
      if (n[s] == null)
        return;
      let i = s;
      s === "gasLimit" && (i = "gas"), r[i] = xa(_e(n[s], `tx.${s}`));
    }), ["from", "to", "data"].forEach((s) => {
      n[s] != null && (r[s] = ye(n[s]));
    }), n.accessList && (r.accessList = Yo(n.accessList)), n.blobVersionedHashes && (r.blobVersionedHashes = n.blobVersionedHashes.map((s) => s.toLowerCase())), r;
  }
  /**
   *  Returns the request method and arguments required to perform
   *  %%req%%.
   */
  getRpcRequest(n) {
    switch (n.method) {
      case "chainId":
        return { method: "eth_chainId", args: [] };
      case "getBlockNumber":
        return { method: "eth_blockNumber", args: [] };
      case "getGasPrice":
        return { method: "eth_gasPrice", args: [] };
      case "getPriorityFee":
        return { method: "eth_maxPriorityFeePerGas", args: [] };
      case "getBalance":
        return {
          method: "eth_getBalance",
          args: [pa(n.address), n.blockTag]
        };
      case "getTransactionCount":
        return {
          method: "eth_getTransactionCount",
          args: [pa(n.address), n.blockTag]
        };
      case "getCode":
        return {
          method: "eth_getCode",
          args: [pa(n.address), n.blockTag]
        };
      case "getStorage":
        return {
          method: "eth_getStorageAt",
          args: [
            pa(n.address),
            "0x" + n.position.toString(16),
            n.blockTag
          ]
        };
      case "broadcastTransaction":
        return {
          method: "eth_sendRawTransaction",
          args: [n.signedTransaction]
        };
      case "getBlock":
        if ("blockTag" in n)
          return {
            method: "eth_getBlockByNumber",
            args: [n.blockTag, !!n.includeTransactions]
          };
        if ("blockHash" in n)
          return {
            method: "eth_getBlockByHash",
            args: [n.blockHash, !!n.includeTransactions]
          };
        break;
      case "getTransaction":
        return {
          method: "eth_getTransactionByHash",
          args: [n.hash]
        };
      case "getTransactionReceipt":
        return {
          method: "eth_getTransactionReceipt",
          args: [n.hash]
        };
      case "call":
        return {
          method: "eth_call",
          args: [this.getRpcTransaction(n.transaction), n.blockTag]
        };
      case "estimateGas":
        return {
          method: "eth_estimateGas",
          args: [this.getRpcTransaction(n.transaction)]
        };
      case "getLogs":
        return n.filter && n.filter.address != null && (Array.isArray(n.filter.address) ? n.filter.address = n.filter.address.map(pa) : n.filter.address = pa(n.filter.address)), { method: "eth_getLogs", args: [n.filter] };
    }
    return null;
  }
  /**
   *  Returns an ethers-style Error for the given JSON-RPC error
   *  %%payload%%, coalescing the various strings and error shapes
   *  that different nodes return, coercing them into a machine-readable
   *  standardized error.
   */
  getRpcError(n, r) {
    const { method: s } = n, { error: i } = r;
    if (s === "eth_estimateGas" && i.message) {
      const c = i.message;
      if (!c.match(/revert/i) && c.match(/insufficient funds/i))
        return Rt("insufficient funds", "INSUFFICIENT_FUNDS", {
          transaction: n.params[0],
          info: { payload: n, error: i }
        });
    }
    if (s === "eth_call" || s === "eth_estimateGas") {
      const c = ap(i), u = iu.getBuiltinCallException(s === "eth_call" ? "call" : "estimateGas", n.params[0], c ? c.data : null);
      return u.info = { error: i, payload: n }, u;
    }
    const o = JSON.stringify(Lx(i));
    if (typeof i.message == "string" && i.message.match(/user denied|ethers-user-denied/i))
      return Rt("user rejected action", "ACTION_REJECTED", {
        action: {
          eth_sign: "signMessage",
          personal_sign: "signMessage",
          eth_signTypedData_v4: "signTypedData",
          eth_signTransaction: "signTransaction",
          eth_sendTransaction: "sendTransaction",
          eth_requestAccounts: "requestAccess",
          wallet_requestAccounts: "requestAccess"
        }[s] || "unknown",
        reason: "rejected",
        info: { payload: n, error: i }
      });
    if (s === "eth_sendRawTransaction" || s === "eth_sendTransaction") {
      const c = n.params[0];
      if (o.match(/insufficient funds|base fee exceeds gas limit/i))
        return Rt("insufficient funds for intrinsic transaction cost", "INSUFFICIENT_FUNDS", {
          transaction: c,
          info: { error: i }
        });
      if (o.match(/nonce/i) && o.match(/too low/i))
        return Rt("nonce has already been used", "NONCE_EXPIRED", { transaction: c, info: { error: i } });
      if (o.match(/replacement transaction/i) && o.match(/underpriced/i))
        return Rt("replacement fee too low", "REPLACEMENT_UNDERPRICED", { transaction: c, info: { error: i } });
      if (o.match(/only replay-protected/i))
        return Rt("legacy pre-eip-155 transactions not supported", "UNSUPPORTED_OPERATION", {
          operation: s,
          info: { transaction: c, info: { error: i } }
        });
    }
    let a = !!o.match(/the method .* does not exist/i);
    return a || i && i.details && i.details.startsWith("Unauthorized method:") && (a = !0), a ? Rt("unsupported operation", "UNSUPPORTED_OPERATION", {
      operation: n.method,
      info: { error: i, payload: n }
    }) : Rt("could not coalesce error", "UNKNOWN_ERROR", { error: i, payload: n });
  }
  /**
   *  Requests the %%method%% with %%params%% via the JSON-RPC protocol
   *  over the underlying channel. This can be used to call methods
   *  on the backend that do not have a high-level API within the Provider
   *  API.
   *
   *  This method queues requests according to the batch constraints
   *  in the options, assigns the request a unique ID.
   *
   *  **Do NOT override** this method in sub-classes; instead
   *  override [[_send]] or force the options values in the
   *  call to the constructor to modify this method's behavior.
   */
  send(n, r) {
    if (this.destroyed)
      return Promise.reject(Rt("provider destroyed; cancelled request", "UNSUPPORTED_OPERATION", { operation: n }));
    const s = wc(this, vl)._++, i = new Promise((o, a) => {
      O(this, Us).push({
        resolve: o,
        reject: a,
        payload: { method: n, params: r, id: s, jsonrpc: "2.0" }
      });
    });
    return ne(this, yu, op).call(this), i;
  }
  /**
   *  Resolves to the [[Signer]] account for  %%address%% managed by
   *  the client.
   *
   *  If the %%address%% is a number, it is used as an index in the
   *  the accounts from [[listAccounts]].
   *
   *  This can only be used on clients which manage accounts (such as
   *  Geth with imported account or MetaMask).
   *
   *  Throws if the account doesn't exist.
   */
  async getSigner(n) {
    n == null && (n = 0);
    const r = this.send("eth_accounts", []);
    if (typeof n == "number") {
      const i = await r;
      if (n >= i.length)
        throw new Error("no such account");
      return new od(this, i[n]);
    }
    const { accounts: s } = await Sn({
      network: this.getNetwork(),
      accounts: r
    });
    n = gt(n);
    for (const i of s)
      if (gt(i) === n)
        return new od(this, n);
    throw new Error("invalid account");
  }
  async listAccounts() {
    return (await this.send("eth_accounts", [])).map((r) => new od(this, r));
  }
  destroy() {
    O(this, Xr) && (clearTimeout(O(this, Xr)), R(this, Xr, null));
    for (const { payload: n, reject: r } of O(this, Us))
      r(Rt("provider destroyed; cancelled request", "UNSUPPORTED_OPERATION", { operation: n.method }));
    R(this, Us, []), super.destroy();
  }
}
$o = new WeakMap(), vl = new WeakMap(), Us = new WeakMap(), Xr = new WeakMap(), Ir = new WeakMap(), dr = new WeakMap(), Un = new WeakMap(), yu = new WeakSet(), op = function() {
  if (O(this, Xr))
    return;
  const n = this._getOption("batchMaxCount") === 1 ? 0 : this._getOption("batchStallTime");
  R(this, Xr, setTimeout(() => {
    R(this, Xr, null);
    const r = O(this, Us);
    for (R(this, Us, []); r.length; ) {
      const s = [r.shift()];
      for (; r.length && s.length !== O(this, $o).batchMaxCount; )
        if (s.push(r.shift()), JSON.stringify(s.map((o) => o.payload)).length > O(this, $o).batchMaxSize) {
          r.unshift(s.pop());
          break;
        }
      (async () => {
        const i = s.length === 1 ? s[0].payload : s.map((o) => o.payload);
        this.emit("debug", { action: "sendRpcPayload", payload: i });
        try {
          const o = await this._send(i);
          this.emit("debug", { action: "receiveRpcResult", result: o });
          for (const { resolve: a, reject: c, payload: u } of s) {
            if (this.destroyed) {
              c(Rt("provider destroyed; cancelled request", "UNSUPPORTED_OPERATION", { operation: u.method }));
              continue;
            }
            const f = o.filter((l) => l.id === u.id)[0];
            if (f == null) {
              const l = Rt("missing response for request", "BAD_DATA", {
                value: o,
                info: { payload: u }
              });
              this.emit("error", l), c(l);
              continue;
            }
            if ("error" in f) {
              c(this.getRpcError(u, f));
              continue;
            }
            a(f.result);
          }
        } catch (o) {
          this.emit("debug", { action: "receiveRpcError", error: o });
          for (const { reject: a } of s)
            a(o);
        }
      })();
    }
  }, n));
};
var Bi;
class Zw extends Bx {
  constructor(n, r) {
    super(n, r);
    z(this, Bi);
    let s = this._getOption("pollingInterval");
    s == null && (s = Qw.pollingInterval), R(this, Bi, s);
  }
  _getSubscriber(n) {
    const r = super._getSubscriber(n);
    return Y0(r) && (r.pollingInterval = O(this, Bi)), r;
  }
  /**
   *  The polling interval (default: 4000 ms)
   */
  get pollingInterval() {
    return O(this, Bi);
  }
  set pollingInterval(n) {
    if (!Number.isInteger(n) || n < 0)
      throw new Error("invalid interval");
    R(this, Bi, n), this._forEachSubscriber((r) => {
      Y0(r) && (r.pollingInterval = O(this, Bi));
    });
  }
}
Bi = new WeakMap();
var _l;
class Jw extends Zw {
  constructor(n, r, s) {
    n == null && (n = "http://localhost:8545");
    super(r, s);
    z(this, _l);
    typeof n == "string" ? R(this, _l, new zs(n)) : R(this, _l, n.clone());
  }
  _getConnection() {
    return O(this, _l).clone();
  }
  async send(n, r) {
    return await this._start(), await super.send(n, r);
  }
  async _send(n) {
    const r = this._getConnection();
    r.body = JSON.stringify(n), r.setHeader("content-type", "application/json");
    const s = await r.send();
    s.assertOk();
    let i = s.bodyJson;
    return Array.isArray(i) || (i = [i]), i;
  }
}
_l = new WeakMap();
function ap(t) {
  if (t == null)
    return null;
  if (typeof t.message == "string" && t.message.match(/revert/i) && wt(t.data))
    return { message: t.message, data: t.data };
  if (typeof t == "object") {
    for (const e in t) {
      const n = ap(t[e]);
      if (n)
        return n;
    }
    return null;
  }
  if (typeof t == "string")
    try {
      return ap(JSON.parse(t));
    } catch {
    }
  return null;
}
function lp(t, e) {
  if (t != null) {
    if (typeof t.message == "string" && e.push(t.message), typeof t == "object")
      for (const n in t)
        lp(t[n], e);
    if (typeof t == "string")
      try {
        return lp(JSON.parse(t), e);
      } catch {
      }
  }
}
function Lx(t) {
  const e = [];
  return lp(t, e), e;
}
var Al;
class Mx extends Zw {
  /**
   *  Connnect to the %%ethereum%% provider, optionally forcing the
   *  %%network%%.
   */
  constructor(n, r, s) {
    const i = Object.assign({}, s ?? {}, { batchMaxCount: 1 });
    D(n && n.request, "invalid EIP-1193 provider", "ethereum", n);
    super(r, i);
    z(this, Al);
    R(this, Al, async (o, a) => {
      const c = { method: o, params: a };
      this.emit("debug", { action: "sendEip1193Request", payload: c });
      try {
        const u = await n.request(c);
        return this.emit("debug", { action: "receiveEip1193Result", result: u }), u;
      } catch (u) {
        const f = new Error(u.message);
        throw f.code = u.code, f.data = u.data, f.payload = c, this.emit("debug", { action: "receiveEip1193Error", error: f }), f;
      }
    });
  }
  async send(n, r) {
    return await this._start(), await super.send(n, r);
  }
  async _send(n) {
    D(!Array.isArray(n), "EIP-1193 does not support batch request", "payload", n);
    try {
      const r = await O(this, Al).call(this, n.method, n.params || []);
      return [{ id: n.id, result: r }];
    } catch (r) {
      return [{
        id: n.id,
        error: { code: r.code, data: r.data, message: r.message }
      }];
    }
  }
  getRpcError(n, r) {
    switch (r = JSON.parse(JSON.stringify(r)), r.error.code || -1) {
      case 4001:
        r.error.message = `ethers-user-denied: ${r.error.message}`;
        break;
      case 4200:
        r.error.message = `ethers-unsupported: ${r.error.message}`;
        break;
    }
    return super.getRpcError(n, r);
  }
  /**
   *  Resolves to ``true`` if the provider manages the %%address%%.
   */
  async hasSigner(n) {
    n == null && (n = 0);
    const r = await this.send("eth_accounts", []);
    return typeof n == "number" ? r.length > n : (n = n.toLowerCase(), r.filter((s) => s.toLowerCase() === n).length !== 0);
  }
  async getSigner(n) {
    if (n == null && (n = 0), !await this.hasSigner(n))
      try {
        await O(this, Al).call(this, "eth_requestAccounts", []);
      } catch (r) {
        const s = r.payload;
        throw this.getRpcError(s, { id: s.id, error: r });
      }
    return await super.getSigner(n);
  }
}
Al = new WeakMap();
const Ul = {};
function rS(t) {
  const e = Ul[t];
  return e || console.error(`Chain config for ${t} not found`), e;
}
const Fc = {}, Dx = new Promise((t) => {
  Fc.WEB3_ONBOARD_INIT = { resolver: t, data: null };
});
function $x() {
  return Fc.WEB3_ONBOARD_INIT.resolver;
}
async function sS() {
  return Fc.WEB3_ONBOARD_INIT.data || (Fc.WEB3_ONBOARD_INIT.data = await Dx), Fc.WEB3_ONBOARD_INIT.data;
}
const Ux = () => {
  var r, s;
  const [{ wallet: t }] = em(), e = (r = ((t == null ? void 0 : t.accounts) || [])[0]) == null ? void 0 : r.address, n = (s = ((t == null ? void 0 : t.chains) || [])[0]) == null ? void 0 : s.id;
  return {
    address: e,
    chainId: n
  };
}, jx = () => {
  const [{ wallet: t }] = em(), [e, n] = ji(null), r = Ui(
    async (i, o, a, c) => {
      n(null);
      try {
        const u = Ul[i];
        if (!u)
          return n(`Chain with ID ${i} not found in ChainConstants.`), null;
        const f = new Jw(u.rpcUrl), l = new $i(o, [a], f), m = a.split("(")[0].trim();
        return m in l ? await l[m](...c) : (n(`Method ${m} not found in contract.`), null);
      } catch (u) {
        return console.error("Error calling method:", u), n(u.message), null;
      }
    },
    []
  ), s = Ui(
    async (i, o, a) => {
      n(null);
      try {
        if (!(t != null && t.provider))
          return n("No wallet connected. Please connect your wallet."), null;
        const u = await new Mx(t.provider).getSigner(), f = new $i(i, [o], u), l = o.split("(")[0].trim();
        if (!(l in f))
          return n(`Method ${l} not found in contract.`), null;
        const m = await f[l](...a);
        return await m.wait(), m;
      } catch (c) {
        return console.error("Error executing method:", c), n(c.message), null;
      }
    },
    [t]
  );
  return { callMethod: r, execute: s, error: e };
}, ad = {};
function Fx(t, e) {
  const [n, r] = ji(null), [s, i] = ji(null);
  lf(() => {
    if (!t || !e) return;
    (async () => {
      try {
        if (ad[t]) {
          r(ad[t]);
          return;
        }
        const u = Ul[e];
        if (!u || !u.rpcUrl) {
          i("Invalid chain configuration");
          return;
        }
        const f = new Jw(u.rpcUrl), l = new $i(t, [
          "function name() view returns (string)",
          "function symbol() view returns (string)",
          "function decimals() view returns (uint8)"
        ], f), [m, p, d] = await Promise.all([
          l.name(),
          l.symbol(),
          l.decimals()
        ]), h = { name: m, symbol: p, decimals: d };
        ad[t] = h, r(h);
      } catch (u) {
        console.error(u), i("Failed to fetch token data.");
      }
    })();
  }, [t, e]);
  const o = Ui(
    (c) => n ? GE(c.toString(), n.decimals) : (console.warn("Token data is not loaded yet. Returning null."), null),
    [n]
  ), a = Ui(
    (c) => n ? WE(c.toString(), n.decimals) : (console.warn("Token data is not loaded yet. Returning null."), null),
    [n]
  );
  return { tokenData: n, error: s, toMachineReadable: o, toHumanReadable: a };
}
const ld = {
  ALLOWANCE: "function allowance(address owner, address spender) view returns (uint256)",
  TRANSFER: "function transfer(address to, uint256 value) returns (bool)",
  TRANSFER_FROM: "function transferFrom(address from, address to, uint256 value) returns (bool)",
  APPROVE: "function approve(address spender, uint256 value) returns (bool)",
  DECIMALS: "function decimals() view returns (uint8)",
  NAME: "function name() view returns (string)",
  SYMBOL: "function symbol() view returns (string)"
}, iS = ({
  chainId: t,
  token: e,
  amount: n,
  spender: r,
  approveButton: s,
  actionButton: i,
  unknownState: o
}) => {
  const [a, c] = ji(null), [u, f] = ji(!1), [{ wallet: l }, m] = em(), { callMethod: p, execute: d } = jx(), { address: h } = Ux(), { toMachineReadable: b } = Fx(e, t), g = async () => {
    try {
      if (!t || !e || !n || !r || !h) {
        console.error("Invalid parameters provided or wallet not connected.");
        return;
      }
      const w = await p(t, e, ld.ALLOWANCE, [h, r]), _ = b(n);
      _ && c(w < _);
    } catch (w) {
      console.error("Error checking approval:", w), c(null);
    }
  }, y = async () => {
    try {
      if (!l) {
        console.error("Wallet not connected."), await m();
        return;
      }
      f(!0);
      const w = b(n), _ = await d(e, ld.APPROVE, [r, w]);
      console.log("approve tx executed", _);
      const E = setInterval(async () => {
        try {
          const k = await p(t, e, ld.ALLOWANCE, [h, r]);
          console.log("allowance received", k), k.gte(w) && (f(!1), c(!1), clearInterval(E));
        } catch (k) {
          console.error("Error while checking approval status:", k);
        }
      }, 3e3);
    } catch (w) {
      console.error("Error during approval:", w), f(!1);
    }
  };
  return lf(() => {
    g();
  }, [t, e, n, r, l]), a === null ? o : a ? s(y, u) : i;
};
var Wu = { exports: {} }, Cc = {};
/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var X0;
function Hx() {
  if (X0) return Cc;
  X0 = 1;
  var t = Symbol.for("react.transitional.element"), e = Symbol.for("react.fragment");
  function n(r, s, i) {
    var o = null;
    if (i !== void 0 && (o = "" + i), s.key !== void 0 && (o = "" + s.key), "key" in s) {
      i = {};
      for (var a in s)
        a !== "key" && (i[a] = s[a]);
    } else i = s;
    return s = i.ref, {
      $$typeof: t,
      type: r,
      key: o,
      ref: s !== void 0 ? s : null,
      props: i
    };
  }
  return Cc.Fragment = e, Cc.jsx = n, Cc.jsxs = n, Cc;
}
var kc = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var e1;
function Wx() {
  return e1 || (e1 = 1, process.env.NODE_ENV !== "production" && function() {
    function t(L) {
      if (L == null) return null;
      if (typeof L == "function")
        return L.$$typeof === Ee ? null : L.displayName || L.name || null;
      if (typeof L == "string") return L;
      switch (L) {
        case k:
          return "Fragment";
        case E:
          return "Portal";
        case A:
          return "Profiler";
        case S:
          return "StrictMode";
        case F:
          return "Suspense";
        case V:
          return "SuspenseList";
      }
      if (typeof L == "object")
        switch (typeof L.tag == "number" && console.error(
          "Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."
        ), L.$$typeof) {
          case T:
            return (L.displayName || "Context") + ".Provider";
          case x:
            return (L._context.displayName || "Context") + ".Consumer";
          case N:
            var de = L.render;
            return L = L.displayName, L || (L = de.displayName || de.name || "", L = L !== "" ? "ForwardRef(" + L + ")" : "ForwardRef"), L;
          case oe:
            return de = L.displayName || null, de !== null ? de : t(L.type) || "Memo";
          case H:
            de = L._payload, L = L._init;
            try {
              return t(L(de));
            } catch {
            }
        }
      return null;
    }
    function e(L) {
      return "" + L;
    }
    function n(L) {
      try {
        e(L);
        var de = !1;
      } catch {
        de = !0;
      }
      if (de) {
        de = console;
        var fe = de.error, Le = typeof Symbol == "function" && Symbol.toStringTag && L[Symbol.toStringTag] || L.constructor.name || "Object";
        return fe.call(
          de,
          "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.",
          Le
        ), e(L);
      }
    }
    function r() {
    }
    function s() {
      if (xe === 0) {
        Ve = console.log, Pe = console.info, Ne = console.warn, ce = console.error, Fe = console.group, ct = console.groupCollapsed, Xe = console.groupEnd;
        var L = {
          configurable: !0,
          enumerable: !0,
          value: r,
          writable: !0
        };
        Object.defineProperties(console, {
          info: L,
          log: L,
          warn: L,
          error: L,
          group: L,
          groupCollapsed: L,
          groupEnd: L
        });
      }
      xe++;
    }
    function i() {
      if (xe--, xe === 0) {
        var L = { configurable: !0, enumerable: !0, writable: !0 };
        Object.defineProperties(console, {
          log: ve({}, L, { value: Ve }),
          info: ve({}, L, { value: Pe }),
          warn: ve({}, L, { value: Ne }),
          error: ve({}, L, { value: ce }),
          group: ve({}, L, { value: Fe }),
          groupCollapsed: ve({}, L, { value: ct }),
          groupEnd: ve({}, L, { value: Xe })
        });
      }
      0 > xe && console.error(
        "disabledDepth fell below zero. This is a bug in React. Please file an issue."
      );
    }
    function o(L) {
      if (kt === void 0)
        try {
          throw Error();
        } catch (fe) {
          var de = fe.stack.trim().match(/\n( *(at )?)/);
          kt = de && de[1] || "", Ze = -1 < fe.stack.indexOf(`
    at`) ? " (<anonymous>)" : -1 < fe.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
      return `
` + kt + L + Ze;
    }
    function a(L, de) {
      if (!L || St) return "";
      var fe = Dn.get(L);
      if (fe !== void 0) return fe;
      St = !0, fe = Error.prepareStackTrace, Error.prepareStackTrace = void 0;
      var Le = null;
      Le = pe.H, pe.H = null, s();
      try {
        var It = {
          DetermineComponentFrameRoot: function() {
            try {
              if (de) {
                var bn = function() {
                  throw Error();
                };
                if (Object.defineProperty(bn.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                }), typeof Reflect == "object" && Reflect.construct) {
                  try {
                    Reflect.construct(bn, []);
                  } catch (dt) {
                    var Lt = dt;
                  }
                  Reflect.construct(L, [], bn);
                } else {
                  try {
                    bn.call();
                  } catch (dt) {
                    Lt = dt;
                  }
                  L.call(bn.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (dt) {
                  Lt = dt;
                }
                (bn = L()) && typeof bn.catch == "function" && bn.catch(function() {
                });
              }
            } catch (dt) {
              if (dt && Lt && typeof dt.stack == "string")
                return [dt.stack, Lt.stack];
            }
            return [null, null];
          }
        };
        It.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
        var ft = Object.getOwnPropertyDescriptor(
          It.DetermineComponentFrameRoot,
          "name"
        );
        ft && ft.configurable && Object.defineProperty(
          It.DetermineComponentFrameRoot,
          "name",
          { value: "DetermineComponentFrameRoot" }
        );
        var Oe = It.DetermineComponentFrameRoot(), Ft = Oe[0], Gn = Oe[1];
        if (Ft && Gn) {
          var vt = Ft.split(`
`), Jt = Gn.split(`
`);
          for (Oe = ft = 0; ft < vt.length && !vt[ft].includes(
            "DetermineComponentFrameRoot"
          ); )
            ft++;
          for (; Oe < Jt.length && !Jt[Oe].includes(
            "DetermineComponentFrameRoot"
          ); )
            Oe++;
          if (ft === vt.length || Oe === Jt.length)
            for (ft = vt.length - 1, Oe = Jt.length - 1; 1 <= ft && 0 <= Oe && vt[ft] !== Jt[Oe]; )
              Oe--;
          for (; 1 <= ft && 0 <= Oe; ft--, Oe--)
            if (vt[ft] !== Jt[Oe]) {
              if (ft !== 1 || Oe !== 1)
                do
                  if (ft--, Oe--, 0 > Oe || vt[ft] !== Jt[Oe]) {
                    var zn = `
` + vt[ft].replace(
                      " at new ",
                      " at "
                    );
                    return L.displayName && zn.includes("<anonymous>") && (zn = zn.replace("<anonymous>", L.displayName)), typeof L == "function" && Dn.set(L, zn), zn;
                  }
                while (1 <= ft && 0 <= Oe);
              break;
            }
        }
      } finally {
        St = !1, pe.H = Le, i(), Error.prepareStackTrace = fe;
      }
      return vt = (vt = L ? L.displayName || L.name : "") ? o(vt) : "", typeof L == "function" && Dn.set(L, vt), vt;
    }
    function c(L) {
      if (L == null) return "";
      if (typeof L == "function") {
        var de = L.prototype;
        return a(
          L,
          !(!de || !de.isReactComponent)
        );
      }
      if (typeof L == "string") return o(L);
      switch (L) {
        case F:
          return o("Suspense");
        case V:
          return o("SuspenseList");
      }
      if (typeof L == "object")
        switch (L.$$typeof) {
          case N:
            return L = a(L.render, !1), L;
          case oe:
            return c(L.type);
          case H:
            de = L._payload, L = L._init;
            try {
              return c(L(de));
            } catch {
            }
        }
      return "";
    }
    function u() {
      var L = pe.A;
      return L === null ? null : L.getOwner();
    }
    function f(L) {
      if (Re.call(L, "key")) {
        var de = Object.getOwnPropertyDescriptor(L, "key").get;
        if (de && de.isReactWarning) return !1;
      }
      return L.key !== void 0;
    }
    function l(L, de) {
      function fe() {
        $r || ($r = !0, console.error(
          "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)",
          de
        ));
      }
      fe.isReactWarning = !0, Object.defineProperty(L, "key", {
        get: fe,
        configurable: !0
      });
    }
    function m() {
      var L = t(this.type);
      return Js[L] || (Js[L] = !0, console.error(
        "Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."
      )), L = this.props.ref, L !== void 0 ? L : null;
    }
    function p(L, de, fe, Le, It, ft) {
      return fe = ft.ref, L = {
        $$typeof: _,
        type: L,
        key: de,
        props: ft,
        _owner: It
      }, (fe !== void 0 ? fe : null) !== null ? Object.defineProperty(L, "ref", {
        enumerable: !1,
        get: m
      }) : Object.defineProperty(L, "ref", { enumerable: !1, value: null }), L._store = {}, Object.defineProperty(L._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: 0
      }), Object.defineProperty(L, "_debugInfo", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: null
      }), Object.freeze && (Object.freeze(L.props), Object.freeze(L)), L;
    }
    function d(L, de, fe, Le, It, ft) {
      if (typeof L == "string" || typeof L == "function" || L === k || L === A || L === S || L === F || L === V || L === Q || typeof L == "object" && L !== null && (L.$$typeof === H || L.$$typeof === oe || L.$$typeof === T || L.$$typeof === x || L.$$typeof === N || L.$$typeof === Se || L.getModuleId !== void 0)) {
        var Oe = de.children;
        if (Oe !== void 0)
          if (Le)
            if (ee(Oe)) {
              for (Le = 0; Le < Oe.length; Le++)
                h(Oe[Le], L);
              Object.freeze && Object.freeze(Oe);
            } else
              console.error(
                "React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead."
              );
          else h(Oe, L);
      } else
        Oe = "", (L === void 0 || typeof L == "object" && L !== null && Object.keys(L).length === 0) && (Oe += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."), L === null ? Le = "null" : ee(L) ? Le = "array" : L !== void 0 && L.$$typeof === _ ? (Le = "<" + (t(L.type) || "Unknown") + " />", Oe = " Did you accidentally export a JSX literal instead of a component?") : Le = typeof L, console.error(
          "React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",
          Le,
          Oe
        );
      if (Re.call(de, "key")) {
        Oe = t(L);
        var Ft = Object.keys(de).filter(function(vt) {
          return vt !== "key";
        });
        Le = 0 < Ft.length ? "{key: someKey, " + Ft.join(": ..., ") + ": ...}" : "{key: someKey}", Ks[Oe + Le] || (Ft = 0 < Ft.length ? "{" + Ft.join(": ..., ") + ": ...}" : "{}", console.error(
          `A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`,
          Le,
          Oe,
          Ft,
          Oe
        ), Ks[Oe + Le] = !0);
      }
      if (Oe = null, fe !== void 0 && (n(fe), Oe = "" + fe), f(de) && (n(de.key), Oe = "" + de.key), "key" in de) {
        fe = {};
        for (var Gn in de)
          Gn !== "key" && (fe[Gn] = de[Gn]);
      } else fe = de;
      return Oe && l(
        fe,
        typeof L == "function" ? L.displayName || L.name || "Unknown" : L
      ), p(L, Oe, ft, It, u(), fe);
    }
    function h(L, de) {
      if (typeof L == "object" && L && L.$$typeof !== sr) {
        if (ee(L))
          for (var fe = 0; fe < L.length; fe++) {
            var Le = L[fe];
            b(Le) && g(Le, de);
          }
        else if (b(L))
          L._store && (L._store.validated = 1);
        else if (L === null || typeof L != "object" ? fe = null : (fe = ae && L[ae] || L["@@iterator"], fe = typeof fe == "function" ? fe : null), typeof fe == "function" && fe !== L.entries && (fe = fe.call(L), fe !== L))
          for (; !(L = fe.next()).done; )
            b(L.value) && g(L.value, de);
      }
    }
    function b(L) {
      return typeof L == "object" && L !== null && L.$$typeof === _;
    }
    function g(L, de) {
      if (L._store && !L._store.validated && L.key == null && (L._store.validated = 1, de = y(de), !wr[de])) {
        wr[de] = !0;
        var fe = "";
        L && L._owner != null && L._owner !== u() && (fe = null, typeof L._owner.tag == "number" ? fe = t(L._owner.type) : typeof L._owner.name == "string" && (fe = L._owner.name), fe = " It was passed a child from " + fe + ".");
        var Le = pe.getCurrentStack;
        pe.getCurrentStack = function() {
          var It = c(L.type);
          return Le && (It += Le() || ""), It;
        }, console.error(
          'Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.',
          de,
          fe
        ), pe.getCurrentStack = Le;
      }
    }
    function y(L) {
      var de = "", fe = u();
      return fe && (fe = t(fe.type)) && (de = `

Check the render method of \`` + fe + "`."), de || (L = t(L)) && (de = `

Check the top-level render call using <` + L + ">."), de;
    }
    var w = up, _ = Symbol.for("react.transitional.element"), E = Symbol.for("react.portal"), k = Symbol.for("react.fragment"), S = Symbol.for("react.strict_mode"), A = Symbol.for("react.profiler"), x = Symbol.for("react.consumer"), T = Symbol.for("react.context"), N = Symbol.for("react.forward_ref"), F = Symbol.for("react.suspense"), V = Symbol.for("react.suspense_list"), oe = Symbol.for("react.memo"), H = Symbol.for("react.lazy"), Q = Symbol.for("react.offscreen"), ae = Symbol.iterator, Ee = Symbol.for("react.client.reference"), pe = w.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, Re = Object.prototype.hasOwnProperty, ve = Object.assign, Se = Symbol.for("react.client.reference"), ee = Array.isArray, xe = 0, Ve, Pe, Ne, ce, Fe, ct, Xe;
    r.__reactDisabledLog = !0;
    var kt, Ze, St = !1, Dn = new (typeof WeakMap == "function" ? WeakMap : Map)(), sr = Symbol.for("react.client.reference"), $r, Js = {}, Ks = {}, wr = {};
    kc.Fragment = k, kc.jsx = function(L, de, fe, Le, It) {
      return d(L, de, fe, !1, Le, It);
    }, kc.jsxs = function(L, de, fe, Le, It) {
      return d(L, de, fe, !0, Le, It);
    };
  }()), kc;
}
var t1;
function Gx() {
  return t1 || (t1 = 1, process.env.NODE_ENV === "production" ? Wu.exports = Hx() : Wu.exports = Wx()), Wu.exports;
}
var cd = Gx(), Dc = { exports: {} };
Dc.exports;
var n1;
function zx() {
  return n1 || (n1 = 1, function(t, e) {
    var n = 200, r = "Expected a function", s = "__lodash_hash_undefined__", i = 1, o = 2, a = 1 / 0, c = 9007199254740991, u = "[object Arguments]", f = "[object Array]", l = "[object Boolean]", m = "[object Date]", p = "[object Error]", d = "[object Function]", h = "[object GeneratorFunction]", b = "[object Map]", g = "[object Number]", y = "[object Object]", w = "[object Promise]", _ = "[object RegExp]", E = "[object Set]", k = "[object String]", S = "[object Symbol]", A = "[object WeakMap]", x = "[object ArrayBuffer]", T = "[object DataView]", N = "[object Float32Array]", F = "[object Float64Array]", V = "[object Int8Array]", oe = "[object Int16Array]", H = "[object Int32Array]", Q = "[object Uint8Array]", ae = "[object Uint8ClampedArray]", Ee = "[object Uint16Array]", pe = "[object Uint32Array]", Re = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, ve = /^\w*$/, Se = /^\./, ee = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, xe = /[\\^$.*+?()[\]{}|]/g, Ve = /\\(\\)?/g, Pe = /^\[object .+?Constructor\]$/, Ne = /^(?:0|[1-9]\d*)$/, ce = {};
    ce[N] = ce[F] = ce[V] = ce[oe] = ce[H] = ce[Q] = ce[ae] = ce[Ee] = ce[pe] = !0, ce[u] = ce[f] = ce[x] = ce[l] = ce[T] = ce[m] = ce[p] = ce[d] = ce[b] = ce[g] = ce[y] = ce[_] = ce[E] = ce[k] = ce[A] = !1;
    var Fe = typeof mr == "object" && mr && mr.Object === Object && mr, ct = typeof self == "object" && self && self.Object === Object && self, Xe = Fe || ct || Function("return this")(), kt = e && !e.nodeType && e, Ze = kt && !0 && t && !t.nodeType && t, St = Ze && Ze.exports === kt, Dn = St && Fe.process, sr = function() {
      try {
        return Dn && Dn.binding("util");
      } catch {
      }
    }(), $r = sr && sr.isTypedArray;
    function Js(v, C) {
      var P = v ? v.length : 0;
      return !!P && L(v, C, 0) > -1;
    }
    function Ks(v, C) {
      for (var P = -1, $ = v ? v.length : 0; ++P < $; )
        if (C(v[P], P, v))
          return !0;
      return !1;
    }
    function wr(v, C, P, $) {
      for (var te = v.length, q = P + -1; ++q < te; )
        if (C(v[q], q, v))
          return q;
      return -1;
    }
    function L(v, C, P) {
      if (C !== C)
        return wr(v, de, P);
      for (var $ = P - 1, te = v.length; ++$ < te; )
        if (v[$] === C)
          return $;
      return -1;
    }
    function de(v) {
      return v !== v;
    }
    function fe(v) {
      return function(C) {
        return C == null ? void 0 : C[v];
      };
    }
    function Le(v, C) {
      for (var P = -1, $ = Array(v); ++P < v; )
        $[P] = C(P);
      return $;
    }
    function It(v) {
      return function(C) {
        return v(C);
      };
    }
    function ft(v, C) {
      return v.has(C);
    }
    function Oe(v, C) {
      return v == null ? void 0 : v[C];
    }
    function Ft(v) {
      var C = !1;
      if (v != null && typeof v.toString != "function")
        try {
          C = !!(v + "");
        } catch {
        }
      return C;
    }
    function Gn(v) {
      var C = -1, P = Array(v.size);
      return v.forEach(function($, te) {
        P[++C] = [te, $];
      }), P;
    }
    function vt(v, C) {
      return function(P) {
        return v(C(P));
      };
    }
    function Jt(v) {
      var C = -1, P = Array(v.size);
      return v.forEach(function($) {
        P[++C] = $;
      }), P;
    }
    var zn = Array.prototype, bn = Function.prototype, Lt = Object.prototype, dt = Xe["__core-js_shared__"], fs = function() {
      var v = /[^.]+$/.exec(dt && dt.keys && dt.keys.IE_PROTO || "");
      return v ? "Symbol(src)_1." + v : "";
    }(), Qi = bn.toString, yn = Lt.hasOwnProperty, Ur = Lt.toString, Xo = RegExp(
      "^" + Qi.call(yn).replace(xe, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    ), jr = Xe.Symbol, Ys = Xe.Uint8Array, wn = Lt.propertyIsEnumerable, Zi = zn.splice, Ji = vt(Object.keys, Object), hs = ir(Xe, "DataView"), Vn = ir(Xe, "Map"), Ki = ir(Xe, "Promise"), Kt = ir(Xe, "Set"), Yi = ir(Xe, "WeakMap"), ds = ir(Object, "create"), ql = I(hs), Xs = I(Vn), Xi = I(Ki), vr = I(Kt), _r = I(Yi), ei = jr ? jr.prototype : void 0, eo = ei ? ei.valueOf : void 0, ea = ei ? ei.toString : void 0;
    function Ar(v) {
      var C = -1, P = v ? v.length : 0;
      for (this.clear(); ++C < P; ) {
        var $ = v[C];
        this.set($[0], $[1]);
      }
    }
    function Fr() {
      this.__data__ = ds ? ds(null) : {};
    }
    function qn(v) {
      return this.has(v) && delete this.__data__[v];
    }
    function Ql(v) {
      var C = this.__data__;
      if (ds) {
        var P = C[v];
        return P === s ? void 0 : P;
      }
      return yn.call(C, v) ? C[v] : void 0;
    }
    function Zl(v) {
      var C = this.__data__;
      return ds ? C[v] !== void 0 : yn.call(C, v);
    }
    function Jl(v, C) {
      var P = this.__data__;
      return P[v] = ds && C === void 0 ? s : C, this;
    }
    Ar.prototype.clear = Fr, Ar.prototype.delete = qn, Ar.prototype.get = Ql, Ar.prototype.has = Zl, Ar.prototype.set = Jl;
    function Qn(v) {
      var C = -1, P = v ? v.length : 0;
      for (this.clear(); ++C < P; ) {
        var $ = v[C];
        this.set($[0], $[1]);
      }
    }
    function Kl() {
      this.__data__ = [];
    }
    function vn(v) {
      var C = this.__data__, P = si(C, v);
      if (P < 0)
        return !1;
      var $ = C.length - 1;
      return P == $ ? C.pop() : Zi.call(C, P, 1), !0;
    }
    function Yl(v) {
      var C = this.__data__, P = si(C, v);
      return P < 0 ? void 0 : C[P][1];
    }
    function ti(v) {
      return si(this.__data__, v) > -1;
    }
    function to(v, C) {
      var P = this.__data__, $ = si(P, v);
      return $ < 0 ? P.push([v, C]) : P[$][1] = C, this;
    }
    Qn.prototype.clear = Kl, Qn.prototype.delete = vn, Qn.prototype.get = Yl, Qn.prototype.has = ti, Qn.prototype.set = to;
    function Zn(v) {
      var C = -1, P = v ? v.length : 0;
      for (this.clear(); ++C < P; ) {
        var $ = v[C];
        this.set($[0], $[1]);
      }
    }
    function ni() {
      this.__data__ = {
        hash: new Ar(),
        map: new (Vn || Qn)(),
        string: new Ar()
      };
    }
    function ps(v) {
      return li(this, v).delete(v);
    }
    function Xl(v) {
      return li(this, v).get(v);
    }
    function ec(v) {
      return li(this, v).has(v);
    }
    function Jn(v, C) {
      return li(this, v).set(v, C), this;
    }
    Zn.prototype.clear = ni, Zn.prototype.delete = ps, Zn.prototype.get = Xl, Zn.prototype.has = ec, Zn.prototype.set = Jn;
    function Hr(v) {
      var C = -1, P = v ? v.length : 0;
      for (this.__data__ = new Zn(); ++C < P; )
        this.add(v[C]);
    }
    function tc(v) {
      return this.__data__.set(v, s), this;
    }
    function nc(v) {
      return this.__data__.has(v);
    }
    Hr.prototype.add = Hr.prototype.push = tc, Hr.prototype.has = nc;
    function Kn(v) {
      this.__data__ = new Qn(v);
    }
    function rc() {
      this.__data__ = new Qn();
    }
    function sc(v) {
      return this.__data__.delete(v);
    }
    function ri(v) {
      return this.__data__.get(v);
    }
    function ic(v) {
      return this.__data__.has(v);
    }
    function oc(v, C) {
      var P = this.__data__;
      if (P instanceof Qn) {
        var $ = P.__data__;
        if (!Vn || $.length < n - 1)
          return $.push([v, C]), this;
        P = this.__data__ = new Zn($);
      }
      return P.set(v, C), this;
    }
    Kn.prototype.clear = rc, Kn.prototype.delete = sc, Kn.prototype.get = ri, Kn.prototype.has = ic, Kn.prototype.set = oc;
    function ac(v, C) {
      var P = He(v) || Me(v) ? Le(v.length, String) : [], $ = P.length, te = !!$;
      for (var q in v)
        yn.call(v, q) && !(te && (q == "length" || Gr(q, $))) && P.push(q);
      return P;
    }
    function si(v, C) {
      for (var P = v.length; P--; )
        if (me(v[P][0], C))
          return P;
      return -1;
    }
    function Wr(v, C) {
      C = bs(C, v) ? [C] : sa(C);
      for (var P = 0, $ = C.length; v != null && P < $; )
        v = v[ci(C[P++])];
      return P && P == $ ? v : void 0;
    }
    function no(v) {
      return Ur.call(v);
    }
    function lc(v, C) {
      return v != null && C in Object(v);
    }
    function ms(v, C, P, $, te) {
      return v === C ? !0 : v == null || C == null || !Pt(v) && !_n(C) ? v !== v && C !== C : ta(v, C, ms, P, $, te);
    }
    function ta(v, C, P, $, te, q) {
      var le = He(v), Ie = He(C), Ce = f, Ke = f;
      le || (Ce = Yt(v), Ce = Ce == u ? y : Ce), Ie || (Ke = Yt(C), Ke = Ke == u ? y : Ke);
      var Qe = Ce == y && !Ft(v), Ye = Ke == y && !Ft(C), tt = Ce == Ke;
      if (tt && !Qe)
        return q || (q = new Kn()), le || ws(v) ? oi(v, C, P, $, te, q) : ai(v, C, Ce, P, $, te, q);
      if (!(te & o)) {
        var _t = Qe && yn.call(v, "__wrapped__"), At = Ye && yn.call(C, "__wrapped__");
        if (_t || At) {
          var an = _t ? v.value() : v, zt = At ? C.value() : C;
          return q || (q = new Kn()), P(an, zt, $, te, q);
        }
      }
      return tt ? (q || (q = new Kn()), so(v, C, P, $, te, q)) : !1;
    }
    function cc(v, C, P, $) {
      var te = P.length, q = te;
      if (v == null)
        return !q;
      for (v = Object(v); te--; ) {
        var le = P[te];
        if (le[2] ? le[1] !== v[le[0]] : !(le[0] in v))
          return !1;
      }
      for (; ++te < q; ) {
        le = P[te];
        var Ie = le[0], Ce = v[Ie], Ke = le[1];
        if (le[2]) {
          if (Ce === void 0 && !(Ie in v))
            return !1;
        } else {
          var Qe = new Kn(), Ye;
          if (!(Ye === void 0 ? ms(Ke, Ce, $, i | o, Qe) : Ye))
            return !1;
        }
      }
      return !0;
    }
    function uc(v) {
      if (!Pt(v) || gc(v))
        return !1;
      var C = ht(v) || Ft(v) ? Xo : Pe;
      return C.test(I(v));
    }
    function fc(v) {
      return _n(v) && en(v.length) && !!ce[Ur.call(v)];
    }
    function na(v) {
      return typeof v == "function" ? v : v == null ? la : typeof v == "object" ? He(v) ? pc(v[0], v[1]) : dc(v) : xh(v);
    }
    function hc(v) {
      if (!ia(v))
        return Ji(v);
      var C = [];
      for (var P in Object(v))
        yn.call(v, P) && P != "constructor" && C.push(P);
      return C;
    }
    function dc(v) {
      var C = gs(v);
      return C.length == 1 && C[0][2] ? io(C[0][0], C[0][1]) : function(P) {
        return P === v || cc(P, v, C);
      };
    }
    function pc(v, C) {
      return bs(v) && oa(C) ? io(ci(v), C) : function(P) {
        var $ = _h(P, v);
        return $ === void 0 && $ === C ? Ah(P, v) : ms(C, $, void 0, i | o);
      };
    }
    function ro(v) {
      return function(C) {
        return Wr(C, v);
      };
    }
    function mc(v) {
      if (typeof v == "string")
        return v;
      if (or(v))
        return ea ? ea.call(v) : "";
      var C = v + "";
      return C == "0" && 1 / v == -a ? "-0" : C;
    }
    function ra(v, C, P) {
      var $ = -1, te = Js, q = v.length, le = !0, Ie = [], Ce = Ie;
      if (q >= n) {
        var Ke = C ? null : ii(v);
        if (Ke)
          return Jt(Ke);
        le = !1, te = ft, Ce = new Hr();
      } else
        Ce = C ? [] : Ie;
      e:
        for (; ++$ < q; ) {
          var Qe = v[$], Ye = C ? C(Qe) : Qe;
          if (Qe = Qe !== 0 ? Qe : 0, le && Ye === Ye) {
            for (var tt = Ce.length; tt--; )
              if (Ce[tt] === Ye)
                continue e;
            C && Ce.push(Ye), Ie.push(Qe);
          } else te(Ce, Ye, P) || (Ce !== Ie && Ce.push(Ye), Ie.push(Qe));
        }
      return Ie;
    }
    function sa(v) {
      return He(v) ? v : oo(v);
    }
    var ii = Kt && 1 / Jt(new Kt([, -0]))[1] == a ? function(v) {
      return new Kt(v);
    } : Eh;
    function oi(v, C, P, $, te, q) {
      var le = te & o, Ie = v.length, Ce = C.length;
      if (Ie != Ce && !(le && Ce > Ie))
        return !1;
      var Ke = q.get(v);
      if (Ke && q.get(C))
        return Ke == C;
      var Qe = -1, Ye = !0, tt = te & i ? new Hr() : void 0;
      for (q.set(v, C), q.set(C, v); ++Qe < Ie; ) {
        var _t = v[Qe], At = C[Qe];
        if ($)
          var an = le ? $(At, _t, Qe, C, v, q) : $(_t, At, Qe, v, C, q);
        if (an !== void 0) {
          if (an)
            continue;
          Ye = !1;
          break;
        }
        if (tt) {
          if (!Ks(C, function(zt, An) {
            if (!tt.has(An) && (_t === zt || P(_t, zt, $, te, q)))
              return tt.add(An);
          })) {
            Ye = !1;
            break;
          }
        } else if (!(_t === At || P(_t, At, $, te, q))) {
          Ye = !1;
          break;
        }
      }
      return q.delete(v), q.delete(C), Ye;
    }
    function ai(v, C, P, $, te, q, le) {
      switch (P) {
        case T:
          if (v.byteLength != C.byteLength || v.byteOffset != C.byteOffset)
            return !1;
          v = v.buffer, C = C.buffer;
        case x:
          return !(v.byteLength != C.byteLength || !$(new Ys(v), new Ys(C)));
        case l:
        case m:
        case g:
          return me(+v, +C);
        case p:
          return v.name == C.name && v.message == C.message;
        case _:
        case k:
          return v == C + "";
        case b:
          var Ie = Gn;
        case E:
          var Ce = q & o;
          if (Ie || (Ie = Jt), v.size != C.size && !Ce)
            return !1;
          var Ke = le.get(v);
          if (Ke)
            return Ke == C;
          q |= i, le.set(v, C);
          var Qe = oi(Ie(v), Ie(C), $, te, q, le);
          return le.delete(v), Qe;
        case S:
          if (eo)
            return eo.call(v) == eo.call(C);
      }
      return !1;
    }
    function so(v, C, P, $, te, q) {
      var le = te & o, Ie = bc(v), Ce = Ie.length, Ke = bc(C), Qe = Ke.length;
      if (Ce != Qe && !le)
        return !1;
      for (var Ye = Ce; Ye--; ) {
        var tt = Ie[Ye];
        if (!(le ? tt in C : yn.call(C, tt)))
          return !1;
      }
      var _t = q.get(v);
      if (_t && q.get(C))
        return _t == C;
      var At = !0;
      q.set(v, C), q.set(C, v);
      for (var an = le; ++Ye < Ce; ) {
        tt = Ie[Ye];
        var zt = v[tt], An = C[tt];
        if ($)
          var yc = le ? $(An, zt, tt, C, v, q) : $(zt, An, tt, v, C, q);
        if (!(yc === void 0 ? zt === An || P(zt, An, $, te, q) : yc)) {
          At = !1;
          break;
        }
        an || (an = tt == "constructor");
      }
      if (At && !an) {
        var vs = v.constructor, _s = C.constructor;
        vs != _s && "constructor" in v && "constructor" in C && !(typeof vs == "function" && vs instanceof vs && typeof _s == "function" && _s instanceof _s) && (At = !1);
      }
      return q.delete(v), q.delete(C), At;
    }
    function li(v, C) {
      var P = v.__data__;
      return ys(C) ? P[typeof C == "string" ? "string" : "hash"] : P.map;
    }
    function gs(v) {
      for (var C = bc(v), P = C.length; P--; ) {
        var $ = C[P], te = v[$];
        C[P] = [$, te, oa(te)];
      }
      return C;
    }
    function ir(v, C) {
      var P = Oe(v, C);
      return uc(P) ? P : void 0;
    }
    var Yt = no;
    (hs && Yt(new hs(new ArrayBuffer(1))) != T || Vn && Yt(new Vn()) != b || Ki && Yt(Ki.resolve()) != w || Kt && Yt(new Kt()) != E || Yi && Yt(new Yi()) != A) && (Yt = function(v) {
      var C = Ur.call(v), P = C == y ? v.constructor : void 0, $ = P ? I(P) : void 0;
      if ($)
        switch ($) {
          case ql:
            return T;
          case Xs:
            return b;
          case Xi:
            return w;
          case vr:
            return E;
          case _r:
            return A;
        }
      return C;
    });
    function Xt(v, C, P) {
      C = bs(C, v) ? [C] : sa(C);
      for (var $, te = -1, le = C.length; ++te < le; ) {
        var q = ci(C[te]);
        if (!($ = v != null && P(v, q)))
          break;
        v = v[q];
      }
      if ($)
        return $;
      var le = v ? v.length : 0;
      return !!le && en(le) && Gr(q, le) && (He(v) || Me(v));
    }
    function Gr(v, C) {
      return C = C ?? c, !!C && (typeof v == "number" || Ne.test(v)) && v > -1 && v % 1 == 0 && v < C;
    }
    function bs(v, C) {
      if (He(v))
        return !1;
      var P = typeof v;
      return P == "number" || P == "symbol" || P == "boolean" || v == null || or(v) ? !0 : ve.test(v) || !Re.test(v) || C != null && v in Object(C);
    }
    function ys(v) {
      var C = typeof v;
      return C == "string" || C == "number" || C == "symbol" || C == "boolean" ? v !== "__proto__" : v === null;
    }
    function gc(v) {
      return !!fs && fs in v;
    }
    function ia(v) {
      var C = v && v.constructor, P = typeof C == "function" && C.prototype || Lt;
      return v === P;
    }
    function oa(v) {
      return v === v && !Pt(v);
    }
    function io(v, C) {
      return function(P) {
        return P == null ? !1 : P[v] === C && (C !== void 0 || v in Object(P));
      };
    }
    var oo = G(function(v) {
      v = aa(v);
      var C = [];
      return Se.test(v) && C.push(""), v.replace(ee, function(P, $, te, q) {
        C.push(te ? q.replace(Ve, "$1") : $ || P);
      }), C;
    });
    function ci(v) {
      if (typeof v == "string" || or(v))
        return v;
      var C = v + "";
      return C == "0" && 1 / v == -a ? "-0" : C;
    }
    function I(v) {
      if (v != null) {
        try {
          return Qi.call(v);
        } catch {
        }
        try {
          return v + "";
        } catch {
        }
      }
      return "";
    }
    function M(v, C) {
      return v && v.length ? ra(v, na(C)) : [];
    }
    function G(v, C) {
      if (typeof v != "function" || C && typeof C != "function")
        throw new TypeError(r);
      var P = function() {
        var $ = arguments, te = C ? C.apply(this, $) : $[0], q = P.cache;
        if (q.has(te))
          return q.get(te);
        var le = v.apply(this, $);
        return P.cache = q.set(te, le), le;
      };
      return P.cache = new (G.Cache || Zn)(), P;
    }
    G.Cache = Zn;
    function me(v, C) {
      return v === C || v !== v && C !== C;
    }
    function Me(v) {
      return qe(v) && yn.call(v, "callee") && (!wn.call(v, "callee") || Ur.call(v) == u);
    }
    var He = Array.isArray;
    function Je(v) {
      return v != null && en(v.length) && !ht(v);
    }
    function qe(v) {
      return _n(v) && Je(v);
    }
    function ht(v) {
      var C = Pt(v) ? Ur.call(v) : "";
      return C == d || C == h;
    }
    function en(v) {
      return typeof v == "number" && v > -1 && v % 1 == 0 && v <= c;
    }
    function Pt(v) {
      var C = typeof v;
      return !!v && (C == "object" || C == "function");
    }
    function _n(v) {
      return !!v && typeof v == "object";
    }
    function or(v) {
      return typeof v == "symbol" || _n(v) && Ur.call(v) == S;
    }
    var ws = $r ? It($r) : fc;
    function aa(v) {
      return v == null ? "" : mc(v);
    }
    function _h(v, C, P) {
      var $ = v == null ? void 0 : Wr(v, C);
      return $ === void 0 ? P : $;
    }
    function Ah(v, C) {
      return v != null && Xt(v, C, lc);
    }
    function bc(v) {
      return Je(v) ? ac(v) : hc(v);
    }
    function la(v) {
      return v;
    }
    function Eh() {
    }
    function xh(v) {
      return bs(v) ? fe(ci(v)) : ro(v);
    }
    t.exports = M;
  }(Dc, Dc.exports)), Dc.exports;
}
var Vx = zx();
const qx = /* @__PURE__ */ Fl(Vx);
var ue;
(function(t) {
  t.AlphaWallet = "isAlphaWallet", t.ApexWallet = "isApexWallet", t.AToken = "isAToken", t.BifrostWallet = "isBifrost", t.Binance = "bbcSignTx", t.Bitpie = "isBitpie", t.BlockWallet = "isBlockWallet", t.Coinbase = "isToshi", t.CoinbaseExtension = "isCoinbaseWallet", t.Detected = "request", t.Dcent = "isDcentWallet", t.Exodus = "isExodus", t.Frontier = "isFrontier", t.Frame = "isFrame", t.HuobiWallet = "isHbWallet", t.HyperPay = "isHyperPay", t.ImToken = "isImToken", t.InfinityWallet = "isInfinityWallet", t.Liquality = "isLiquality", t.MeetOne = "wallet", t.MetaMask = "isMetaMask", t.MyKey = "isMYKEY", t.OwnBit = "isOwnbit", t.Status = "isStatus", t.Trust = "isTrust", t.TokenPocket = "isTokenPocket", t.TP = "isTp", t.WalletIo = "isWalletIO", t.XDEFI = "isXDEFI", t.OneInch = "isOneInchIOSWallet", t.Tokenary = "isTokenary", t.Tally = "isTally", t.BraveWallet = "isBraveWallet", t.Rabby = "isRabby", t.MathWallet = "isMathWallet", t.Bitget = "isBitKeep", t.Sequence = "isSequence", t.Core = "isAvalanche", t.Opera = "isOpera", t.Bitski = "isBitski", t.Enkrypt = "isEnkrypt", t.Phantom = "isPhantom", t.OKXWallet = "isOkxWallet", t.Zeal = "isZeal", t.Zerion = "isZerion", t.Rainbow = "isRainbow", t.SafePal = "isSafePal", t.DeFiWallet = "isDeficonnectProvider", t.Safeheron = "isSafeheron", t.Talisman = "isTalisman", t.OneKey = "isOneKey", t.Fordefi = "isFordefi", t.Coin98Wallet = "isCoin98", t.SubWallet = "isSubWallet", t.Kayros = "isKayros", t.FoxWallet = "isFoxWallet", t.Lif3Wallet = "isLif3Wallet", t.ZodiacPilot = "isZodiacPilot", t.StableWallet = "isStableWallet", t.Echooo = "isEchooo", t.Keplr = "keplr";
})(ue || (ue = {}));
var sn;
(function(t) {
  t.Binance = "https://www.bnbchain.org/ru/blog/binance-extension-wallet/", t.Bitget = "https://web3.bitget.com/en/wallet-download", t.Coinbase = "https://www.coinbase.com/wallet/downloads", t.MetaMask = "https://metamask.io/download/", t.OKXWallet = "https://okx.com/download", t.Phantom = "https://phantom.app/ul/v1/connect", t.Talisman = "https://www.talisman.xyz/", t.Trust = "https://link.trustwallet.com", t.OneKey = "https://onekey.so/download/", t.RoninWallet = "https://wallet.skymavis.com/", t.Coin98Wallet = "https://coin98.com/wallet/", t.SubWallet = "https://www.subwallet.app/", t.Kayros = "https://www.kayros.games/wallet/", t.XDEFI = "https://xdefi.io/", t.FoxWallet = "https://foxwallet.com/download", t.Lif3Wallet = "https://lif3.com", t.Rabby = "https://rabby.io", t.ZodiacPilot = "https://pilot.gnosisguild.org/", t.Echooo = "https://www.echooo.xyz", t.Keplr = "https://www.keplr.app/download";
})(sn || (sn = {}));
var Ae;
(function(t) {
  t.AlphaWallet = "AlphaWallet", t.ApexWallet = "Apex Wallet", t.AToken = "AToken", t.BifrostWallet = "Bifrost Wallet", t.Binance = "Binance Smart Wallet", t.Bitpie = "Bitpie", t.Bitski = "Bitski", t.BlockWallet = "BlockWallet", t.Brave = "Brave Wallet", t.Coinbase = "Coinbase Wallet", t.Dcent = "D'CENT", t.Detected = "Detected Wallet", t.Exodus = "Exodus", t.Frame = "Frame", t.Frontier = "Frontier", t.HuobiWallet = "Huobi Wallet", t.HyperPay = "HyperPay", t.ImToken = "imToken", t.InfinityWallet = "Infinity Wallet", t.Liquality = "Liquality", t.MeetOne = "MeetOne", t.MetaMask = "MetaMask", t.MyKey = "MyKey", t.Opera = "Opera Wallet", t.OwnBit = "OwnBit", t.Status = "Status Wallet", t.Trust = "Trust Wallet", t.TokenPocket = "TokenPocket", t.TP = "TP Wallet", t.WalletIo = "Wallet.io", t.XDEFI = "XDEFI Wallet", t.OneInch = "1inch Wallet", t.Tokenary = "Tokenary Wallet", t.Tally = "Taho", t.Rabby = "Rabby Wallet", t.MathWallet = "MathWallet", t.Bitget = "Bitget Wallet", t.Sequence = "Sequence", t.Core = "Core", t.Enkrypt = "Enkrypt", t.Zeal = "Zeal", t.Phantom = "Phantom", t.OKXWallet = "OKX Wallet", t.Zerion = "Zerion", t.Rainbow = "Rainbow", t.SafePal = "SafePal", t.DeFiWallet = "DeFi Wallet", t.Safeheron = "Safeheron", t.Talisman = "Talisman", t.OneKey = "OneKey", t.Fordefi = "Fordefi", t.RoninWallet = "Ronin Wallet", t.Coin98Wallet = "Coin98 Wallet", t.SubWallet = "SubWallet", t.Kayros = "Kayros", t.FoxWallet = "FoxWallet", t.Lif3Wallet = "Lif3 Wallet", t.ZodiacPilot = "Zodiac Pilot", t.StableWallet = "StableWallet", t.Echooo = "Echooo", t.Keplr = "Keplr";
})(Ae || (Ae = {}));
var he;
(function(t) {
  t.Ethereum = "ethereum", t.Binance = "BinanceChain", t.Tally = "tally", t.Web3 = "web3", t.Arbitrum = "arbitrum", t.XFI = "xfi", t.Bitget = "bitkeep", t.Avalanche = "avalanche", t.Bitski = "Bitski", t.Enkrypt = "enkrypt", t.Zeal = "zeal", t.Phantom = "phantom", t.OKXWallet = "okxwallet", t.Trust = "trustwallet", t.Frontier = "frontier", t.DeFiConnectProvider = "deficonnectProvider", t.Safeheron = "safeheron", t.Talisman = "talismanEth", t.OneKey = "$onekey", t.RoninWallet = "ronin", t.Coin98Wallet = "coin98", t.SubWallet = "SubWallet", t.Kayros = "kayros", t.FoxWallet = "foxwallet", t.Echooo = "echooo";
})(he || (he = {}));
const Gt = null;
function Mn(t, e) {
  return async () => ({
    provider: window.ethereum.providers && Array.isArray(window.ethereum.providers) ? Qx(t, e) : window.ethereum
  });
}
function Qx(t, e) {
  return window.ethereum.providers.find((n) => e ? !!n[t] && !Kw(t, n) : !!n[t]);
}
function Kw(t, e) {
  return Object.values(ue).filter((r) => r !== t && r !== ue.Detected).some((r) => !!e[r]);
}
const Zx = {
  label: Ae.MetaMask,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.MetaMask] && !Kw(ue.MetaMask, t),
  getIcon: async () => (await import("./metamask-BN7yiDV1.js")).default,
  getInterface: Mn(ue.MetaMask, !0),
  platforms: ["all"],
  externalUrl: sn.MetaMask
}, Jx = {
  label: Ae.InfinityWallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.InfinityWallet],
  getIcon: async () => (await import("./infinitywallet-C8J4FUYw.js")).default,
  getInterface: Mn(ue.InfinityWallet),
  platforms: ["desktop"]
}, Kx = {
  label: Ae.Exodus,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Exodus],
  getIcon: async () => (await import("./exodus-BxzkDWWP.js")).default,
  getInterface: Mn(ue.Exodus),
  platforms: ["all"]
}, Yx = {
  label: Ae.Frontier,
  injectedNamespace: he.Frontier,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t.ethereum && !!t.ethereum[ue.Frontier],
  getIcon: async () => (await import("./frontier-DqKNSj2z.js")).default,
  getInterface: async () => ({
    provider: lt(window.frontier.ethereum)
  }),
  platforms: ["all"]
}, Xx = {
  label: Ae.Brave,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.BraveWallet],
  getIcon: async () => (await import("./brave-DnRzMQYW.js")).default,
  getInterface: Mn(ue.BraveWallet),
  platforms: ["all"]
}, eC = {
  label: Ae.Binance,
  injectedNamespace: he.Binance,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Binance],
  getIcon: async () => (await import("./binance-DvPgAzCw.js")).default,
  getInterface: async () => {
    let t = {
      ...window.BinanceChain
    };
    window.BinanceChain = t;
    const e = window.BinanceChain.on.bind(window.BinanceChain);
    window.BinanceChain.on = (r, s) => {
      r === "chainChanged" ? e(r, (i) => {
        s(`0x${parseInt(i).toString(16)}`);
      }) : e(r, s);
    };
    const n = lt(window.BinanceChain, {
      eth_chainId: ({ baseRequest: r }) => r({ method: "eth_chainId" }).then((s) => `0x${parseInt(s).toString(16)}`),
      // Unsupported method -- will throw error
      eth_selectAccounts: Gt,
      wallet_switchEthereumChain: Gt
    });
    return n.removeListener = (r, s) => {
    }, {
      provider: n
    };
  },
  platforms: ["desktop"],
  externalUrl: sn.Binance
}, tC = {
  label: Ae.Coinbase,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Coinbase] || !!t && !!t[ue.CoinbaseExtension],
  getIcon: async () => (await import("./coinbase-CaGNx5if.js")).default,
  getInterface: async () => {
    const { provider: t } = await Mn(ue.CoinbaseExtension)(), e = t.on.bind(t);
    return t.on = (n, r) => {
      n === "chainChanged" ? e(n, (s) => {
        r(`0x${parseInt(s).toString(16)}`);
      }) : e(n, r);
    }, { provider: t };
  },
  platforms: ["all"],
  externalUrl: sn.Coinbase
}, nC = {
  label: Ae.Detected,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Detected],
  getIcon: async () => (await import("./detected-CX_JZaUk.js")).default,
  getInterface: async () => ({
    provider: window.ethereum
  }),
  platforms: ["all"]
}, rC = {
  label: Ae.Trust,
  injectedNamespace: he.Trust,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Trust],
  getIcon: async () => (await import("./trust-SgHubMq7.js")).default,
  getInterface: async () => {
    const t = window.hasOwnProperty(he.Ethereum);
    let e;
    return t && window[he.Ethereum].isTrust ? e = window[he.Ethereum] : e = window[he.Trust], {
      provider: e
    };
  },
  platforms: ["all"],
  externalUrl: sn.Trust
}, sC = {
  label: Ae.Opera,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Opera],
  getIcon: async () => (await import("./opera-DnKg-TJU.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum, {
      eth_requestAccounts: async ({ baseRequest: t }) => t({ method: "eth_accounts" }),
      eth_selectAccounts: Gt
    })
  }),
  platforms: ["all"]
}, iC = {
  label: Ae.Status,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Status],
  getIcon: async () => (await import("./status-FrAvQjfn.js")).default,
  getInterface: async () => ({
    provider: window.ethereum
  }),
  platforms: ["mobile"]
}, oC = {
  label: Ae.AlphaWallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.AlphaWallet],
  getIcon: async () => (await import("./alphawallet-B7eovdf-.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum, {
      wallet_switchEthereumChain: Gt,
      eth_selectAccounts: Gt
    })
  }),
  platforms: ["mobile"]
}, aC = {
  label: Ae.ApexWallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.ApexWallet],
  getIcon: async () => (await import("./apexwallet-ysP20G9D.js")).default,
  getInterface: async () => ({
    provider: window.ethereum
  }),
  platforms: ["desktop", "Chrome", "Chromium", "Microsoft Edge"]
}, lC = {
  label: Ae.AToken,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.AToken],
  getIcon: async () => (await import("./atoken-BBnNTzcz.js")).default,
  getInterface: async () => ({
    provider: window.ethereum
  }),
  platforms: ["mobile"]
}, cC = {
  label: Ae.BifrostWallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.BifrostWallet],
  getIcon: async () => (await import("./bifrostwallet-CNNBO92h.js")).default,
  getInterface: Mn(ue.BifrostWallet),
  platforms: ["all"]
}, uC = {
  label: Ae.Bitpie,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: () => !!window.Bitpie,
  getIcon: async () => (await import("./bitpie-C_uxmEzw.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum, {
      wallet_switchEthereumChain: Gt,
      eth_selectAccounts: Gt
    })
  }),
  platforms: ["mobile"]
}, fC = {
  label: Ae.BlockWallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.BlockWallet],
  getIcon: async () => (await import("./blockwallet-BL69cqkA.js")).default,
  getInterface: Mn(ue.BlockWallet),
  platforms: ["desktop"]
}, hC = {
  label: Ae.Frame,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Frame],
  getIcon: async () => (await import("./frame-CDfNmjUy.js")).default,
  getInterface: async () => {
    const t = window.ethereum;
    if (!t || !t.connected)
      throw new Error("Frame App must be open with a hot wallet connected. If not installed first download the Frame App.");
    return { provider: t };
  },
  platforms: ["desktop"]
}, dC = {
  label: Ae.HuobiWallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.HuobiWallet],
  getIcon: async () => (await import("./huobiwallet-CxSwqa5L.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum, {
      wallet_switchEthereumChain: Gt,
      eth_selectAccounts: Gt
    })
  }),
  platforms: ["mobile"]
}, pC = {
  label: Ae.HyperPay,
  injectedNamespace: he.Ethereum,
  // Note: The property `hiWallet` is as of now the only known way of identifying hyperpay
  // wallet as it is a direct clone of metamask. `checkProviderIdentity` implementation is subject to
  // future changes
  checkProviderIdentity: () => !!window.hiWallet,
  getIcon: async () => (await import("./hyperpay-nmHE3WqM.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum, {
      wallet_switchEthereumChain: Gt,
      eth_selectAccounts: Gt
    })
  }),
  platforms: ["mobile"]
}, mC = {
  label: Ae.ImToken,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.ImToken],
  getIcon: async () => (await import("./imtoken-yENtOTS3.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum, {
      eth_selectAccounts: Gt
    })
  }),
  platforms: ["mobile"]
}, gC = {
  label: Ae.Liquality,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Liquality],
  getIcon: async () => (await import("./liquality-nbCtErVq.js")).default,
  getInterface: async () => {
    const t = lt(window.ethereum, {
      wallet_switchEthereumChain: Gt,
      eth_selectAccounts: Gt
    });
    return t.removeListener = (e, n) => {
    }, { provider: t };
  },
  platforms: ["desktop"]
}, bC = {
  label: Ae.MeetOne,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && t[ue.MeetOne] === "MEETONE",
  getIcon: async () => (await import("./meetone-kKmvI8md.js")).default,
  getInterface: async () => ({
    provider: window.ethereum
  }),
  platforms: ["mobile"]
}, yC = {
  label: Ae.MyKey,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.MyKey],
  getIcon: async () => (await import("./mykey-CQZ6UcLH.js")).default,
  getInterface: async () => ({
    provider: window.ethereum
  }),
  platforms: ["mobile"]
}, wC = {
  label: Ae.OwnBit,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.OwnBit],
  getIcon: async () => (await import("./ownbit-BshJUVuW.js")).default,
  getInterface: async () => {
    const t = lt(window.ethereum, {
      eth_chainId: ({ baseRequest: e }) => e({ method: "eth_chainId" }).then((n) => `0x${parseInt(n).toString(16)}`),
      wallet_switchEthereumChain: Gt,
      eth_selectAccounts: Gt
    });
    return t.removeListener = (e, n) => {
    }, t.on = (e, n) => {
    }, { provider: t };
  },
  platforms: ["mobile"]
}, vC = {
  label: Ae.TokenPocket,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.TokenPocket] && !t[ue.TP],
  getIcon: async () => (await import("./tokenpocket-9ZRPmAFA.js")).default,
  getInterface: Mn(ue.TokenPocket),
  platforms: ["all"]
}, _C = {
  label: Ae.TP,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.TP],
  getIcon: async () => (await import("./tp-V2em5bdl.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum, {
      wallet_switchEthereumChain: Gt,
      eth_selectAccounts: Gt
    })
  }),
  platforms: ["mobile"]
}, AC = {
  label: Ae.XDEFI,
  injectedNamespace: he.XFI,
  checkProviderIdentity: ({ provider: t }) => t && t.ethereum && t.ethereum[ue.XDEFI],
  getIcon: async () => (await import("./xdefi-COVIyGz4.js")).default,
  getInterface: async () => ({
    provider: window.xfi && window.xfi.ethereum
  }),
  platforms: ["all"],
  externalUrl: sn.XDEFI
}, EC = {
  label: Ae.OneInch,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.OneInch],
  getIcon: async () => (await import("./oneInch-CciyZ4Pz.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum)
  }),
  platforms: ["mobile"]
}, xC = {
  label: Ae.Tokenary,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Tokenary],
  getIcon: async () => (await import("./tokenary-C7jjcbQa.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum)
  }),
  platforms: ["all"]
}, CC = {
  label: Ae.Tally,
  injectedNamespace: he.Tally,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Tally],
  getIcon: async () => (await import("./tallywallet-B4OS9nIr.js")).default,
  getInterface: async () => ({
    provider: lt(window.tally)
  }),
  platforms: ["desktop"]
}, kC = {
  label: Ae.Zeal,
  injectedNamespace: he.Zeal,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Zeal],
  getIcon: async () => (await import("./zeal-DxHbDqm0.js")).default,
  getInterface: async () => ({
    provider: lt(window.zeal)
  }),
  platforms: ["desktop"]
}, SC = {
  label: Ae.Rabby,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Rabby],
  getIcon: async () => (await import("./rabby-D4thTcd6.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum)
  }),
  platforms: ["desktop", "mobile"]
}, OC = {
  label: Ae.MathWallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.MathWallet],
  getIcon: async () => (await import("./mathwallet-CWkivCXo.js")).default,
  getInterface: Mn(ue.MathWallet),
  platforms: ["all"]
}, TC = {
  label: Ae.Bitget,
  injectedNamespace: he.Bitget,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t.ethereum && !!t.ethereum[ue.Bitget],
  getIcon: async () => (await import("./bitget-DZOUrwgy.js")).default,
  getInterface: async () => ({
    provider: window.bitkeep && window.bitkeep.ethereum
  }),
  platforms: ["all"],
  externalUrl: sn.Bitget
}, IC = {
  label: Ae.Sequence,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Sequence],
  getIcon: async () => (await import("./sequence-BS2IbtDg.js")).default,
  getInterface: async () => ({
    provider: window.ethereum
  }),
  platforms: ["all"]
}, NC = {
  label: Ae.Core,
  injectedNamespace: he.Avalanche,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Core],
  getIcon: async () => (await import("./core-9rK8tWud.js")).default,
  getInterface: Mn(ue.Core),
  // Core wallet is only tested in chrome or chromium browser
  platforms: ["desktop", "Chrome", "Chromium", "Microsoft Edge"]
}, PC = {
  label: Ae.Bitski,
  injectedNamespace: he.Bitski,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t.getProvider && !!t.getProvider().isBitski,
  getIcon: async () => (await import("./bitski-DpzkHNkv.js")).default,
  getInterface: async () => ({
    provider: window.Bitski && window.Bitski.getProvider && window.Bitski.getProvider()
  }),
  platforms: ["all"]
}, RC = {
  label: Ae.Zerion,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Zerion],
  getIcon: async () => (await import("./zerion-BfW0UElc.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum)
  }),
  platforms: ["all"]
}, BC = {
  label: Ae.Enkrypt,
  injectedNamespace: he.Enkrypt,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t.providers && !!t.providers.ethereum,
  getIcon: async () => (await import("./enkrypt-BibtwvK7.js")).default,
  getInterface: async () => {
    const t = window.enkrypt.providers.ethereum.on.bind(window.enkrypt.providers.ethereum);
    window.enkrypt.providers.ethereum.on = (n, r) => {
      n === "chainChanged" ? t(n, (s) => {
        r(`0x${parseInt(s).toString(16)}`);
      }) : t(n, r);
    };
    const e = lt(window.enkrypt.providers.ethereum, {
      eth_chainId: ({ baseRequest: n }) => n({ method: "eth_chainId" }).then((r) => `0x${parseInt(r).toString(16)}`)
    });
    return e.removeListener = (n, r) => {
    }, {
      provider: e
    };
  },
  platforms: ["all"]
}, LC = {
  label: Ae.Phantom,
  injectedNamespace: he.Phantom,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t.ethereum && !!t.ethereum[ue.Phantom],
  getIcon: async () => (await import("./phantom-CJ8dIcov.js")).default,
  getInterface: async () => ({
    provider: lt(window.phantom.ethereum)
  }),
  platforms: ["all"],
  externalUrl: sn.Phantom
}, MC = {
  label: Ae.SafePal,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.SafePal],
  getIcon: async () => (await import("./safepal-DVIKy94N.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum)
  }),
  platforms: ["all"]
}, DC = {
  label: Ae.Rainbow,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Rainbow],
  getIcon: async () => (await import("./rainbow-mXld6yWV.js")).default,
  getInterface: Mn(ue.Rainbow),
  platforms: ["all"]
}, $C = {
  label: Ae.OKXWallet,
  injectedNamespace: he.OKXWallet,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.OKXWallet],
  getIcon: async () => (await import("./okxwallet-CJLVogh2.js")).default,
  getInterface: async () => ({
    provider: lt(window.okxwallet)
  }),
  platforms: ["all"],
  externalUrl: sn.OKXWallet
}, UC = {
  label: Ae.DeFiWallet,
  injectedNamespace: he.DeFiConnectProvider,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.DeFiWallet],
  getIcon: async () => (await import("./defiwallet-0AsgJBSy.js")).default,
  getInterface: async () => ({
    provider: lt(window.deficonnectProvider)
  }),
  platforms: ["all"]
}, jC = {
  label: Ae.Safeheron,
  injectedNamespace: he.Safeheron,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Safeheron],
  getIcon: async () => (await import("./safeheron-Eg1Jb29V.js")).default,
  getInterface: async () => ({
    provider: lt(window.safeheron)
  }),
  platforms: ["desktop", "Chrome", "Chromium", "Microsoft Edge"]
}, FC = {
  label: Ae.Talisman,
  injectedNamespace: he.Talisman,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Talisman],
  getIcon: async () => (await import("./talisman-Bp8zUXqB.js")).default,
  getInterface: async () => ({
    provider: lt(window.talismanEth)
  }),
  platforms: ["desktop"],
  externalUrl: sn.Talisman
}, HC = {
  label: Ae.RoninWallet,
  injectedNamespace: he.RoninWallet,
  checkProviderIdentity: ({ provider: t }) => !!t,
  getIcon: async () => (await import("./roninwallet-ZyYrd-D1.js")).default,
  getInterface: async () => ({
    provider: lt(window.ronin.provider)
  }),
  platforms: ["all"],
  externalUrl: sn.RoninWallet
}, WC = {
  label: Ae.OneKey,
  injectedNamespace: he.OneKey,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t.ethereum && !!t.ethereum[ue.OneKey],
  getIcon: async () => (await import("./onekey-Dal8kYjU.js")).default,
  getInterface: async () => ({
    provider: lt(window.$onekey.ethereum)
  }),
  platforms: ["all"],
  externalUrl: sn.OneKey
}, GC = {
  label: Ae.Fordefi,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Fordefi],
  getIcon: async () => (await import("./fordefi-CvKyVwhI.js")).default,
  getInterface: Mn(ue.Fordefi, !0),
  platforms: ["desktop"]
}, zC = {
  label: Ae.Coin98Wallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Coin98Wallet],
  getIcon: async () => (await import("./coin98wallet-CkFdOvXt.js")).default,
  getInterface: async () => {
    const t = window.hasOwnProperty(he.Ethereum);
    let e;
    return t && window[he.Ethereum].isCoin98 ? e = window[he.Ethereum] : e = window[he.Coin98Wallet].provider, {
      provider: e
    };
  },
  platforms: ["all"],
  externalUrl: sn.Coin98Wallet
}, VC = {
  label: Ae.SubWallet,
  injectedNamespace: he.SubWallet,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.SubWallet],
  getIcon: async () => (await import("./subwallet-DMvFqKyY.js")).default,
  getInterface: async () => ({
    provider: lt(window.SubWallet)
  }),
  platforms: ["all"],
  externalUrl: sn.SubWallet
}, qC = {
  label: Ae.Kayros,
  injectedNamespace: he.Kayros,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Kayros],
  getIcon: async () => (await import("./kayros-AIrUK1za.js")).default,
  getInterface: async () => ({
    provider: lt(window.kayros)
  }),
  platforms: ["desktop"]
}, QC = {
  label: Ae.FoxWallet,
  injectedNamespace: he.FoxWallet,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.FoxWallet],
  getIcon: async () => (await import("./foxwallet-D7c_LDTf.js")).default,
  getInterface: async () => ({
    provider: lt(window.foxwallet)
  }),
  platforms: ["mobile"]
}, ZC = {
  label: Ae.Lif3Wallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Lif3Wallet],
  getIcon: async () => (await import("./lif3wallet-C5D6r8pg.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum, {
      wallet_switchEthereumChain: Gt,
      eth_selectAccounts: Gt
    })
  }),
  platforms: ["mobile"]
}, JC = {
  label: Ae.ZodiacPilot,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.ZodiacPilot],
  getIcon: async () => (await import("./zodiacpilot-CrId6F4w.js")).default,
  getInterface: async () => ({
    provider: lt(window.ethereum)
  }),
  platforms: ["desktop"],
  externalUrl: sn.ZodiacPilot
}, KC = {
  label: Ae.StableWallet,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.StableWallet],
  getIcon: async () => (await import("./stablewallet-jyB079Wb.js")).default,
  getInterface: Mn(ue.StableWallet),
  platforms: ["mobile"]
}, YC = {
  label: Ae.Echooo,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Echooo],
  getIcon: async () => (await import("./echooo-CmaetT_Z.js")).default,
  getInterface: Mn(ue.Echooo),
  platforms: ["all"],
  externalUrl: sn.Echooo
}, XC = {
  label: Ae.Keplr,
  injectedNamespace: he.Ethereum,
  checkProviderIdentity: ({ provider: t }) => !!t && !!t[ue.Keplr],
  getIcon: async () => (await import("./keplr-CyLTca9B.js")).default,
  getInterface: Mn(ue.Keplr),
  platforms: ["all"],
  externalUrl: sn.Keplr
}, ek = [
  kC,
  Kx,
  Yx,
  Zx,
  cC,
  eC,
  tC,
  nC,
  rC,
  sC,
  iC,
  oC,
  aC,
  lC,
  TC,
  uC,
  fC,
  Xx,
  hC,
  dC,
  pC,
  mC,
  gC,
  bC,
  yC,
  wC,
  vC,
  _C,
  AC,
  EC,
  xC,
  CC,
  SC,
  OC,
  IC,
  NC,
  PC,
  BC,
  LC,
  $C,
  RC,
  DC,
  MC,
  UC,
  Jx,
  jC,
  FC,
  WC,
  GC,
  HC,
  zC,
  VC,
  qC,
  QC,
  ZC,
  JC,
  KC,
  YC,
  XC
], tk = B.object({
  label: B.string().required(),
  getIcon: B.function().arity(0).required(),
  getInterface: B.function().maxArity(1).required(),
  injectedNamespace: B.string().required(),
  checkProviderIdentity: B.function().arity(1).required(),
  platforms: B.array().items(B.string()),
  externalUrl: B.string()
}), nk = B.array().items(tk), rk = B.object().pattern(/\w+/, B.any().allow(B.boolean(), B.array().items(B.string())));
B.object({
  custom: nk,
  filter: rk,
  displayUnavailable: [B.boolean(), B.array().items(B.string())],
  walletUnavailableMessage: B.function(),
  sort: B.function(),
  externalUrl: B.string(),
  disable6963Support: B.boolean()
});
const sk = B.object({
  uuid: B.string().required(),
  name: B.string().required(),
  icon: B.string().required(),
  rdns: B.string().required()
}), ik = B.object({
  info: sk.required(),
  provider: B.object().required()
}), ok = (t) => on(ik, t), ak = ({ label: t, externalUrl: e }) => e ? `Please <a href="${e}" target="_blank">install or switch to</a> ${t} to continue` : `Please install or enable ${t} to continue`, lk = (t, e, n) => {
  var r;
  return t ? e({ provider: t, device: n }) ? !0 : Array.isArray(t.providers) && !!((r = t.providers) != null && r.some((s) => e({ provider: s, device: n }))) : !1;
};
function ck(t) {
  if (!t)
    return !1;
  const e = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, n = /\bon[a-z]+\s*=\s*["']?(?:javascript:)?/gi, r = /\b(href|xlink:href)\s*=\s*["']?javascript:/gi;
  return !!(e.test(t) || n.test(t) || r.test(t));
}
const Yw = [];
function uk() {
  window.addEventListener("eip6963:announceProvider", (t) => {
    const e = t, { detail: n } = e;
    if (!n)
      return;
    if (e) {
      const a = ok(n);
      if (a && a.error)
        throw a.error;
    }
    const { info: r, provider: s } = n, { name: i, icon: o } = r;
    if (ck(o)) {
      console.error(`The icon for injected wallet: ${i} contains executable JavaScript and has been blocked.`);
      return;
    }
    Yw.push({
      label: i,
      getIcon: async () => o,
      getInterface: async () => ({
        provider: s
      }),
      platforms: ["all"],
      eip6963Provider: s,
      checkProviderIdentity: ({ provider: a }) => !!a
    });
  }), window.dispatchEvent(new CustomEvent("eip6963:requestProvider"));
}
function fk(t) {
  return typeof window > "u" ? () => null : (uk(), (e) => {
    const { device: n } = e, { custom: r = [], filter: s = {}, displayUnavailable: i, sort: o, walletUnavailableMessage: a } = {}, u = qx([...r, ...Yw, ...ek], ({ label: f }) => f).reduce((f, l) => {
      const { label: m, platforms: p, injectedNamespace: d, checkProviderIdentity: h, eip6963Provider: b } = l, g = s[m], y = g === !1, w = b || window[d], _ = lk(w, h, n);
      let E = !1;
      Array.isArray(g) && (g.includes(n.type) || n.os && g.includes(n.os.name)) && (E = !0), g === "unavailable" && !_ && (E = !0);
      const k = !p.includes("all") && n.type !== null && !p.includes(n.type) && !p.includes(n.os.name);
      return !y && !E && !k && (_ || i === !0 || Array.isArray(i) && i.length && i.includes(l.label)) && f.push(
        // modify wallet to display error if unavailable but displayUnavailable is set
        (i === !0 || Array.isArray(i) && i.length && i.includes(l.label)) && !_ ? {
          ...l,
          getInterface: async () => {
            throw new Error(a ? a(l) : ak(l));
          }
        } : (
          // otherwise add wallet to list as is
          l
        )
      ), f;
    }, []);
    if (u.length) {
      const f = u.length > 1, l = u.filter((m) => {
        const { label: p } = m;
        return !(p === Ae.Detected && f);
      }).map(({ label: m, getIcon: p, getInterface: d }) => ({
        label: m,
        getIcon: p,
        getInterface: d
      })).sort((m, p) => m.label < p.label ? -1 : m.label > p.label ? 1 : 0);
      return o ? o(l) : l;
    }
    return [];
  });
}
function hk({ supportedWalletType: t = "all", darkMode: e = !1, enableMobileWalletLink: n = !1, reloadOnDisconnect: r = !0 } = {}) {
  return () => ({
    label: "Coinbase Wallet",
    getIcon: async () => (await import("./icon-DbgmZCnU.js")).default,
    getInterface: async ({ chains: s, appMetadata: i }) => {
      (n || r || e) && console.warn("darkMode, enableMobileWalletLink and reloadOnDisconnect init props are deprecated after version 2.2.7 of @web3-onboard/coinbase");
      const { name: o, icon: a } = i || {}, { default: c } = await import("./index-DFfK73nb.js").then((E) => E.i), u = c.default ? c.default : c, { isHex: f, toHex: l, createEIP1193Provider: m, fromHex: p } = await import("./index-Jp32L0kj.js"), h = `data:image/svg+xml;base64,${window.btoa(a || "")}`, b = s.map(({ id: E }) => p(E, "number")), g = new u({
        appName: o || "",
        appLogoUrl: h,
        appChainIds: b
      }), y = g.makeWeb3Provider({
        options: t
      }), w = y.on.bind(y);
      y.on = (E, k) => (w(E, (S) => {
        if (E === "chainChanged") {
          let A;
          f(S) ? A = S : A = l(S), k(A);
          return;
        }
        k(S);
      }), y);
      const _ = m(y);
      return _.removeListener = (E, k) => {
      }, {
        provider: _,
        instance: g
      };
    }
  });
}
function dk() {
  return typeof window > "u" ? () => null : () => ({
    label: "Trust Wallet",
    getIcon: async () => (await import("./icon-Dbjb6jc5.js")).default,
    getInterface: async () => {
      const t = window.hasOwnProperty("ethereum");
      let e;
      if (t && window.ethereum.isTrust)
        e = window.ethereum;
      else if (window.trustwallet)
        e = window.trustwallet;
      else
        throw new Error(x4("Trust Wallet", "https://trustwallet.com/browser-extension"));
      return {
        provider: e
      };
    }
  });
}
const r1 = {
  permStore: !0,
  timeoutSeconds: 3600
};
class pk {
  constructor() {
    j(this, "cache", /* @__PURE__ */ new Map());
    j(this, "pendingPromises", /* @__PURE__ */ new Map());
    j(this, "defaultOptions", { ...r1 });
    j(this, "browserStorageSupported");
    this.browserStorageSupported = this.checkBrowserStorageSupport(), this.browserStorageSupported || console.warn("Browser storage is not supported or blocked. Falling back to in-memory cache.");
  }
  async getAsync(e, n, r = this.defaultOptions) {
    const s = this.get(e);
    if (s !== null)
      return s;
    if (this.pendingPromises.has(e))
      return this.pendingPromises.get(e);
    const i = (async () => {
      try {
        const o = await n();
        return this.set(e, o, r), o;
      } finally {
        this.pendingPromises.delete(e);
      }
    })();
    return this.pendingPromises.set(e, i), i;
  }
  get(e) {
    const n = this.cache.get(e);
    if (n) {
      if (!n.expiration || n.expiration > Date.now())
        return n.value;
      this.cache.delete(e);
    }
    if (this.defaultOptions.permStore && this.browserStorageSupported) {
      const r = localStorage.getItem(e);
      if (r) {
        const { value: s, expiration: i } = JSON.parse(r);
        if (!i || i > Date.now())
          return s;
        localStorage.removeItem(e);
      }
    }
    return null;
  }
  setDefaultOptions(e) {
    this.defaultOptions = { ...this.defaultOptions, ...e };
  }
  set(e, n, r = r1) {
    const s = r.timeoutSeconds > 0 ? Date.now() + r.timeoutSeconds * 1e3 : null, i = { value: n, expiration: s };
    this.cache.set(e, i), r.permStore && this.browserStorageSupported && localStorage.setItem(e, JSON.stringify(i));
  }
  checkBrowserStorageSupport() {
    try {
      const e = "__localCacheTest__";
      return localStorage.setItem(e, "test"), localStorage.removeItem(e), !0;
    } catch {
      return !1;
    }
  }
}
const s1 = new pk(), mk = fk(), gk = hk(), bk = dk(), yk = [
  mk,
  bk,
  gk
  // walletConnect,
], oS = (t) => {
  const [e, n] = ji(null), [r, s] = ji(null);
  return lf(() => {
    if (e) {
      console.log("Chains loaded:", e);
      const i = {
        wallets: yk,
        chains: e,
        appMetadata: t.appMetadata,
        connect: {
          autoConnectLastWallet: !0
        },
        accountCenter: {
          desktop: {
            enabled: !1
          },
          mobile: {
            enabled: !1
          }
        }
      }, o = dE(i);
      $x()(i), s(o);
    }
  }, [e]), lf(() => {
    (async () => {
      try {
        if (t.providersConfigUrl) {
          const o = await s1.getAsync("URLS_" + t.providersConfigUrl, async () => await (await fetch(t.providersConfigUrl)).json());
          o && (n(o), (o || []).forEach((a) => {
            Ul[a.id.toString()] = a;
          }), t.onConfigLoaded && t.onConfigLoaded("providers", o));
        }
        for (const [o, a] of Object.entries(t.configUrlMaps || {})) {
          const c = await s1.getAsync("CONFIG_" + a, async () => await (await fetch(a)).json());
          c && t.onConfigLoaded && t.onConfigLoaded(o, c);
        }
      } catch (o) {
        console.error("Error loading configs", o), t.onError && t.onError(o);
      }
    })();
  }, [t.configUrlMaps, t.providersConfigUrl, t.onConfigLoaded]), r ? /* @__PURE__ */ cd.jsx(pE, { web3Onboard: r, children: t.children }) : /* @__PURE__ */ cd.jsx(cd.Fragment, { children: t.children });
};
class aS {
  static addressLink(e, n) {
    const r = Ul[e];
    return r ? r.blockExplorerUrl + "/address/" + n : null;
  }
  static transactionLink(e, n) {
    const r = Ul[e];
    return r ? r.blockExplorerUrl + "/tx/" + n : null;
  }
}
export {
  G3 as $,
  Ap as A,
  Rr as B,
  Qu as C,
  Z3 as D,
  Yf as E,
  hb as F,
  xk as G,
  Ck as H,
  Ok as I,
  Sk as J,
  s_ as K,
  q_ as L,
  mi as M,
  D_ as N,
  Ik as O,
  Fm as P,
  z3 as Q,
  V3 as R,
  q3 as S,
  X1 as T,
  kk as U,
  n_ as V,
  r_ as W,
  $_ as X,
  Q3 as Y,
  J3 as Z,
  Wl as _,
  Fl as a,
  kA as a$,
  Mr as a0,
  qf as a1,
  ss as a2,
  Fi as a3,
  fd as a4,
  f1 as a5,
  h1 as a6,
  _k as a7,
  gv as a8,
  yr as a9,
  Ue as aA,
  je as aB,
  fy as aC,
  X as aD,
  bt as aE,
  Qp as aF,
  Qs as aG,
  jk as aH,
  Gk as aI,
  $e as aJ,
  Kc as aK,
  Uk as aL,
  Ge as aM,
  ga as aN,
  ge as aO,
  D4 as aP,
  fA as aQ,
  Vi as aR,
  Kk as aS,
  CA as aT,
  it as aU,
  Ln as aV,
  fg as aW,
  tS as aX,
  nS as aY,
  us as aZ,
  vf as a_,
  $v as aa,
  Pv as ab,
  br as ac,
  gr as ad,
  Cl as ae,
  Zt as af,
  Qt as ag,
  Vt as ah,
  qt as ai,
  Z as aj,
  we as ak,
  U as al,
  ie as am,
  W as an,
  Hn as ao,
  J as ap,
  xt as aq,
  se as ar,
  Ct as as,
  re as at,
  Te as au,
  is as av,
  ls as aw,
  Tt as ax,
  Xb as ay,
  ze as az,
  lt as b,
  AA as b0,
  Ay as b1,
  qc as b2,
  Kp as b3,
  Tn as b4,
  eS as b5,
  Wk as b6,
  wA as b7,
  x6 as b8,
  Bk as b9,
  Jk as bA,
  _y as bB,
  eA as bC,
  $k as bD,
  hg as bE,
  b6 as bF,
  Yk as bG,
  Wh as bH,
  Mk as bI,
  Ob as bJ,
  Hk as bK,
  Ko as bL,
  M_ as bM,
  pb as bN,
  iS as bO,
  oS as bP,
  Ux as bQ,
  jx as bR,
  Fx as bS,
  ld as bT,
  Ul as bU,
  rS as bV,
  $x as bW,
  sS as bX,
  aS as bY,
  pk as bZ,
  s1 as b_,
  zp as ba,
  xf as bb,
  Qk as bc,
  Rk as bd,
  wu as be,
  k1 as bf,
  Yb as bg,
  Yp as bh,
  R6 as bi,
  Xk as bj,
  Nr as bk,
  p6 as bl,
  Lk as bm,
  Fk as bn,
  cg as bo,
  zk as bp,
  Zk as bq,
  Dk as br,
  Wo as bs,
  zl as bt,
  Bp as bu,
  Rl as bv,
  Gl as bw,
  qk as bx,
  bA as by,
  Vk as bz,
  mr as c,
  E4 as d,
  Pk as e,
  x4 as f,
  Ek as g,
  C4 as h,
  Cb as i,
  df as j,
  _d as k,
  Mi as l,
  Pp as m,
  Rp as n,
  S4 as o,
  Tk as p,
  Ep as q,
  W3 as r,
  Hm as s,
  Wm as t,
  Y3 as u,
  on as v,
  A4 as w,
  e_ as x,
  zi as y,
  eb as z
};
//# sourceMappingURL=index-BujnRWDh.js.map
