{"version":3,"file":"transactionRequest-be6a8ea9-CUKWo5mx.js","sources":["../node_modules/@web3-onboard/core/dist/transactionRequest-be6a8ea9.js"],"sourcesContent":["const version = '2.12.0';\n\nconst getContractAddress = (address) => address;\nconst getUrl = (url) => url;\nconst getVersion = () => `viem@${version}`;\n\nclass BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        super();\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ViemError'\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getVersion()\n        });\n        const details = args.cause instanceof BaseError\n            ? args.cause.details\n            : args.cause?.message\n                ? args.cause.message\n                : args.details;\n        const docsPath = args.cause instanceof BaseError\n            ? args.cause.docsPath || args.docsPath\n            : args.docsPath;\n        this.message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsPath\n                ? [\n                    `Docs: https://viem.sh${docsPath}${args.docsSlug ? `#${args.docsSlug}` : ''}`,\n                ]\n                : []),\n            ...(details ? [`Details: ${details}`] : []),\n            `Version: ${this.version}`,\n        ].join('\\n');\n        if (args.cause)\n            this.cause = args.cause;\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err && typeof err === 'object' && 'cause' in err)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n\nclass IntegerOutOfRangeError extends BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntegerOutOfRangeError'\n        });\n    }\n}\nclass InvalidBytesBooleanError extends BaseError {\n    constructor(bytes) {\n        super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidBytesBooleanError'\n        });\n    }\n}\nclass SizeOverflowError extends BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SizeOverflowError'\n        });\n    }\n}\n\nfunction isHex(value, { strict = true } = {}) {\n    if (!value)\n        return false;\n    if (typeof value !== 'string')\n        return false;\n    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nfunction size(value) {\n    if (isHex(value, { strict: false }))\n        return Math.ceil((value.length - 2) / 2);\n    return value.length;\n}\n\nfunction trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n\nclass SliceOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \"${offset}\" is out-of-bounds (size: ${size}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SliceOffsetOutOfBoundsError'\n        });\n    }\n}\nclass SizeExceedsPaddingSizeError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SizeExceedsPaddingSizeError'\n        });\n    }\n}\nclass InvalidBytesLengthError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidBytesLengthError'\n        });\n    }\n}\n\nfunction pad(hexOrBytes, { dir, size = 32 } = {}) {\n    if (typeof hexOrBytes === 'string')\n        return padHex(hexOrBytes, { dir, size });\n    return padBytes(hexOrBytes, { dir, size });\n}\nfunction padHex(hex_, { dir, size = 32 } = {}) {\n    if (size === null)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nfunction padBytes(bytes, { dir, size = 32 } = {}) {\n    if (size === null)\n        return bytes;\n    if (bytes.length > size)\n        throw new SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nfunction toHex(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToHex(value, opts);\n    if (typeof value === 'string') {\n        return stringToHex(value, opts);\n    }\n    if (typeof value === 'boolean')\n        return boolToHex(value, opts);\n    return bytesToHex(value, opts);\n}\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nfunction boolToHex(value, opts = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nfunction bytesToHex(value, opts = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++) {\n        string += hexes[value[i]];\n    }\n    const hex = `0x${string}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { dir: 'right', size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nfunction numberToHex(value_, opts = {}) {\n    const { signed, size } = opts;\n    const value = BigInt(value_);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value_ === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value > maxValue) || value < minValue) {\n        const suffix = typeof value_ === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value_}${suffix}`,\n        });\n    }\n    const hex = `0x${(signed && value < 0\n        ? (1n << BigInt(size * 8)) + BigInt(value)\n        : value).toString(16)}`;\n    if (size)\n        return pad(hex, { size });\n    return hex;\n}\nconst encoder$1 = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nfunction stringToHex(value_, opts = {}) {\n    const value = encoder$1.encode(value_);\n    return bytesToHex(value, opts);\n}\n\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nfunction toBytes$1(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToBytes(value, opts);\n    if (typeof value === 'boolean')\n        return boolToBytes(value, opts);\n    if (isHex(value))\n        return hexToBytes(value, opts);\n    return stringToBytes(value, opts);\n}\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nfunction boolToBytes(value, opts = {}) {\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { size: opts.size });\n    }\n    return bytes;\n}\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nfunction hexToBytes(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = pad(hex, { dir: 'right', size: opts.size });\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nfunction numberToBytes(value, opts) {\n    const hex = numberToHex(value, opts);\n    return hexToBytes(hex);\n}\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nfunction stringToBytes(value, opts = {}) {\n    const bytes = encoder.encode(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { dir: 'right', size: opts.size });\n    }\n    return bytes;\n}\n\nfunction assertSize(hexOrBytes, { size: size$1 }) {\n    if (size(hexOrBytes) > size$1)\n        throw new SizeOverflowError({\n            givenSize: size(hexOrBytes),\n            maxSize: size$1,\n        });\n}\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nfunction hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nfunction hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\n\nfunction defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n\nclass InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n\n/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nclass LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize)\n            this.delete(this.keys().next().value);\n        return this;\n    }\n}\n\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\n\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst u8a = (a) => a instanceof Uint8Array;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nclass Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nconst keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\n\nfunction keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes$1(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n\nconst checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nfunction checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nconst isAddressCache = /*#__PURE__*/ new LruMap(8192);\nfunction isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    if (isAddressCache.has(address))\n        return isAddressCache.get(address);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(address, result);\n    return result;\n}\n\nfunction concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nfunction concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nfunction concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n\nclass NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nclass PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nclass RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nfunction createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n\nconst etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nconst gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\n\n/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nfunction formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nfunction formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n\nfunction prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nclass FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nclass InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nclass InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nclass InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\n\nclass ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nclass ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nclass InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n\nclass ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nclass FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nclass FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nclass NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nclass NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nclass NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nclass InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nclass IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nclass IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nclass TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nclass TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nclass UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nfunction slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nfunction sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nfunction sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n\nconst rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n};\nfunction formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nconst defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n\nexport { NonceMaxValueError as $, formatUnits as A, BaseError as B, etherUnits as C, assertSize as D, InvalidBytesBooleanError as E, FeeCapTooHighError as F, numberToHex as G, Hash as H, InvalidChainIdError as I, concat as J, padHex as K, boolToHex as L, stringToHex as M, checksumAddress as N, sliceBytes as O, keccak256 as P, ChainDoesNotSupportContract as Q, prettyPrint as R, getContractAddress as S, TipAboveFeeCapError as T, formatGwei as U, stringToBytes as V, getUrl as W, ExecutionRevertedError as X, FeeCapTooLowError as Y, NonceTooHighError as Z, NonceTooLowError as _, hexToBigInt as a, InsufficientFundsError as a0, IntrinsicGasTooHighError as a1, IntrinsicGasTooLowError as a2, TransactionTypeNotSupportedError as a3, UnknownNodeError as a4, InvalidBytesLengthError as a5, FeeConflictError as a6, formatTransactionRequest as a7, ClientChainNotConfiguredError as a8, bytesToHex as b, createCursor as c, defineFormatter as d, hexToBytes as e, createView as f, exists as g, hexToNumber as h, isHex as i, toBytes$1 as j, toHex as k, slice as l, isAddress as m, InvalidAddressError as n, output as o, InvalidSerializableTransactionError as p, InvalidStorageKeySizeError as q, rotr as r, size as s, toBytes as t, concatHex as u, InvalidLegacyVError as v, wrapConstructor as w, trim as x, defineTransactionRequest as y, pad as z };\n//# sourceMappingURL=transactionRequest-be6a8ea9.js.map\n"],"names":["version","getContractAddress","address","getUrl","url","getVersion","BaseError","shortMessage","args","_a","details","docsPath","fn","walk","err","IntegerOutOfRangeError","max","min","signed","size","value","InvalidBytesBooleanError","bytes","SizeOverflowError","givenSize","maxSize","isHex","strict","trim","hexOrBytes","dir","data","sliceLength","SliceOffsetOutOfBoundsError","offset","position","SizeExceedsPaddingSizeError","targetSize","type","InvalidBytesLengthError","pad","padHex","padBytes","hex_","hex","paddedBytes","padEnd","hexes","_v","i","toHex","opts","numberToHex","stringToHex","boolToHex","bytesToHex","assertSize","string","value_","maxValue","minValue","suffix","encoder$1","encoder","toBytes$1","numberToBytes","boolToBytes","hexToBytes","stringToBytes","charCodeMap","charCodeToBase16","char","hexString","length","index","j","nibbleLeft","nibbleRight","size$1","hexToBigInt","hexToNumber","defineFormatter","format","exclude","overrides","formatted","key","InvalidAddressError","LruMap","number","n","b","lengths","exists","instance","checkFinished","output","out","U32_MASK64","_32n","fromBig","le","split","lst","Ah","Al","h","l","rotlSH","s","rotlSL","rotlBH","rotlBL","u8a","a","u32","arr","createView","rotr","word","shift","isLE","utf8ToBytes","str","toBytes","Hash","wrapConstructor","hashCons","hashC","msg","tmp","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","t","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","blockLen","outputLen","enableXOF","state","len","pos","take","bufferOut","to","gen","keccak_256","keccak256","to_","checksumAddressCache","checksumAddress","address_","chainId","hexAddress","hash","result","addressRegex","isAddressCache","isAddress","options","concat","values","concatHex","concatBytes","acc","NegativeOffsetError","PositionOutOfBoundsError","RecursiveReadLimitExceededError","count","limit","staticCursor","position_","byte","oldPosition","createCursor","recursiveReadLimit","cursor","etherUnits","gweiUnits","formatUnits","decimals","display","negative","integer","fraction","formatGwei","wei","unit","prettyPrint","entries","maxLength","FeeConflictError","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","ChainDoesNotSupportContract","blockNumber","chain","contract","ClientChainNotConfiguredError","InvalidChainIdError","ExecutionRevertedError","cause","message","reason","FeeCapTooHighError","maxFeePerGas","FeeCapTooLowError","NonceTooHighError","nonce","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","gas","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","maxPriorityFeePerGas","UnknownNodeError","slice","start","end","sliceHex","sliceBytes","assertStartOffset","assertEndOffset","rpcTransactionType","formatTransactionRequest","request","rpcRequest"],"mappings":"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","x_google_ignoreList":[0]}